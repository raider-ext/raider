{"version":3,"sources":["component/dialog-content/DraggablePaperComponent.js","component/unit/CenterBox.js","component/svg-content/ViewSonicLOGO.js","component/svg-content/Close.js","component/svg-content/Marker.js","component/svg-content/Color.js","component/svg-content/Eraser.js","component/svg-content/Pointer.js","component/svg-content/Clear.js","lib/chrome-process/findCurrentActiveTab.js","lib/chrome-process/index.js","lib/chrome-process/sendMessageToCurrentActiveTab.js","lib/chrome-process/sendRunTimeMessage.js","utility/dev-tool/devLog.js","tracker.js","component/painting-toolbox/PaintingToolbox.js","App.js","theme.js","index.js"],"names":["DraggablePaperComponent","props","draggableProps","currentPaperProps","defalutPaperProps","Paper","CenterBox","children","Box","display","justifyContent","alignItems","ViewSonicLOGO","Fragment","d","fill","Close","fill-rule","clip-rule","Marker","Color","paletteColor","className","id","x","y","width","height","rx","stroke","strokeWidth","Eraser","fillRule","clipRule","Pointer","Clear","findCurrentActiveTab","callback","queryInfo","chrome","tabs","query","sendMessageToCurrentActiveTab","tabId","message","responseCallback","sendMessage","response","sendRunTimeMessage","runtime","devLog","isDevMode","args","console","log","appInsights","ApplicationInsights","config","instrumentationKey","loadAppInsights","useDialogStyle","makeStyles","root","useDialogTitleStyle","useCloseDialogIconButtonStyle","useDialogContentStyle","useDraggablePaperStyle","useActionToggleButtonStyle","useActionToggleButtonActiveStyle","useActionIconButtonStyle","useTooltipStyle","tooltip","useSliderStyle","thumb","thumbSize","thumbMargin","rail","track","useColorPicker","container","PaintingToolbox","colorPicker","useRef","useState","dialogBackdropOpacity","setDialogBackdropOpacity","isDragging","setIsDragging","toggleActionName","setToggleActionName","displayColorPicker","setDisplayColorPicker","setPaletteColor","sliderValue","setSliderValue","sliderThumbSize","setSliderThumbSize","sliderThumbMargin","setSliderThumbMargin","handleActionClick","actionName","tracker","trackEvent","apply","chromeProcess","name","category","draggablePaperRootRef","current","style","opacity","setTimeout","responseData","data","hasOwnProperty","dataURL","toggleColorPickerDisplay","sendMessageToContentScript","dataAccessor","length","useEffect","onMessage","addListener","sender","sendResponse","from","to","sendResponseIntervalId","setInterval","dialogDOMRect","getBoundingClientRect","left","top","clearInterval","resize","colorPickerContainer","dialogClasses","dialogTitleClasses","closeDialogIconButtonClasses","dialogContentClasses","draggablePaperClasses","actionToggleButtonClasses","actionToggleButtonActiveClasses","actionIconButtonClasses","tooltipClasses","colorPickerClasses","sliderClasses","dialogContentFeatureButtons","Dialog","classes","open","onEntered","iro","ColorPicker","color","padding","margin","handleRadius","layout","ui","Slider","sliderType","on","newColorString","value","hex8String","PaperComponent","PaperProps","event","maxWidth","BackdropProps","disableBackdropClick","DialogTitle","SvgIcon","viewBox","IconButton","onPointerUp","DialogContent","Grid","justify","map","featureButton","index","isCurrentToggleButton","SvgComponent","svgIconContext","ButtonComponent","isToggleAction","ToggleButton","clsx","selected","onChange","centerRipple","onClick","item","xs","Tooltip","title","placement","PopperProps","popperOptions","modifiers","flip","enabled","offset","newSliderValue","ref","App","setIsDevMode","trackPageView","currentPageUrl","url","wmdev","URL","searchParams","get","Container","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.d2687c61.chunk.js","sourcesContent":["import Paper from \"@material-ui/core/Paper\";\nimport Draggable from \"react-draggable\";\n\nconst DraggablePaperComponent = (props) => {\n    const {\n        draggableProps = {},\n        currentPaperProps = {},\n        ...defalutPaperProps    // from Dialog Component\n    } = props;\n\n    return (\n        <Draggable\n            {...draggableProps}\n        >\n            <Paper\n                {...defalutPaperProps}\n                {...currentPaperProps}\n            />\n        </Draggable>\n    );\n};\n\nexport default DraggablePaperComponent;","import Box from \"@material-ui/core/Box\";\n\nconst CenterBox = (props) => {\n    const {\n        children\n    } = props;\n\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            {children}\n        </Box>\n    );\n};\n\nexport default CenterBox;","import React from \"react\";\n\nconst ViewSonicLOGO = () => {\n    return (\n        <React.Fragment >\n            <path d=\"M0.58052 7.14355C0.58052 6.16615 0.548119 5.33704 0.516479 4.64936H2.56313L2.67482 5.70757H2.72209C3.05754 5.21201 3.74523 4.47668 5.08819 4.47668C6.09607 4.47668 6.89507 4.98825 7.23052 5.80363H7.26216C7.5321 5.42427 7.87469 5.10228 8.27005 4.85635C8.72062 4.59353 9.23524 4.46078 9.75672 4.47286C11.2598 4.47286 12.3942 5.52765 12.3942 7.86211V12.4674H10.0308V8.21472C10.0308 7.07913 9.66333 6.42308 8.87958 6.42308C8.31998 6.42308 7.92011 6.80657 7.76038 7.27011C7.69594 7.47155 7.66352 7.68187 7.66432 7.89337V12.4678H5.3009V8.08664C5.3009 7.09552 4.94905 6.42423 4.1817 6.42423C3.55043 6.42423 3.1822 6.90644 3.0381 7.30327C2.96753 7.4978 2.93517 7.70412 2.9428 7.9109V12.4674H0.58052V7.14355Z\" fill=\"#990000\" />\n            <path d=\"M15.0501 4.64941L16.2166 8.48657C16.345 8.95011 16.5047 9.52611 16.6008 9.94161H16.6481C16.7624 9.52611 16.8886 8.9341 16.9999 8.48657L17.9594 4.64941H20.5661L18.7432 9.79561C17.624 12.8971 16.8696 14.1443 15.9932 14.9269C15.3318 15.507 14.5144 15.8796 13.6427 15.9981L13.1311 13.9358C13.5069 13.8645 13.8661 13.7236 14.1901 13.5203C14.6033 13.2854 14.9498 12.949 15.1969 12.5429C15.2738 12.4414 15.3183 12.319 15.3246 12.1918C15.3201 12.0515 15.2818 11.9143 15.2129 11.792L12.3474 4.64941H15.0501Z\" fill=\"#990000\" />\n            <path d=\"M23.4113 12.4675L19.9584 1.6936H22.6268L23.9374 6.25504C24.3056 7.53359 24.6415 8.76448 24.8973 10.1078H24.946C25.2178 8.81175 25.5537 7.53359 25.9234 6.30307L27.2958 1.6936H29.886L26.2547 12.4675H23.4113Z\" fill=\"#990000\" />\n            <path d=\"M32.909 2.47467C32.909 3.14672 32.3974 3.68993 31.5972 3.68993C30.8303 3.68993 30.3187 3.14672 30.3339 2.47467C30.3187 1.77097 30.8295 1.24377 31.6136 1.24377C32.3978 1.24377 32.8926 1.77517 32.909 2.47467Z\" fill=\"#990000\" />\n            <path d=\"M32.8289 4.64941H30.3983V12.4682H32.8289V4.64941Z\" fill=\"#990000\" />\n            <path d=\"M40.9672 8.37262C40.9672 6.43841 40.0073 4.4718 37.4807 4.4718C34.7627 4.4718 33.5318 6.66218 33.5318 8.6448C33.5318 11.0883 35.0509 12.6253 37.7048 12.6253C38.7638 12.6253 39.7355 12.4625 40.5353 12.1465L40.2151 10.4993C39.5172 10.7201 38.7886 10.8282 38.0567 10.8195C36.9211 10.8195 35.93 10.34 35.8499 9.33286H40.8864C40.9404 9.01564 40.9674 8.69441 40.9672 8.37262ZM35.8354 7.66969C35.8991 7.01822 36.3142 6.08618 37.3381 6.08618C38.4573 6.08618 38.7131 7.0773 38.7131 7.66969H35.8354Z\" fill=\"#990000\" />\n            <path d=\"M43.2055 4.64941L43.8288 7.84654C43.9916 8.66116 44.149 9.52611 44.2767 10.4212H44.3087C44.4715 9.52534 44.6922 8.62952 44.8843 7.86293L45.7153 4.64941H47.6343L48.4177 7.7661C48.625 8.64553 48.8328 9.52534 48.9925 10.4204H49.0253C49.1366 9.52458 49.2963 8.64553 49.4725 7.752L50.1434 4.64941H52.5247L50.127 12.469H47.8398L47.1067 9.71899C46.9161 8.95202 46.7709 8.24794 46.6112 7.28922H46.5788C46.4637 8.10985 46.2928 8.92166 46.0672 9.71899L45.2838 12.469H42.9966L40.7277 4.64941H43.2055Z\" fill=\"#990000\" />\n            <path d=\"M58.7939 6.66058V6.62894C60.0084 6.18103 60.5688 5.28559 60.5688 4.32611C60.5688 3.34872 60.0244 2.61567 59.2727 2.21579C58.4916 1.75377 57.5787 1.60968 56.0901 1.60968C54.8748 1.60968 53.5807 1.70574 52.9402 1.83344V12.4224C53.8148 12.5379 54.6964 12.5924 55.5785 12.5856C57.7216 12.5856 59.0322 12.2337 59.814 11.6082C60.4853 11.0646 60.9332 10.2976 60.9332 9.32097C60.9363 7.92731 60.0244 6.99947 58.7939 6.66058ZM55.3559 3.44897C55.7001 3.40049 56.0475 3.37946 56.395 3.38607C57.4986 3.38607 58.1219 3.81797 58.1219 4.63298C58.1219 5.4335 57.4357 5.95993 56.1556 5.95993H55.3551L55.3559 3.44897ZM56.299 10.7714C55.9842 10.7805 55.6693 10.7697 55.3559 10.739V7.70316H56.1873C57.4025 7.70316 58.3777 8.13468 58.3777 9.22224C58.3773 10.3582 57.4025 10.773 56.299 10.773V10.7714Z\" fill=\"#990000\" />\n            <path d=\"M65.5408 4.47363C63.0302 4.47363 61.3678 6.09183 61.3678 8.61689C61.3678 11.142 63.1263 12.6454 65.4127 12.6454C67.507 12.6454 69.5377 11.3348 69.5377 8.47242C69.5377 6.12042 67.9385 4.47363 65.5408 4.47363ZM65.4764 10.8976C64.4368 10.8976 63.8772 9.8901 63.8772 8.54713C63.8772 7.39591 64.3091 6.19704 65.4764 6.19704C66.5799 6.19704 67.024 7.37876 67.024 8.54713C67.0271 9.95757 66.4206 10.8976 65.4764 10.8976Z\" fill=\"#990000\" />\n            <path d=\"M76.7641 10.5644V7.84649C76.7641 6.00796 75.9334 4.47363 73.3268 4.47363C71.9038 4.47363 70.8326 4.85712 70.2886 5.15979L70.7365 6.72614C71.2481 6.4067 72.0959 6.1349 72.8953 6.1349C74.0942 6.1349 74.3179 6.72614 74.3179 7.14241V7.25411C71.5485 7.23848 69.729 8.21359 69.729 10.2442C69.729 11.4911 70.6729 12.642 72.2541 12.642C73.1812 12.642 73.9809 12.3065 74.4925 11.6825H74.5402L74.6843 12.4663H76.8746C76.7969 12.0382 76.7641 11.3166 76.7641 10.5644ZM74.3945 9.62136C74.3954 9.76154 74.3792 9.90131 74.3465 10.0376C74.2563 10.3003 74.0859 10.528 73.8594 10.6887C73.6329 10.8494 73.3617 10.935 73.084 10.9334C72.54 10.9334 72.1245 10.6285 72.1245 10.006C72.1245 9.06252 73.1156 8.7587 74.3945 8.77509V9.62136Z\" fill=\"#990000\" />\n            <path d=\"M77.8833 7.22328C77.8833 6.07244 77.8516 5.32071 77.8196 4.64942H79.9151L79.9966 6.08806H80.0607C80.461 4.95323 81.4197 4.47368 82.1714 4.47368C82.3426 4.46686 82.514 4.47747 82.683 4.50532V6.79252C82.4669 6.75052 82.2474 6.72895 82.0273 6.7281C81.1311 6.7281 80.5242 7.20803 80.3649 7.95976C80.3316 8.13889 80.3154 8.32077 80.3165 8.50297V12.4674H77.8844L77.8833 7.22328Z\" fill=\"#990000\" />\n            <path d=\"M90.6104 10.133V1.11609H88.1798V5.3516H88.1489C87.7971 4.80763 87.0457 4.47179 86.0863 4.47179C84.213 4.47179 82.5685 5.99087 82.5838 8.62687C82.5838 11.0574 84.0705 12.6401 85.9235 12.6401C86.931 12.6401 87.8783 12.193 88.367 11.3132H88.399L88.5103 12.464H90.6691C90.642 11.9395 90.6104 11.0128 90.6104 10.133ZM88.1798 8.98215C88.1844 9.17072 88.163 9.35903 88.1162 9.54175C87.9721 10.2279 87.4125 10.709 86.7088 10.709C85.702 10.709 85.0463 9.87721 85.0463 8.55025C85.0463 7.31936 85.6212 6.32824 86.7236 6.32824C87.4754 6.32824 88.0022 6.87144 88.1467 7.52711C88.1652 7.67038 88.1758 7.81457 88.1783 7.95901L88.1798 8.98215Z\" fill=\"#990000\" />\n            <path d=\"M95.341 1.60058C95.1872 1.3282 94.9619 1.10295 94.6895 0.949106C94.42 0.793828 94.1143 0.712097 93.8033 0.712097C93.4922 0.712097 93.1865 0.793828 92.917 0.949106C92.6449 1.10322 92.4198 1.32841 92.2659 1.60058C92.1302 1.83621 92.0506 2.09987 92.0332 2.37117C92.0157 2.64248 92.0609 2.91417 92.1652 3.16523C92.2695 3.41629 92.4301 3.64 92.6347 3.81907C92.8393 3.99813 93.0823 4.12776 93.345 4.19792C93.6076 4.26807 93.8829 4.27689 94.1495 4.22367C94.4161 4.17046 94.6669 4.05665 94.8825 3.89104C95.0981 3.72542 95.2728 3.51245 95.3929 3.26857C95.5131 3.02469 95.5755 2.75645 95.5755 2.48458C95.5772 2.17432 95.4963 1.86919 95.341 1.60058ZM95.0521 3.20543C94.8773 3.50576 94.5993 3.73232 94.2699 3.84292C93.9405 3.95352 93.5821 3.94061 93.2615 3.8066C92.9408 3.67259 92.6799 3.42661 92.5272 3.11449C92.3744 2.80236 92.3403 2.44536 92.4313 2.10998C92.5222 1.77461 92.732 1.48371 93.0214 1.29148C93.3109 1.09925 93.6604 1.01878 94.0048 1.06508C94.3492 1.11137 94.665 1.28126 94.8934 1.54311C95.1219 1.80496 95.2473 2.14091 95.2465 2.4884C95.2465 2.74043 95.1794 2.98791 95.0521 3.20543Z\" fill=\"#990000\" />\n            <path d=\"M94.1879 2.62788C94.412 2.52953 94.5241 2.34655 94.5241 2.07895C94.5241 1.85404 94.4579 1.68644 94.3255 1.57615C94.1931 1.46585 93.9843 1.41159 93.6992 1.41337H93.0767V3.57288H93.6176V2.77617H93.7285L94.1478 3.57288H94.7467L94.1879 2.62788ZM93.9122 2.3111C93.8497 2.36153 93.77 2.38548 93.69 2.37781H93.6168V1.80601H93.6851C93.7666 1.7978 93.8482 1.82052 93.9138 1.86967C93.9389 1.89946 93.9577 1.93395 93.9693 1.97113C93.9809 2.00831 93.985 2.04743 93.9812 2.08619C93.9892 2.16653 93.9653 2.24677 93.9145 2.30958L93.9122 2.3111Z\" fill=\"#990000\" />\n        </React.Fragment >\n    );\n};\n\nexport default ViewSonicLOGO;","import React from \"react\";\n\nconst Close = () => {\n    return (\n        <React.Fragment >\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.99994 3.57139C6.44953 3.57139 3.57136 6.44956 3.57136 9.99997C3.57136 13.5504 6.44953 16.4285 9.99994 16.4285C13.5503 16.4285 16.4285 13.5504 16.4285 9.99997C16.4285 6.44956 13.5503 3.57139 9.99994 3.57139ZM2.14279 9.99997C2.14279 5.66059 5.66055 2.14282 9.99994 2.14282C14.3393 2.14282 17.8571 5.66059 17.8571 9.99997C17.8571 14.3393 14.3393 17.8571 9.99994 17.8571C5.66055 17.8571 2.14279 14.3393 2.14279 9.99997Z\" fill=\"#484747\" />\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.6479 7.35203C12.9268 7.63098 12.9268 8.08324 12.6479 8.36218L8.36215 12.6479C8.08321 12.9268 7.63095 12.9268 7.352 12.6479C7.07306 12.369 7.07306 11.9167 7.352 11.6377L11.6377 7.35203C11.9167 7.07309 12.3689 7.07309 12.6479 7.35203Z\" fill=\"#484747\" />\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.352 7.35203C7.63095 7.07309 8.08321 7.07309 8.36215 7.35203L12.6479 11.6377C12.9268 11.9167 12.9268 12.369 12.6479 12.6479C12.3689 12.9268 11.9167 12.9268 11.6377 12.6479L7.352 8.36218C7.07306 8.08324 7.07306 7.63098 7.352 7.35203Z\" fill=\"#484747\" />\n        </React.Fragment >\n    );\n};\n\nexport default Close;","import React from \"react\";\n\nconst Marker = () => {\n    return (\n        <React.Fragment>\n            <path d=\"M10.6838 14.1601C10.4131 14.3194 10.2073 14.569 10.1025 14.8651L7.71376 21.7501L5.50501 23.9588C5.29592 24.169 5.16342 24.4432 5.12874 24.7377C5.09406 25.0321 5.15921 25.3296 5.31376 25.5826L6.00001 26.2501L5.97001 26.2763L4.61626 27.6301C4.13091 28.1154 3.85825 28.7737 3.85825 29.4601C3.85825 30.1465 4.13091 30.8048 4.61626 31.2901C5.1016 31.7754 5.75987 32.0481 6.44626 32.0481C7.13264 32.0481 7.79091 31.7754 8.27626 31.2901L9.63001 29.9363L9.65251 29.9101L10.5 30.7501C10.7537 30.9094 11.0538 30.9779 11.3515 30.9446C11.6491 30.9112 11.9267 30.7779 12.1388 30.5663L14.3475 28.3576L21.2138 25.9576C21.5111 25.8554 21.7623 25.6507 21.9225 25.3801C22.0187 25.3231 22.1069 25.2538 22.185 25.1738L31.7475 15.6151C31.8722 15.4929 31.9713 15.347 32.039 15.186C32.1066 15.0251 32.1414 14.8522 32.1414 14.6776C32.1414 14.503 32.1066 14.3301 32.039 14.1691C31.9713 14.0082 31.8722 13.8623 31.7475 13.7401L22.3275 4.3276C22.2053 4.20287 22.0594 4.10379 21.8985 4.03614C21.7375 3.9685 21.5646 3.93365 21.39 3.93365C21.2154 3.93365 21.0425 3.9685 20.8816 4.03614C20.7206 4.10379 20.5747 4.20287 20.4525 4.3276L10.875 13.8938C10.8017 13.9753 10.7376 14.0646 10.6838 14.1601ZM5.12251 30.8138C4.47751 30.1688 4.29001 29.3138 4.71001 28.8901C5.13001 28.4663 5.98501 28.6576 6.63001 29.3063C7.27501 29.9551 7.46251 30.8063 7.04626 31.2263C6.63001 31.6463 5.76751 31.4588 5.12251 30.8138ZM20.775 24.7201L13.62 27.2176L11.1975 29.6438L6.43876 24.8851L8.86501 22.4626L11.3513 15.3001L20.775 24.7201Z\" fill=\"#4D4D4D\" />\n        </React.Fragment>\n    );\n};\n\nexport default Marker;","import React from \"react\";\n\nconst Color = (props) => {\n    const {\n        paletteColor = \"#000000ff\" // hex 8 string, default \"black\"\n    } = props;\n    return (\n        <React.Fragment>\n            <path className=\"keep-fill\" d=\"M26 6H10C7.76 6 6 7.76 6 10V26C6 28.24 7.76 30 10 30H26C28.24 30 30 28.24 30 26V10C30 7.76 28.24 6 26 6ZM26 22.8C26 24.56 24.56 26 22.8 26H13.2C11.44 26 10 24.56 10 22.8V13.2C10 11.44 11.44 10 13.2 10H22.8C24.56 10 26 11.44 26 13.2V22.8Z\" fill={paletteColor} />\n            <rect id=\"palette-icon\" x=\"5\" y=\"5\" width=\"26\" height=\"26\" rx=\"5\" stroke=\"transparent\" strokeWidth=\"2\" fill=\"transparent\" />\n        </React.Fragment>\n    );\n};\n\nexport default Color;","import React from \"react\";\n\nconst Eraser = () => {\n    return (\n        <React.Fragment>\n            <path id=\"eraser-icon-path\" className=\"keep-fill\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M19.5119 26.7032L9.32066 16.512L4.776 21.0566C4.62988 21.2028 4.54779 21.4009 4.54779 21.6076C4.54779 21.8142 4.62988 22.0124 4.776 22.1585L13.8654 31.2479C14.0115 31.394 14.2096 31.4761 14.4163 31.4761C14.6229 31.4761 14.8211 31.394 14.9672 31.2479L19.5119 26.7032Z\" stroke=\"#484747\" strokeWidth=\"1.5583\" fill=\"transparent\" />\n            <path d=\"M19.1019 4.18925L8.05008 15.2411C7.74581 15.5453 7.74581 16.0387 8.05008 16.3429L19.6806 27.9735C19.9849 28.2778 20.4782 28.2778 20.7825 27.9735L31.8343 16.9217C32.1386 16.6174 32.1386 16.1241 31.8343 15.8198L20.2038 4.18925C19.8995 3.88497 19.4062 3.88497 19.1019 4.18925Z\" fill=\"#484747\" />\n        </React.Fragment>\n    );\n};\n\nexport default Eraser;","import React from \"react\";\n\nconst Pointer = () => {\n    return (\n        <React.Fragment>\n            <path d=\"M7.03124 5.00249L30.1762 14.685C30.4613 14.8038 30.7042 15.0052 30.8736 15.2634C31.043 15.5216 31.1312 15.8246 31.1268 16.1333C31.1223 16.4421 31.0255 16.7424 30.8487 16.9956C30.6719 17.2488 30.4233 17.4432 30.135 17.5537L21.7012 20.8162C21.5019 20.8968 21.3207 21.0166 21.1687 21.1687C21.0166 21.3207 20.8968 21.5019 20.8162 21.7012L17.5537 30.135C17.4418 30.4219 17.2468 30.6689 16.9938 30.8444C16.7408 31.02 16.4412 31.1161 16.1332 31.1205C15.8253 31.1249 15.5231 31.0375 15.2651 30.8693C15.0071 30.7011 14.8052 30.4598 14.685 30.1762L5.00249 7.03124C4.88286 6.74746 4.85055 6.43446 4.90968 6.13222C4.96882 5.82999 5.11671 5.55224 5.33448 5.33448C5.55224 5.11671 5.82999 4.96882 6.13222 4.90968C6.43446 4.85055 6.74746 4.88286 7.03124 5.00249Z\" fill=\"#484747\" />\n        </React.Fragment>\n    );\n};\n\nexport default Pointer;","import React from \"react\";\n\nconst Clear = () => {\n    return (\n        <React.Fragment >\n            <path d=\"M26.52 7.45498H22.0575V6.57373C22.0799 5.9037 21.8367 5.25196 21.3809 4.76035C20.9251 4.26873 20.2936 3.97703 19.6238 3.94873H16.3763C15.7065 3.97703 15.075 4.26873 14.6192 4.76035C14.1634 5.25196 13.9202 5.9037 13.9425 6.57373V7.45498H9.48003C8.92095 7.47839 8.39393 7.72239 8.01438 8.13357C7.63484 8.54474 7.4337 9.08957 7.45503 9.64873V11.4075C7.44578 11.6292 7.52387 11.8457 7.67252 12.0105C7.82117 12.1753 8.02852 12.2752 8.25003 12.2887H27.75C27.8614 12.2844 27.9707 12.2581 28.0719 12.2115C28.1731 12.1648 28.264 12.0987 28.3396 12.0168C28.4152 11.935 28.4739 11.839 28.5124 11.7345C28.5508 11.6299 28.5683 11.5188 28.5638 11.4075V9.64873C28.5738 9.37045 28.5289 9.09292 28.4316 8.83202C28.3343 8.57111 28.1865 8.33195 27.9966 8.12821C27.8068 7.92446 27.5787 7.76013 27.3254 7.64461C27.072 7.5291 26.7983 7.46466 26.52 7.45498ZM15.5663 6.57373C15.5581 6.35017 15.6387 6.13246 15.7905 5.96808C15.9422 5.8037 16.1528 5.70598 16.3763 5.69623H19.6238C19.8473 5.70598 20.0579 5.8037 20.2096 5.96808C20.3613 6.13246 20.4419 6.35017 20.4338 6.57373V7.45498H15.5588L15.5663 6.57373Z\" fill=\"#484747\" />\n            <path d=\"M27.0001 14.0438H9.00014C8.9643 14.0451 8.92912 14.0538 8.89677 14.0693C8.86441 14.0848 8.83557 14.1067 8.81203 14.1338C8.78849 14.1608 8.77074 14.1924 8.75988 14.2266C8.74902 14.2608 8.74528 14.2968 8.74889 14.3325L9.40889 29.55C9.41227 30.2012 9.66686 30.8259 10.1196 31.294C10.5723 31.7621 11.1882 32.0374 11.8389 32.0625H24.1614C24.8121 32.0374 25.428 31.7621 25.8807 31.294C26.3334 30.8259 26.588 30.2012 26.5914 29.55L27.2589 14.3325C27.2625 14.2962 27.2586 14.2596 27.2473 14.2249C27.236 14.1902 27.2176 14.1582 27.1932 14.1311C27.1689 14.1039 27.1391 14.0821 27.1059 14.0671C27.0726 14.052 27.0366 14.0441 27.0001 14.0438ZM14.4864 28.7663C14.4718 28.9896 14.3728 29.1989 14.2095 29.3519C14.0462 29.5049 13.8308 29.5901 13.607 29.5901C13.3832 29.5901 13.1678 29.5049 13.0045 29.3519C12.8412 29.1989 12.7422 28.9896 12.7276 28.7663V17.34C12.7422 17.1167 12.8412 16.9073 13.0045 16.7543C13.1678 16.6013 13.3832 16.5162 13.607 16.5162C13.8308 16.5162 14.0462 16.6013 14.2095 16.7543C14.3728 16.9073 14.4718 17.1167 14.4864 17.34V28.7663ZM18.8776 28.7663C18.8776 28.999 18.7852 29.2222 18.6206 29.3867C18.4561 29.5513 18.2329 29.6438 18.0001 29.6438C17.7674 29.6438 17.5442 29.5513 17.3797 29.3867C17.2151 29.2222 17.1226 28.999 17.1226 28.7663V17.34C17.1226 17.1073 17.2151 16.8841 17.3797 16.7195C17.5442 16.555 17.7674 16.4625 18.0001 16.4625C18.2329 16.4625 18.4561 16.555 18.6206 16.7195C18.7852 16.8841 18.8776 17.1073 18.8776 17.34V28.7663ZM23.2726 28.7663C23.2726 28.999 23.1802 29.2222 23.0156 29.3867C22.8511 29.5513 22.6279 29.6438 22.3951 29.6438C22.1624 29.6438 21.9392 29.5513 21.7747 29.3867C21.6101 29.2222 21.5176 28.999 21.5176 28.7663V17.34C21.5176 17.1073 21.6101 16.8841 21.7747 16.7195C21.9392 16.555 22.1624 16.4625 22.3951 16.4625C22.6279 16.4625 22.8511 16.555 23.0156 16.7195C23.1802 16.8841 23.2726 17.1073 23.2726 17.34V28.7663Z\" fill=\"#484747\" />\n        </React.Fragment >\n    );\n};\n\nexport default Clear;","/* global chrome */\n\nconst findCurrentActiveTab = (callback = null) => {\n    const queryInfo = {\n        \"active\": true,\n        \"currentWindow\": true\n    };\n    chrome.tabs.query(queryInfo, function (tabs) {\n        if (callback) {\n            callback(tabs);\n        }\n    });\n};\n\nexport default findCurrentActiveTab;","import findCurrentActiveTab from \"./findCurrentActiveTab\";\nimport sendMessageToCurrentActiveTab from \"./sendMessageToCurrentActiveTab\";\nimport sendRunTimeMessage from \"./sendRunTimeMessage\";\n\nexport {\n    findCurrentActiveTab,\n    sendMessageToCurrentActiveTab,\n    sendRunTimeMessage\n};\n\nexport default {\n    findCurrentActiveTab,\n    sendMessageToCurrentActiveTab,\n    sendRunTimeMessage\n}; ","/* global chrome */\n\nconst sendMessageToCurrentActiveTab = (tabId, message = null, responseCallback = null) => {\n    if (!message) {\n        return false;\n    }\n    // send message to content script\n    chrome.tabs.sendMessage(tabId, message, (response) => {\n        if (responseCallback) {\n            responseCallback(response);\n        }\n    });\n};\n\nexport default sendMessageToCurrentActiveTab;","/* global chrome */\n\nconst sendRunTimeMessage = (message = null, responseCallback = null) => {\n    if (!message) {\n        return false;\n    }\n    chrome.runtime.sendMessage(message, (response) => {\n        if (responseCallback) {\n            responseCallback(response);\n        }\n    });\n};\n\nexport default sendRunTimeMessage;","const devLog = (isDevMode = false, ...args) => {\n    if (!isDevMode) {\n        return;\n    }\n    console.log(...args);\n};\n\nexport default devLog;","import { ApplicationInsights } from '@microsoft/applicationinsights-web';\nconst appInsights = new ApplicationInsights({ config: {\n    instrumentationKey: 'ac3b8d89-916d-49f9-9da7-daf19257d52f'\n  } });\nappInsights.loadAppInsights();\n\nexport default appInsights;\n\n","/* global chrome */\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport iro from \"@jaames/iro\";\nimport clsx from \"clsx\";\n\n//\n\nimport DraggablePaperComponent from \"../dialog-content/DraggablePaperComponent\";\nimport CenterBox from \"../unit/CenterBox\";\nimport ViewSonicLOGO from \"../svg-content/ViewSonicLOGO\";\nimport Close from \"../svg-content/Close\";\nimport Marker from \"../svg-content/Marker\";\nimport Color from \"../svg-content/Color\";\nimport Eraser from \"../svg-content/Eraser\";\nimport Pointer from \"../svg-content/Pointer\";\nimport Screenshot from \"../svg-content/Screenshot\";\nimport Clear from \"../svg-content/Clear\";\nimport chromeProcess from \"../../lib/chrome-process\";\nimport devLog from \"../../utility/dev-tool/devLog\";\n\n//\nimport tracker from '../../tracker';\n\nconst useDialogStyle = makeStyles({\n    root: {\n        \"cursor\": \"move\",\n        \"& svg.IroBox, svg.IroSlider\": {\n            \"cursor\": \"pointer\"\n        }\n    }\n});\n\nconst useDialogTitleStyle = makeStyles({\n    root: {\n        \"padding\": \"10px 10px 0px 10px\"\n    }\n});\n\nconst useCloseDialogIconButtonStyle = makeStyles({\n    root: {\n        \"padding\": 0,\n        \"& svg\": {\n            \"font-size\": \"20px\"\n        }\n    }\n});\n\nconst useDialogContentStyle = makeStyles({\n    root: {\n        \"padding\": \"10px\"\n    }\n});\n\nconst useDraggablePaperStyle = makeStyles({\n    root: {\n        \"width\": \"150px\"\n    }\n});\n\nconst useActionToggleButtonStyle = makeStyles({\n    root: {\n        \"padding\": 0,\n        \"border\": 0,\n        \"border-radius\": 0,\n        \"& svg\": {\n            \"font-size\": \"36px\"\n        },\n        \"&:hover\": {\n            \"& svg path:not(.keep-fill)\": {\n                \"fill\": \"#990000\"\n            },\n            \"& svg rect#palette-icon\": {\n                \"stroke\": \"#990000\"\n            },\n            \"& svg path#eraser-icon-path\": {\n                \"stroke\": \"#990000\"\n            }\n        }\n    }\n});\n\nconst useActionToggleButtonActiveStyle = makeStyles({\n    root: {\n        \"& svg path:not(.keep-fill)\": {\n            \"fill\": \"#990000\"\n        },\n        \"& svg rect#palette-icon\": {\n            \"stroke\": \"#990000\"\n        },\n        \"& svg path#eraser-icon-path\": {\n            \"stroke\": \"#990000\"\n        }\n    }\n});\n\nconst useActionIconButtonStyle = makeStyles({\n    root: {\n        \"padding\": 0,\n        \"border-radius\": 0,\n        \"& svg\": {\n            \"font-size\": \"36px\"\n        }\n    }\n});\n\nconst useTooltipStyle = makeStyles({\n    tooltip: {\n        \"margin\": 0,\n        \"background-color\": \"rgba(0, 0, 0, 0.8)\",\n        \"color\": \"#ffffff\"\n    }\n});\n\nconst useSliderStyle = makeStyles({\n    root: {\n        \"color\": \"#990000\",\n        \"& .MuiSlider-thumb.Mui-focusVisible, .MuiSlider-thumb:hover\": {\n            \"box-shadow\": \"0px 0px 0px 8px #99000029\"\n        },\n        \"& .MuiSlider-thumb.MuiSlider-active\": {\n            \"box-shadow\": \"0px 0px 0px 14px #99000029\"\n        }\n    },\n    thumb: (\n        (props) => ({\n            \"height\": `${props.thumbSize}px`,\n            \"width\": `${props.thumbSize}px`,\n            \"margin-top\": `${props.thumbMargin}px`\n        })\n    ),\n    rail: {\n        \"height\": \"4px\",\n        \"color\": \"#A2A2A2\",\n        \"border-radius\": \"2.5px\"\n    },\n    track: {\n        \"height\": \"4px\",\n        \"color\": \"#A2A2A2\",\n        \"border-radius\": \"2.5px\"\n    }\n});\n\nconst useColorPicker = makeStyles({\n    container: {\n        \"cursor\": \"default\",\n    }\n});\n\n//\n\nconst PaintingToolbox = (props) => {\n    const {\n        isDevMode = false\n    } = props;\n\n    //\n\n    const colorPicker = useRef();\n\n    //\n\n    // The variable values and calculation formulas described below\n    // are defined based on UI design\n    const minSliderValue = 1;\n    const maxSliderValue = 100;\n\n    const minSliderThumbSize = 8;\n    const maxSliderThumbSize = 16;\n\n    const minSliderThumbMargin = -2;\n    const maxSliderThumbMargin = -6;\n\n    const deltaSliderThumbSize = (maxSliderThumbSize - minSliderThumbSize);\n    const deltaSliderThumbMargin = (maxSliderThumbMargin - minSliderThumbMargin);\n\n    //\n\n    const [dialogBackdropOpacity, setDialogBackdropOpacity] = useState(0);\n    const [isDragging, setIsDragging] = useState(false);\n\n    const [toggleActionName, setToggleActionName] = useState(\"brush\"); // \"brush\" | \"palette\" | \"eraser\" | \"cursor\"\n\n    const [displayColorPicker, setDisplayColorPicker] = useState(\"none\");\n    const [paletteColor, setPaletteColor] = useState(\"#000000ff\"); // hex 8 string, default \"black\"\n\n    const [sliderValue, setSliderValue] = useState(10);\n    const [sliderThumbSize, setSliderThumbSize] = useState(minSliderThumbSize);\n    const [sliderThumbMargin, setSliderThumbMargin] = useState(minSliderThumbMargin);\n\n    //\n\n    const handleActionClick = ({actionName,track}) => {\n      if(track){\n        tracker.trackEvent.apply(tracker,track);\n      }\n\n        if (actionName === \"palette\") {\n            toggleColorPickerDisplay();\n            return;\n        }\n        setDisplayColorPicker(\"none\");\n        chromeProcess.findCurrentActiveTab((tabs) => {\n            if (actionName === \"screenshot\") {\n                tracker.trackEvent({name:'screen shot'},{category:'action'});\n                draggablePaperRootRef.current.style.opacity = 0;\n                setTimeout(function () {\n                    // Send message to background script\n                    // only the behavior of the screen shot\n                    // needs to be processed by the background script\n                    // because chrome.tabs.captureVisibleTab can only be executed in background script\n\n                    const message = {\n                        \"from\": \"PaintingToolbox.js\",\n                        \"to\": \"background-script.js\",\n                        \"actionName\": actionName\n                    };\n\n                    chromeProcess.sendRunTimeMessage(message, (response) => {\n                        draggablePaperRootRef.current.style.opacity = 1;\n\n                        const responseData = response.data;\n                        if (responseData.hasOwnProperty(\"dataURL\")) {\n                            const message = {\n                                \"from\": \"PaintingToolbox.js\",\n                                \"to\": \"content-script.js\",\n                                \"actionName\": actionName,\n                                \"data\": {\n                                    \"dataURL\": responseData.dataURL\n                                }\n                            };\n                            chromeProcess.sendMessageToCurrentActiveTab(tabs[0].id, message, (response) => {\n                                devLog(isDevMode, response);\n                            });\n                        }\n                    });\n                }, 1000);\n            }\n            else {\n                const message = {\n                    \"from\": \"PaintingToolbox.js\",\n                    \"to\": \"content-script.js\",\n                    \"actionName\": actionName\n                };\n                chromeProcess.sendMessageToCurrentActiveTab(tabs[0].id, message, (response) => {\n                    devLog(isDevMode, response);\n                });\n            }\n        });\n    };\n\n    const toggleColorPickerDisplay = () => {\n        if (displayColorPicker === \"none\") {\n            setDisplayColorPicker(\"flex\");\n            tracker.trackEvent({name:'open color palette'},{category:'action'});\n        }\n        else {\n            setDisplayColorPicker(\"none\");\n        }\n    };\n\n\n    const handleSliderValueChange = (event, newSliderValue) => {\n        setSliderValue(newSliderValue);\n        setSliderThumbSize((minSliderThumbSize + (newSliderValue * (deltaSliderThumbSize / maxSliderValue))));\n        setSliderThumbMargin((minSliderThumbMargin + (newSliderValue * (deltaSliderThumbMargin / maxSliderValue))));\n\n        const actionName = \"change-slider-value\";\n        const dataAccessor = (\n            () => ({\n                \"sliderValue\": ((newSliderValue === 0) ? minSliderValue : newSliderValue)\n            })\n        );\n        sendMessageToContentScript(actionName, dataAccessor);\n    };\n\n    const handelPaletteColorChange = (newColorString) => {\n        setPaletteColor(newColorString);\n    };\n\n    //\n\n    const handleDialogEntered = () => {\n        // Box & hue, alpha slider\n        colorPicker.current = new iro.ColorPicker(\"#color-picker\", {\n            color: paletteColor,\n            padding: 3,\n            margin: 6,\n            handleRadius: 4,\n            layout: [\n                {\n                    \"component\": iro.ui.Box,\n                },\n                {\n                    \"component\": iro.ui.Slider,\n                    \"options\": {\n                        sliderType: \"hue\"\n                    }\n                },\n                {\n                    \"component\": iro.ui.Slider,\n                    \"options\": {\n                        sliderType: \"alpha\"\n                    }\n                }\n            ]\n        });\n\n        colorPicker.current.on(\"color:change\", function (color) {\n          tracker.trackEvent({name:'pick color'},{category:'action',value:color});\n            handelPaletteColorChange(color.hex8String);\n            const actionName = \"palette\";\n            const dataAccessor = (\n                () => ({\n                    \"colorHex8String\": color.hex8String\n                })\n            );\n            sendMessageToContentScript(actionName, dataAccessor);\n        });\n    };\n\n    const handleDialogDragStart = (event) => {\n        setIsDragging(true);\n    };\n\n    const handleDialogDragStop = (event) => {\n        const actionName = \"record-latest-dialog-position\";\n        const dataAccessor = (\n            () => ({\n                \"dialogDOMRect\": draggablePaperRootRef.current.getBoundingClientRect()\n            })\n        );\n        sendMessageToContentScript(actionName, dataAccessor);\n        setIsDragging(false);\n    };\n\n    const handleDialogMouseEnter = (event) => {\n        setDialogBackdropOpacity(1);\n    };\n\n    const handleDialogMouseLeave = (event) => {\n        if (isDragging) {\n            return;\n        }\n\n        setDialogBackdropOpacity(0);\n\n        const actionName = \"dialog-mouse-leave\";\n        sendMessageToContentScript(actionName);\n    };\n\n    const handleDialogClose = () => {\n        const actionName = \"close-extension-ui\";\n        sendMessageToContentScript(actionName);\n    };\n\n    //\n\n    const sendMessageToContentScript = (\n        actionName = \"\",\n        dataAccessor = (() => null),\n        callback = null\n    ) => {\n        if (actionName.length === 0) {\n            return false;\n        }\n\n        chromeProcess.findCurrentActiveTab((tabs) => {\n            let message = {\n                \"from\": \"PaintingToolbox.js\",\n                \"to\": \"content-script.js\",\n                \"actionName\": actionName\n            };\n\n            //\n\n            const data = dataAccessor();\n\n            if (data) {\n                message = {\n                    ...message,\n                    \"data\": data\n                };\n            }\n\n            //\n\n            chromeProcess.sendMessageToCurrentActiveTab(tabs[0].id, message, (response) => {\n                if (callback) {\n                    callback(response);\n                }\n            });\n        });\n    };\n\n    //\n\n    useEffect(() => {\n        chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n            if ((message.from === \"content-script.js\") && (message.to === \"PaintingToolbox.js\")) {\n                switch (message.actionName) {\n                    case \"toggle-painting-toolbox\":\n                        const checkAndSendResponse = () => {\n                            const dialogDOMRect = draggablePaperRootRef.current.getBoundingClientRect();\n                            if ((dialogDOMRect.left !== 0) && (dialogDOMRect.top !== 0)) {\n                                clearInterval(sendResponseIntervalId);\n                                colorPicker.current.resize(colorPickerContainer.current.getBoundingClientRect().width);\n                                sendResponse({\n                                    \"from\": \"PaintingToolbox.js\",\n                                    \"to\": \"content-script.js\",\n                                    \"data\": {\n                                        \"dialogDOMRect\": dialogDOMRect\n                                    }\n                                });\n                            }\n                        };\n                        const sendResponseIntervalId = setInterval(checkAndSendResponse, 10);\n                        break;\n\n                    case \"change-backdrop-opacity\":\n                        setDialogBackdropOpacity(1);\n                        sendResponse({\n                            \"from\": \"PaintingToolbox.js\",\n                            \"to\": \"content-script.js\",\n                            \"data\": {\n                                \"success\": true\n                            }\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n            return true;\n        });\n    }, []);\n\n    useEffect(() => {\n        const actionName = \"dialog-DOM-rect-changed\";\n        const dataAccessor = (\n            () => ({\n                \"dialogDOMRect\": draggablePaperRootRef.current.getBoundingClientRect()\n            })\n        );\n        sendMessageToContentScript(actionName, dataAccessor);\n    }, [displayColorPicker]);\n\n    //\n\n    const dialogClasses = useDialogStyle();\n    const dialogTitleClasses = useDialogTitleStyle();\n    const closeDialogIconButtonClasses = useCloseDialogIconButtonStyle();\n    const dialogContentClasses = useDialogContentStyle();\n    const draggablePaperClasses = useDraggablePaperStyle();\n    const actionToggleButtonClasses = useActionToggleButtonStyle();\n    const actionToggleButtonActiveClasses = useActionToggleButtonActiveStyle();\n    const actionIconButtonClasses = useActionIconButtonStyle();\n    const tooltipClasses = useTooltipStyle();\n    const colorPickerClasses = useColorPicker();\n\n    const sliderClasses = useSliderStyle({\n        \"thumbSize\": sliderThumbSize,\n        \"thumbMargin\": sliderThumbMargin\n    });\n\n    const draggablePaperRootRef = useRef();\n    const colorPickerContainer = useRef();\n\n    //\n\n    const dialogContentFeatureButtons = [\n        {\n            \"tooltip\": \"Marker\",\n            \"actionName\": \"brush\",\n            \"svgIconContext\": (<Marker />),\n            \"isToggleAction\": true,\n            \"track\":[{name:'draw'},{category:'action'}]\n        },\n        {\n            \"tooltip\": \"Color\",\n            \"actionName\": \"palette\",\n            \"svgIconContext\": (<Color paletteColor={paletteColor} />),\n            \"isToggleAction\": true,\n        },\n        {\n            \"tooltip\": \"Eraser\",\n            \"actionName\": \"eraser\",\n            \"svgIconContext\": (<Eraser />),\n            \"isToggleAction\": true,\n            \"track\":[{name:'erase'},{category:'action'}]\n        },\n        {\n            \"tooltip\": \"Pointer\",\n            \"actionName\": \"cursor\",\n            \"svgIconContext\": (<Pointer />),\n            \"isToggleAction\": true,\n            \"track\":[{name:'point'},{category:'action'}]\n        },\n        {\n            \"tooltip\": \"Clear\",\n            \"actionName\": \"clear\",\n            \"svgIconContext\": (<Clear />),\n            \"isToggleAction\": false,\n            \"track\":[{name:'clear'},{category:'action'}]\n        }\n    ];\n\n    //\n\n    return (\n        <div>\n            <Dialog\n                classes={dialogClasses}\n                open={true}\n                onEntered={handleDialogEntered}\n                PaperComponent={DraggablePaperComponent}\n                PaperProps={{\n                    \"draggableProps\": {\n                        \"onStart\": handleDialogDragStart,\n                        \"onStop\": handleDialogDragStop,\n                        \"cancel\": \"[class*='MuiGrid-root MuiGrid-container']\"\n                    },\n                    \"currentPaperProps\": {\n                        \"ref\": draggablePaperRootRef,\n                        \"classes\": draggablePaperClasses,\n                        \"onMouseEnter\": handleDialogMouseEnter,\n                        \"onMouseLeave\": handleDialogMouseLeave\n                    }\n                }}\n                maxWidth={false}\n                BackdropProps={{\n                    \"style\": {\n                        \"opacity\": dialogBackdropOpacity\n                    }\n                }}\n                disableBackdropClick\n            >\n                <DialogTitle classes={dialogTitleClasses}>\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                        <SvgIcon style={{ \"width\": \"96\", \"height\": \"16\" }} width=\"96\" height=\"16\" viewBox=\"0 0 96 16\" fill=\"none\">\n                            <ViewSonicLOGO />\n                        </SvgIcon>\n                        <IconButton classes={closeDialogIconButtonClasses} onPointerUp={handleDialogClose}>\n                            <SvgIcon width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n                                <Close />\n                            </SvgIcon>\n                        </IconButton>\n                    </Box>\n                </DialogTitle>\n                <DialogContent classes={dialogContentClasses}>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        {\n                            dialogContentFeatureButtons.map((featureButton, index) => {\n\n                                const isCurrentToggleButton = (toggleActionName === featureButton.actionName);\n\n                                const SvgComponent = (\n                                    <SvgIcon viewBox=\"0 0 36 36\">\n                                        {featureButton.svgIconContext}\n                                    </SvgIcon>\n                                );\n\n                                const ButtonComponent = (featureButton.isToggleAction)\n                                    ? (\n                                        <ToggleButton\n                                            classes={{\n                                                \"root\": clsx(actionToggleButtonClasses.root, { [actionToggleButtonActiveClasses.root]: (isCurrentToggleButton) })\n                                            }}\n                                            selected={toggleActionName === featureButton.actionName}\n                                            onChange={() => {\n                                                // \"palette\" is a special case\n                                                if (featureButton.actionName === \"palette\") {\n                                                    handleActionClick(featureButton);\n                                                    if (isCurrentToggleButton) {\n                                                        return;\n                                                    }\n                                                    else {\n                                                        setToggleActionName(featureButton.actionName);\n                                                    }\n                                                }\n                                                else {\n                                                    if (isCurrentToggleButton) {\n                                                        return;\n                                                    }\n                                                    handleActionClick(featureButton);\n                                                    setToggleActionName(featureButton.actionName);\n                                                }\n                                            }}\n                                        >\n                                            {SvgComponent}\n                                        </ToggleButton>\n                                    )\n                                    : (\n                                        <IconButton\n                                            classes={actionIconButtonClasses}\n                                            centerRipple={false}\n                                            onClick={() => handleActionClick(featureButton)}\n                                        >\n                                            {SvgComponent}\n                                        </IconButton>\n                                    );\n\n                                return (\n                                    <Grid item xs={4} key={index}>\n                                        <CenterBox>\n                                            <Tooltip\n                                                classes={tooltipClasses}\n                                                title={featureButton.tooltip}\n                                                placement=\"right\"\n                                                PopperProps={{\n                                                    popperOptions: {\n                                                        modifiers: {\n                                                            flip: {\n                                                                enabled: false\n                                                            },\n                                                            offset: {\n                                                                offset: \"20px, -10px\",\n                                                            }\n                                                        }\n                                                    }\n                                                }}\n                                            >\n                                                {ButtonComponent}\n                                            </Tooltip>\n                                        </CenterBox>\n                                    </Grid>\n                                )\n                            })\n                        }\n                      <Grid item xs={4} >\n\n                      </Grid>\n                        <Grid item xs={12}>\n                            <CenterBox>\n                                <Slider\n                                    classes={sliderClasses}\n                                    value={sliderValue}\n                                    onChange={handleSliderValueChange}\n                                />\n                            </CenterBox>\n                        </Grid>\n                        <Grid ref={colorPickerContainer} item xs={12}>\n                            <Box\n                                className={colorPickerClasses.container}\n                                display={displayColorPicker}\n                                justifyContent=\"center\"\n                                alignItems=\"center\"\n                            >\n                                <div id=\"color-picker\" />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default PaintingToolbox;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport PaintingToolbox from \"./component/painting-toolbox/PaintingToolbox\";\nimport { findCurrentActiveTab } from \"./lib/chrome-process\";\nimport tracker from './tracker';\n\nconst App = () => {\n    const [isDevMode, setIsDevMode] = useState(false);\n\n    useEffect(() => {\n        tracker.trackPageView({name:'web marker'});\n        findCurrentActiveTab((tabs) => {\n          const currentPageUrl = tabs[0].url;\n            const urlObj = new URL(currentPageUrl);\n            const urlSearchParams = urlObj.searchParams;\n            const wmdev = urlSearchParams.get(\"wmdev\");   // wmdev stand for Web Marker Develop Mode, value \"1\" = true\n\n            if (wmdev !== \"1\") {\n                return;\n            }\n\n            setIsDevMode((wmdev === \"1\"));\n        });\n    }, []);\n\n    return (\n        <Container>\n            <PaintingToolbox isDevMode={isDevMode} />\n        </Container>\n    );\n};\n\nexport default App;\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#556cd6\",\n        },\n        secondary: {\n            main: \"#19857b\",\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: \"transparent\",\n        },\n    },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.querySelector(\"#root\"),\n);\n"],"sourceRoot":""}