import{r as rng$1,s as stringify$3,v as validate,f as v4$1,b as browserExports,_ as _global,h as isJsonRpcResponse,S as SafeEventEmitter,K as KOA_MESSAGE_MOBILE_ORIGIN,j as roleOfExtensionClientPort,i as isKoaMessage,P as PROTOCOL,k as getAugmentedNamespace,c as commonjsGlobal,d as buffer$2,g as getDefaultExportFromCjs,l as sha3Exports$1,m as cjs,A as APTOS_INFO,n as bnExports$2,e as eventsExports,a as ETH_METHOD_SIGNATURE,E as ETH_EVENT_LOG_SIGNATURE,o as isKoaReqMessage,p as roleOfOriginUrl,q as isWSMessage,t as allSigningMethods,u as dappAutoPopupMethods,w as dappAllowMethods,x as dappProtectAllowMethods,y as APTOS_TYPE}from"./assets/types-utils-b6046417.js";import{fw as arrayToBuffer,fx as bufferToArray,fy as BigNumber$1,fz as Logger,fA as version$j,fB as hexZeroPad,fC as isBigNumberish,fD as arrayify,fE as isBytes,fF as toUtf8Bytes,fG as hexlify,fH as concat$4,fv as toUtf8String,fI as toUtf8CodePoints,fJ as UnicodeNormalizationForm,fK as _toUtf8String,fL as Utf8ErrorFuncs,fM as Utf8ErrorReason,fN as _toEscapedUtf8String,fl as keccak256$1,fO as defineReadOnly,fP as deepCopy,fQ as hexConcat,fR as id,fS as shallowCopy,fu as isHexString$2,fT as getAddress,fU as AbiCoder,fV as ConstructorFragment,fW as ErrorFragment,fX as EventFragment,fY as FormatTypes,fZ as Fragment,f_ as FunctionFragment,f$ as Indexed,fg as Interface,g0 as LogDescription,g1 as ParamType,g2 as TransactionDescription,g3 as checkResultErrors,g4 as defaultAbiCoder,g5 as resolveProperties,g6 as Description,g7 as BN$g,g8 as hash$6,g9 as hexDataLength,ga as splitSignature,gb as hexDataSlice,gc as stripZeros,ff as encode$t,gd as checkProperties,ge as isBytesLike,fd as decode$s,gf as Zero$2,gg as SupportedAlgorithm,gh as computeHmac,gi as ripemd160$2,gj as sha256$5,gk as sha512$3,fk as joinSignature,gl as getContractAddress,gm as hexValue,gn as getStatic,go as bech32$1,e_ as io,e$ as uo,f0 as ao,eZ as Xa,f1 as Qa,gp as $n,gq as requireGetIntrinsic,gr as callBound$1,gs as requireCore,gt as requireSha256,fh as requireSha224,gu as commonjsRequire$1,gv as requireCryptoBrowserify,gw as bnExports$1,gx as requireElliptic,gy as requireBrowser,gz as requireReadableBrowser,gA as browser$3,gB as requireAssert,f8 as lodashExports,gC as arrayToHex,gD as utf8ToArray,gE as concatArrays,gF as hexToArray,gG as arrayToUtf8,gH as removeHexPrefix,gI as za,gJ as Ue,gK as je,gL as _e,gM as lib_esm$e,gN as lib_esm$f,gO as lib_esm$g,gP as lib_esm$h,gQ as lib_esm$i,gR as lib_esm$j,gS as lib_esm$k,fi as assert$d,gT as hmac$4,gU as sha256$6,f as _setPrototypeOf$1,gV as ripemd160$3,gW as requireSafeBuffer,j as _asyncToGenerator,b as __assign$3,aD as bignumber,gX as amountBtcToSatoshi,gY as NetworkType,gZ as BtcAddressType,g_ as BtcNetworkTypeUtils,f5 as BtcAddressTypeUtils,g$ as ADDRESS_TYPES,h0 as minimalExports,h1 as long,fj as build,fb as build$1,h2 as build$2,h3 as build$3,f9 as Web3,f4 as build$4,h4 as build$5,h5 as bnExports$3,h6 as isNativeContractAddress,ft as BRC_20_FORCE_DISPLAY_TOKENS,aA as multiply,fr as amountSatoshiToBtc,h7 as COIN_DUST,fm as pack,h8 as BtcTestnetAddressType,h9 as Ua,ha as sha512$4,hb as pbkdf2$7,hc as utils$p,f2 as isNativeCurrency,hd as isERC20Currency,f7 as chunkRequest,fc as ChromeExtension,he as crypto$5,hf as encryptPasscode,f6 as hasRollupGasPricesOfChainIds,hg as hasRollupGasPricesOfChains,hh as PurchaseModel,fq as supportedVendors,hi as UnstoppableDomainKeyMap}from"./assets/brc20-f4f896e3.js";import{P as ProviderRpcError}from"./assets/rpc-error-1c9e9050.js";function _mergeNamespaces(e,a){for(var t=0;t<a.length;t++){const c=a[t];if(typeof c!="string"&&!Array.isArray(c)){for(const i in c)if(i!=="default"&&!(i in e)){const o=Object.getOwnPropertyDescriptor(c,i);o&&Object.defineProperty(e,i,o.get?o:{enumerable:!0,get:()=>c[i]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var _nodeId,_clockseq,_lastMSecs=0,_lastNSecs=0;function v1(e,a,t){var c=a&&t||0,i=a||new Array(16);e=e||{};var o=e.node||_nodeId,b=e.clockseq!==void 0?e.clockseq:_clockseq;if(o==null||b==null){var u=e.random||(e.rng||rng$1)();o==null&&(o=_nodeId=[u[0]|1,u[1],u[2],u[3],u[4],u[5]]),b==null&&(b=_clockseq=(u[6]<<8|u[7])&16383)}var l=e.msecs!==void 0?e.msecs:Date.now(),x=e.nsecs!==void 0?e.nsecs:_lastNSecs+1,g=l-_lastMSecs+(x-_lastNSecs)/1e4;if(g<0&&e.clockseq===void 0&&(b=b+1&16383),(g<0||l>_lastMSecs)&&e.nsecs===void 0&&(x=0),x>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");_lastMSecs=l,_lastNSecs=x,_clockseq=b,l+=122192928e5;var v=((l&268435455)*1e4+x)%4294967296;i[c++]=v>>>24&255,i[c++]=v>>>16&255,i[c++]=v>>>8&255,i[c++]=v&255;var E=l/4294967296*1e4&268435455;i[c++]=E>>>8&255,i[c++]=E&255,i[c++]=E>>>24&15|16,i[c++]=E>>>16&255,i[c++]=b>>>8|128,i[c++]=b&255;for(var S=0;S<6;++S)i[c+S]=o[S];return a||stringify$3(i)}function parse$6(e){if(!validate(e))throw TypeError("Invalid UUID");var a,t=new Uint8Array(16);return t[0]=(a=parseInt(e.slice(0,8),16))>>>24,t[1]=a>>>16&255,t[2]=a>>>8&255,t[3]=a&255,t[4]=(a=parseInt(e.slice(9,13),16))>>>8,t[5]=a&255,t[6]=(a=parseInt(e.slice(14,18),16))>>>8,t[7]=a&255,t[8]=(a=parseInt(e.slice(19,23),16))>>>8,t[9]=a&255,t[10]=(a=parseInt(e.slice(24,36),16))/1099511627776&255,t[11]=a/4294967296&255,t[12]=a>>>24&255,t[13]=a>>>16&255,t[14]=a>>>8&255,t[15]=a&255,t}function stringToBytes(e){e=unescape(encodeURIComponent(e));for(var a=[],t=0;t<e.length;++t)a.push(e.charCodeAt(t));return a}var DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",URL$3="6ba7b811-9dad-11d1-80b4-00c04fd430c8";function v35(e,a,t){function c(i,o,b,u){if(typeof i=="string"&&(i=stringToBytes(i)),typeof o=="string"&&(o=parse$6(o)),o.length!==16)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");var l=new Uint8Array(16+i.length);if(l.set(o),l.set(i,o.length),l=t(l),l[6]=l[6]&15|a,l[8]=l[8]&63|128,b){u=u||0;for(var x=0;x<16;++x)b[u+x]=l[x];return b}return stringify$3(l)}try{c.name=e}catch{}return c.DNS=DNS,c.URL=URL$3,c}function md5$3(e){if(typeof e=="string"){var a=unescape(encodeURIComponent(e));e=new Uint8Array(a.length);for(var t=0;t<a.length;++t)e[t]=a.charCodeAt(t)}return md5ToHexEncodedArray(wordsToMd5(bytesToWords(e),e.length*8))}function md5ToHexEncodedArray(e){for(var a=[],t=e.length*32,c="0123456789abcdef",i=0;i<t;i+=8){var o=e[i>>5]>>>i%32&255,b=parseInt(c.charAt(o>>>4&15)+c.charAt(o&15),16);a.push(b)}return a}function getOutputLength(e){return(e+64>>>9<<4)+14+1}function wordsToMd5(e,a){e[a>>5]|=128<<a%32,e[getOutputLength(a)-1]=a;for(var t=1732584193,c=-271733879,i=-1732584194,o=271733878,b=0;b<e.length;b+=16){var u=t,l=c,x=i,g=o;t=md5ff(t,c,i,o,e[b],7,-680876936),o=md5ff(o,t,c,i,e[b+1],12,-389564586),i=md5ff(i,o,t,c,e[b+2],17,606105819),c=md5ff(c,i,o,t,e[b+3],22,-1044525330),t=md5ff(t,c,i,o,e[b+4],7,-176418897),o=md5ff(o,t,c,i,e[b+5],12,1200080426),i=md5ff(i,o,t,c,e[b+6],17,-1473231341),c=md5ff(c,i,o,t,e[b+7],22,-45705983),t=md5ff(t,c,i,o,e[b+8],7,1770035416),o=md5ff(o,t,c,i,e[b+9],12,-1958414417),i=md5ff(i,o,t,c,e[b+10],17,-42063),c=md5ff(c,i,o,t,e[b+11],22,-1990404162),t=md5ff(t,c,i,o,e[b+12],7,1804603682),o=md5ff(o,t,c,i,e[b+13],12,-40341101),i=md5ff(i,o,t,c,e[b+14],17,-1502002290),c=md5ff(c,i,o,t,e[b+15],22,1236535329),t=md5gg(t,c,i,o,e[b+1],5,-165796510),o=md5gg(o,t,c,i,e[b+6],9,-1069501632),i=md5gg(i,o,t,c,e[b+11],14,643717713),c=md5gg(c,i,o,t,e[b],20,-373897302),t=md5gg(t,c,i,o,e[b+5],5,-701558691),o=md5gg(o,t,c,i,e[b+10],9,38016083),i=md5gg(i,o,t,c,e[b+15],14,-660478335),c=md5gg(c,i,o,t,e[b+4],20,-405537848),t=md5gg(t,c,i,o,e[b+9],5,568446438),o=md5gg(o,t,c,i,e[b+14],9,-1019803690),i=md5gg(i,o,t,c,e[b+3],14,-187363961),c=md5gg(c,i,o,t,e[b+8],20,1163531501),t=md5gg(t,c,i,o,e[b+13],5,-1444681467),o=md5gg(o,t,c,i,e[b+2],9,-51403784),i=md5gg(i,o,t,c,e[b+7],14,1735328473),c=md5gg(c,i,o,t,e[b+12],20,-1926607734),t=md5hh(t,c,i,o,e[b+5],4,-378558),o=md5hh(o,t,c,i,e[b+8],11,-2022574463),i=md5hh(i,o,t,c,e[b+11],16,1839030562),c=md5hh(c,i,o,t,e[b+14],23,-35309556),t=md5hh(t,c,i,o,e[b+1],4,-1530992060),o=md5hh(o,t,c,i,e[b+4],11,1272893353),i=md5hh(i,o,t,c,e[b+7],16,-155497632),c=md5hh(c,i,o,t,e[b+10],23,-1094730640),t=md5hh(t,c,i,o,e[b+13],4,681279174),o=md5hh(o,t,c,i,e[b],11,-358537222),i=md5hh(i,o,t,c,e[b+3],16,-722521979),c=md5hh(c,i,o,t,e[b+6],23,76029189),t=md5hh(t,c,i,o,e[b+9],4,-640364487),o=md5hh(o,t,c,i,e[b+12],11,-421815835),i=md5hh(i,o,t,c,e[b+15],16,530742520),c=md5hh(c,i,o,t,e[b+2],23,-995338651),t=md5ii(t,c,i,o,e[b],6,-198630844),o=md5ii(o,t,c,i,e[b+7],10,1126891415),i=md5ii(i,o,t,c,e[b+14],15,-1416354905),c=md5ii(c,i,o,t,e[b+5],21,-57434055),t=md5ii(t,c,i,o,e[b+12],6,1700485571),o=md5ii(o,t,c,i,e[b+3],10,-1894986606),i=md5ii(i,o,t,c,e[b+10],15,-1051523),c=md5ii(c,i,o,t,e[b+1],21,-2054922799),t=md5ii(t,c,i,o,e[b+8],6,1873313359),o=md5ii(o,t,c,i,e[b+15],10,-30611744),i=md5ii(i,o,t,c,e[b+6],15,-1560198380),c=md5ii(c,i,o,t,e[b+13],21,1309151649),t=md5ii(t,c,i,o,e[b+4],6,-145523070),o=md5ii(o,t,c,i,e[b+11],10,-1120210379),i=md5ii(i,o,t,c,e[b+2],15,718787259),c=md5ii(c,i,o,t,e[b+9],21,-343485551),t=safeAdd(t,u),c=safeAdd(c,l),i=safeAdd(i,x),o=safeAdd(o,g)}return[t,c,i,o]}function bytesToWords(e){if(e.length===0)return[];for(var a=e.length*8,t=new Uint32Array(getOutputLength(a)),c=0;c<a;c+=8)t[c>>5]|=(e[c/8]&255)<<c%32;return t}function safeAdd(e,a){var t=(e&65535)+(a&65535),c=(e>>16)+(a>>16)+(t>>16);return c<<16|t&65535}function bitRotateLeft(e,a){return e<<a|e>>>32-a}function md5cmn(e,a,t,c,i,o){return safeAdd(bitRotateLeft(safeAdd(safeAdd(a,e),safeAdd(c,o)),i),t)}function md5ff(e,a,t,c,i,o,b){return md5cmn(a&t|~a&c,e,a,i,o,b)}function md5gg(e,a,t,c,i,o,b){return md5cmn(a&c|t&~c,e,a,i,o,b)}function md5hh(e,a,t,c,i,o,b){return md5cmn(a^t^c,e,a,i,o,b)}function md5ii(e,a,t,c,i,o,b){return md5cmn(t^(a|~c),e,a,i,o,b)}var v3=v35("v3",48,md5$3);const v3$1=v3;function f(e,a,t,c){switch(e){case 0:return a&t^~a&c;case 1:return a^t^c;case 2:return a&t^a&c^t&c;case 3:return a^t^c}}function ROTL(e,a){return e<<a|e>>>32-a}function sha1$2(e){var a=[1518500249,1859775393,2400959708,3395469782],t=[1732584193,4023233417,2562383102,271733878,3285377520];if(typeof e=="string"){var c=unescape(encodeURIComponent(e));e=[];for(var i=0;i<c.length;++i)e.push(c.charCodeAt(i))}else Array.isArray(e)||(e=Array.prototype.slice.call(e));e.push(128);for(var o=e.length/4+2,b=Math.ceil(o/16),u=new Array(b),l=0;l<b;++l){for(var x=new Uint32Array(16),g=0;g<16;++g)x[g]=e[l*64+g*4]<<24|e[l*64+g*4+1]<<16|e[l*64+g*4+2]<<8|e[l*64+g*4+3];u[l]=x}u[b-1][14]=(e.length-1)*8/Math.pow(2,32),u[b-1][14]=Math.floor(u[b-1][14]),u[b-1][15]=(e.length-1)*8&4294967295;for(var v=0;v<b;++v){for(var E=new Uint32Array(80),S=0;S<16;++S)E[S]=u[v][S];for(var T=16;T<80;++T)E[T]=ROTL(E[T-3]^E[T-8]^E[T-14]^E[T-16],1);for(var I=t[0],A=t[1],C=t[2],O=t[3],R=t[4],B=0;B<80;++B){var M=Math.floor(B/20),L=ROTL(I,5)+f(M,A,C,O)+R+a[M]+E[B]>>>0;R=O,O=C,C=ROTL(A,30)>>>0,A=I,I=L}t[0]=t[0]+I>>>0,t[1]=t[1]+A>>>0,t[2]=t[2]+C>>>0,t[3]=t[3]+O>>>0,t[4]=t[4]+R>>>0}return[t[0]>>24&255,t[0]>>16&255,t[0]>>8&255,t[0]&255,t[1]>>24&255,t[1]>>16&255,t[1]>>8&255,t[1]&255,t[2]>>24&255,t[2]>>16&255,t[2]>>8&255,t[2]&255,t[3]>>24&255,t[3]>>16&255,t[3]>>8&255,t[3]&255,t[4]>>24&255,t[4]>>16&255,t[4]>>8&255,t[4]&255]}var v5=v35("v5",80,sha1$2);const v5$1=v5,nil="00000000-0000-0000-0000-000000000000";function version$i(e){if(!validate(e))throw TypeError("Invalid UUID");return parseInt(e.substr(14,1),16)}const esmBrowser=Object.freeze(Object.defineProperty({__proto__:null,NIL:nil,parse:parse$6,stringify:stringify$3,v1,v3:v3$1,v4:v4$1,v5:v5$1,validate,version:version$i},Symbol.toStringTag,{value:"Module"}));var __spreadArray=globalThis&&globalThis.__spreadArray||function(e,a,t){if(t||arguments.length===2)for(var c=0,i=a.length,o;c<i;c++)(o||!(c in a))&&(o||(o=Array.prototype.slice.call(a,0,c)),o[c]=a[c]);return e.concat(o||Array.prototype.slice.call(a))},BrowserInfo=function(){function e(a,t,c){this.name=a,this.version=t,this.os=c,this.type="browser"}return e}(),NodeInfo=function(){function e(a){this.version=a,this.type="node",this.name="node",this.os=browserExports.platform}return e}(),SearchBotDeviceInfo=function(){function e(a,t,c,i){this.name=a,this.version=t,this.os=c,this.bot=i,this.type="bot-device"}return e}(),BotInfo=function(){function e(){this.type="bot",this.bot=!0,this.name="bot",this.version=null,this.os=null}return e}(),ReactNativeInfo=function(){function e(){this.type="react-native",this.name="react-native",this.version=null,this.os=null}return e}(),SEARCHBOX_UA_REGEX=/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,SEARCHBOT_OS_REGEX=/(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/,REQUIRED_VERSION_PARTS=3,userAgentRules=[["aol",/AOLShield\/([0-9\._]+)/],["edge",/Edge\/([0-9\._]+)/],["edge-ios",/EdgiOS\/([0-9\._]+)/],["yandexbrowser",/YaBrowser\/([0-9\._]+)/],["kakaotalk",/KAKAOTALK\s([0-9\.]+)/],["samsung",/SamsungBrowser\/([0-9\.]+)/],["silk",/\bSilk\/([0-9._-]+)\b/],["miui",/MiuiBrowser\/([0-9\.]+)$/],["beaker",/BeakerBrowser\/([0-9\.]+)/],["edge-chromium",/EdgA?\/([0-9\.]+)/],["chromium-webview",/(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["phantomjs",/PhantomJS\/([0-9\.]+)(:?\s|$)/],["crios",/CriOS\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["fxios",/FxiOS\/([0-9\.]+)/],["opera-mini",/Opera Mini.*Version\/([0-9\.]+)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)/],["pie",/^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],["pie",/^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],["netfront",/^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/Version\/([0-9\._]+).*Mobile.*Safari.*/],["safari",/Version\/([0-9\._]+).*Safari/],["facebook",/FB[AS]V\/([0-9\.]+)/],["instagram",/Instagram\s([0-9\.]+)/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Mobile/],["ios-webview",/AppleWebKit\/([0-9\.]+).*Gecko\)$/],["curl",/^curl\/([0-9\.]+)$/],["searchbot",SEARCHBOX_UA_REGEX]],operatingSystemRules=[["iOS",/iP(hone|od|ad)/],["Android OS",/Android/],["BlackBerry OS",/BlackBerry|BB10/],["Windows Mobile",/IEMobile/],["Amazon OS",/Kindle/],["Windows 3.11",/Win16/],["Windows 95",/(Windows 95)|(Win95)|(Windows_95)/],["Windows 98",/(Windows 98)|(Win98)/],["Windows 2000",/(Windows NT 5.0)|(Windows 2000)/],["Windows XP",/(Windows NT 5.1)|(Windows XP)/],["Windows Server 2003",/(Windows NT 5.2)/],["Windows Vista",/(Windows NT 6.0)/],["Windows 7",/(Windows NT 6.1)/],["Windows 8",/(Windows NT 6.2)/],["Windows 8.1",/(Windows NT 6.3)/],["Windows 10",/(Windows NT 10.0)/],["Windows ME",/Windows ME/],["Windows CE",/Windows CE|WinCE|Microsoft Pocket Internet Explorer/],["Open BSD",/OpenBSD/],["Sun OS",/SunOS/],["Chrome OS",/CrOS/],["Linux",/(Linux)|(X11)/],["Mac OS",/(Mac_PowerPC)|(Macintosh)/],["QNX",/QNX/],["BeOS",/BeOS/],["OS/2",/OS\/2/]];function detect(e){return e?parseUserAgent(e):typeof document>"u"&&typeof navigator<"u"&&navigator.product==="ReactNative"?new ReactNativeInfo:typeof navigator<"u"?parseUserAgent(navigator.userAgent):getNodeVersion()}function matchUserAgent(e){return e!==""&&userAgentRules.reduce(function(a,t){var c=t[0],i=t[1];if(a)return a;var o=i.exec(e);return!!o&&[c,o]},!1)}function parseUserAgent(e){var a=matchUserAgent(e);if(!a)return null;var t=a[0],c=a[1];if(t==="searchbot")return new BotInfo;var i=c[1]&&c[1].split(".").join("_").split("_").slice(0,3);i?i.length<REQUIRED_VERSION_PARTS&&(i=__spreadArray(__spreadArray([],i,!0),createVersionParts(REQUIRED_VERSION_PARTS-i.length),!0)):i=[];var o=i.join("."),b=detectOS(e),u=SEARCHBOT_OS_REGEX.exec(e);return u&&u[1]?new SearchBotDeviceInfo(t,o,b,u[1]):new BrowserInfo(t,o,b)}function detectOS(e){for(var a=0,t=operatingSystemRules.length;a<t;a++){var c=operatingSystemRules[a],i=c[0],o=c[1],b=o.exec(e);if(b)return i}return null}function getNodeVersion(){var e=typeof browserExports<"u"&&browserExports.version;return e?new NodeInfo(browserExports.version.slice(1)):null}function createVersionParts(e){for(var a=[],t=0;t<e;t++)a.push("0");return a}function convertArrayBufferToBuffer(e){return arrayToBuffer(new Uint8Array(e))}function convertBufferToArrayBuffer(e){return bufferToArray(e).buffer}const logger$j=new Logger(version$j),_constructorGuard$2={},Zero$1=BigNumber$1.from(0),NegativeOne$1=BigNumber$1.from(-1);function throwFault(e,a,t,c){const i={fault:a,operation:t};return c!==void 0&&(i.value=c),logger$j.throwError(e,Logger.errors.NUMERIC_FAULT,i)}let zeros="0";for(;zeros.length<256;)zeros+=zeros;function getMultiplier(e){if(typeof e!="number")try{e=BigNumber$1.from(e).toNumber()}catch{}return typeof e=="number"&&e>=0&&e<=256&&!(e%1)?"1"+zeros.substring(0,e):logger$j.throwArgumentError("invalid decimal size","decimals",e)}function formatFixed(e,a){a==null&&(a=0);const t=getMultiplier(a);e=BigNumber$1.from(e);const c=e.lt(Zero$1);c&&(e=e.mul(NegativeOne$1));let i=e.mod(t).toString();for(;i.length<t.length-1;)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];const o=e.div(t).toString();return t.length===1?e=o:e=o+"."+i,c&&(e="-"+e),e}function parseFixed(e,a){a==null&&(a=0);const t=getMultiplier(a);(typeof e!="string"||!e.match(/^-?[0-9.]+$/))&&logger$j.throwArgumentError("invalid decimal value","value",e);const c=e.substring(0,1)==="-";c&&(e=e.substring(1)),e==="."&&logger$j.throwArgumentError("missing value","value",e);const i=e.split(".");i.length>2&&logger$j.throwArgumentError("too many decimal points","value",e);let o=i[0],b=i[1];for(o||(o="0"),b||(b="0");b[b.length-1]==="0";)b=b.substring(0,b.length-1);for(b.length>t.length-1&&throwFault("fractional component exceeds decimals","underflow","parseFixed"),b===""&&(b="0");b.length<t.length-1;)b+="0";const u=BigNumber$1.from(o),l=BigNumber$1.from(b);let x=u.mul(t).add(l);return c&&(x=x.mul(NegativeOne$1)),x}class FixedFormat{constructor(a,t,c,i){a!==_constructorGuard$2&&logger$j.throwError("cannot use FixedFormat constructor; use FixedFormat.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=t,this.width=c,this.decimals=i,this.name=(t?"":"u")+"fixed"+String(c)+"x"+String(i),this._multiplier=getMultiplier(i),Object.freeze(this)}static from(a){if(a instanceof FixedFormat)return a;typeof a=="number"&&(a=`fixed128x${a}`);let t=!0,c=128,i=18;if(typeof a=="string"){if(a!=="fixed")if(a==="ufixed")t=!1;else{const o=a.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);o||logger$j.throwArgumentError("invalid fixed format","format",a),t=o[1]!=="u",c=parseInt(o[2]),i=parseInt(o[3])}}else if(a){const o=(b,u,l)=>a[b]==null?l:(typeof a[b]!==u&&logger$j.throwArgumentError("invalid fixed format ("+b+" not "+u+")","format."+b,a[b]),a[b]);t=o("signed","boolean",t),c=o("width","number",c),i=o("decimals","number",i)}return c%8&&logger$j.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",c),i>80&&logger$j.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",i),new FixedFormat(_constructorGuard$2,t,c,i)}}class FixedNumber{constructor(a,t,c,i){a!==_constructorGuard$2&&logger$j.throwError("cannot use FixedNumber constructor; use FixedNumber.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=i,this._hex=t,this._value=c,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(a){this.format.name!==a.format.name&&logger$j.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",a)}addUnsafe(a){this._checkFormat(a);const t=parseFixed(this._value,this.format.decimals),c=parseFixed(a._value,a.format.decimals);return FixedNumber.fromValue(t.add(c),this.format.decimals,this.format)}subUnsafe(a){this._checkFormat(a);const t=parseFixed(this._value,this.format.decimals),c=parseFixed(a._value,a.format.decimals);return FixedNumber.fromValue(t.sub(c),this.format.decimals,this.format)}mulUnsafe(a){this._checkFormat(a);const t=parseFixed(this._value,this.format.decimals),c=parseFixed(a._value,a.format.decimals);return FixedNumber.fromValue(t.mul(c).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(a){this._checkFormat(a);const t=parseFixed(this._value,this.format.decimals),c=parseFixed(a._value,a.format.decimals);return FixedNumber.fromValue(t.mul(this.format._multiplier).div(c),this.format.decimals,this.format)}floor(){const a=this.toString().split(".");a.length===1&&a.push("0");let t=FixedNumber.from(a[0],this.format);const c=!a[1].match(/^(0*)$/);return this.isNegative()&&c&&(t=t.subUnsafe(ONE$2.toFormat(t.format))),t}ceiling(){const a=this.toString().split(".");a.length===1&&a.push("0");let t=FixedNumber.from(a[0],this.format);const c=!a[1].match(/^(0*)$/);return!this.isNegative()&&c&&(t=t.addUnsafe(ONE$2.toFormat(t.format))),t}round(a){a==null&&(a=0);const t=this.toString().split(".");if(t.length===1&&t.push("0"),(a<0||a>80||a%1)&&logger$j.throwArgumentError("invalid decimal count","decimals",a),t[1].length<=a)return this;const c=FixedNumber.from("1"+zeros.substring(0,a),this.format),i=BUMP.toFormat(this.format);return this.mulUnsafe(c).addUnsafe(i).floor().divUnsafe(c)}isZero(){return this._value==="0.0"||this._value==="0"}isNegative(){return this._value[0]==="-"}toString(){return this._value}toHexString(a){if(a==null)return this._hex;a%8&&logger$j.throwArgumentError("invalid byte width","width",a);const t=BigNumber$1.from(this._hex).fromTwos(this.format.width).toTwos(a).toHexString();return hexZeroPad(t,a/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(a){return FixedNumber.fromString(this._value,a)}static fromValue(a,t,c){return c==null&&t!=null&&!isBigNumberish(t)&&(c=t,t=null),t==null&&(t=0),c==null&&(c="fixed"),FixedNumber.fromString(formatFixed(a,t),FixedFormat.from(c))}static fromString(a,t){t==null&&(t="fixed");const c=FixedFormat.from(t),i=parseFixed(a,c.decimals);!c.signed&&i.lt(Zero$1)&&throwFault("unsigned value cannot be negative","overflow","value",a);let o=null;c.signed?o=i.toTwos(c.width).toHexString():(o=i.toHexString(),o=hexZeroPad(o,c.width/8));const b=formatFixed(i,c.decimals);return new FixedNumber(_constructorGuard$2,o,b,c)}static fromBytes(a,t){t==null&&(t="fixed");const c=FixedFormat.from(t);if(arrayify(a).length>c.width/8)throw new Error("overflow");let i=BigNumber$1.from(a);c.signed&&(i=i.fromTwos(c.width));const o=i.toTwos((c.signed?0:1)+c.width).toHexString(),b=formatFixed(i,c.decimals);return new FixedNumber(_constructorGuard$2,o,b,c)}static from(a,t){if(typeof a=="string")return FixedNumber.fromString(a,t);if(isBytes(a))return FixedNumber.fromBytes(a,t);try{return FixedNumber.fromValue(a,0,t)}catch(c){if(c.code!==Logger.errors.INVALID_ARGUMENT)throw c}return logger$j.throwArgumentError("invalid FixedNumber value","value",a)}static isFixedNumber(a){return!!(a&&a._isFixedNumber)}}const ONE$2=FixedNumber.from(1),BUMP=FixedNumber.from("0.5"),AddressZero="0x0000000000000000000000000000000000000000",HashZero="0x0000000000000000000000000000000000000000000000000000000000000000";function formatBytes32String(e){const a=toUtf8Bytes(e);if(a.length>31)throw new Error("bytes32 string must be less than 32 bytes");return hexlify(concat$4([a,HashZero]).slice(0,32))}function parseBytes32String(e){const a=arrayify(e);if(a.length!==32)throw new Error("invalid bytes32 - not 32 bytes long");if(a[31]!==0)throw new Error("invalid bytes32 string - no null terminator");let t=31;for(;a[t-1]===0;)t--;return toUtf8String(a.slice(0,t))}function bytes2(e){if(e.length%4!==0)throw new Error("bad data");let a=[];for(let t=0;t<e.length;t+=4)a.push(parseInt(e.substring(t,t+4),16));return a}function createTable(e,a){a||(a=function(i){return[parseInt(i,16)]});let t=0,c={};return e.split(",").forEach(i=>{let o=i.split(":");t+=parseInt(o[0],16),c[t]=a(o[1])}),c}function createRangeTable(e){let a=0;return e.split(",").map(t=>{let c=t.split("-");c.length===1?c[1]="0":c[1]===""&&(c[1]="1");let i=a+parseInt(c[0],16);return a=parseInt(c[1],16),{l:i,h:a}})}function matchMap(e,a){let t=0;for(let c=0;c<a.length;c++){let i=a[c];if(t+=i.l,e>=t&&e<=t+i.h&&(e-t)%(i.d||1)===0){if(i.e&&i.e.indexOf(e-t)!==-1)continue;return i}}return null}const Table_A_1_ranges=createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),Table_B_1_flags="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(e=>parseInt(e,16)),Table_B_2_ranges=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],Table_B_2_lut_abs=createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),Table_B_2_lut_rel=createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),Table_B_2_complex=createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",bytes2),Table_C_ranges=createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function flatten(e){return e.reduce((a,t)=>(t.forEach(c=>{a.push(c)}),a),[])}function _nameprepTableA1(e){return!!matchMap(e,Table_A_1_ranges)}function _nameprepTableB2(e){let a=matchMap(e,Table_B_2_ranges);if(a)return[e+a.s];let t=Table_B_2_lut_abs[e];if(t)return t;let c=Table_B_2_lut_rel[e];if(c)return[e+c[0]];let i=Table_B_2_complex[e];return i||null}function _nameprepTableC(e){return!!matchMap(e,Table_C_ranges)}function nameprep(e){if(e.match(/^[a-z0-9-]*$/i)&&e.length<=59)return e.toLowerCase();let a=toUtf8CodePoints(e);a=flatten(a.map(c=>{if(Table_B_1_flags.indexOf(c)>=0)return[];if(c>=65024&&c<=65039)return[];let i=_nameprepTableB2(c);return i||[c]})),a=toUtf8CodePoints(_toUtf8String(a),UnicodeNormalizationForm.NFKC),a.forEach(c=>{if(_nameprepTableC(c))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}),a.forEach(c=>{if(_nameprepTableA1(c))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")});let t=_toUtf8String(a);if(t.substring(0,1)==="-"||t.substring(2,4)==="--"||t.substring(t.length-1)==="-")throw new Error("invalid hyphen");return t}const lib_esm$d=Object.freeze(Object.defineProperty({__proto__:null,get UnicodeNormalizationForm(){return UnicodeNormalizationForm},Utf8ErrorFuncs,get Utf8ErrorReason(){return Utf8ErrorReason},_toEscapedUtf8String,formatBytes32String,nameprep,parseBytes32String,toUtf8Bytes,toUtf8CodePoints,toUtf8String},Symbol.toStringTag,{value:"Module"})),version$h="hash/5.7.0";function decode$r(e){e=atob(e);const a=[];for(let t=0;t<e.length;t++)a.push(e.charCodeAt(t));return arrayify(a)}function encode$s(e){e=arrayify(e);let a="";for(let t=0;t<e.length;t++)a+=String.fromCharCode(e[t]);return btoa(a)}const lib_esm$c=Object.freeze(Object.defineProperty({__proto__:null,decode:decode$r,encode:encode$s},Symbol.toStringTag,{value:"Module"}));function flat(e,a){a==null&&(a=1);const t=[],c=t.forEach,i=function(o,b){c.call(o,function(u){b>0&&Array.isArray(u)?i(u,b-1):t.push(u)})};return i(e,a),t}function fromEntries(e){const a={};for(let t=0;t<e.length;t++){const c=e[t];a[c[0]]=c[1]}return a}function decode_arithmetic(e){let a=0;function t(){return e[a++]<<8|e[a++]}let c=t(),i=1,o=[0,1];for(let M=1;M<c;M++)o.push(i+=t());let b=t(),u=a;a+=b;let l=0,x=0;function g(){return l==0&&(x=x<<8|e[a++],l=8),x>>--l&1}const v=31,E=Math.pow(2,v),S=E>>>1,T=S>>1,I=E-1;let A=0;for(let M=0;M<v;M++)A=A<<1|g();let C=[],O=0,R=E;for(;;){let M=Math.floor(((A-O+1)*i-1)/R),L=0,ee=c;for(;ee-L>1;){let W=L+ee>>>1;M<o[W]?ee=W:L=W}if(L==0)break;C.push(L);let z=O+Math.floor(R*o[L]/i),oe=O+Math.floor(R*o[L+1]/i)-1;for(;!((z^oe)&S);)A=A<<1&I|g(),z=z<<1&I,oe=oe<<1&I|1;for(;z&~oe&T;)A=A&S|A<<1&I>>>1|g(),z=z<<1^S,oe=(oe^S)<<1|S|1;O=z,R=1+oe-z}let B=c-4;return C.map(M=>{switch(M-B){case 3:return B+65792+(e[u++]<<16|e[u++]<<8|e[u++]);case 2:return B+256+(e[u++]<<8|e[u++]);case 1:return B+e[u++];default:return M-1}})}function read_payload(e){let a=0;return()=>e[a++]}function read_compressed_payload(e){return read_payload(decode_arithmetic(e))}function signed(e){return e&1?~e>>1:e>>1}function read_counts(e,a){let t=Array(e);for(let c=0;c<e;c++)t[c]=1+a();return t}function read_ascending(e,a){let t=Array(e);for(let c=0,i=-1;c<e;c++)t[c]=i+=1+a();return t}function read_deltas(e,a){let t=Array(e);for(let c=0,i=0;c<e;c++)t[c]=i+=signed(a());return t}function read_member_array(e,a){let t=read_ascending(e(),e),c=e(),i=read_ascending(c,e),o=read_counts(c,e);for(let b=0;b<c;b++)for(let u=0;u<o[b];u++)t.push(i[b]+u);return a?t.map(b=>a[b]):t}function read_mapped_map(e){let a=[];for(;;){let t=e();if(t==0)break;a.push(read_linear_table(t,e))}for(;;){let t=e()-1;if(t<0)break;a.push(read_replacement_table(t,e))}return fromEntries(flat(a))}function read_zero_terminated_array(e){let a=[];for(;;){let t=e();if(t==0)break;a.push(t)}return a}function read_transposed(e,a,t){let c=Array(e).fill(void 0).map(()=>[]);for(let i=0;i<a;i++)read_deltas(e,t).forEach((o,b)=>c[b].push(o));return c}function read_linear_table(e,a){let t=1+a(),c=a(),i=read_zero_terminated_array(a),o=read_transposed(i.length,1+e,a);return flat(o.map((b,u)=>{const l=b[0],x=b.slice(1);return Array(i[u]).fill(void 0).map((g,v)=>{let E=v*c;return[l+v*t,x.map(S=>S+E)]})}))}function read_replacement_table(e,a){let t=1+a();return read_transposed(t,1+e,a).map(i=>[i[0],i.slice(1)])}function read_emoji_trie(e){let a=read_member_array(e).sort((c,i)=>c-i);return t();function t(){let c=[];for(;;){let x=read_member_array(e,a);if(x.length==0)break;c.push({set:new Set(x),node:t()})}c.sort((x,g)=>g.set.size-x.set.size);let i=e(),o=i%3;i=i/3|0;let b=!!(i&1);i>>=1;let u=i==1,l=i==2;return{branches:c,valid:o,fe0f:b,save:u,check:l}}}function getData(){return read_compressed_payload(decode$r(""))}const r=getData(),VALID=new Set(read_member_array(r)),IGNORED=new Set(read_member_array(r)),MAPPED=read_mapped_map(r),EMOJI_ROOT=read_emoji_trie(r),HYPHEN=45,UNDERSCORE=95;function explode_cp(e){return toUtf8CodePoints(e)}function filter_fe0f(e){return e.filter(a=>a!=65039)}function ens_normalize_post_check(e){for(let a of e.split(".")){let t=explode_cp(a);try{for(let c=t.lastIndexOf(UNDERSCORE)-1;c>=0;c--)if(t[c]!==UNDERSCORE)throw new Error("underscore only allowed at start");if(t.length>=4&&t.every(c=>c<128)&&t[2]===HYPHEN&&t[3]===HYPHEN)throw new Error("invalid label extension")}catch(c){throw new Error(`Invalid label "${a}": ${c.message}`)}}return e}function ens_normalize(e){return ens_normalize_post_check(normalize$2(e,filter_fe0f))}function normalize$2(e,a){let t=explode_cp(e).reverse(),c=[];for(;t.length;){let i=consume_emoji_reversed(t);if(i){c.push(...a(i));continue}let o=t.pop();if(VALID.has(o)){c.push(o);continue}if(IGNORED.has(o))continue;let b=MAPPED[o];if(b){c.push(...b);continue}throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`)}return ens_normalize_post_check(nfc(String.fromCodePoint(...c)))}function nfc(e){return e.normalize("NFC")}function consume_emoji_reversed(e,a){var t;let c=EMOJI_ROOT,i,o,b=[],u=e.length;for(a&&(a.length=0);u;){let l=e[--u];if(c=(t=c.branches.find(x=>x.set.has(l)))===null||t===void 0?void 0:t.node,!c)break;if(c.save)o=l;else if(c.check&&l===o)break;b.push(l),c.fe0f&&(b.push(65039),u>0&&e[u-1]==65039&&u--),c.valid&&(i=b.slice(),c.valid==2&&i.splice(1,1),a&&a.push(...e.slice(u).reverse()),e.length=u)}return i}const logger$i=new Logger(version$h),Zeros=new Uint8Array(32);Zeros.fill(0);function checkComponent(e){if(e.length===0)throw new Error("invalid ENS name; empty component");return e}function ensNameSplit(e){const a=toUtf8Bytes(ens_normalize(e)),t=[];if(e.length===0)return t;let c=0;for(let i=0;i<a.length;i++)a[i]===46&&(t.push(checkComponent(a.slice(c,i))),c=i+1);if(c>=a.length)throw new Error("invalid ENS name; empty component");return t.push(checkComponent(a.slice(c))),t}function ensNormalize(e){return ensNameSplit(e).map(a=>toUtf8String(a)).join(".")}function isValidName(e){try{return ensNameSplit(e).length!==0}catch{}return!1}function namehash(e){typeof e!="string"&&logger$i.throwArgumentError("invalid ENS name; not a string","name",e);let a=Zeros;const t=ensNameSplit(e);for(;t.length;)a=keccak256$1(concat$4([a,keccak256$1(t.pop())]));return hexlify(a)}function dnsEncode(e){return hexlify(concat$4(ensNameSplit(e).map(a=>{if(a.length>63)throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");const t=new Uint8Array(a.length+1);return t.set(a,1),t[0]=t.length-1,t})))+"00"}const messagePrefix=`Ethereum Signed Message:
`;function hashMessage(e){return typeof e=="string"&&(e=toUtf8Bytes(e)),keccak256$1(concat$4([toUtf8Bytes(messagePrefix),toUtf8Bytes(String(e.length)),e]))}var __awaiter$9=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$h=new Logger(version$h),padding=new Uint8Array(32);padding.fill(0);const NegativeOne=BigNumber$1.from(-1),Zero=BigNumber$1.from(0),One=BigNumber$1.from(1),MaxUint256=BigNumber$1.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function hexPadRight(e){const a=arrayify(e),t=a.length%32;return t?hexConcat([a,padding.slice(t)]):hexlify(a)}const hexTrue=hexZeroPad(One.toHexString(),32),hexFalse=hexZeroPad(Zero.toHexString(),32),domainFieldTypes={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},domainFieldNames=["name","version","chainId","verifyingContract","salt"];function checkString(e){return function(a){return typeof a!="string"&&logger$h.throwArgumentError(`invalid domain value for ${JSON.stringify(e)}`,`domain.${e}`,a),a}}const domainChecks={name:checkString("name"),version:checkString("version"),chainId:function(e){try{return BigNumber$1.from(e).toString()}catch{}return logger$h.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",e)},verifyingContract:function(e){try{return getAddress(e).toLowerCase()}catch{}return logger$h.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",e)},salt:function(e){try{const a=arrayify(e);if(a.length!==32)throw new Error("bad length");return hexlify(a)}catch{}return logger$h.throwArgumentError('invalid domain value "salt"',"domain.salt",e)}};function getBaseEncoder(e){{const a=e.match(/^(u?)int(\d*)$/);if(a){const t=a[1]==="",c=parseInt(a[2]||"256");(c%8!==0||c>256||a[2]&&a[2]!==String(c))&&logger$h.throwArgumentError("invalid numeric width","type",e);const i=MaxUint256.mask(t?c-1:c),o=t?i.add(One).mul(NegativeOne):Zero;return function(b){const u=BigNumber$1.from(b);return(u.lt(o)||u.gt(i))&&logger$h.throwArgumentError(`value out-of-bounds for ${e}`,"value",b),hexZeroPad(u.toTwos(256).toHexString(),32)}}}{const a=e.match(/^bytes(\d+)$/);if(a){const t=parseInt(a[1]);return(t===0||t>32||a[1]!==String(t))&&logger$h.throwArgumentError("invalid bytes width","type",e),function(c){return arrayify(c).length!==t&&logger$h.throwArgumentError(`invalid length for ${e}`,"value",c),hexPadRight(c)}}}switch(e){case"address":return function(a){return hexZeroPad(getAddress(a),32)};case"bool":return function(a){return a?hexTrue:hexFalse};case"bytes":return function(a){return keccak256$1(a)};case"string":return function(a){return id(a)}}return null}function encodeType(e,a){return`${e}(${a.map(({name:t,type:c})=>c+" "+t).join(",")})`}class TypedDataEncoder{constructor(a){defineReadOnly(this,"types",Object.freeze(deepCopy(a))),defineReadOnly(this,"_encoderCache",{}),defineReadOnly(this,"_types",{});const t={},c={},i={};Object.keys(a).forEach(u=>{t[u]={},c[u]=[],i[u]={}});for(const u in a){const l={};a[u].forEach(x=>{l[x.name]&&logger$h.throwArgumentError(`duplicate variable name ${JSON.stringify(x.name)} in ${JSON.stringify(u)}`,"types",a),l[x.name]=!0;const g=x.type.match(/^([^\x5b]*)(\x5b|$)/)[1];g===u&&logger$h.throwArgumentError(`circular type reference to ${JSON.stringify(g)}`,"types",a),!getBaseEncoder(g)&&(c[g]||logger$h.throwArgumentError(`unknown type ${JSON.stringify(g)}`,"types",a),c[g].push(u),t[u][g]=!0)})}const o=Object.keys(c).filter(u=>c[u].length===0);o.length===0?logger$h.throwArgumentError("missing primary type","types",a):o.length>1&&logger$h.throwArgumentError(`ambiguous primary types or unused types: ${o.map(u=>JSON.stringify(u)).join(", ")}`,"types",a),defineReadOnly(this,"primaryType",o[0]);function b(u,l){l[u]&&logger$h.throwArgumentError(`circular type reference to ${JSON.stringify(u)}`,"types",a),l[u]=!0,Object.keys(t[u]).forEach(x=>{c[x]&&(b(x,l),Object.keys(l).forEach(g=>{i[g][x]=!0}))}),delete l[u]}b(this.primaryType,{});for(const u in i){const l=Object.keys(i[u]);l.sort(),this._types[u]=encodeType(u,a[u])+l.map(x=>encodeType(x,a[x])).join("")}}getEncoder(a){let t=this._encoderCache[a];return t||(t=this._encoderCache[a]=this._getEncoder(a)),t}_getEncoder(a){{const i=getBaseEncoder(a);if(i)return i}const t=a.match(/^(.*)(\x5b(\d*)\x5d)$/);if(t){const i=t[1],o=this.getEncoder(i),b=parseInt(t[3]);return u=>{b>=0&&u.length!==b&&logger$h.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",u);let l=u.map(o);return this._types[i]&&(l=l.map(keccak256$1)),keccak256$1(hexConcat(l))}}const c=this.types[a];if(c){const i=id(this._types[a]);return o=>{const b=c.map(({name:u,type:l})=>{const x=this.getEncoder(l)(o[u]);return this._types[l]?keccak256$1(x):x});return b.unshift(i),hexConcat(b)}}return logger$h.throwArgumentError(`unknown type: ${a}`,"type",a)}encodeType(a){const t=this._types[a];return t||logger$h.throwArgumentError(`unknown type: ${JSON.stringify(a)}`,"name",a),t}encodeData(a,t){return this.getEncoder(a)(t)}hashStruct(a,t){return keccak256$1(this.encodeData(a,t))}encode(a){return this.encodeData(this.primaryType,a)}hash(a){return this.hashStruct(this.primaryType,a)}_visit(a,t,c){if(getBaseEncoder(a))return c(a,t);const i=a.match(/^(.*)(\x5b(\d*)\x5d)$/);if(i){const b=i[1],u=parseInt(i[3]);return u>=0&&t.length!==u&&logger$h.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t),t.map(l=>this._visit(b,l,c))}const o=this.types[a];return o?o.reduce((b,{name:u,type:l})=>(b[u]=this._visit(l,t[u],c),b),{}):logger$h.throwArgumentError(`unknown type: ${a}`,"type",a)}visit(a,t){return this._visit(this.primaryType,a,t)}static from(a){return new TypedDataEncoder(a)}static getPrimaryType(a){return TypedDataEncoder.from(a).primaryType}static hashStruct(a,t,c){return TypedDataEncoder.from(t).hashStruct(a,c)}static hashDomain(a){const t=[];for(const c in a){const i=domainFieldTypes[c];i||logger$h.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(c)}`,"domain",a),t.push({name:c,type:i})}return t.sort((c,i)=>domainFieldNames.indexOf(c.name)-domainFieldNames.indexOf(i.name)),TypedDataEncoder.hashStruct("EIP712Domain",{EIP712Domain:t},a)}static encode(a,t,c){return hexConcat(["0x1901",TypedDataEncoder.hashDomain(a),TypedDataEncoder.from(t).hash(c)])}static hash(a,t,c){return keccak256$1(TypedDataEncoder.encode(a,t,c))}static resolveNames(a,t,c,i){return __awaiter$9(this,void 0,void 0,function*(){a=shallowCopy(a);const o={};a.verifyingContract&&!isHexString$2(a.verifyingContract,20)&&(o[a.verifyingContract]="0x");const b=TypedDataEncoder.from(t);b.visit(c,(u,l)=>(u==="address"&&!isHexString$2(l,20)&&(o[l]="0x"),l));for(const u in o)o[u]=yield i(u);return a.verifyingContract&&o[a.verifyingContract]&&(a.verifyingContract=o[a.verifyingContract]),c=b.visit(c,(u,l)=>u==="address"&&o[l]?o[l]:l),{domain:a,value:c}})}static getPayload(a,t,c){TypedDataEncoder.hashDomain(a);const i={},o=[];domainFieldNames.forEach(l=>{const x=a[l];x!=null&&(i[l]=domainChecks[l](x),o.push({name:l,type:domainFieldTypes[l]}))});const b=TypedDataEncoder.from(t),u=shallowCopy(t);return u.EIP712Domain?logger$h.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",t):u.EIP712Domain=o,b.encode(c),{types:u,domain:i,primaryType:b.primaryType,message:b.visit(c,(l,x)=>{if(l.match(/^bytes(\d*)/))return hexlify(arrayify(x));if(l.match(/^u?int/))return BigNumber$1.from(x).toString();switch(l){case"address":return x.toLowerCase();case"bool":return!!x;case"string":return typeof x!="string"&&logger$h.throwArgumentError("invalid string","value",x),x}return logger$h.throwArgumentError("unsupported type","type",l)})}}}const lib_esm$b=Object.freeze(Object.defineProperty({__proto__:null,_TypedDataEncoder:TypedDataEncoder,dnsEncode,ensNormalize,hashMessage,id,isValidName,messagePrefix,namehash},Symbol.toStringTag,{value:"Module"})),lib_esm$a=Object.freeze(Object.defineProperty({__proto__:null,AbiCoder,ConstructorFragment,ErrorFragment,EventFragment,FormatTypes,Fragment,FunctionFragment,Indexed,Interface,LogDescription,ParamType,TransactionDescription,checkResultErrors,defaultAbiCoder},Symbol.toStringTag,{value:"Module"})),version$g="abstract-provider/5.7.0";var __awaiter$8=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$g=new Logger(version$g);class ForkEvent extends Description{static isForkEvent(a){return!!(a&&a._isForkEvent)}}let Provider$1=class aa{constructor(){logger$g.checkAbstract(new.target,aa),defineReadOnly(this,"_isProvider",!0)}getFeeData(){return __awaiter$8(this,void 0,void 0,function*(){const{block:a,gasPrice:t}=yield resolveProperties({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(b=>null)});let c=null,i=null,o=null;return a&&a.baseFeePerGas&&(c=a.baseFeePerGas,o=BigNumber$1.from("1500000000"),i=a.baseFeePerGas.mul(2).add(o)),{lastBaseFeePerGas:c,maxFeePerGas:i,maxPriorityFeePerGas:o,gasPrice:t}})}addListener(a,t){return this.on(a,t)}removeListener(a,t){return this.off(a,t)}static isProvider(a){return!!(a&&a._isProvider)}};const version$f="abstract-signer/5.7.0";var __awaiter$7=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$f=new Logger(version$f),allowedTransactionKeys$2=["accessList","ccipReadEnabled","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],forwardErrors=[Logger.errors.INSUFFICIENT_FUNDS,Logger.errors.NONCE_EXPIRED,Logger.errors.REPLACEMENT_UNDERPRICED];class Signer{constructor(){logger$f.checkAbstract(new.target,Signer),defineReadOnly(this,"_isSigner",!0)}getBalance(a){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),a)})}getTransactionCount(a){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),a)})}estimateGas(a){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("estimateGas");const t=yield resolveProperties(this.checkTransaction(a));return yield this.provider.estimateGas(t)})}call(a,t){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("call");const c=yield resolveProperties(this.checkTransaction(a));return yield this.provider.call(c,t)})}sendTransaction(a){return __awaiter$7(this,void 0,void 0,function*(){this._checkProvider("sendTransaction");const t=yield this.populateTransaction(a),c=yield this.signTransaction(t);return yield this.provider.sendTransaction(c)})}getChainId(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getChainId"),(yield this.provider.getNetwork()).chainId})}getGasPrice(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()})}getFeeData(){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()})}resolveName(a){return __awaiter$7(this,void 0,void 0,function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(a)})}checkTransaction(a){for(const c in a)allowedTransactionKeys$2.indexOf(c)===-1&&logger$f.throwArgumentError("invalid transaction key: "+c,"transaction",a);const t=shallowCopy(a);return t.from==null?t.from=this.getAddress():t.from=Promise.all([Promise.resolve(t.from),this.getAddress()]).then(c=>(c[0].toLowerCase()!==c[1].toLowerCase()&&logger$f.throwArgumentError("from address mismatch","transaction",a),c[0])),t}populateTransaction(a){return __awaiter$7(this,void 0,void 0,function*(){const t=yield resolveProperties(this.checkTransaction(a));t.to!=null&&(t.to=Promise.resolve(t.to).then(i=>__awaiter$7(this,void 0,void 0,function*(){if(i==null)return null;const o=yield this.resolveName(i);return o==null&&logger$f.throwArgumentError("provided ENS name resolves to null","tx.to",i),o})),t.to.catch(i=>{}));const c=t.maxFeePerGas!=null||t.maxPriorityFeePerGas!=null;if(t.gasPrice!=null&&(t.type===2||c)?logger$f.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",a):(t.type===0||t.type===1)&&c&&logger$f.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",a),(t.type===2||t.type==null)&&t.maxFeePerGas!=null&&t.maxPriorityFeePerGas!=null)t.type=2;else if(t.type===0||t.type===1)t.gasPrice==null&&(t.gasPrice=this.getGasPrice());else{const i=yield this.getFeeData();if(t.type==null)if(i.maxFeePerGas!=null&&i.maxPriorityFeePerGas!=null)if(t.type=2,t.gasPrice!=null){const o=t.gasPrice;delete t.gasPrice,t.maxFeePerGas=o,t.maxPriorityFeePerGas=o}else t.maxFeePerGas==null&&(t.maxFeePerGas=i.maxFeePerGas),t.maxPriorityFeePerGas==null&&(t.maxPriorityFeePerGas=i.maxPriorityFeePerGas);else i.gasPrice!=null?(c&&logger$f.throwError("network does not support EIP-1559",Logger.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),t.gasPrice==null&&(t.gasPrice=i.gasPrice),t.type=0):logger$f.throwError("failed to get consistent fee data",Logger.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else t.type===2&&(t.maxFeePerGas==null&&(t.maxFeePerGas=i.maxFeePerGas),t.maxPriorityFeePerGas==null&&(t.maxPriorityFeePerGas=i.maxPriorityFeePerGas))}return t.nonce==null&&(t.nonce=this.getTransactionCount("pending")),t.gasLimit==null&&(t.gasLimit=this.estimateGas(t).catch(i=>{if(forwardErrors.indexOf(i.code)>=0)throw i;return logger$f.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:i,tx:t})})),t.chainId==null?t.chainId=this.getChainId():t.chainId=Promise.all([Promise.resolve(t.chainId),this.getChainId()]).then(i=>(i[1]!==0&&i[0]!==i[1]&&logger$f.throwArgumentError("chainId address mismatch","transaction",a),i[0])),yield resolveProperties(t)})}_checkProvider(a){this.provider||logger$f.throwError("missing provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:a||"_checkProvider"})}static isSigner(a){return!!(a&&a._isSigner)}}function createCommonjsModule(e,a,t){return t={path:a,exports:{},require:function(c,i){return commonjsRequire(c,i??t.path)}},e(t,t.exports),t.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var minimalisticAssert=assert$c;function assert$c(e,a){if(!e)throw new Error(a||"Assertion failed")}assert$c.equal=function(a,t,c){if(a!=t)throw new Error(c||"Assertion failed: "+a+" != "+t)};var utils_1$5=createCommonjsModule(function(e,a){var t=a;function c(b,u){if(Array.isArray(b))return b.slice();if(!b)return[];var l=[];if(typeof b!="string"){for(var x=0;x<b.length;x++)l[x]=b[x]|0;return l}if(u==="hex"){b=b.replace(/[^a-z0-9]+/ig,""),b.length%2!==0&&(b="0"+b);for(var x=0;x<b.length;x+=2)l.push(parseInt(b[x]+b[x+1],16))}else for(var x=0;x<b.length;x++){var g=b.charCodeAt(x),v=g>>8,E=g&255;v?l.push(v,E):l.push(E)}return l}t.toArray=c;function i(b){return b.length===1?"0"+b:b}t.zero2=i;function o(b){for(var u="",l=0;l<b.length;l++)u+=i(b[l].toString(16));return u}t.toHex=o,t.encode=function(u,l){return l==="hex"?o(u):u}}),utils_1$1$1=createCommonjsModule(function(e,a){var t=a;t.assert=minimalisticAssert,t.toArray=utils_1$5.toArray,t.zero2=utils_1$5.zero2,t.toHex=utils_1$5.toHex,t.encode=utils_1$5.encode;function c(l,x,g){var v=new Array(Math.max(l.bitLength(),g)+1);v.fill(0);for(var E=1<<x+1,S=l.clone(),T=0;T<v.length;T++){var I,A=S.andln(E-1);S.isOdd()?(A>(E>>1)-1?I=(E>>1)-A:I=A,S.isubn(I)):I=0,v[T]=I,S.iushrn(1)}return v}t.getNAF=c;function i(l,x){var g=[[],[]];l=l.clone(),x=x.clone();for(var v=0,E=0,S;l.cmpn(-v)>0||x.cmpn(-E)>0;){var T=l.andln(3)+v&3,I=x.andln(3)+E&3;T===3&&(T=-1),I===3&&(I=-1);var A;T&1?(S=l.andln(7)+v&7,(S===3||S===5)&&I===2?A=-T:A=T):A=0,g[0].push(A);var C;I&1?(S=x.andln(7)+E&7,(S===3||S===5)&&T===2?C=-I:C=I):C=0,g[1].push(C),2*v===A+1&&(v=1-v),2*E===C+1&&(E=1-E),l.iushrn(1),x.iushrn(1)}return g}t.getJSF=i;function o(l,x,g){var v="_"+x;l.prototype[x]=function(){return this[v]!==void 0?this[v]:this[v]=g.call(this)}}t.cachedProperty=o;function b(l){return typeof l=="string"?t.toArray(l,"hex"):l}t.parseBytes=b;function u(l){return new BN$g(l,"hex","le")}t.intFromLE=u}),getNAF=utils_1$1$1.getNAF,getJSF=utils_1$1$1.getJSF,assert$1$1=utils_1$1$1.assert;function BaseCurve(e,a){this.type=e,this.p=new BN$g(a.p,16),this.red=a.prime?BN$g.red(a.prime):BN$g.mont(this.p),this.zero=new BN$g(0).toRed(this.red),this.one=new BN$g(1).toRed(this.red),this.two=new BN$g(2).toRed(this.red),this.n=a.n&&new BN$g(a.n,16),this.g=a.g&&this.pointFromJSON(a.g,a.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var t=this.n&&this.p.div(this.n);!t||t.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var base$2=BaseCurve;BaseCurve.prototype.point=function(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function(a,t){assert$1$1(a.precomputed);var c=a._getDoubles(),i=getNAF(t,1,this._bitLength),o=(1<<c.step+1)-(c.step%2===0?2:1);o/=3;var b=[],u,l;for(u=0;u<i.length;u+=c.step){l=0;for(var x=u+c.step-1;x>=u;x--)l=(l<<1)+i[x];b.push(l)}for(var g=this.jpoint(null,null,null),v=this.jpoint(null,null,null),E=o;E>0;E--){for(u=0;u<b.length;u++)l=b[u],l===E?v=v.mixedAdd(c.points[u]):l===-E&&(v=v.mixedAdd(c.points[u].neg()));g=g.add(v)}return g.toP()};BaseCurve.prototype._wnafMul=function(a,t){var c=4,i=a._getNAFPoints(c);c=i.wnd;for(var o=i.points,b=getNAF(t,c,this._bitLength),u=this.jpoint(null,null,null),l=b.length-1;l>=0;l--){for(var x=0;l>=0&&b[l]===0;l--)x++;if(l>=0&&x++,u=u.dblp(x),l<0)break;var g=b[l];assert$1$1(g!==0),a.type==="affine"?g>0?u=u.mixedAdd(o[g-1>>1]):u=u.mixedAdd(o[-g-1>>1].neg()):g>0?u=u.add(o[g-1>>1]):u=u.add(o[-g-1>>1].neg())}return a.type==="affine"?u.toP():u};BaseCurve.prototype._wnafMulAdd=function(a,t,c,i,o){var b=this._wnafT1,u=this._wnafT2,l=this._wnafT3,x=0,g,v,E;for(g=0;g<i;g++){E=t[g];var S=E._getNAFPoints(a);b[g]=S.wnd,u[g]=S.points}for(g=i-1;g>=1;g-=2){var T=g-1,I=g;if(b[T]!==1||b[I]!==1){l[T]=getNAF(c[T],b[T],this._bitLength),l[I]=getNAF(c[I],b[I],this._bitLength),x=Math.max(l[T].length,x),x=Math.max(l[I].length,x);continue}var A=[t[T],null,null,t[I]];t[T].y.cmp(t[I].y)===0?(A[1]=t[T].add(t[I]),A[2]=t[T].toJ().mixedAdd(t[I].neg())):t[T].y.cmp(t[I].y.redNeg())===0?(A[1]=t[T].toJ().mixedAdd(t[I]),A[2]=t[T].add(t[I].neg())):(A[1]=t[T].toJ().mixedAdd(t[I]),A[2]=t[T].toJ().mixedAdd(t[I].neg()));var C=[-3,-1,-5,-7,0,7,5,1,3],O=getJSF(c[T],c[I]);for(x=Math.max(O[0].length,x),l[T]=new Array(x),l[I]=new Array(x),v=0;v<x;v++){var R=O[0][v]|0,B=O[1][v]|0;l[T][v]=C[(R+1)*3+(B+1)],l[I][v]=0,u[T]=A}}var M=this.jpoint(null,null,null),L=this._wnafT4;for(g=x;g>=0;g--){for(var ee=0;g>=0;){var z=!0;for(v=0;v<i;v++)L[v]=l[v][g]|0,L[v]!==0&&(z=!1);if(!z)break;ee++,g--}if(g>=0&&ee++,M=M.dblp(ee),g<0)break;for(v=0;v<i;v++){var oe=L[v];oe!==0&&(oe>0?E=u[v][oe-1>>1]:oe<0&&(E=u[v][-oe-1>>1].neg()),E.type==="affine"?M=M.mixedAdd(E):M=M.add(E))}}for(g=0;g<i;g++)u[g]=null;return o?M:M.toP()};function BasePoint(e,a){this.curve=e,this.type=a,this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function(){throw new Error("Not implemented")};BasePoint.prototype.validate=function(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function(a,t){a=utils_1$1$1.toArray(a,t);var c=this.p.byteLength();if((a[0]===4||a[0]===6||a[0]===7)&&a.length-1===2*c){a[0]===6?assert$1$1(a[a.length-1]%2===0):a[0]===7&&assert$1$1(a[a.length-1]%2===1);var i=this.point(a.slice(1,1+c),a.slice(1+c,1+2*c));return i}else if((a[0]===2||a[0]===3)&&a.length-1===c)return this.pointFromX(a.slice(1,1+c),a[0]===3);throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function(a){return this.encode(a,!0)};BasePoint.prototype._encode=function(a){var t=this.curve.p.byteLength(),c=this.getX().toArray("be",t);return a?[this.getY().isEven()?2:3].concat(c):[4].concat(c,this.getY().toArray("be",t))};BasePoint.prototype.encode=function(a,t){return utils_1$1$1.encode(this._encode(t),a)};BasePoint.prototype.precompute=function(a){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,a),t.beta=this._getBeta(),this.precomputed=t,this};BasePoint.prototype._hasDoubles=function(a){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return t?t.points.length>=Math.ceil((a.bitLength()+1)/t.step):!1};BasePoint.prototype._getDoubles=function(a,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var c=[this],i=this,o=0;o<t;o+=a){for(var b=0;b<a;b++)i=i.dbl();c.push(i)}return{step:a,points:c}};BasePoint.prototype._getNAFPoints=function(a){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],c=(1<<a)-1,i=c===1?null:this.dbl(),o=1;o<c;o++)t[o]=t[o-1].add(i);return{wnd:a,points:t}};BasePoint.prototype._getBeta=function(){return null};BasePoint.prototype.dblp=function(a){for(var t=this,c=0;c<a;c++)t=t.dbl();return t};var inherits_browser$1=createCommonjsModule(function(e){typeof Object.create=="function"?e.exports=function(t,c){c&&(t.super_=c,t.prototype=Object.create(c.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(t,c){if(c){t.super_=c;var i=function(){};i.prototype=c.prototype,t.prototype=new i,t.prototype.constructor=t}}}),assert$2$1=utils_1$1$1.assert;function ShortCurve(e){base$2.call(this,"short",e),this.a=new BN$g(e.a,16).toRed(this.red),this.b=new BN$g(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=this.a.fromRed().cmpn(0)===0,this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0,this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}inherits_browser$1(ShortCurve,base$2);var short_1=ShortCurve;ShortCurve.prototype._getEndomorphism=function(a){if(!(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)){var t,c;if(a.beta)t=new BN$g(a.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);t=i[0].cmp(i[1])<0?i[0]:i[1],t=t.toRed(this.red)}if(a.lambda)c=new BN$g(a.lambda,16);else{var o=this._getEndoRoots(this.n);this.g.mul(o[0]).x.cmp(this.g.x.redMul(t))===0?c=o[0]:(c=o[1],assert$2$1(this.g.mul(c).x.cmp(this.g.x.redMul(t))===0))}var b;return a.basis?b=a.basis.map(function(u){return{a:new BN$g(u.a,16),b:new BN$g(u.b,16)}}):b=this._getEndoBasis(c),{beta:t,lambda:c,basis:b}}};ShortCurve.prototype._getEndoRoots=function(a){var t=a===this.p?this.red:BN$g.mont(a),c=new BN$g(2).toRed(t).redInvm(),i=c.redNeg(),o=new BN$g(3).toRed(t).redNeg().redSqrt().redMul(c),b=i.redAdd(o).fromRed(),u=i.redSub(o).fromRed();return[b,u]};ShortCurve.prototype._getEndoBasis=function(a){for(var t=this.n.ushrn(Math.floor(this.n.bitLength()/2)),c=a,i=this.n.clone(),o=new BN$g(1),b=new BN$g(0),u=new BN$g(0),l=new BN$g(1),x,g,v,E,S,T,I,A=0,C,O;c.cmpn(0)!==0;){var R=i.div(c);C=i.sub(R.mul(c)),O=u.sub(R.mul(o));var B=l.sub(R.mul(b));if(!v&&C.cmp(t)<0)x=I.neg(),g=o,v=C.neg(),E=O;else if(v&&++A===2)break;I=C,i=c,c=C,u=o,o=O,l=b,b=B}S=C.neg(),T=O;var M=v.sqr().add(E.sqr()),L=S.sqr().add(T.sqr());return L.cmp(M)>=0&&(S=x,T=g),v.negative&&(v=v.neg(),E=E.neg()),S.negative&&(S=S.neg(),T=T.neg()),[{a:v,b:E},{a:S,b:T}]};ShortCurve.prototype._endoSplit=function(a){var t=this.endo.basis,c=t[0],i=t[1],o=i.b.mul(a).divRound(this.n),b=c.b.neg().mul(a).divRound(this.n),u=o.mul(c.a),l=b.mul(i.a),x=o.mul(c.b),g=b.mul(i.b),v=a.sub(u).sub(l),E=x.add(g).neg();return{k1:v,k2:E}};ShortCurve.prototype.pointFromX=function(a,t){a=new BN$g(a,16),a.red||(a=a.toRed(this.red));var c=a.redSqr().redMul(a).redIAdd(a.redMul(this.a)).redIAdd(this.b),i=c.redSqrt();if(i.redSqr().redSub(c).cmp(this.zero)!==0)throw new Error("invalid point");var o=i.fromRed().isOdd();return(t&&!o||!t&&o)&&(i=i.redNeg()),this.point(a,i)};ShortCurve.prototype.validate=function(a){if(a.inf)return!0;var t=a.x,c=a.y,i=this.a.redMul(t),o=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return c.redSqr().redISub(o).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function(a,t,c){for(var i=this._endoWnafT1,o=this._endoWnafT2,b=0;b<a.length;b++){var u=this._endoSplit(t[b]),l=a[b],x=l._getBeta();u.k1.negative&&(u.k1.ineg(),l=l.neg(!0)),u.k2.negative&&(u.k2.ineg(),x=x.neg(!0)),i[b*2]=l,i[b*2+1]=x,o[b*2]=u.k1,o[b*2+1]=u.k2}for(var g=this._wnafMulAdd(1,i,o,b*2,c),v=0;v<b*2;v++)i[v]=null,o[v]=null;return g};function Point$4(e,a,t,c){base$2.BasePoint.call(this,e,"affine"),a===null&&t===null?(this.x=null,this.y=null,this.inf=!0):(this.x=new BN$g(a,16),this.y=new BN$g(t,16),c&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}inherits_browser$1(Point$4,base$2.BasePoint);ShortCurve.prototype.point=function(a,t,c){return new Point$4(this,a,t,c)};ShortCurve.prototype.pointFromJSON=function(a,t){return Point$4.fromJSON(this,a,t)};Point$4.prototype._getBeta=function(){if(this.curve.endo){var a=this.precomputed;if(a&&a.beta)return a.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(a){var c=this.curve,i=function(o){return c.point(o.x.redMul(c.endo.beta),o.y)};a.beta=t,t.precomputed={beta:null,naf:a.naf&&{wnd:a.naf.wnd,points:a.naf.points.map(i)},doubles:a.doubles&&{step:a.doubles.step,points:a.doubles.points.map(i)}}}return t}};Point$4.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]};Point$4.fromJSON=function(a,t,c){typeof t=="string"&&(t=JSON.parse(t));var i=a.point(t[0],t[1],c);if(!t[2])return i;function o(u){return a.point(u[0],u[1],c)}var b=t[2];return i.precomputed={beta:null,doubles:b.doubles&&{step:b.doubles.step,points:[i].concat(b.doubles.points.map(o))},naf:b.naf&&{wnd:b.naf.wnd,points:[i].concat(b.naf.points.map(o))}},i};Point$4.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};Point$4.prototype.isInfinity=function(){return this.inf};Point$4.prototype.add=function(a){if(this.inf)return a;if(a.inf)return this;if(this.eq(a))return this.dbl();if(this.neg().eq(a))return this.curve.point(null,null);if(this.x.cmp(a.x)===0)return this.curve.point(null,null);var t=this.y.redSub(a.y);t.cmpn(0)!==0&&(t=t.redMul(this.x.redSub(a.x).redInvm()));var c=t.redSqr().redISub(this.x).redISub(a.x),i=t.redMul(this.x.redSub(c)).redISub(this.y);return this.curve.point(c,i)};Point$4.prototype.dbl=function(){if(this.inf)return this;var a=this.y.redAdd(this.y);if(a.cmpn(0)===0)return this.curve.point(null,null);var t=this.curve.a,c=this.x.redSqr(),i=a.redInvm(),o=c.redAdd(c).redIAdd(c).redIAdd(t).redMul(i),b=o.redSqr().redISub(this.x.redAdd(this.x)),u=o.redMul(this.x.redSub(b)).redISub(this.y);return this.curve.point(b,u)};Point$4.prototype.getX=function(){return this.x.fromRed()};Point$4.prototype.getY=function(){return this.y.fromRed()};Point$4.prototype.mul=function(a){return a=new BN$g(a,16),this.isInfinity()?this:this._hasDoubles(a)?this.curve._fixedNafMul(this,a):this.curve.endo?this.curve._endoWnafMulAdd([this],[a]):this.curve._wnafMul(this,a)};Point$4.prototype.mulAdd=function(a,t,c){var i=[this,t],o=[a,c];return this.curve.endo?this.curve._endoWnafMulAdd(i,o):this.curve._wnafMulAdd(1,i,o,2)};Point$4.prototype.jmulAdd=function(a,t,c){var i=[this,t],o=[a,c];return this.curve.endo?this.curve._endoWnafMulAdd(i,o,!0):this.curve._wnafMulAdd(1,i,o,2,!0)};Point$4.prototype.eq=function(a){return this===a||this.inf===a.inf&&(this.inf||this.x.cmp(a.x)===0&&this.y.cmp(a.y)===0)};Point$4.prototype.neg=function(a){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(a&&this.precomputed){var c=this.precomputed,i=function(o){return o.neg()};t.precomputed={naf:c.naf&&{wnd:c.naf.wnd,points:c.naf.points.map(i)},doubles:c.doubles&&{step:c.doubles.step,points:c.doubles.points.map(i)}}}return t};Point$4.prototype.toJ=function(){if(this.inf)return this.curve.jpoint(null,null,null);var a=this.curve.jpoint(this.x,this.y,this.curve.one);return a};function JPoint(e,a,t,c){base$2.BasePoint.call(this,e,"jacobian"),a===null&&t===null&&c===null?(this.x=this.curve.one,this.y=this.curve.one,this.z=new BN$g(0)):(this.x=new BN$g(a,16),this.y=new BN$g(t,16),this.z=new BN$g(c,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}inherits_browser$1(JPoint,base$2.BasePoint);ShortCurve.prototype.jpoint=function(a,t,c){return new JPoint(this,a,t,c)};JPoint.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var a=this.z.redInvm(),t=a.redSqr(),c=this.x.redMul(t),i=this.y.redMul(t).redMul(a);return this.curve.point(c,i)};JPoint.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function(a){if(this.isInfinity())return a;if(a.isInfinity())return this;var t=a.z.redSqr(),c=this.z.redSqr(),i=this.x.redMul(t),o=a.x.redMul(c),b=this.y.redMul(t.redMul(a.z)),u=a.y.redMul(c.redMul(this.z)),l=i.redSub(o),x=b.redSub(u);if(l.cmpn(0)===0)return x.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var g=l.redSqr(),v=g.redMul(l),E=i.redMul(g),S=x.redSqr().redIAdd(v).redISub(E).redISub(E),T=x.redMul(E.redISub(S)).redISub(b.redMul(v)),I=this.z.redMul(a.z).redMul(l);return this.curve.jpoint(S,T,I)};JPoint.prototype.mixedAdd=function(a){if(this.isInfinity())return a.toJ();if(a.isInfinity())return this;var t=this.z.redSqr(),c=this.x,i=a.x.redMul(t),o=this.y,b=a.y.redMul(t).redMul(this.z),u=c.redSub(i),l=o.redSub(b);if(u.cmpn(0)===0)return l.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var x=u.redSqr(),g=x.redMul(u),v=c.redMul(x),E=l.redSqr().redIAdd(g).redISub(v).redISub(v),S=l.redMul(v.redISub(E)).redISub(o.redMul(g)),T=this.z.redMul(u);return this.curve.jpoint(E,S,T)};JPoint.prototype.dblp=function(a){if(a===0)return this;if(this.isInfinity())return this;if(!a)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var c=this;for(t=0;t<a;t++)c=c.dbl();return c}var i=this.curve.a,o=this.curve.tinv,b=this.x,u=this.y,l=this.z,x=l.redSqr().redSqr(),g=u.redAdd(u);for(t=0;t<a;t++){var v=b.redSqr(),E=g.redSqr(),S=E.redSqr(),T=v.redAdd(v).redIAdd(v).redIAdd(i.redMul(x)),I=b.redMul(E),A=T.redSqr().redISub(I.redAdd(I)),C=I.redISub(A),O=T.redMul(C);O=O.redIAdd(O).redISub(S);var R=g.redMul(l);t+1<a&&(x=x.redMul(S)),b=A,l=R,g=O}return this.curve.jpoint(b,g.redMul(o),l)};JPoint.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()};JPoint.prototype._zeroDbl=function(){var a,t,c;if(this.zOne){var i=this.x.redSqr(),o=this.y.redSqr(),b=o.redSqr(),u=this.x.redAdd(o).redSqr().redISub(i).redISub(b);u=u.redIAdd(u);var l=i.redAdd(i).redIAdd(i),x=l.redSqr().redISub(u).redISub(u),g=b.redIAdd(b);g=g.redIAdd(g),g=g.redIAdd(g),a=x,t=l.redMul(u.redISub(x)).redISub(g),c=this.y.redAdd(this.y)}else{var v=this.x.redSqr(),E=this.y.redSqr(),S=E.redSqr(),T=this.x.redAdd(E).redSqr().redISub(v).redISub(S);T=T.redIAdd(T);var I=v.redAdd(v).redIAdd(v),A=I.redSqr(),C=S.redIAdd(S);C=C.redIAdd(C),C=C.redIAdd(C),a=A.redISub(T).redISub(T),t=I.redMul(T.redISub(a)).redISub(C),c=this.y.redMul(this.z),c=c.redIAdd(c)}return this.curve.jpoint(a,t,c)};JPoint.prototype._threeDbl=function(){var a,t,c;if(this.zOne){var i=this.x.redSqr(),o=this.y.redSqr(),b=o.redSqr(),u=this.x.redAdd(o).redSqr().redISub(i).redISub(b);u=u.redIAdd(u);var l=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),x=l.redSqr().redISub(u).redISub(u);a=x;var g=b.redIAdd(b);g=g.redIAdd(g),g=g.redIAdd(g),t=l.redMul(u.redISub(x)).redISub(g),c=this.y.redAdd(this.y)}else{var v=this.z.redSqr(),E=this.y.redSqr(),S=this.x.redMul(E),T=this.x.redSub(v).redMul(this.x.redAdd(v));T=T.redAdd(T).redIAdd(T);var I=S.redIAdd(S);I=I.redIAdd(I);var A=I.redAdd(I);a=T.redSqr().redISub(A),c=this.y.redAdd(this.z).redSqr().redISub(E).redISub(v);var C=E.redSqr();C=C.redIAdd(C),C=C.redIAdd(C),C=C.redIAdd(C),t=T.redMul(I.redISub(a)).redISub(C)}return this.curve.jpoint(a,t,c)};JPoint.prototype._dbl=function(){var a=this.curve.a,t=this.x,c=this.y,i=this.z,o=i.redSqr().redSqr(),b=t.redSqr(),u=c.redSqr(),l=b.redAdd(b).redIAdd(b).redIAdd(a.redMul(o)),x=t.redAdd(t);x=x.redIAdd(x);var g=x.redMul(u),v=l.redSqr().redISub(g.redAdd(g)),E=g.redISub(v),S=u.redSqr();S=S.redIAdd(S),S=S.redIAdd(S),S=S.redIAdd(S);var T=l.redMul(E).redISub(S),I=c.redAdd(c).redMul(i);return this.curve.jpoint(v,T,I)};JPoint.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var a=this.x.redSqr(),t=this.y.redSqr(),c=this.z.redSqr(),i=t.redSqr(),o=a.redAdd(a).redIAdd(a),b=o.redSqr(),u=this.x.redAdd(t).redSqr().redISub(a).redISub(i);u=u.redIAdd(u),u=u.redAdd(u).redIAdd(u),u=u.redISub(b);var l=u.redSqr(),x=i.redIAdd(i);x=x.redIAdd(x),x=x.redIAdd(x),x=x.redIAdd(x);var g=o.redIAdd(u).redSqr().redISub(b).redISub(l).redISub(x),v=t.redMul(g);v=v.redIAdd(v),v=v.redIAdd(v);var E=this.x.redMul(l).redISub(v);E=E.redIAdd(E),E=E.redIAdd(E);var S=this.y.redMul(g.redMul(x.redISub(g)).redISub(u.redMul(l)));S=S.redIAdd(S),S=S.redIAdd(S),S=S.redIAdd(S);var T=this.z.redAdd(u).redSqr().redISub(c).redISub(l);return this.curve.jpoint(E,S,T)};JPoint.prototype.mul=function(a,t){return a=new BN$g(a,t),this.curve._wnafMul(this,a)};JPoint.prototype.eq=function(a){if(a.type==="affine")return this.eq(a.toJ());if(this===a)return!0;var t=this.z.redSqr(),c=a.z.redSqr();if(this.x.redMul(c).redISub(a.x.redMul(t)).cmpn(0)!==0)return!1;var i=t.redMul(this.z),o=c.redMul(a.z);return this.y.redMul(o).redISub(a.y.redMul(i)).cmpn(0)===0};JPoint.prototype.eqXToP=function(a){var t=this.z.redSqr(),c=a.toRed(this.curve.red).redMul(t);if(this.x.cmp(c)===0)return!0;for(var i=a.clone(),o=this.curve.redN.redMul(t);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(c.redIAdd(o),this.x.cmp(c)===0)return!0}};JPoint.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};JPoint.prototype.isInfinity=function(){return this.z.cmpn(0)===0};var curve_1=createCommonjsModule(function(e,a){var t=a;t.base=base$2,t.short=short_1,t.mont=null,t.edwards=null}),curves_1=createCommonjsModule(function(e,a){var t=a,c=utils_1$1$1.assert;function i(u){u.type==="short"?this.curve=new curve_1.short(u):u.type==="edwards"?this.curve=new curve_1.edwards(u):this.curve=new curve_1.mont(u),this.g=this.curve.g,this.n=this.curve.n,this.hash=u.hash,c(this.g.validate(),"Invalid curve"),c(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}t.PresetCurve=i;function o(u,l){Object.defineProperty(t,u,{configurable:!0,enumerable:!0,get:function(){var x=new i(l);return Object.defineProperty(t,u,{configurable:!0,enumerable:!0,value:x}),x}})}o("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:hash$6.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),o("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:hash$6.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),o("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:hash$6.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),o("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:hash$6.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),o("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:hash$6.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),o("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$6.sha256,gRed:!1,g:["9"]}),o("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:hash$6.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var b;try{b=null.crash()}catch{b=void 0}o("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:hash$6.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",b]})});function HmacDRBG(e){if(!(this instanceof HmacDRBG))return new HmacDRBG(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var a=utils_1$5.toArray(e.entropy,e.entropyEnc||"hex"),t=utils_1$5.toArray(e.nonce,e.nonceEnc||"hex"),c=utils_1$5.toArray(e.pers,e.persEnc||"hex");minimalisticAssert(a.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(a,t,c)}var hmacDrbg=HmacDRBG;HmacDRBG.prototype._init=function(a,t,c){var i=a.concat(t).concat(c);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var o=0;o<this.V.length;o++)this.K[o]=0,this.V[o]=1;this._update(i),this._reseed=1,this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function(){return new hash$6.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function(a){var t=this._hmac().update(this.V).update([0]);a&&(t=t.update(a)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),a&&(this.K=this._hmac().update(this.V).update([1]).update(a).digest(),this.V=this._hmac().update(this.V).digest())};HmacDRBG.prototype.reseed=function(a,t,c,i){typeof t!="string"&&(i=c,c=t,t=null),a=utils_1$5.toArray(a,t),c=utils_1$5.toArray(c,i),minimalisticAssert(a.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(a.concat(c||[])),this._reseed=1};HmacDRBG.prototype.generate=function(a,t,c,i){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");typeof t!="string"&&(i=c,c=t,t=null),c&&(c=utils_1$5.toArray(c,i||"hex"),this._update(c));for(var o=[];o.length<a;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var b=o.slice(0,a);return this._update(c),this._reseed++,utils_1$5.encode(b,t)};var assert$3$1=utils_1$1$1.assert;function KeyPair(e,a){this.ec=e,this.priv=null,this.pub=null,a.priv&&this._importPrivate(a.priv,a.privEnc),a.pub&&this._importPublic(a.pub,a.pubEnc)}var key=KeyPair;KeyPair.fromPublic=function(a,t,c){return t instanceof KeyPair?t:new KeyPair(a,{pub:t,pubEnc:c})};KeyPair.fromPrivate=function(a,t,c){return t instanceof KeyPair?t:new KeyPair(a,{priv:t,privEnc:c})};KeyPair.prototype.validate=function(){var a=this.getPublic();return a.isInfinity()?{result:!1,reason:"Invalid public key"}:a.validate()?a.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}};KeyPair.prototype.getPublic=function(a,t){return typeof a=="string"&&(t=a,a=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,a):this.pub};KeyPair.prototype.getPrivate=function(a){return a==="hex"?this.priv.toString(16,2):this.priv};KeyPair.prototype._importPrivate=function(a,t){this.priv=new BN$g(a,t||16),this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function(a,t){if(a.x||a.y){this.ec.curve.type==="mont"?assert$3$1(a.x,"Need x coordinate"):(this.ec.curve.type==="short"||this.ec.curve.type==="edwards")&&assert$3$1(a.x&&a.y,"Need both x and y coordinate"),this.pub=this.ec.curve.point(a.x,a.y);return}this.pub=this.ec.curve.decodePoint(a,t)};KeyPair.prototype.derive=function(a){return a.validate()||assert$3$1(a.validate(),"public point not validated"),a.mul(this.priv).getX()};KeyPair.prototype.sign=function(a,t,c){return this.ec.sign(a,this,t,c)};KeyPair.prototype.verify=function(a,t){return this.ec.verify(a,t,this)};KeyPair.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var assert$4$1=utils_1$1$1.assert;function Signature$2(e,a){if(e instanceof Signature$2)return e;this._importDER(e,a)||(assert$4$1(e.r&&e.s,"Signature without r or s"),this.r=new BN$g(e.r,16),this.s=new BN$g(e.s,16),e.recoveryParam===void 0?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}var signature$4=Signature$2;function Position(){this.place=0}function getLength$1(e,a){var t=e[a.place++];if(!(t&128))return t;var c=t&15;if(c===0||c>4)return!1;for(var i=0,o=0,b=a.place;o<c;o++,b++)i<<=8,i|=e[b],i>>>=0;return i<=127?!1:(a.place=b,i)}function rmPadding(e){for(var a=0,t=e.length-1;!e[a]&&!(e[a+1]&128)&&a<t;)a++;return a===0?e:e.slice(a)}Signature$2.prototype._importDER=function(a,t){a=utils_1$1$1.toArray(a,t);var c=new Position;if(a[c.place++]!==48)return!1;var i=getLength$1(a,c);if(i===!1||i+c.place!==a.length||a[c.place++]!==2)return!1;var o=getLength$1(a,c);if(o===!1)return!1;var b=a.slice(c.place,o+c.place);if(c.place+=o,a[c.place++]!==2)return!1;var u=getLength$1(a,c);if(u===!1||a.length!==u+c.place)return!1;var l=a.slice(c.place,u+c.place);if(b[0]===0)if(b[1]&128)b=b.slice(1);else return!1;if(l[0]===0)if(l[1]&128)l=l.slice(1);else return!1;return this.r=new BN$g(b),this.s=new BN$g(l),this.recoveryParam=null,!0};function constructLength(e,a){if(a<128){e.push(a);return}var t=1+(Math.log(a)/Math.LN2>>>3);for(e.push(t|128);--t;)e.push(a>>>(t<<3)&255);e.push(a)}Signature$2.prototype.toDER=function(a){var t=this.r.toArray(),c=this.s.toArray();for(t[0]&128&&(t=[0].concat(t)),c[0]&128&&(c=[0].concat(c)),t=rmPadding(t),c=rmPadding(c);!c[0]&&!(c[1]&128);)c=c.slice(1);var i=[2];constructLength(i,t.length),i=i.concat(t),i.push(2),constructLength(i,c.length);var o=i.concat(c),b=[48];return constructLength(b,o.length),b=b.concat(o),utils_1$1$1.encode(b,a)};var rand=function(){throw new Error("unsupported")},assert$5$1=utils_1$1$1.assert;function EC$3(e){if(!(this instanceof EC$3))return new EC$3(e);typeof e=="string"&&(assert$5$1(Object.prototype.hasOwnProperty.call(curves_1,e),"Unknown curve "+e),e=curves_1[e]),e instanceof curves_1.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}var ec$3=EC$3;EC$3.prototype.keyPair=function(a){return new key(this,a)};EC$3.prototype.keyFromPrivate=function(a,t){return key.fromPrivate(this,a,t)};EC$3.prototype.keyFromPublic=function(a,t){return key.fromPublic(this,a,t)};EC$3.prototype.genKeyPair=function(a){a||(a={});for(var t=new hmacDrbg({hash:this.hash,pers:a.pers,persEnc:a.persEnc||"utf8",entropy:a.entropy||rand(this.hash.hmacStrength),entropyEnc:a.entropy&&a.entropyEnc||"utf8",nonce:this.n.toArray()}),c=this.n.byteLength(),i=this.n.sub(new BN$g(2));;){var o=new BN$g(t.generate(c));if(!(o.cmp(i)>0))return o.iaddn(1),this.keyFromPrivate(o)}};EC$3.prototype._truncateToN=function(a,t){var c=a.byteLength()*8-this.n.bitLength();return c>0&&(a=a.ushrn(c)),!t&&a.cmp(this.n)>=0?a.sub(this.n):a};EC$3.prototype.sign=function(a,t,c,i){typeof c=="object"&&(i=c,c=null),i||(i={}),t=this.keyFromPrivate(t,c),a=this._truncateToN(new BN$g(a,16));for(var o=this.n.byteLength(),b=t.getPrivate().toArray("be",o),u=a.toArray("be",o),l=new hmacDrbg({hash:this.hash,entropy:b,nonce:u,pers:i.pers,persEnc:i.persEnc||"utf8"}),x=this.n.sub(new BN$g(1)),g=0;;g++){var v=i.k?i.k(g):new BN$g(l.generate(this.n.byteLength()));if(v=this._truncateToN(v,!0),!(v.cmpn(1)<=0||v.cmp(x)>=0)){var E=this.g.mul(v);if(!E.isInfinity()){var S=E.getX(),T=S.umod(this.n);if(T.cmpn(0)!==0){var I=v.invm(this.n).mul(T.mul(t.getPrivate()).iadd(a));if(I=I.umod(this.n),I.cmpn(0)!==0){var A=(E.getY().isOdd()?1:0)|(S.cmp(T)!==0?2:0);return i.canonical&&I.cmp(this.nh)>0&&(I=this.n.sub(I),A^=1),new signature$4({r:T,s:I,recoveryParam:A})}}}}}};EC$3.prototype.verify=function(a,t,c,i){a=this._truncateToN(new BN$g(a,16)),c=this.keyFromPublic(c,i),t=new signature$4(t,"hex");var o=t.r,b=t.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0||b.cmpn(1)<0||b.cmp(this.n)>=0)return!1;var u=b.invm(this.n),l=u.mul(a).umod(this.n),x=u.mul(o).umod(this.n),g;return this.curve._maxwellTrick?(g=this.g.jmulAdd(l,c.getPublic(),x),g.isInfinity()?!1:g.eqXToP(o)):(g=this.g.mulAdd(l,c.getPublic(),x),g.isInfinity()?!1:g.getX().umod(this.n).cmp(o)===0)};EC$3.prototype.recoverPubKey=function(e,a,t,c){assert$5$1((3&t)===t,"The recovery param is more than two bits"),a=new signature$4(a,c);var i=this.n,o=new BN$g(e),b=a.r,u=a.s,l=t&1,x=t>>1;if(b.cmp(this.curve.p.umod(this.curve.n))>=0&&x)throw new Error("Unable to find sencond key candinate");x?b=this.curve.pointFromX(b.add(this.curve.n),l):b=this.curve.pointFromX(b,l);var g=a.r.invm(i),v=i.sub(o).mul(g).umod(i),E=u.mul(g).umod(i);return this.g.mulAdd(v,b,E)};EC$3.prototype.getKeyRecoveryParam=function(e,a,t,c){if(a=new signature$4(a,c),a.recoveryParam!==null)return a.recoveryParam;for(var i=0;i<4;i++){var o;try{o=this.recoverPubKey(e,a,i)}catch{continue}if(o.eq(t))return i}throw new Error("Unable to find valid recovery factor")};var elliptic_1=createCommonjsModule(function(e,a){var t=a;t.version="6.5.4",t.utils=utils_1$1$1,t.rand=function(){throw new Error("unsupported")},t.curve=curve_1,t.curves=curves_1,t.ec=ec$3,t.eddsa=null}),EC$1$1=elliptic_1.ec;const version$e="signing-key/5.7.0",logger$e=new Logger(version$e);let _curve=null;function getCurve(){return _curve||(_curve=new EC$1$1("secp256k1")),_curve}class SigningKey{constructor(a){defineReadOnly(this,"curve","secp256k1"),defineReadOnly(this,"privateKey",hexlify(a)),hexDataLength(this.privateKey)!==32&&logger$e.throwArgumentError("invalid private key","privateKey","[[ REDACTED ]]");const t=getCurve().keyFromPrivate(arrayify(this.privateKey));defineReadOnly(this,"publicKey","0x"+t.getPublic(!1,"hex")),defineReadOnly(this,"compressedPublicKey","0x"+t.getPublic(!0,"hex")),defineReadOnly(this,"_isSigningKey",!0)}_addPoint(a){const t=getCurve().keyFromPublic(arrayify(this.publicKey)),c=getCurve().keyFromPublic(arrayify(a));return"0x"+t.pub.add(c.pub).encodeCompressed("hex")}signDigest(a){const t=getCurve().keyFromPrivate(arrayify(this.privateKey)),c=arrayify(a);c.length!==32&&logger$e.throwArgumentError("bad digest length","digest",a);const i=t.sign(c,{canonical:!0});return splitSignature({recoveryParam:i.recoveryParam,r:hexZeroPad("0x"+i.r.toString(16),32),s:hexZeroPad("0x"+i.s.toString(16),32)})}computeSharedSecret(a){const t=getCurve().keyFromPrivate(arrayify(this.privateKey)),c=getCurve().keyFromPublic(arrayify(computePublicKey(a)));return hexZeroPad("0x"+t.derive(c.getPublic()).toString(16),32)}static isSigningKey(a){return!!(a&&a._isSigningKey)}}function recoverPublicKey(e,a){const t=splitSignature(a),c={r:arrayify(t.r),s:arrayify(t.s)};return"0x"+getCurve().recoverPubKey(arrayify(e),c,t.recoveryParam).encode("hex",!1)}function computePublicKey(e,a){const t=arrayify(e);if(t.length===32){const c=new SigningKey(t);return a?"0x"+getCurve().keyFromPrivate(t).getPublic(!0,"hex"):c.publicKey}else{if(t.length===33)return a?hexlify(t):"0x"+getCurve().keyFromPublic(t).getPublic(!1,"hex");if(t.length===65)return a?"0x"+getCurve().keyFromPublic(t).getPublic(!0,"hex"):hexlify(t)}return logger$e.throwArgumentError("invalid public or private key","key","[REDACTED]")}const lib_esm$9=Object.freeze(Object.defineProperty({__proto__:null,SigningKey,computePublicKey,recoverPublicKey},Symbol.toStringTag,{value:"Module"})),version$d="transactions/5.7.0",logger$d=new Logger(version$d);var TransactionTypes;(function(e){e[e.legacy=0]="legacy",e[e.eip2930=1]="eip2930",e[e.eip1559=2]="eip1559"})(TransactionTypes||(TransactionTypes={}));function handleAddress(e){return e==="0x"?null:getAddress(e)}function handleNumber(e){return e==="0x"?Zero$2:BigNumber$1.from(e)}const transactionFields=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],allowedTransactionKeys$1={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};function computeAddress(e){const a=computePublicKey(e);return getAddress(hexDataSlice(keccak256$1(hexDataSlice(a,1)),12))}function recoverAddress(e,a){return computeAddress(recoverPublicKey(arrayify(e),a))}function formatNumber(e,a){const t=stripZeros(BigNumber$1.from(e).toHexString());return t.length>32&&logger$d.throwArgumentError("invalid length for "+a,"transaction:"+a,e),t}function accessSetify(e,a){return{address:getAddress(e),storageKeys:(a||[]).map((t,c)=>(hexDataLength(t)!==32&&logger$d.throwArgumentError("invalid access list storageKey",`accessList[${e}:${c}]`,t),t.toLowerCase()))}}function accessListify(e){if(Array.isArray(e))return e.map((t,c)=>Array.isArray(t)?(t.length>2&&logger$d.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${c}]`,t),accessSetify(t[0],t[1])):accessSetify(t.address,t.storageKeys));const a=Object.keys(e).map(t=>{const c=e[t].reduce((i,o)=>(i[o]=!0,i),{});return accessSetify(t,Object.keys(c).sort())});return a.sort((t,c)=>t.address.localeCompare(c.address)),a}function formatAccessList(e){return accessListify(e).map(a=>[a.address,a.storageKeys])}function _serializeEip1559(e,a){if(e.gasPrice!=null){const c=BigNumber$1.from(e.gasPrice),i=BigNumber$1.from(e.maxFeePerGas||0);c.eq(i)||logger$d.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:c,maxFeePerGas:i})}const t=[formatNumber(e.chainId||0,"chainId"),formatNumber(e.nonce||0,"nonce"),formatNumber(e.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(e.maxFeePerGas||0,"maxFeePerGas"),formatNumber(e.gasLimit||0,"gasLimit"),e.to!=null?getAddress(e.to):"0x",formatNumber(e.value||0,"value"),e.data||"0x",formatAccessList(e.accessList||[])];if(a){const c=splitSignature(a);t.push(formatNumber(c.recoveryParam,"recoveryParam")),t.push(stripZeros(c.r)),t.push(stripZeros(c.s))}return hexConcat(["0x02",encode$t(t)])}function _serializeEip2930(e,a){const t=[formatNumber(e.chainId||0,"chainId"),formatNumber(e.nonce||0,"nonce"),formatNumber(e.gasPrice||0,"gasPrice"),formatNumber(e.gasLimit||0,"gasLimit"),e.to!=null?getAddress(e.to):"0x",formatNumber(e.value||0,"value"),e.data||"0x",formatAccessList(e.accessList||[])];if(a){const c=splitSignature(a);t.push(formatNumber(c.recoveryParam,"recoveryParam")),t.push(stripZeros(c.r)),t.push(stripZeros(c.s))}return hexConcat(["0x01",encode$t(t)])}function _serialize(e,a){checkProperties(e,allowedTransactionKeys$1);const t=[];transactionFields.forEach(function(b){let u=e[b.name]||[];const l={};b.numeric&&(l.hexPad="left"),u=arrayify(hexlify(u,l)),b.length&&u.length!==b.length&&u.length>0&&logger$d.throwArgumentError("invalid length for "+b.name,"transaction:"+b.name,u),b.maxLength&&(u=stripZeros(u),u.length>b.maxLength&&logger$d.throwArgumentError("invalid length for "+b.name,"transaction:"+b.name,u)),t.push(hexlify(u))});let c=0;if(e.chainId!=null?(c=e.chainId,typeof c!="number"&&logger$d.throwArgumentError("invalid transaction.chainId","transaction",e)):a&&!isBytesLike(a)&&a.v>28&&(c=Math.floor((a.v-35)/2)),c!==0&&(t.push(hexlify(c)),t.push("0x"),t.push("0x")),!a)return encode$t(t);const i=splitSignature(a);let o=27+i.recoveryParam;return c!==0?(t.pop(),t.pop(),t.pop(),o+=c*2+8,i.v>28&&i.v!==o&&logger$d.throwArgumentError("transaction.chainId/signature.v mismatch","signature",a)):i.v!==o&&logger$d.throwArgumentError("transaction.chainId/signature.v mismatch","signature",a),t.push(hexlify(o)),t.push(stripZeros(arrayify(i.r))),t.push(stripZeros(arrayify(i.s))),encode$t(t)}function serialize(e,a){if(e.type==null||e.type===0)return e.accessList!=null&&logger$d.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",e),_serialize(e,a);switch(e.type){case 1:return _serializeEip2930(e,a);case 2:return _serializeEip1559(e,a)}return logger$d.throwError(`unsupported transaction type: ${e.type}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:e.type})}function _parseEipSignature(e,a,t){try{const c=handleNumber(a[0]).toNumber();if(c!==0&&c!==1)throw new Error("bad recid");e.v=c}catch{logger$d.throwArgumentError("invalid v for transaction type: 1","v",a[0])}e.r=hexZeroPad(a[1],32),e.s=hexZeroPad(a[2],32);try{const c=keccak256$1(t(e));e.from=recoverAddress(c,{r:e.r,s:e.s,recoveryParam:e.v})}catch{}}function _parseEip1559(e){const a=decode$s(e.slice(1));a.length!==9&&a.length!==12&&logger$d.throwArgumentError("invalid component count for transaction type: 2","payload",hexlify(e));const t=handleNumber(a[2]),c=handleNumber(a[3]),i={type:2,chainId:handleNumber(a[0]).toNumber(),nonce:handleNumber(a[1]).toNumber(),maxPriorityFeePerGas:t,maxFeePerGas:c,gasPrice:null,gasLimit:handleNumber(a[4]),to:handleAddress(a[5]),value:handleNumber(a[6]),data:a[7],accessList:accessListify(a[8])};return a.length===9||(i.hash=keccak256$1(e),_parseEipSignature(i,a.slice(9),_serializeEip1559)),i}function _parseEip2930(e){const a=decode$s(e.slice(1));a.length!==8&&a.length!==11&&logger$d.throwArgumentError("invalid component count for transaction type: 1","payload",hexlify(e));const t={type:1,chainId:handleNumber(a[0]).toNumber(),nonce:handleNumber(a[1]).toNumber(),gasPrice:handleNumber(a[2]),gasLimit:handleNumber(a[3]),to:handleAddress(a[4]),value:handleNumber(a[5]),data:a[6],accessList:accessListify(a[7])};return a.length===8||(t.hash=keccak256$1(e),_parseEipSignature(t,a.slice(8),_serializeEip2930)),t}function _parse(e){const a=decode$s(e);a.length!==9&&a.length!==6&&logger$d.throwArgumentError("invalid raw transaction","rawTransaction",e);const t={nonce:handleNumber(a[0]).toNumber(),gasPrice:handleNumber(a[1]),gasLimit:handleNumber(a[2]),to:handleAddress(a[3]),value:handleNumber(a[4]),data:a[5],chainId:0};if(a.length===6)return t;try{t.v=BigNumber$1.from(a[6]).toNumber()}catch{return t}if(t.r=hexZeroPad(a[7],32),t.s=hexZeroPad(a[8],32),BigNumber$1.from(t.r).isZero()&&BigNumber$1.from(t.s).isZero())t.chainId=t.v,t.v=0;else{t.chainId=Math.floor((t.v-35)/2),t.chainId<0&&(t.chainId=0);let c=t.v-27;const i=a.slice(0,6);t.chainId!==0&&(i.push(hexlify(t.chainId)),i.push("0x"),i.push("0x"),c-=t.chainId*2+8);const o=keccak256$1(encode$t(i));try{t.from=recoverAddress(o,{r:hexlify(t.r),s:hexlify(t.s),recoveryParam:c})}catch{}t.hash=keccak256$1(e)}return t.type=null,t}function parse$5(e){const a=arrayify(e);if(a[0]>127)return _parse(a);switch(a[0]){case 1:return _parseEip2930(a);case 2:return _parseEip1559(a)}return logger$d.throwError(`unsupported transaction type: ${a[0]}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:"parseTransaction",transactionType:a[0]})}const lib_esm$8=Object.freeze(Object.defineProperty({__proto__:null,get TransactionTypes(){return TransactionTypes},accessListify,computeAddress,parse:parse$5,recoverAddress,serialize},Symbol.toStringTag,{value:"Module"}));class BaseX{constructor(a){defineReadOnly(this,"alphabet",a),defineReadOnly(this,"base",a.length),defineReadOnly(this,"_alphabetMap",{}),defineReadOnly(this,"_leader",a.charAt(0));for(let t=0;t<a.length;t++)this._alphabetMap[a.charAt(t)]=t}encode(a){let t=arrayify(a);if(t.length===0)return"";let c=[0];for(let o=0;o<t.length;++o){let b=t[o];for(let u=0;u<c.length;++u)b+=c[u]<<8,c[u]=b%this.base,b=b/this.base|0;for(;b>0;)c.push(b%this.base),b=b/this.base|0}let i="";for(let o=0;t[o]===0&&o<t.length-1;++o)i+=this._leader;for(let o=c.length-1;o>=0;--o)i+=this.alphabet[c[o]];return i}decode(a){if(typeof a!="string")throw new TypeError("Expected String");let t=[];if(a.length===0)return new Uint8Array(t);t.push(0);for(let c=0;c<a.length;c++){let i=this._alphabetMap[a[c]];if(i===void 0)throw new Error("Non-base"+this.base+" character");let o=i;for(let b=0;b<t.length;++b)o+=t[b]*this.base,t[b]=o&255,o>>=8;for(;o>0;)t.push(o&255),o>>=8}for(let c=0;a[c]===this._leader&&c<a.length-1;++c)t.push(0);return arrayify(new Uint8Array(t.reverse()))}}const Base32=new BaseX("abcdefghijklmnopqrstuvwxyz234567"),Base58$2=new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),lib_esm$7=Object.freeze(Object.defineProperty({__proto__:null,Base32,Base58:Base58$2,BaseX},Symbol.toStringTag,{value:"Module"})),lib_esm$6=Object.freeze(Object.defineProperty({__proto__:null,get SupportedAlgorithm(){return SupportedAlgorithm},computeHmac,ripemd160:ripemd160$2,sha256:sha256$5,sha512:sha512$3},Symbol.toStringTag,{value:"Module"}));function pbkdf2$6(e,a,t,c,i){e=arrayify(e),a=arrayify(a);let o,b=1;const u=new Uint8Array(c),l=new Uint8Array(a.length+4);l.set(a);let x,g;for(let v=1;v<=b;v++){l[a.length]=v>>24&255,l[a.length+1]=v>>16&255,l[a.length+2]=v>>8&255,l[a.length+3]=v&255;let E=arrayify(computeHmac(i,e,l));o||(o=E.length,g=new Uint8Array(o),b=Math.ceil(c/o),x=c-(b-1)*o),g.set(E);for(let I=1;I<t;I++){E=arrayify(computeHmac(i,e,E));for(let A=0;A<o;A++)g[A]^=E[A]}const S=(v-1)*o,T=v===b?x:o;u.set(arrayify(g).slice(0,T),S)}return hexlify(u)}const version$c="wordlists/5.7.0",logger$c=new Logger(version$c);class Wordlist{constructor(a){logger$c.checkAbstract(new.target,Wordlist),defineReadOnly(this,"locale",a)}split(a){return a.toLowerCase().split(/ +/g)}join(a){return a.join(" ")}static check(a){const t=[];for(let c=0;c<2048;c++){const i=a.getWord(c);if(c!==a.getWordIndex(i))return"0x";t.push(i)}return id(t.join(`
`)+`
`)}static register(a,t){t||(t=a.locale)}}const words$1="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let wordlist=null;function loadWords(e){if(wordlist==null&&(wordlist=words$1.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),Wordlist.check(e)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))throw wordlist=null,new Error("BIP39 Wordlist for en (English) FAILED")}class LangEn extends Wordlist{constructor(){super("en")}getWord(a){return loadWords(this),wordlist[a]}getWordIndex(a){return loadWords(this),wordlist.indexOf(a)}}const langEn=new LangEn;Wordlist.register(langEn);const wordlists$2={en:langEn},version$b="hdnode/5.7.0",logger$b=new Logger(version$b),N=BigNumber$1.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),MasterSecret=toUtf8Bytes("Bitcoin seed"),HardenedBit=2147483648;function getUpperMask(e){return(1<<e)-1<<8-e}function getLowerMask(e){return(1<<e)-1}function bytes32(e){return hexZeroPad(hexlify(e),32)}function base58check$1(e){return Base58$2.encode(concat$4([e,hexDataSlice(sha256$5(sha256$5(e)),0,4)]))}function getWordlist(e){if(e==null)return wordlists$2.en;if(typeof e=="string"){const a=wordlists$2[e];return a==null&&logger$b.throwArgumentError("unknown locale","wordlist",e),a}return e}const _constructorGuard$1={},defaultPath="m/44'/60'/0'/0/0";class HDNode{constructor(a,t,c,i,o,b,u,l){if(a!==_constructorGuard$1)throw new Error("HDNode constructor cannot be called directly");if(t){const x=new SigningKey(t);defineReadOnly(this,"privateKey",x.privateKey),defineReadOnly(this,"publicKey",x.compressedPublicKey)}else defineReadOnly(this,"privateKey",null),defineReadOnly(this,"publicKey",hexlify(c));defineReadOnly(this,"parentFingerprint",i),defineReadOnly(this,"fingerprint",hexDataSlice(ripemd160$2(sha256$5(this.publicKey)),0,4)),defineReadOnly(this,"address",computeAddress(this.publicKey)),defineReadOnly(this,"chainCode",o),defineReadOnly(this,"index",b),defineReadOnly(this,"depth",u),l==null?(defineReadOnly(this,"mnemonic",null),defineReadOnly(this,"path",null)):typeof l=="string"?(defineReadOnly(this,"mnemonic",null),defineReadOnly(this,"path",l)):(defineReadOnly(this,"mnemonic",l),defineReadOnly(this,"path",l.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return base58check$1(concat$4([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",hexlify(this.depth),this.parentFingerprint,hexZeroPad(hexlify(this.index),4),this.chainCode,this.privateKey!=null?concat$4(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new HDNode(_constructorGuard$1,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(a){if(a>4294967295)throw new Error("invalid index - "+String(a));let t=this.path;t&&(t+="/"+(a&~HardenedBit));const c=new Uint8Array(37);if(a&HardenedBit){if(!this.privateKey)throw new Error("cannot derive child of neutered node");c.set(arrayify(this.privateKey),1),t&&(t+="'")}else c.set(arrayify(this.publicKey));for(let v=24;v>=0;v-=8)c[33+(v>>3)]=a>>24-v&255;const i=arrayify(computeHmac(SupportedAlgorithm.sha512,this.chainCode,c)),o=i.slice(0,32),b=i.slice(32);let u=null,l=null;this.privateKey?u=bytes32(BigNumber$1.from(o).add(this.privateKey).mod(N)):l=new SigningKey(hexlify(o))._addPoint(this.publicKey);let x=t;const g=this.mnemonic;return g&&(x=Object.freeze({phrase:g.phrase,path:t,locale:g.locale||"en"})),new HDNode(_constructorGuard$1,u,l,this.fingerprint,bytes32(b),a,this.depth+1,x)}derivePath(a){const t=a.split("/");if(t.length===0||t[0]==="m"&&this.depth!==0)throw new Error("invalid path - "+a);t[0]==="m"&&t.shift();let c=this;for(let i=0;i<t.length;i++){const o=t[i];if(o.match(/^[0-9]+'$/)){const b=parseInt(o.substring(0,o.length-1));if(b>=HardenedBit)throw new Error("invalid path index - "+o);c=c._derive(HardenedBit+b)}else if(o.match(/^[0-9]+$/)){const b=parseInt(o);if(b>=HardenedBit)throw new Error("invalid path index - "+o);c=c._derive(b)}else throw new Error("invalid path component - "+o)}return c}static _fromSeed(a,t){const c=arrayify(a);if(c.length<16||c.length>64)throw new Error("invalid seed");const i=arrayify(computeHmac(SupportedAlgorithm.sha512,MasterSecret,c));return new HDNode(_constructorGuard$1,bytes32(i.slice(0,32)),null,"0x00000000",bytes32(i.slice(32)),0,0,t)}static fromMnemonic(a,t,c){return c=getWordlist(c),a=entropyToMnemonic$2(mnemonicToEntropy$2(a,c),c),HDNode._fromSeed(mnemonicToSeed$2(a,t),{phrase:a,path:"m",locale:c.locale})}static fromSeed(a){return HDNode._fromSeed(a,null)}static fromExtendedKey(a){const t=Base58$2.decode(a);(t.length!==82||base58check$1(t.slice(0,78))!==a)&&logger$b.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const c=t[4],i=hexlify(t.slice(5,9)),o=parseInt(hexlify(t.slice(9,13)).substring(2),16),b=hexlify(t.slice(13,45)),u=t.slice(45,78);switch(hexlify(t.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new HDNode(_constructorGuard$1,null,hexlify(u),i,b,o,c,null);case"0x0488ade4":case"0x04358394 ":if(u[0]!==0)break;return new HDNode(_constructorGuard$1,hexlify(u.slice(1)),null,i,b,o,c,null)}return logger$b.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function mnemonicToSeed$2(e,a){a||(a="");const t=toUtf8Bytes("mnemonic"+a,UnicodeNormalizationForm.NFKD);return pbkdf2$6(toUtf8Bytes(e,UnicodeNormalizationForm.NFKD),t,2048,64,"sha512")}function mnemonicToEntropy$2(e,a){a=getWordlist(a),logger$b.checkNormalize();const t=a.split(e);if(t.length%3!==0)throw new Error("invalid mnemonic");const c=arrayify(new Uint8Array(Math.ceil(11*t.length/8)));let i=0;for(let x=0;x<t.length;x++){let g=a.getWordIndex(t[x].normalize("NFKD"));if(g===-1)throw new Error("invalid mnemonic");for(let v=0;v<11;v++)g&1<<10-v&&(c[i>>3]|=1<<7-i%8),i++}const o=32*t.length/3,b=t.length/3,u=getUpperMask(b);if((arrayify(sha256$5(c.slice(0,o/8)))[0]&u)!==(c[c.length-1]&u))throw new Error("invalid checksum");return hexlify(c.slice(0,o/8))}function entropyToMnemonic$2(e,a){if(a=getWordlist(a),e=arrayify(e),e.length%4!==0||e.length<16||e.length>32)throw new Error("invalid entropy");const t=[0];let c=11;for(let b=0;b<e.length;b++)c>8?(t[t.length-1]<<=8,t[t.length-1]|=e[b],c-=8):(t[t.length-1]<<=c,t[t.length-1]|=e[b]>>8-c,t.push(e[b]&getLowerMask(8-c)),c+=3);const i=e.length/4,o=arrayify(sha256$5(e))[0]&getUpperMask(i);return t[t.length-1]<<=i,t[t.length-1]|=o>>8-i,a.join(t.map(b=>a.getWord(b)))}function isValidMnemonic(e,a){try{return mnemonicToEntropy$2(e,a),!0}catch{}return!1}function getAccountPath(e){return(typeof e!="number"||e<0||e>=HardenedBit||e%1)&&logger$b.throwArgumentError("invalid account index","index",e),`m/44'/60'/${e}'/0/0`}const lib_esm$5=Object.freeze(Object.defineProperty({__proto__:null,HDNode,defaultPath,entropyToMnemonic:entropyToMnemonic$2,getAccountPath,isValidMnemonic,mnemonicToEntropy:mnemonicToEntropy$2,mnemonicToSeed:mnemonicToSeed$2},Symbol.toStringTag,{value:"Module"})),version$a="random/5.7.0",logger$a=new Logger(version$a);function getGlobal(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof _global<"u")return _global;throw new Error("unable to locate global object")}const anyGlobal=getGlobal();let crypto$4=anyGlobal.crypto||anyGlobal.msCrypto;(!crypto$4||!crypto$4.getRandomValues)&&(logger$a.warn("WARNING: Missing strong random number source"),crypto$4={getRandomValues:function(e){return logger$a.throwError("no secure random source avaialble",Logger.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});function randomBytes$4(e){(e<=0||e>1024||e%1||e!=e)&&logger$a.throwArgumentError("invalid length","length",e);const a=new Uint8Array(e);return crypto$4.getRandomValues(a),arrayify(a)}function shuffled(e){e=e.slice();for(let a=e.length-1;a>0;a--){const t=Math.floor(Math.random()*(a+1)),c=e[a];e[a]=e[t],e[t]=c}return e}const lib_esm$4=Object.freeze(Object.defineProperty({__proto__:null,randomBytes:randomBytes$4,shuffled},Symbol.toStringTag,{value:"Module"}));var aesJsExports={},aesJs={get exports(){return aesJsExports},set exports(e){aesJsExports=e}};(function(e,a){(function(t){function c(J){return parseInt(J)===J}function i(J){if(!c(J.length))return!1;for(var ce=0;ce<J.length;ce++)if(!c(J[ce])||J[ce]<0||J[ce]>255)return!1;return!0}function o(J,ce){if(J.buffer&&ArrayBuffer.isView(J)&&J.name==="Uint8Array")return ce&&(J.slice?J=J.slice():J=Array.prototype.slice.call(J)),J;if(Array.isArray(J)){if(!i(J))throw new Error("Array contains invalid value: "+J);return new Uint8Array(J)}if(c(J.length)&&i(J))return new Uint8Array(J);throw new Error("unsupported array-like object")}function b(J){return new Uint8Array(J)}function u(J,ce,re,ie,fe){(ie!=null||fe!=null)&&(J.slice?J=J.slice(ie,fe):J=Array.prototype.slice.call(J,ie,fe)),ce.set(J,re)}var l=function(){function J(re){var ie=[],fe=0;for(re=encodeURI(re);fe<re.length;){var pe=re.charCodeAt(fe++);pe===37?(ie.push(parseInt(re.substr(fe,2),16)),fe+=2):ie.push(pe)}return o(ie)}function ce(re){for(var ie=[],fe=0;fe<re.length;){var pe=re[fe];pe<128?(ie.push(String.fromCharCode(pe)),fe++):pe>191&&pe<224?(ie.push(String.fromCharCode((pe&31)<<6|re[fe+1]&63)),fe+=2):(ie.push(String.fromCharCode((pe&15)<<12|(re[fe+1]&63)<<6|re[fe+2]&63)),fe+=3)}return ie.join("")}return{toBytes:J,fromBytes:ce}}(),x=function(){function J(ie){for(var fe=[],pe=0;pe<ie.length;pe+=2)fe.push(parseInt(ie.substr(pe,2),16));return fe}var ce="0123456789abcdef";function re(ie){for(var fe=[],pe=0;pe<ie.length;pe++){var Oe=ie[pe];fe.push(ce[(Oe&240)>>4]+ce[Oe&15])}return fe.join("")}return{toBytes:J,fromBytes:re}}(),g={16:10,24:12,32:14},v=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],E=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],S=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],T=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],I=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],A=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],C=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],O=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],R=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],B=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],M=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],L=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],ee=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],z=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],oe=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function W(J){for(var ce=[],re=0;re<J.length;re+=4)ce.push(J[re]<<24|J[re+1]<<16|J[re+2]<<8|J[re+3]);return ce}var P=function(J){if(!(this instanceof P))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:o(J,!0)}),this._prepare()};P.prototype._prepare=function(){var J=g[this.key.length];if(J==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var ce=0;ce<=J;ce++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var re=(J+1)*4,ie=this.key.length/4,fe=W(this.key),pe,ce=0;ce<ie;ce++)pe=ce>>2,this._Ke[pe][ce%4]=fe[ce],this._Kd[J-pe][ce%4]=fe[ce];for(var Oe=0,Se=ie,Pe;Se<re;){if(Pe=fe[ie-1],fe[0]^=E[Pe>>16&255]<<24^E[Pe>>8&255]<<16^E[Pe&255]<<8^E[Pe>>24&255]^v[Oe]<<24,Oe+=1,ie!=8)for(var ce=1;ce<ie;ce++)fe[ce]^=fe[ce-1];else{for(var ce=1;ce<ie/2;ce++)fe[ce]^=fe[ce-1];Pe=fe[ie/2-1],fe[ie/2]^=E[Pe&255]^E[Pe>>8&255]<<8^E[Pe>>16&255]<<16^E[Pe>>24&255]<<24;for(var ce=ie/2+1;ce<ie;ce++)fe[ce]^=fe[ce-1]}for(var ce=0,a0,qe;ce<ie&&Se<re;)a0=Se>>2,qe=Se%4,this._Ke[a0][qe]=fe[ce],this._Kd[J-a0][qe]=fe[ce++],Se++}for(var a0=1;a0<J;a0++)for(var qe=0;qe<4;qe++)Pe=this._Kd[a0][qe],this._Kd[a0][qe]=L[Pe>>24&255]^ee[Pe>>16&255]^z[Pe>>8&255]^oe[Pe&255]},P.prototype.encrypt=function(J){if(J.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var ce=this._Ke.length-1,re=[0,0,0,0],ie=W(J),fe=0;fe<4;fe++)ie[fe]^=this._Ke[0][fe];for(var pe=1;pe<ce;pe++){for(var fe=0;fe<4;fe++)re[fe]=T[ie[fe]>>24&255]^I[ie[(fe+1)%4]>>16&255]^A[ie[(fe+2)%4]>>8&255]^C[ie[(fe+3)%4]&255]^this._Ke[pe][fe];ie=re.slice()}for(var Oe=b(16),Se,fe=0;fe<4;fe++)Se=this._Ke[ce][fe],Oe[4*fe]=(E[ie[fe]>>24&255]^Se>>24)&255,Oe[4*fe+1]=(E[ie[(fe+1)%4]>>16&255]^Se>>16)&255,Oe[4*fe+2]=(E[ie[(fe+2)%4]>>8&255]^Se>>8)&255,Oe[4*fe+3]=(E[ie[(fe+3)%4]&255]^Se)&255;return Oe},P.prototype.decrypt=function(J){if(J.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var ce=this._Kd.length-1,re=[0,0,0,0],ie=W(J),fe=0;fe<4;fe++)ie[fe]^=this._Kd[0][fe];for(var pe=1;pe<ce;pe++){for(var fe=0;fe<4;fe++)re[fe]=O[ie[fe]>>24&255]^R[ie[(fe+3)%4]>>16&255]^B[ie[(fe+2)%4]>>8&255]^M[ie[(fe+1)%4]&255]^this._Kd[pe][fe];ie=re.slice()}for(var Oe=b(16),Se,fe=0;fe<4;fe++)Se=this._Kd[ce][fe],Oe[4*fe]=(S[ie[fe]>>24&255]^Se>>24)&255,Oe[4*fe+1]=(S[ie[(fe+3)%4]>>16&255]^Se>>16)&255,Oe[4*fe+2]=(S[ie[(fe+2)%4]>>8&255]^Se>>8)&255,Oe[4*fe+3]=(S[ie[(fe+1)%4]&255]^Se)&255;return Oe};var D=function(J){if(!(this instanceof D))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new P(J)};D.prototype.encrypt=function(J){if(J=o(J),J.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var ce=b(J.length),re=b(16),ie=0;ie<J.length;ie+=16)u(J,re,0,ie,ie+16),re=this._aes.encrypt(re),u(re,ce,ie);return ce},D.prototype.decrypt=function(J){if(J=o(J),J.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var ce=b(J.length),re=b(16),ie=0;ie<J.length;ie+=16)u(J,re,0,ie,ie+16),re=this._aes.decrypt(re),u(re,ce,ie);return ce};var q=function(J,ce){if(!(this instanceof q))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!ce)ce=b(16);else if(ce.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=o(ce,!0),this._aes=new P(J)};q.prototype.encrypt=function(J){if(J=o(J),J.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var ce=b(J.length),re=b(16),ie=0;ie<J.length;ie+=16){u(J,re,0,ie,ie+16);for(var fe=0;fe<16;fe++)re[fe]^=this._lastCipherblock[fe];this._lastCipherblock=this._aes.encrypt(re),u(this._lastCipherblock,ce,ie)}return ce},q.prototype.decrypt=function(J){if(J=o(J),J.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var ce=b(J.length),re=b(16),ie=0;ie<J.length;ie+=16){u(J,re,0,ie,ie+16),re=this._aes.decrypt(re);for(var fe=0;fe<16;fe++)ce[ie+fe]=re[fe]^this._lastCipherblock[fe];u(J,this._lastCipherblock,0,ie,ie+16)}return ce};var Y=function(J,ce,re){if(!(this instanceof Y))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!ce)ce=b(16);else if(ce.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");re||(re=1),this.segmentSize=re,this._shiftRegister=o(ce,!0),this._aes=new P(J)};Y.prototype.encrypt=function(J){if(J.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var ce=o(J,!0),re,ie=0;ie<ce.length;ie+=this.segmentSize){re=this._aes.encrypt(this._shiftRegister);for(var fe=0;fe<this.segmentSize;fe++)ce[ie+fe]^=re[fe];u(this._shiftRegister,this._shiftRegister,0,this.segmentSize),u(ce,this._shiftRegister,16-this.segmentSize,ie,ie+this.segmentSize)}return ce},Y.prototype.decrypt=function(J){if(J.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var ce=o(J,!0),re,ie=0;ie<ce.length;ie+=this.segmentSize){re=this._aes.encrypt(this._shiftRegister);for(var fe=0;fe<this.segmentSize;fe++)ce[ie+fe]^=re[fe];u(this._shiftRegister,this._shiftRegister,0,this.segmentSize),u(J,this._shiftRegister,16-this.segmentSize,ie,ie+this.segmentSize)}return ce};var U=function(J,ce){if(!(this instanceof U))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!ce)ce=b(16);else if(ce.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=o(ce,!0),this._lastPrecipherIndex=16,this._aes=new P(J)};U.prototype.encrypt=function(J){for(var ce=o(J,!0),re=0;re<ce.length;re++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),ce[re]^=this._lastPrecipher[this._lastPrecipherIndex++];return ce},U.prototype.decrypt=U.prototype.encrypt;var j=function(J){if(!(this instanceof j))throw Error("Counter must be instanitated with `new`");J!==0&&!J&&(J=1),typeof J=="number"?(this._counter=b(16),this.setValue(J)):this.setBytes(J)};j.prototype.setValue=function(J){if(typeof J!="number"||parseInt(J)!=J)throw new Error("invalid counter value (must be an integer)");for(var ce=15;ce>=0;--ce)this._counter[ce]=J%256,J=J>>8},j.prototype.setBytes=function(J){if(J=o(J,!0),J.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=J},j.prototype.increment=function(){for(var J=15;J>=0;J--)if(this._counter[J]===255)this._counter[J]=0;else{this._counter[J]++;break}};var Q=function(J,ce){if(!(this instanceof Q))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",ce instanceof j||(ce=new j(ce)),this._counter=ce,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new P(J)};Q.prototype.encrypt=function(J){for(var ce=o(J,!0),re=0;re<ce.length;re++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),ce[re]^=this._remainingCounter[this._remainingCounterIndex++];return ce},Q.prototype.decrypt=Q.prototype.encrypt;function X(J){J=o(J,!0);var ce=16-J.length%16,re=b(J.length+ce);u(J,re);for(var ie=J.length;ie<re.length;ie++)re[ie]=ce;return re}function F(J){if(J=o(J,!0),J.length<16)throw new Error("PKCS#7 invalid length");var ce=J[J.length-1];if(ce>16)throw new Error("PKCS#7 padding byte out of range");for(var re=J.length-ce,ie=0;ie<ce;ie++)if(J[re+ie]!==ce)throw new Error("PKCS#7 invalid padding byte");var fe=b(re);return u(J,fe,0,0,re),fe}var Z={AES:P,Counter:j,ModeOfOperation:{ecb:D,cbc:q,cfb:Y,ofb:U,ctr:Q},utils:{hex:x,utf8:l},padding:{pkcs7:{pad:X,strip:F}},_arrayTest:{coerceArray:o,createArray:b,copyArray:u}};e.exports=Z})()})(aesJs);const aes$1=aesJsExports,version$9="json-wallets/5.7.0";function looseArrayify(e){return typeof e=="string"&&e.substring(0,2)!=="0x"&&(e="0x"+e),arrayify(e)}function zpad(e,a){for(e=String(e);e.length<a;)e="0"+e;return e}function getPassword(e){return typeof e=="string"?toUtf8Bytes(e,UnicodeNormalizationForm.NFKC):arrayify(e)}function searchPath(e,a){let t=e;const c=a.toLowerCase().split("/");for(let i=0;i<c.length;i++){let o=null;for(const b in t)if(b.toLowerCase()===c[i]){o=t[b];break}if(o===null)return null;t=o}return t}function uuidV4(e){const a=arrayify(e);a[6]=a[6]&15|64,a[8]=a[8]&63|128;const t=hexlify(a);return[t.substring(2,10),t.substring(10,14),t.substring(14,18),t.substring(18,22),t.substring(22,34)].join("-")}const logger$9=new Logger(version$9);class CrowdsaleAccount extends Description{isCrowdsaleAccount(a){return!!(a&&a._isCrowdsaleAccount)}}function decrypt$4(e,a){const t=JSON.parse(e);a=getPassword(a);const c=getAddress(searchPath(t,"ethaddr")),i=looseArrayify(searchPath(t,"encseed"));(!i||i.length%16!==0)&&logger$9.throwArgumentError("invalid encseed","json",e);const o=arrayify(pbkdf2$6(a,a,2e3,32,"sha256")).slice(0,16),b=i.slice(0,16),u=i.slice(16),l=new aes$1.ModeOfOperation.cbc(o,b),x=aes$1.padding.pkcs7.strip(arrayify(l.decrypt(u)));let g="";for(let S=0;S<x.length;S++)g+=String.fromCharCode(x[S]);const v=toUtf8Bytes(g),E=keccak256$1(v);return new CrowdsaleAccount({_isCrowdsaleAccount:!0,address:c,privateKey:E})}function isCrowdsaleWallet(e){let a=null;try{a=JSON.parse(e)}catch{return!1}return a.encseed&&a.ethaddr}function isKeystoreWallet(e){let a=null;try{a=JSON.parse(e)}catch{return!1}return!(!a.version||parseInt(a.version)!==a.version||parseInt(a.version)!==3)}function getJsonWalletAddress(e){if(isCrowdsaleWallet(e))try{return getAddress(JSON.parse(e).ethaddr)}catch{return null}if(isKeystoreWallet(e))try{return getAddress(JSON.parse(e).address)}catch{return null}return null}var scryptExports={},scrypt$1={get exports(){return scryptExports},set exports(e){scryptExports=e}};(function(e,a){(function(t){function i(I){const A=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let C=1779033703,O=3144134277,R=1013904242,B=2773480762,M=1359893119,L=2600822924,ee=528734635,z=1541459225;const oe=new Uint32Array(64);function W(Q){let X=0,F=Q.length;for(;F>=64;){let Z=C,J=O,ce=R,re=B,ie=M,fe=L,pe=ee,Oe=z,Se,Pe,a0,qe,Ke;for(Pe=0;Pe<16;Pe++)a0=X+Pe*4,oe[Pe]=(Q[a0]&255)<<24|(Q[a0+1]&255)<<16|(Q[a0+2]&255)<<8|Q[a0+3]&255;for(Pe=16;Pe<64;Pe++)Se=oe[Pe-2],qe=(Se>>>17|Se<<32-17)^(Se>>>19|Se<<32-19)^Se>>>10,Se=oe[Pe-15],Ke=(Se>>>7|Se<<32-7)^(Se>>>18|Se<<32-18)^Se>>>3,oe[Pe]=(qe+oe[Pe-7]|0)+(Ke+oe[Pe-16]|0)|0;for(Pe=0;Pe<64;Pe++)qe=(((ie>>>6|ie<<32-6)^(ie>>>11|ie<<32-11)^(ie>>>25|ie<<32-25))+(ie&fe^~ie&pe)|0)+(Oe+(A[Pe]+oe[Pe]|0)|0)|0,Ke=((Z>>>2|Z<<32-2)^(Z>>>13|Z<<32-13)^(Z>>>22|Z<<32-22))+(Z&J^Z&ce^J&ce)|0,Oe=pe,pe=fe,fe=ie,ie=re+qe|0,re=ce,ce=J,J=Z,Z=qe+Ke|0;C=C+Z|0,O=O+J|0,R=R+ce|0,B=B+re|0,M=M+ie|0,L=L+fe|0,ee=ee+pe|0,z=z+Oe|0,X+=64,F-=64}}W(I);let P,D=I.length%64,q=I.length/536870912|0,Y=I.length<<3,U=D<56?56:120,j=I.slice(I.length-D,I.length);for(j.push(128),P=D+1;P<U;P++)j.push(0);return j.push(q>>>24&255),j.push(q>>>16&255),j.push(q>>>8&255),j.push(q>>>0&255),j.push(Y>>>24&255),j.push(Y>>>16&255),j.push(Y>>>8&255),j.push(Y>>>0&255),W(j),[C>>>24&255,C>>>16&255,C>>>8&255,C>>>0&255,O>>>24&255,O>>>16&255,O>>>8&255,O>>>0&255,R>>>24&255,R>>>16&255,R>>>8&255,R>>>0&255,B>>>24&255,B>>>16&255,B>>>8&255,B>>>0&255,M>>>24&255,M>>>16&255,M>>>8&255,M>>>0&255,L>>>24&255,L>>>16&255,L>>>8&255,L>>>0&255,ee>>>24&255,ee>>>16&255,ee>>>8&255,ee>>>0&255,z>>>24&255,z>>>16&255,z>>>8&255,z>>>0&255]}function o(I,A,C){I=I.length<=64?I:i(I);const O=64+A.length+4,R=new Array(O),B=new Array(64);let M,L=[];for(M=0;M<64;M++)R[M]=54;for(M=0;M<I.length;M++)R[M]^=I[M];for(M=0;M<A.length;M++)R[64+M]=A[M];for(M=O-4;M<O;M++)R[M]=0;for(M=0;M<64;M++)B[M]=92;for(M=0;M<I.length;M++)B[M]^=I[M];function ee(){for(let z=O-1;z>=O-4;z--){if(R[z]++,R[z]<=255)return;R[z]=0}}for(;C>=32;)ee(),L=L.concat(i(B.concat(i(R)))),C-=32;return C>0&&(ee(),L=L.concat(i(B.concat(i(R))).slice(0,C))),L}function b(I,A,C,O,R){let B;for(g(I,(2*C-1)*16,R,0,16),B=0;B<2*C;B++)x(I,B*16,R,16),l(R,O),g(R,0,I,A+B*16,16);for(B=0;B<C;B++)g(I,A+B*2*16,I,B*16,16);for(B=0;B<C;B++)g(I,A+(B*2+1)*16,I,(B+C)*16,16)}function u(I,A){return I<<A|I>>>32-A}function l(I,A){g(I,0,A,0,16);for(let C=8;C>0;C-=2)A[4]^=u(A[0]+A[12],7),A[8]^=u(A[4]+A[0],9),A[12]^=u(A[8]+A[4],13),A[0]^=u(A[12]+A[8],18),A[9]^=u(A[5]+A[1],7),A[13]^=u(A[9]+A[5],9),A[1]^=u(A[13]+A[9],13),A[5]^=u(A[1]+A[13],18),A[14]^=u(A[10]+A[6],7),A[2]^=u(A[14]+A[10],9),A[6]^=u(A[2]+A[14],13),A[10]^=u(A[6]+A[2],18),A[3]^=u(A[15]+A[11],7),A[7]^=u(A[3]+A[15],9),A[11]^=u(A[7]+A[3],13),A[15]^=u(A[11]+A[7],18),A[1]^=u(A[0]+A[3],7),A[2]^=u(A[1]+A[0],9),A[3]^=u(A[2]+A[1],13),A[0]^=u(A[3]+A[2],18),A[6]^=u(A[5]+A[4],7),A[7]^=u(A[6]+A[5],9),A[4]^=u(A[7]+A[6],13),A[5]^=u(A[4]+A[7],18),A[11]^=u(A[10]+A[9],7),A[8]^=u(A[11]+A[10],9),A[9]^=u(A[8]+A[11],13),A[10]^=u(A[9]+A[8],18),A[12]^=u(A[15]+A[14],7),A[13]^=u(A[12]+A[15],9),A[14]^=u(A[13]+A[12],13),A[15]^=u(A[14]+A[13],18);for(let C=0;C<16;++C)I[C]+=A[C]}function x(I,A,C,O){for(let R=0;R<O;R++)C[R]^=I[A+R]}function g(I,A,C,O,R){for(;R--;)C[O++]=I[A++]}function v(I){if(!I||typeof I.length!="number")return!1;for(let A=0;A<I.length;A++){const C=I[A];if(typeof C!="number"||C%1||C<0||C>=256)return!1}return!0}function E(I,A){if(typeof I!="number"||I%1)throw new Error("invalid "+A);return I}function S(I,A,C,O,R,B,M){if(C=E(C,"N"),O=E(O,"r"),R=E(R,"p"),B=E(B,"dkLen"),C===0||C&C-1)throw new Error("N must be power of 2");if(C>2147483647/128/O)throw new Error("N too large");if(O>2147483647/128/R)throw new Error("r too large");if(!v(I))throw new Error("password must be an array or buffer");if(I=Array.prototype.slice.call(I),!v(A))throw new Error("salt must be an array or buffer");A=Array.prototype.slice.call(A);let L=o(I,A,R*128*O);const ee=new Uint32Array(R*32*O);for(let ie=0;ie<ee.length;ie++){const fe=ie*4;ee[ie]=(L[fe+3]&255)<<24|(L[fe+2]&255)<<16|(L[fe+1]&255)<<8|(L[fe+0]&255)<<0}const z=new Uint32Array(64*O),oe=new Uint32Array(32*O*C),W=32*O,P=new Uint32Array(16),D=new Uint32Array(16),q=R*C*2;let Y=0,U=null,j=!1,Q=0,X=0,F,Z;const J=M?parseInt(1e3/O):4294967295,ce=typeof setImmediate<"u"?setImmediate:setTimeout,re=function(){if(j)return M(new Error("cancelled"),Y/q);let ie;switch(Q){case 0:Z=X*32*O,g(ee,Z,z,0,W),Q=1,F=0;case 1:ie=C-F,ie>J&&(ie=J);for(let pe=0;pe<ie;pe++)g(z,0,oe,(F+pe)*W,W),b(z,W,O,P,D);if(F+=ie,Y+=ie,M){const pe=parseInt(1e3*Y/q);if(pe!==U){if(j=M(null,Y/q),j)break;U=pe}}if(F<C)break;F=0,Q=2;case 2:ie=C-F,ie>J&&(ie=J);for(let pe=0;pe<ie;pe++){const Oe=(2*O-1)*16,Se=z[Oe]&C-1;x(oe,Se*W,z,W),b(z,W,O,P,D)}if(F+=ie,Y+=ie,M){const pe=parseInt(1e3*Y/q);if(pe!==U){if(j=M(null,Y/q),j)break;U=pe}}if(F<C)break;if(g(z,0,ee,Z,W),X++,X<R){Q=0;break}L=[];for(let pe=0;pe<ee.length;pe++)L.push(ee[pe]>>0&255),L.push(ee[pe]>>8&255),L.push(ee[pe]>>16&255),L.push(ee[pe]>>24&255);const fe=o(I,L,B);return M&&M(null,1,fe),fe}M&&ce(re)};if(!M)for(;;){const ie=re();if(ie!=null)return ie}re()}const T={scrypt:function(I,A,C,O,R,B,M){return new Promise(function(L,ee){let z=0;M&&M(0),S(I,A,C,O,R,B,function(oe,W,P){if(oe)ee(oe);else if(P)M&&z!==1&&M(1),L(new Uint8Array(P));else if(M&&W!==z)return z=W,M(W)})})},syncScrypt:function(I,A,C,O,R,B){return new Uint8Array(S(I,A,C,O,R,B))}};e.exports=T})()})(scrypt$1);const scrypt=scryptExports;var __awaiter$6=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$8=new Logger(version$9);function hasMnemonic$1(e){return e!=null&&e.mnemonic&&e.mnemonic.phrase}class KeystoreAccount extends Description{isKeystoreAccount(a){return!!(a&&a._isKeystoreAccount)}}function _decrypt(e,a,t){if(searchPath(e,"crypto/cipher")==="aes-128-ctr"){const i=looseArrayify(searchPath(e,"crypto/cipherparams/iv")),o=new aes$1.Counter(i),b=new aes$1.ModeOfOperation.ctr(a,o);return arrayify(b.decrypt(t))}return null}function _getAccount(e,a){const t=looseArrayify(searchPath(e,"crypto/ciphertext"));if(hexlify(keccak256$1(concat$4([a.slice(16,32),t]))).substring(2)!==searchPath(e,"crypto/mac").toLowerCase())throw new Error("invalid password");const i=_decrypt(e,a.slice(0,16),t);i||logger$8.throwError("unsupported cipher",Logger.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const o=a.slice(32,64),b=computeAddress(i);if(e.address){let l=e.address.toLowerCase();if(l.substring(0,2)!=="0x"&&(l="0x"+l),getAddress(l)!==b)throw new Error("address mismatch")}const u={_isKeystoreAccount:!0,address:b,privateKey:hexlify(i)};if(searchPath(e,"x-ethers/version")==="0.1"){const l=looseArrayify(searchPath(e,"x-ethers/mnemonicCiphertext")),x=looseArrayify(searchPath(e,"x-ethers/mnemonicCounter")),g=new aes$1.Counter(x),v=new aes$1.ModeOfOperation.ctr(o,g),E=searchPath(e,"x-ethers/path")||defaultPath,S=searchPath(e,"x-ethers/locale")||"en",T=arrayify(v.decrypt(l));try{const I=entropyToMnemonic$2(T,S),A=HDNode.fromMnemonic(I,null,S).derivePath(E);if(A.privateKey!=u.privateKey)throw new Error("mnemonic mismatch");u.mnemonic=A.mnemonic}catch(I){if(I.code!==Logger.errors.INVALID_ARGUMENT||I.argument!=="wordlist")throw I}}return new KeystoreAccount(u)}function pbkdf2Sync(e,a,t,c,i){return arrayify(pbkdf2$6(e,a,t,c,i))}function pbkdf2$5(e,a,t,c,i){return Promise.resolve(pbkdf2Sync(e,a,t,c,i))}function _computeKdfKey(e,a,t,c,i){const o=getPassword(a),b=searchPath(e,"crypto/kdf");if(b&&typeof b=="string"){const u=function(l,x){return logger$8.throwArgumentError("invalid key-derivation function parameters",l,x)};if(b.toLowerCase()==="scrypt"){const l=looseArrayify(searchPath(e,"crypto/kdfparams/salt")),x=parseInt(searchPath(e,"crypto/kdfparams/n")),g=parseInt(searchPath(e,"crypto/kdfparams/r")),v=parseInt(searchPath(e,"crypto/kdfparams/p"));(!x||!g||!v)&&u("kdf",b),x&x-1&&u("N",x);const E=parseInt(searchPath(e,"crypto/kdfparams/dklen"));return E!==32&&u("dklen",E),c(o,l,x,g,v,64,i)}else if(b.toLowerCase()==="pbkdf2"){const l=looseArrayify(searchPath(e,"crypto/kdfparams/salt"));let x=null;const g=searchPath(e,"crypto/kdfparams/prf");g==="hmac-sha256"?x="sha256":g==="hmac-sha512"?x="sha512":u("prf",g);const v=parseInt(searchPath(e,"crypto/kdfparams/c")),E=parseInt(searchPath(e,"crypto/kdfparams/dklen"));return E!==32&&u("dklen",E),t(o,l,v,E,x)}}return logger$8.throwArgumentError("unsupported key-derivation function","kdf",b)}function decryptSync(e,a){const t=JSON.parse(e),c=_computeKdfKey(t,a,pbkdf2Sync,scrypt.syncScrypt);return _getAccount(t,c)}function decrypt$3(e,a,t){return __awaiter$6(this,void 0,void 0,function*(){const c=JSON.parse(e),i=yield _computeKdfKey(c,a,pbkdf2$5,scrypt.scrypt,t);return _getAccount(c,i)})}function encrypt$3(e,a,t,c){try{if(getAddress(e.address)!==computeAddress(e.privateKey))throw new Error("address/privateKey mismatch");if(hasMnemonic$1(e)){const A=e.mnemonic;if(HDNode.fromMnemonic(A.phrase,null,A.locale).derivePath(A.path||defaultPath).privateKey!=e.privateKey)throw new Error("mnemonic mismatch")}}catch(A){return Promise.reject(A)}typeof t=="function"&&!c&&(c=t,t={}),t||(t={});const i=arrayify(e.privateKey),o=getPassword(a);let b=null,u=null,l=null;if(hasMnemonic$1(e)){const A=e.mnemonic;b=arrayify(mnemonicToEntropy$2(A.phrase,A.locale||"en")),u=A.path||defaultPath,l=A.locale||"en"}let x=t.client;x||(x="ethers.js");let g=null;t.salt?g=arrayify(t.salt):g=randomBytes$4(32);let v=null;if(t.iv){if(v=arrayify(t.iv),v.length!==16)throw new Error("invalid iv")}else v=randomBytes$4(16);let E=null;if(t.uuid){if(E=arrayify(t.uuid),E.length!==16)throw new Error("invalid uuid")}else E=randomBytes$4(16);let S=1<<17,T=8,I=1;return t.scrypt&&(t.scrypt.N&&(S=t.scrypt.N),t.scrypt.r&&(T=t.scrypt.r),t.scrypt.p&&(I=t.scrypt.p)),scrypt.scrypt(o,g,S,T,I,64,c).then(A=>{A=arrayify(A);const C=A.slice(0,16),O=A.slice(16,32),R=A.slice(32,64),B=new aes$1.Counter(v),M=new aes$1.ModeOfOperation.ctr(C,B),L=arrayify(M.encrypt(i)),ee=keccak256$1(concat$4([O,L])),z={address:e.address.substring(2).toLowerCase(),id:uuidV4(E),version:3,crypto:{cipher:"aes-128-ctr",cipherparams:{iv:hexlify(v).substring(2)},ciphertext:hexlify(L).substring(2),kdf:"scrypt",kdfparams:{salt:hexlify(g).substring(2),n:S,dklen:32,p:I,r:T},mac:ee.substring(2)}};if(b){const oe=randomBytes$4(16),W=new aes$1.Counter(oe),P=new aes$1.ModeOfOperation.ctr(R,W),D=arrayify(P.encrypt(b)),q=new Date,Y=q.getUTCFullYear()+"-"+zpad(q.getUTCMonth()+1,2)+"-"+zpad(q.getUTCDate(),2)+"T"+zpad(q.getUTCHours(),2)+"-"+zpad(q.getUTCMinutes(),2)+"-"+zpad(q.getUTCSeconds(),2)+".0Z";z["x-ethers"]={client:x,gethFilename:"UTC--"+Y+"--"+z.address,mnemonicCounter:hexlify(oe).substring(2),mnemonicCiphertext:hexlify(D).substring(2),path:u,locale:l,version:"0.1"}}return JSON.stringify(z)})}function decryptJsonWallet(e,a,t){if(isCrowdsaleWallet(e)){t&&t(0);const c=decrypt$4(e,a);return t&&t(1),Promise.resolve(c)}return isKeystoreWallet(e)?decrypt$3(e,a,t):Promise.reject(new Error("invalid JSON wallet"))}function decryptJsonWalletSync(e,a){if(isCrowdsaleWallet(e))return decrypt$4(e,a);if(isKeystoreWallet(e))return decryptSync(e,a);throw new Error("invalid JSON wallet")}const lib_esm$3=Object.freeze(Object.defineProperty({__proto__:null,decryptCrowdsale:decrypt$4,decryptJsonWallet,decryptJsonWalletSync,decryptKeystore:decrypt$3,decryptKeystoreSync:decryptSync,encryptKeystore:encrypt$3,getJsonWalletAddress,isCrowdsaleWallet,isKeystoreWallet},Symbol.toStringTag,{value:"Module"})),version$8="wallet/5.7.0";var __awaiter$5=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$7=new Logger(version$8);function isAccount(e){return e!=null&&isHexString$2(e.privateKey,32)&&e.address!=null}function hasMnemonic(e){const a=e.mnemonic;return a&&a.phrase}class Wallet extends Signer{constructor(a,t){if(super(),isAccount(a)){const c=new SigningKey(a.privateKey);if(defineReadOnly(this,"_signingKey",()=>c),defineReadOnly(this,"address",computeAddress(this.publicKey)),this.address!==getAddress(a.address)&&logger$7.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),hasMnemonic(a)){const i=a.mnemonic;defineReadOnly(this,"_mnemonic",()=>({phrase:i.phrase,path:i.path||defaultPath,locale:i.locale||"en"}));const o=this.mnemonic,b=HDNode.fromMnemonic(o.phrase,null,o.locale).derivePath(o.path);computeAddress(b.privateKey)!==this.address&&logger$7.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else defineReadOnly(this,"_mnemonic",()=>null)}else{if(SigningKey.isSigningKey(a))a.curve!=="secp256k1"&&logger$7.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),defineReadOnly(this,"_signingKey",()=>a);else{typeof a=="string"&&a.match(/^[0-9a-f]*$/i)&&a.length===64&&(a="0x"+a);const c=new SigningKey(a);defineReadOnly(this,"_signingKey",()=>c)}defineReadOnly(this,"_mnemonic",()=>null),defineReadOnly(this,"address",computeAddress(this.publicKey))}t&&!Provider$1.isProvider(t)&&logger$7.throwArgumentError("invalid provider","provider",t),defineReadOnly(this,"provider",t||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(a){return new Wallet(this,a)}signTransaction(a){return resolveProperties(a).then(t=>{t.from!=null&&(getAddress(t.from)!==this.address&&logger$7.throwArgumentError("transaction from address mismatch","transaction.from",a.from),delete t.from);const c=this._signingKey().signDigest(keccak256$1(serialize(t)));return serialize(t,c)})}signMessage(a){return __awaiter$5(this,void 0,void 0,function*(){return joinSignature(this._signingKey().signDigest(hashMessage(a)))})}_signTypedData(a,t,c){return __awaiter$5(this,void 0,void 0,function*(){const i=yield TypedDataEncoder.resolveNames(a,t,c,o=>(this.provider==null&&logger$7.throwError("cannot resolve ENS names without a provider",Logger.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:o}),this.provider.resolveName(o)));return joinSignature(this._signingKey().signDigest(TypedDataEncoder.hash(i.domain,t,i.value)))})}encrypt(a,t,c){if(typeof t=="function"&&!c&&(c=t,t={}),c&&typeof c!="function")throw new Error("invalid callback");return t||(t={}),encrypt$3(this,a,t,c)}static createRandom(a){let t=randomBytes$4(16);a||(a={}),a.extraEntropy&&(t=arrayify(hexDataSlice(keccak256$1(concat$4([t,a.extraEntropy])),0,16)));const c=entropyToMnemonic$2(t,a.locale);return Wallet.fromMnemonic(c,a.path,a.locale)}static fromEncryptedJson(a,t,c){return decryptJsonWallet(a,t,c).then(i=>new Wallet(i))}static fromEncryptedJsonSync(a,t){return new Wallet(decryptJsonWalletSync(a,t))}static fromMnemonic(a,t,c){return t||(t=defaultPath),new Wallet(HDNode.fromMnemonic(a,null,c).derivePath(t))}}function verifyMessage(e,a){return recoverAddress(hashMessage(e),a)}function verifyTypedData(e,a,t,c){return recoverAddress(TypedDataEncoder.hash(e,a,t),c)}const lib_esm$2=Object.freeze(Object.defineProperty({__proto__:null,Wallet,verifyMessage,verifyTypedData},Symbol.toStringTag,{value:"Module"})),version$7="networks/5.7.1",logger$6=new Logger(version$7);function isRenetworkable(e){return e&&typeof e.renetwork=="function"}function ethDefaultProvider(e){const a=function(t,c){c==null&&(c={});const i=[];if(t.InfuraProvider&&c.infura!=="-")try{i.push(new t.InfuraProvider(e,c.infura))}catch{}if(t.EtherscanProvider&&c.etherscan!=="-")try{i.push(new t.EtherscanProvider(e,c.etherscan))}catch{}if(t.AlchemyProvider&&c.alchemy!=="-")try{i.push(new t.AlchemyProvider(e,c.alchemy))}catch{}if(t.PocketProvider&&c.pocket!=="-"){const o=["goerli","ropsten","rinkeby","sepolia"];try{const b=new t.PocketProvider(e,c.pocket);b.network&&o.indexOf(b.network.name)===-1&&i.push(b)}catch{}}if(t.CloudflareProvider&&c.cloudflare!=="-")try{i.push(new t.CloudflareProvider(e))}catch{}if(t.AnkrProvider&&c.ankr!=="-")try{const o=["ropsten"],b=new t.AnkrProvider(e,c.ankr);b.network&&o.indexOf(b.network.name)===-1&&i.push(b)}catch{}if(i.length===0)return null;if(t.FallbackProvider){let o=1;return c.quorum!=null?o=c.quorum:e==="homestead"&&(o=2),new t.FallbackProvider(i,o)}return i[0]};return a.renetwork=function(t){return ethDefaultProvider(t)},a}function etcDefaultProvider(e,a){const t=function(c,i){return c.JsonRpcProvider?new c.JsonRpcProvider(e,a):null};return t.renetwork=function(c){return etcDefaultProvider(e,c)},t}const homestead={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:ethDefaultProvider("homestead")},ropsten={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:ethDefaultProvider("ropsten")},classicMordor={chainId:63,name:"classicMordor",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/mordor","classicMordor")},networks$5={unspecified:{chainId:0,name:"unspecified"},homestead,mainnet:homestead,morden:{chainId:2,name:"morden"},ropsten,testnet:ropsten,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:ethDefaultProvider("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:ethDefaultProvider("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:ethDefaultProvider("goerli")},kintsugi:{chainId:1337702,name:"kintsugi"},sepolia:{chainId:11155111,name:"sepolia",_defaultProvider:ethDefaultProvider("sepolia")},classic:{chainId:61,name:"classic",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor,classicTestnet:classicMordor,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:etcDefaultProvider("https://www.ethercluster.com/kotti","classicKotti")},xdai:{chainId:100,name:"xdai"},matic:{chainId:137,name:"matic",_defaultProvider:ethDefaultProvider("matic")},maticmum:{chainId:80001,name:"maticmum"},optimism:{chainId:10,name:"optimism",_defaultProvider:ethDefaultProvider("optimism")},"optimism-kovan":{chainId:69,name:"optimism-kovan"},"optimism-goerli":{chainId:420,name:"optimism-goerli"},arbitrum:{chainId:42161,name:"arbitrum"},"arbitrum-rinkeby":{chainId:421611,name:"arbitrum-rinkeby"},"arbitrum-goerli":{chainId:421613,name:"arbitrum-goerli"},bnb:{chainId:56,name:"bnb"},bnbt:{chainId:97,name:"bnbt"}};function getNetwork(e){if(e==null)return null;if(typeof e=="number"){for(const c in networks$5){const i=networks$5[c];if(i.chainId===e)return{name:i.name,chainId:i.chainId,ensAddress:i.ensAddress||null,_defaultProvider:i._defaultProvider||null}}return{chainId:e,name:"unknown"}}if(typeof e=="string"){const c=networks$5[e];return c==null?null:{name:c.name,chainId:c.chainId,ensAddress:c.ensAddress,_defaultProvider:c._defaultProvider||null}}const a=networks$5[e.name];if(!a)return typeof e.chainId!="number"&&logger$6.throwArgumentError("invalid network chainId","network",e),e;e.chainId!==0&&e.chainId!==a.chainId&&logger$6.throwArgumentError("network chainId mismatch","network",e);let t=e._defaultProvider||null;return t==null&&a._defaultProvider&&(isRenetworkable(a._defaultProvider)?t=a._defaultProvider.renetwork(e):t=a._defaultProvider),{name:e.name,chainId:a.chainId,ensAddress:e.ensAddress||a.ensAddress||null,_defaultProvider:t}}const version$6="web/5.7.1";var __awaiter$4=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};function getUrl$1(e,a){return __awaiter$4(this,void 0,void 0,function*(){a==null&&(a={});const t={method:a.method||"GET",headers:a.headers||{},body:a.body||void 0};if(a.skipFetchSetup!==!0&&(t.mode="cors",t.cache="no-cache",t.credentials="same-origin",t.redirect="follow",t.referrer="client"),a.fetchOptions!=null){const b=a.fetchOptions;b.mode&&(t.mode=b.mode),b.cache&&(t.cache=b.cache),b.credentials&&(t.credentials=b.credentials),b.redirect&&(t.redirect=b.redirect),b.referrer&&(t.referrer=b.referrer)}const c=yield fetch(e,t),i=yield c.arrayBuffer(),o={};return c.headers.forEach?c.headers.forEach((b,u)=>{o[u.toLowerCase()]=b}):c.headers.keys().forEach(b=>{o[b.toLowerCase()]=c.headers.get(b)}),{headers:o,statusCode:c.status,statusMessage:c.statusText,body:arrayify(new Uint8Array(i))}})}var __awaiter$3=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$5=new Logger(version$6);function staller(e){return new Promise(a=>{setTimeout(a,e)})}function bodyify(e,a){if(e==null)return null;if(typeof e=="string")return e;if(isBytesLike(e)){if(a&&(a.split("/")[0]==="text"||a.split(";")[0].trim()==="application/json"))try{return toUtf8String(e)}catch{}return hexlify(e)}return e}function unpercent(e){return toUtf8Bytes(e.replace(/%([0-9a-f][0-9a-f])/gi,(a,t)=>String.fromCharCode(parseInt(t,16))))}function _fetchData(e,a,t){const c=typeof e=="object"&&e.throttleLimit!=null?e.throttleLimit:12;logger$5.assertArgument(c>0&&c%1===0,"invalid connection throttle limit","connection.throttleLimit",c);const i=typeof e=="object"?e.throttleCallback:null,o=typeof e=="object"&&typeof e.throttleSlotInterval=="number"?e.throttleSlotInterval:100;logger$5.assertArgument(o>0&&o%1===0,"invalid connection throttle slot interval","connection.throttleSlotInterval",o);const b=typeof e=="object"?!!e.errorPassThrough:!1,u={};let l=null;const x={method:"GET"};let g=!1,v=2*60*1e3;if(typeof e=="string")l=e;else if(typeof e=="object"){if((e==null||e.url==null)&&logger$5.throwArgumentError("missing URL","connection.url",e),l=e.url,typeof e.timeout=="number"&&e.timeout>0&&(v=e.timeout),e.headers)for(const C in e.headers)u[C.toLowerCase()]={key:C,value:String(e.headers[C])},["if-none-match","if-modified-since"].indexOf(C.toLowerCase())>=0&&(g=!0);if(x.allowGzip=!!e.allowGzip,e.user!=null&&e.password!=null){l.substring(0,6)!=="https:"&&e.allowInsecureAuthentication!==!0&&logger$5.throwError("basic authentication requires a secure https url",Logger.errors.INVALID_ARGUMENT,{argument:"url",url:l,user:e.user,password:"[REDACTED]"});const C=e.user+":"+e.password;u.authorization={key:"Authorization",value:"Basic "+encode$s(toUtf8Bytes(C))}}e.skipFetchSetup!=null&&(x.skipFetchSetup=!!e.skipFetchSetup),e.fetchOptions!=null&&(x.fetchOptions=shallowCopy(e.fetchOptions))}const E=new RegExp("^data:([^;:]*)?(;base64)?,(.*)$","i"),S=l?l.match(E):null;if(S)try{const C={statusCode:200,statusMessage:"OK",headers:{"content-type":S[1]||"text/plain"},body:S[2]?decode$r(S[3]):unpercent(S[3])};let O=C.body;return t&&(O=t(C.body,C)),Promise.resolve(O)}catch(C){logger$5.throwError("processing response error",Logger.errors.SERVER_ERROR,{body:bodyify(S[1],S[2]),error:C,requestBody:null,requestMethod:"GET",url:l})}a&&(x.method="POST",x.body=a,u["content-type"]==null&&(u["content-type"]={key:"Content-Type",value:"application/octet-stream"}),u["content-length"]==null&&(u["content-length"]={key:"Content-Length",value:String(a.length)}));const T={};Object.keys(u).forEach(C=>{const O=u[C];T[O.key]=O.value}),x.headers=T;const I=function(){let C=null;return{promise:new Promise(function(B,M){v&&(C=setTimeout(()=>{C!=null&&(C=null,M(logger$5.makeError("timeout",Logger.errors.TIMEOUT,{requestBody:bodyify(x.body,T["content-type"]),requestMethod:x.method,timeout:v,url:l})))},v))}),cancel:function(){C!=null&&(clearTimeout(C),C=null)}}}(),A=function(){return __awaiter$3(this,void 0,void 0,function*(){for(let C=0;C<c;C++){let O=null;try{if(O=yield getUrl$1(l,x),C<c){if(O.statusCode===301||O.statusCode===302){const B=O.headers.location||"";if(x.method==="GET"&&B.match(/^https:/)){l=O.headers.location;continue}}else if(O.statusCode===429){let B=!0;if(i&&(B=yield i(C,l)),B){let M=0;const L=O.headers["retry-after"];typeof L=="string"&&L.match(/^[1-9][0-9]*$/)?M=parseInt(L)*1e3:M=o*parseInt(String(Math.random()*Math.pow(2,C))),yield staller(M);continue}}}}catch(B){O=B.response,O==null&&(I.cancel(),logger$5.throwError("missing response",Logger.errors.SERVER_ERROR,{requestBody:bodyify(x.body,T["content-type"]),requestMethod:x.method,serverError:B,url:l}))}let R=O.body;if(g&&O.statusCode===304?R=null:!b&&(O.statusCode<200||O.statusCode>=300)&&(I.cancel(),logger$5.throwError("bad response",Logger.errors.SERVER_ERROR,{status:O.statusCode,headers:O.headers,body:bodyify(R,O.headers?O.headers["content-type"]:null),requestBody:bodyify(x.body,T["content-type"]),requestMethod:x.method,url:l})),t)try{const B=yield t(R,O);return I.cancel(),B}catch(B){if(B.throttleRetry&&C<c){let M=!0;if(i&&(M=yield i(C,l)),M){const L=o*parseInt(String(Math.random()*Math.pow(2,C)));yield staller(L);continue}}I.cancel(),logger$5.throwError("processing response error",Logger.errors.SERVER_ERROR,{body:bodyify(R,O.headers?O.headers["content-type"]:null),error:B,requestBody:bodyify(x.body,T["content-type"]),requestMethod:x.method,url:l})}return I.cancel(),R}return logger$5.throwError("failed response",Logger.errors.SERVER_ERROR,{requestBody:bodyify(x.body,T["content-type"]),requestMethod:x.method,url:l})})}();return Promise.race([I.promise,A])}function fetchJson(e,a,t){let c=(o,b)=>{let u=null;if(o!=null)try{u=JSON.parse(toUtf8String(o))}catch(l){logger$5.throwError("invalid JSON",Logger.errors.SERVER_ERROR,{body:o,error:l})}return t&&(u=t(u,b)),u},i=null;if(a!=null){i=toUtf8Bytes(a);const o=typeof e=="string"?{url:e}:shallowCopy(e);o.headers?Object.keys(o.headers).filter(u=>u.toLowerCase()==="content-type").length!==0||(o.headers=shallowCopy(o.headers),o.headers["content-type"]="application/json"):o.headers={"content-type":"application/json"},e=o}return _fetchData(e,i,c)}function poll(e,a){return a||(a={}),a=shallowCopy(a),a.floor==null&&(a.floor=0),a.ceiling==null&&(a.ceiling=1e4),a.interval==null&&(a.interval=250),new Promise(function(t,c){let i=null,o=!1;const b=()=>o?!1:(o=!0,i&&clearTimeout(i),!0);a.timeout&&(i=setTimeout(()=>{b()&&c(new Error("timeout"))},a.timeout));const u=a.retryLimit;let l=0;function x(){return e().then(function(g){if(g!==void 0)b()&&t(g);else if(a.oncePoll)a.oncePoll.once("poll",x);else if(a.onceBlock)a.onceBlock.once("block",x);else if(!o){if(l++,l>u){b()&&c(new Error("retry limit reached"));return}let v=a.interval*parseInt(String(Math.random()*Math.pow(2,l)));v<a.floor&&(v=a.floor),v>a.ceiling&&(v=a.ceiling),setTimeout(x,v)}return null},function(g){b()&&c(g)})}x()})}const lib_esm$1=Object.freeze(Object.defineProperty({__proto__:null,_fetchData,fetchJson,poll},Symbol.toStringTag,{value:"Module"})),version$5="providers/5.7.2",logger$4=new Logger(version$5);class Formatter{constructor(){this.formats=this.getDefaultFormats()}getDefaultFormats(){const a={},t=this.address.bind(this),c=this.bigNumber.bind(this),i=this.blockTag.bind(this),o=this.data.bind(this),b=this.hash.bind(this),u=this.hex.bind(this),l=this.number.bind(this),x=this.type.bind(this),g=v=>this.data(v,!0);return a.transaction={hash:b,type:x,accessList:Formatter.allowNull(this.accessList.bind(this),null),blockHash:Formatter.allowNull(b,null),blockNumber:Formatter.allowNull(l,null),transactionIndex:Formatter.allowNull(l,null),confirmations:Formatter.allowNull(l,null),from:t,gasPrice:Formatter.allowNull(c),maxPriorityFeePerGas:Formatter.allowNull(c),maxFeePerGas:Formatter.allowNull(c),gasLimit:c,to:Formatter.allowNull(t,null),value:c,nonce:l,data:o,r:Formatter.allowNull(this.uint256),s:Formatter.allowNull(this.uint256),v:Formatter.allowNull(l),creates:Formatter.allowNull(t,null),raw:Formatter.allowNull(o)},a.transactionRequest={from:Formatter.allowNull(t),nonce:Formatter.allowNull(l),gasLimit:Formatter.allowNull(c),gasPrice:Formatter.allowNull(c),maxPriorityFeePerGas:Formatter.allowNull(c),maxFeePerGas:Formatter.allowNull(c),to:Formatter.allowNull(t),value:Formatter.allowNull(c),data:Formatter.allowNull(g),type:Formatter.allowNull(l),accessList:Formatter.allowNull(this.accessList.bind(this),null)},a.receiptLog={transactionIndex:l,blockNumber:l,transactionHash:b,address:t,topics:Formatter.arrayOf(b),data:o,logIndex:l,blockHash:b},a.receipt={to:Formatter.allowNull(this.address,null),from:Formatter.allowNull(this.address,null),contractAddress:Formatter.allowNull(t,null),transactionIndex:l,root:Formatter.allowNull(u),gasUsed:c,logsBloom:Formatter.allowNull(o),blockHash:b,transactionHash:b,logs:Formatter.arrayOf(this.receiptLog.bind(this)),blockNumber:l,confirmations:Formatter.allowNull(l,null),cumulativeGasUsed:c,effectiveGasPrice:Formatter.allowNull(c),status:Formatter.allowNull(l),type:x},a.block={hash:Formatter.allowNull(b),parentHash:b,number:l,timestamp:l,nonce:Formatter.allowNull(u),difficulty:this.difficulty.bind(this),gasLimit:c,gasUsed:c,miner:Formatter.allowNull(t),extraData:o,transactions:Formatter.allowNull(Formatter.arrayOf(b)),baseFeePerGas:Formatter.allowNull(c)},a.blockWithTransactions=shallowCopy(a.block),a.blockWithTransactions.transactions=Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this))),a.filter={fromBlock:Formatter.allowNull(i,void 0),toBlock:Formatter.allowNull(i,void 0),blockHash:Formatter.allowNull(b,void 0),address:Formatter.allowNull(t,void 0),topics:Formatter.allowNull(this.topics.bind(this),void 0)},a.filterLog={blockNumber:Formatter.allowNull(l),blockHash:Formatter.allowNull(b),transactionIndex:l,removed:Formatter.allowNull(this.boolean.bind(this)),address:t,data:Formatter.allowFalsish(o,"0x"),topics:Formatter.arrayOf(b),transactionHash:b,logIndex:l},a}accessList(a){return accessListify(a||[])}number(a){return a==="0x"?0:BigNumber$1.from(a).toNumber()}type(a){return a==="0x"||a==null?0:BigNumber$1.from(a).toNumber()}bigNumber(a){return BigNumber$1.from(a)}boolean(a){if(typeof a=="boolean")return a;if(typeof a=="string"){if(a=a.toLowerCase(),a==="true")return!0;if(a==="false")return!1}throw new Error("invalid boolean - "+a)}hex(a,t){return typeof a=="string"&&(!t&&a.substring(0,2)!=="0x"&&(a="0x"+a),isHexString$2(a))?a.toLowerCase():logger$4.throwArgumentError("invalid hash","value",a)}data(a,t){const c=this.hex(a,t);if(c.length%2!==0)throw new Error("invalid data; odd-length - "+a);return c}address(a){return getAddress(a)}callAddress(a){if(!isHexString$2(a,32))return null;const t=getAddress(hexDataSlice(a,12));return t===AddressZero?null:t}contractAddress(a){return getContractAddress(a)}blockTag(a){if(a==null)return"latest";if(a==="earliest")return"0x0";switch(a){case"earliest":return"0x0";case"latest":case"pending":case"safe":case"finalized":return a}if(typeof a=="number"||isHexString$2(a))return hexValue(a);throw new Error("invalid blockTag")}hash(a,t){const c=this.hex(a,t);return hexDataLength(c)!==32?logger$4.throwArgumentError("invalid hash","value",a):c}difficulty(a){if(a==null)return null;const t=BigNumber$1.from(a);try{return t.toNumber()}catch{}return null}uint256(a){if(!isHexString$2(a))throw new Error("invalid uint256");return hexZeroPad(a,32)}_block(a,t){a.author!=null&&a.miner==null&&(a.miner=a.author);const c=a._difficulty!=null?a._difficulty:a.difficulty,i=Formatter.check(t,a);return i._difficulty=c==null?null:BigNumber$1.from(c),i}block(a){return this._block(a,this.formats.block)}blockWithTransactions(a){return this._block(a,this.formats.blockWithTransactions)}transactionRequest(a){return Formatter.check(this.formats.transactionRequest,a)}transactionResponse(a){a.gas!=null&&a.gasLimit==null&&(a.gasLimit=a.gas),a.to&&BigNumber$1.from(a.to).isZero()&&(a.to="0x0000000000000000000000000000000000000000"),a.input!=null&&a.data==null&&(a.data=a.input),a.to==null&&a.creates==null&&(a.creates=this.contractAddress(a)),(a.type===1||a.type===2)&&a.accessList==null&&(a.accessList=[]);const t=Formatter.check(this.formats.transaction,a);if(a.chainId!=null){let c=a.chainId;isHexString$2(c)&&(c=BigNumber$1.from(c).toNumber()),t.chainId=c}else{let c=a.networkId;c==null&&t.v==null&&(c=a.chainId),isHexString$2(c)&&(c=BigNumber$1.from(c).toNumber()),typeof c!="number"&&t.v!=null&&(c=(t.v-35)/2,c<0&&(c=0),c=parseInt(c)),typeof c!="number"&&(c=0),t.chainId=c}return t.blockHash&&t.blockHash.replace(/0/g,"")==="x"&&(t.blockHash=null),t}transaction(a){return parse$5(a)}receiptLog(a){return Formatter.check(this.formats.receiptLog,a)}receipt(a){const t=Formatter.check(this.formats.receipt,a);if(t.root!=null)if(t.root.length<=4){const c=BigNumber$1.from(t.root).toNumber();c===0||c===1?(t.status!=null&&t.status!==c&&logger$4.throwArgumentError("alt-root-status/status mismatch","value",{root:t.root,status:t.status}),t.status=c,delete t.root):logger$4.throwArgumentError("invalid alt-root-status","value.root",t.root)}else t.root.length!==66&&logger$4.throwArgumentError("invalid root hash","value.root",t.root);return t.status!=null&&(t.byzantium=!0),t}topics(a){return Array.isArray(a)?a.map(t=>this.topics(t)):a!=null?this.hash(a,!0):null}filter(a){return Formatter.check(this.formats.filter,a)}filterLog(a){return Formatter.check(this.formats.filterLog,a)}static check(a,t){const c={};for(const i in a)try{const o=a[i](t[i]);o!==void 0&&(c[i]=o)}catch(o){throw o.checkKey=i,o.checkValue=t[i],o}return c}static allowNull(a,t){return function(c){return c==null?t:a(c)}}static allowFalsish(a,t){return function(c){return c?a(c):t}}static arrayOf(a){return function(t){if(!Array.isArray(t))throw new Error("not an array");const c=[];return t.forEach(function(i){c.push(a(i))}),c}}}var __awaiter$2=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$3=new Logger(version$5),MAX_CCIP_REDIRECTS=10;function checkTopic(e){return e==null?"null":(hexDataLength(e)!==32&&logger$3.throwArgumentError("invalid topic","topic",e),e.toLowerCase())}function serializeTopics(e){for(e=e.slice();e.length>0&&e[e.length-1]==null;)e.pop();return e.map(a=>{if(Array.isArray(a)){const t={};a.forEach(i=>{t[checkTopic(i)]=!0});const c=Object.keys(t);return c.sort(),c.join("|")}else return checkTopic(a)}).join("&")}function deserializeTopics(e){return e===""?[]:e.split(/&/g).map(a=>{if(a==="")return[];const t=a.split("|").map(c=>c==="null"?null:c);return t.length===1?t[0]:t})}function getEventTag(e){if(typeof e=="string"){if(e=e.toLowerCase(),hexDataLength(e)===32)return"tx:"+e;if(e.indexOf(":")===-1)return e}else{if(Array.isArray(e))return"filter:*:"+serializeTopics(e);if(ForkEvent.isForkEvent(e))throw logger$3.warn("not implemented"),new Error("not implemented");if(e&&typeof e=="object")return"filter:"+(e.address||"*")+":"+serializeTopics(e.topics||[])}throw new Error("invalid event - "+e)}function getTime(){return new Date().getTime()}function stall(e){return new Promise(a=>{setTimeout(a,e)})}const PollableEvents=["block","network","pending","poll"];class Event{constructor(a,t,c){defineReadOnly(this,"tag",a),defineReadOnly(this,"listener",t),defineReadOnly(this,"once",c),this._lastBlockNumber=-2,this._inflight=!1}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const a=this.tag.split(":");return a[0]!=="tx"?null:a[1]}get filter(){const a=this.tag.split(":");if(a[0]!=="filter")return null;const t=a[1],c=deserializeTopics(a[2]),i={};return c.length>0&&(i.topics=c),t&&t!=="*"&&(i.address=t),i}pollable(){return this.tag.indexOf(":")>=0||PollableEvents.indexOf(this.tag)>=0}}const coinInfos={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function bytes32ify(e){return hexZeroPad(BigNumber$1.from(e).toHexString(),32)}function base58Encode(e){return Base58$2.encode(concat$4([e,hexDataSlice(sha256$5(sha256$5(e)),0,4)]))}const matcherIpfs=new RegExp("^(ipfs)://(.*)$","i"),matchers=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),matcherIpfs,new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];function _parseString(e,a){try{return toUtf8String(_parseBytes(e,a))}catch{}return null}function _parseBytes(e,a){if(e==="0x")return null;const t=BigNumber$1.from(hexDataSlice(e,a,a+32)).toNumber(),c=BigNumber$1.from(hexDataSlice(e,t,t+32)).toNumber();return hexDataSlice(e,t+32,t+32+c)}function getIpfsLink(e){return e.match(/^ipfs:\/\/ipfs\//i)?e=e.substring(12):e.match(/^ipfs:\/\//i)?e=e.substring(7):logger$3.throwArgumentError("unsupported IPFS format","link",e),`https://gateway.ipfs.io/ipfs/${e}`}function numPad(e){const a=arrayify(e);if(a.length>32)throw new Error("internal; should not happen");const t=new Uint8Array(32);return t.set(a,32-a.length),t}function bytesPad(e){if(e.length%32===0)return e;const a=new Uint8Array(Math.ceil(e.length/32)*32);return a.set(e),a}function encodeBytes(e){const a=[];let t=0;for(let c=0;c<e.length;c++)a.push(null),t+=32;for(let c=0;c<e.length;c++){const i=arrayify(e[c]);a[c]=numPad(t),a.push(numPad(i.length)),a.push(bytesPad(i)),t+=32+Math.ceil(i.length/32)*32}return hexConcat(a)}class Resolver{constructor(a,t,c,i){defineReadOnly(this,"provider",a),defineReadOnly(this,"name",c),defineReadOnly(this,"address",a.formatter.address(t)),defineReadOnly(this,"_resolvedAddress",i)}supportsWildcard(){return this._supportsEip2544||(this._supportsEip2544=this.provider.call({to:this.address,data:"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"}).then(a=>BigNumber$1.from(a).eq(1)).catch(a=>{if(a.code===Logger.errors.CALL_EXCEPTION)return!1;throw this._supportsEip2544=null,a})),this._supportsEip2544}_fetch(a,t){return __awaiter$2(this,void 0,void 0,function*(){const c={to:this.address,ccipReadEnabled:!0,data:hexConcat([a,namehash(this.name),t||"0x"])};let i=!1;(yield this.supportsWildcard())&&(i=!0,c.data=hexConcat(["0x9061b923",encodeBytes([dnsEncode(this.name),c.data])]));try{let o=yield this.provider.call(c);return arrayify(o).length%32===4&&logger$3.throwError("resolver threw error",Logger.errors.CALL_EXCEPTION,{transaction:c,data:o}),i&&(o=_parseBytes(o,0)),o}catch(o){if(o.code===Logger.errors.CALL_EXCEPTION)return null;throw o}})}_fetchBytes(a,t){return __awaiter$2(this,void 0,void 0,function*(){const c=yield this._fetch(a,t);return c!=null?_parseBytes(c,0):null})}_getAddress(a,t){const c=coinInfos[String(a)];if(c==null&&logger$3.throwError(`unsupported coin type: ${a}`,Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${a})`}),c.ilk==="eth")return this.provider.formatter.address(t);const i=arrayify(t);if(c.p2pkh!=null){const o=t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(o){const b=parseInt(o[1],16);if(o[2].length===b*2&&b>=1&&b<=75)return base58Encode(concat$4([[c.p2pkh],"0x"+o[2]]))}}if(c.p2sh!=null){const o=t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(o){const b=parseInt(o[1],16);if(o[2].length===b*2&&b>=1&&b<=75)return base58Encode(concat$4([[c.p2sh],"0x"+o[2]]))}}if(c.prefix!=null){const o=i[1];let b=i[0];if(b===0?o!==20&&o!==32&&(b=-1):b=-1,b>=0&&i.length===2+o&&o>=1&&o<=75){const u=bech32$1.toWords(i.slice(2));return u.unshift(b),bech32$1.encode(c.prefix,u)}}return null}getAddress(a){return __awaiter$2(this,void 0,void 0,function*(){if(a==null&&(a=60),a===60)try{const i=yield this._fetch("0x3b3b57de");return i==="0x"||i===HashZero?null:this.provider.formatter.callAddress(i)}catch(i){if(i.code===Logger.errors.CALL_EXCEPTION)return null;throw i}const t=yield this._fetchBytes("0xf1cb7e06",bytes32ify(a));if(t==null||t==="0x")return null;const c=this._getAddress(a,t);return c==null&&logger$3.throwError("invalid or unsupported coin data",Logger.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${a})`,coinType:a,data:t}),c})}getAvatar(){return __awaiter$2(this,void 0,void 0,function*(){const a=[{type:"name",content:this.name}];try{const t=yield this.getText("avatar");if(t==null)return null;for(let c=0;c<matchers.length;c++){const i=t.match(matchers[c]);if(i==null)continue;const o=i[1].toLowerCase();switch(o){case"https":return a.push({type:"url",content:t}),{linkage:a,url:t};case"data":return a.push({type:"data",content:t}),{linkage:a,url:t};case"ipfs":return a.push({type:"ipfs",content:t}),{linkage:a,url:getIpfsLink(t)};case"erc721":case"erc1155":{const b=o==="erc721"?"0xc87b56dd":"0x0e89341c";a.push({type:o,content:t});const u=this._resolvedAddress||(yield this.getAddress()),l=(i[2]||"").split("/");if(l.length!==2)return null;const x=yield this.provider.formatter.address(l[0]),g=hexZeroPad(BigNumber$1.from(l[1]).toHexString(),32);if(o==="erc721"){const I=this.provider.formatter.callAddress(yield this.provider.call({to:x,data:hexConcat(["0x6352211e",g])}));if(u!==I)return null;a.push({type:"owner",content:I})}else if(o==="erc1155"){const I=BigNumber$1.from(yield this.provider.call({to:x,data:hexConcat(["0x00fdd58e",hexZeroPad(u,32),g])}));if(I.isZero())return null;a.push({type:"balance",content:I.toString()})}const v={to:this.provider.formatter.address(l[0]),data:hexConcat([b,g])};let E=_parseString(yield this.provider.call(v),0);if(E==null)return null;a.push({type:"metadata-url-base",content:E}),o==="erc1155"&&(E=E.replace("{id}",g.substring(2)),a.push({type:"metadata-url-expanded",content:E})),E.match(/^ipfs:/i)&&(E=getIpfsLink(E)),a.push({type:"metadata-url",content:E});const S=yield fetchJson(E);if(!S)return null;a.push({type:"metadata",content:JSON.stringify(S)});let T=S.image;if(typeof T!="string")return null;if(!T.match(/^(https:\/\/|data:)/i)){if(T.match(matcherIpfs)==null)return null;a.push({type:"url-ipfs",content:T}),T=getIpfsLink(T)}return a.push({type:"url",content:T}),{linkage:a,url:T}}}}}catch{}return null})}getContentHash(){return __awaiter$2(this,void 0,void 0,function*(){const a=yield this._fetchBytes("0xbc1c58d1");if(a==null||a==="0x")return null;const t=a.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(t){const b=parseInt(t[3],16);if(t[4].length===b*2)return"ipfs://"+Base58$2.encode("0x"+t[1])}const c=a.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(c){const b=parseInt(c[3],16);if(c[4].length===b*2)return"ipns://"+Base58$2.encode("0x"+c[1])}const i=a.match(/^0xe40101fa011b20([0-9a-f]*)$/);if(i&&i[1].length===32*2)return"bzz://"+i[1];const o=a.match(/^0x90b2c605([0-9a-f]*)$/);if(o&&o[1].length===34*2){const b={"=":"","+":"-","/":"_"};return"sia://"+encode$s("0x"+o[1]).replace(/[=+\/]/g,l=>b[l])}return logger$3.throwError("invalid or unsupported content hash data",Logger.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:a})})}getText(a){return __awaiter$2(this,void 0,void 0,function*(){let t=toUtf8Bytes(a);t=concat$4([bytes32ify(64),bytes32ify(t.length),t]),t.length%32!==0&&(t=concat$4([t,hexZeroPad("0x",32-a.length%32)]));const c=yield this._fetchBytes("0x59d1d43c",hexlify(t));return c==null||c==="0x"?null:toUtf8String(c)})}}let defaultFormatter=null,nextPollId=1;class BaseProvider extends Provider$1{constructor(a){if(super(),this._events=[],this._emitted={block:-2},this.disableCcipRead=!1,this.formatter=new.target.getFormatter(),defineReadOnly(this,"anyNetwork",a==="any"),this.anyNetwork&&(a=this.detectNetwork()),a instanceof Promise)this._networkPromise=a,a.catch(t=>{}),this._ready().catch(t=>{});else{const t=getStatic(new.target,"getNetwork")(a);t?(defineReadOnly(this,"_network",t),this.emit("network",t,null)):logger$3.throwArgumentError("invalid network","network",a)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._maxFilterBlockRange=10,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return __awaiter$2(this,void 0,void 0,function*(){if(this._network==null){let a=null;if(this._networkPromise)try{a=yield this._networkPromise}catch{}a==null&&(a=yield this.detectNetwork()),a||logger$3.throwError("no network detected",Logger.errors.UNKNOWN_ERROR,{}),this._network==null&&(this.anyNetwork?this._network=a:defineReadOnly(this,"_network",a),this.emit("network",a,null))}return this._network})}get ready(){return poll(()=>this._ready().then(a=>a,a=>{if(!(a.code===Logger.errors.NETWORK_ERROR&&a.event==="noNetwork"))throw a}))}static getFormatter(){return defaultFormatter==null&&(defaultFormatter=new Formatter),defaultFormatter}static getNetwork(a){return getNetwork(a??"homestead")}ccipReadFetch(a,t,c){return __awaiter$2(this,void 0,void 0,function*(){if(this.disableCcipRead||c.length===0)return null;const i=a.to.toLowerCase(),o=t.toLowerCase(),b=[];for(let u=0;u<c.length;u++){const l=c[u],x=l.replace("{sender}",i).replace("{data}",o),g=l.indexOf("{data}")>=0?null:JSON.stringify({data:o,sender:i}),v=yield fetchJson({url:x,errorPassThrough:!0},g,(S,T)=>(S.status=T.statusCode,S));if(v.data)return v.data;const E=v.message||"unknown error";if(v.status>=400&&v.status<500)return logger$3.throwError(`response not found during CCIP fetch: ${E}`,Logger.errors.SERVER_ERROR,{url:l,errorMessage:E});b.push(E)}return logger$3.throwError(`error encountered during CCIP fetch: ${b.map(u=>JSON.stringify(u)).join(", ")}`,Logger.errors.SERVER_ERROR,{urls:c,errorMessages:b})})}_getInternalBlockNumber(a){return __awaiter$2(this,void 0,void 0,function*(){if(yield this._ready(),a>0)for(;this._internalBlockNumber;){const i=this._internalBlockNumber;try{const o=yield i;if(getTime()-o.respTime<=a)return o.blockNumber;break}catch{if(this._internalBlockNumber===i)break}}const t=getTime(),c=resolveProperties({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then(i=>null,i=>i)}).then(({blockNumber:i,networkError:o})=>{if(o)throw this._internalBlockNumber===c&&(this._internalBlockNumber=null),o;const b=getTime();return i=BigNumber$1.from(i).toNumber(),i<this._maxInternalBlockNumber&&(i=this._maxInternalBlockNumber),this._maxInternalBlockNumber=i,this._setFastBlockNumber(i),{blockNumber:i,reqTime:t,respTime:b}});return this._internalBlockNumber=c,c.catch(i=>{this._internalBlockNumber===c&&(this._internalBlockNumber=null)}),(yield c).blockNumber})}poll(){return __awaiter$2(this,void 0,void 0,function*(){const a=nextPollId++,t=[];let c=null;try{c=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(i){this.emit("error",i);return}if(this._setFastBlockNumber(c),this.emit("poll",a,c),c===this._lastBlockNumber){this.emit("didPoll",a);return}if(this._emitted.block===-2&&(this._emitted.block=c-1),Math.abs(this._emitted.block-c)>1e3)logger$3.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${c})`),this.emit("error",logger$3.makeError("network block skew detected",Logger.errors.NETWORK_ERROR,{blockNumber:c,event:"blockSkew",previousBlockNumber:this._emitted.block})),this.emit("block",c);else for(let i=this._emitted.block+1;i<=c;i++)this.emit("block",i);this._emitted.block!==c&&(this._emitted.block=c,Object.keys(this._emitted).forEach(i=>{if(i==="block")return;const o=this._emitted[i];o!=="pending"&&c-o>12&&delete this._emitted[i]})),this._lastBlockNumber===-2&&(this._lastBlockNumber=c-1),this._events.forEach(i=>{switch(i.type){case"tx":{const o=i.hash;let b=this.getTransactionReceipt(o).then(u=>(!u||u.blockNumber==null||(this._emitted["t:"+o]=u.blockNumber,this.emit(o,u)),null)).catch(u=>{this.emit("error",u)});t.push(b);break}case"filter":{if(!i._inflight){i._inflight=!0,i._lastBlockNumber===-2&&(i._lastBlockNumber=c-1);const o=i.filter;o.fromBlock=i._lastBlockNumber+1,o.toBlock=c;const b=o.toBlock-this._maxFilterBlockRange;b>o.fromBlock&&(o.fromBlock=b),o.fromBlock<0&&(o.fromBlock=0);const u=this.getLogs(o).then(l=>{i._inflight=!1,l.length!==0&&l.forEach(x=>{x.blockNumber>i._lastBlockNumber&&(i._lastBlockNumber=x.blockNumber),this._emitted["b:"+x.blockHash]=x.blockNumber,this._emitted["t:"+x.transactionHash]=x.blockNumber,this.emit(o,x)})}).catch(l=>{this.emit("error",l),i._inflight=!1});t.push(u)}break}}}),this._lastBlockNumber=c,Promise.all(t).then(()=>{this.emit("didPoll",a)}).catch(i=>{this.emit("error",i)})})}resetEventsBlock(a){this._lastBlockNumber=a-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return __awaiter$2(this,void 0,void 0,function*(){return logger$3.throwError("provider does not support network detection",Logger.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})})}getNetwork(){return __awaiter$2(this,void 0,void 0,function*(){const a=yield this._ready(),t=yield this.detectNetwork();if(a.chainId!==t.chainId){if(this.anyNetwork)return this._network=t,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit("network",t,a),yield stall(0),this._network;const c=logger$3.makeError("underlying network changed",Logger.errors.NETWORK_ERROR,{event:"changed",network:a,detectedNetwork:t});throw this.emit("error",c),c}return a})}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then(a=>{this._setFastBlockNumber(a)},a=>{}),this._fastBlockNumber!=null?this._fastBlockNumber:-1}get polling(){return this._poller!=null}set polling(a){a&&!this._poller?(this._poller=setInterval(()=>{this.poll()},this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout(()=>{this.poll(),this._bootstrapPoll=setTimeout(()=>{this._poller||this.poll(),this._bootstrapPoll=null},this.pollingInterval)},0))):!a&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(a){if(typeof a!="number"||a<=0||parseInt(String(a))!=a)throw new Error("invalid polling interval");this._pollingInterval=a,this._poller&&(clearInterval(this._poller),this._poller=setInterval(()=>{this.poll()},this._pollingInterval))}_getFastBlockNumber(){const a=getTime();return a-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=a,this._fastBlockNumberPromise=this.getBlockNumber().then(t=>((this._fastBlockNumber==null||t>this._fastBlockNumber)&&(this._fastBlockNumber=t),this._fastBlockNumber))),this._fastBlockNumberPromise}_setFastBlockNumber(a){this._fastBlockNumber!=null&&a<this._fastBlockNumber||(this._fastQueryDate=getTime(),(this._fastBlockNumber==null||a>this._fastBlockNumber)&&(this._fastBlockNumber=a,this._fastBlockNumberPromise=Promise.resolve(a)))}waitForTransaction(a,t,c){return __awaiter$2(this,void 0,void 0,function*(){return this._waitForTransaction(a,t??1,c||0,null)})}_waitForTransaction(a,t,c,i){return __awaiter$2(this,void 0,void 0,function*(){const o=yield this.getTransactionReceipt(a);return(o?o.confirmations:0)>=t?o:new Promise((b,u)=>{const l=[];let x=!1;const g=function(){return x?!0:(x=!0,l.forEach(E=>{E()}),!1)},v=E=>{E.confirmations<t||g()||b(E)};if(this.on(a,v),l.push(()=>{this.removeListener(a,v)}),i){let E=i.startBlock,S=null;const T=I=>__awaiter$2(this,void 0,void 0,function*(){x||(yield stall(1e3),this.getTransactionCount(i.from).then(A=>__awaiter$2(this,void 0,void 0,function*(){if(!x){if(A<=i.nonce)E=I;else{{const C=yield this.getTransaction(a);if(C&&C.blockNumber!=null)return}for(S==null&&(S=E-3,S<i.startBlock&&(S=i.startBlock));S<=I;){if(x)return;const C=yield this.getBlockWithTransactions(S);for(let O=0;O<C.transactions.length;O++){const R=C.transactions[O];if(R.hash===a)return;if(R.from===i.from&&R.nonce===i.nonce){if(x)return;const B=yield this.waitForTransaction(R.hash,t);if(g())return;let M="replaced";R.data===i.data&&R.to===i.to&&R.value.eq(i.value)?M="repriced":R.data==="0x"&&R.from===R.to&&R.value.isZero()&&(M="cancelled"),u(logger$3.makeError("transaction was replaced",Logger.errors.TRANSACTION_REPLACED,{cancelled:M==="replaced"||M==="cancelled",reason:M,replacement:this._wrapTransaction(R),hash:a,receipt:B}));return}}S++}}x||this.once("block",T)}}),A=>{x||this.once("block",T)}))});if(x)return;this.once("block",T),l.push(()=>{this.removeListener("block",T)})}if(typeof c=="number"&&c>0){const E=setTimeout(()=>{g()||u(logger$3.makeError("timeout exceeded",Logger.errors.TIMEOUT,{timeout:c}))},c);E.unref&&E.unref(),l.push(()=>{clearTimeout(E)})}})})}getBlockNumber(){return __awaiter$2(this,void 0,void 0,function*(){return this._getInternalBlockNumber(0)})}getGasPrice(){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const a=yield this.perform("getGasPrice",{});try{return BigNumber$1.from(a)}catch(t){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getGasPrice",result:a,error:t})}})}getBalance(a,t){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const c=yield resolveProperties({address:this._getAddress(a),blockTag:this._getBlockTag(t)}),i=yield this.perform("getBalance",c);try{return BigNumber$1.from(i)}catch(o){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getBalance",params:c,result:i,error:o})}})}getTransactionCount(a,t){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const c=yield resolveProperties({address:this._getAddress(a),blockTag:this._getBlockTag(t)}),i=yield this.perform("getTransactionCount",c);try{return BigNumber$1.from(i).toNumber()}catch(o){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getTransactionCount",params:c,result:i,error:o})}})}getCode(a,t){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const c=yield resolveProperties({address:this._getAddress(a),blockTag:this._getBlockTag(t)}),i=yield this.perform("getCode",c);try{return hexlify(i)}catch(o){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getCode",params:c,result:i,error:o})}})}getStorageAt(a,t,c){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const i=yield resolveProperties({address:this._getAddress(a),blockTag:this._getBlockTag(c),position:Promise.resolve(t).then(b=>hexValue(b))}),o=yield this.perform("getStorageAt",i);try{return hexlify(o)}catch(b){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"getStorageAt",params:i,result:o,error:b})}})}_wrapTransaction(a,t,c){if(t!=null&&hexDataLength(t)!==32)throw new Error("invalid response - sendTransaction");const i=a;return t!=null&&a.hash!==t&&logger$3.throwError("Transaction hash mismatch from Provider.sendTransaction.",Logger.errors.UNKNOWN_ERROR,{expectedHash:a.hash,returnedHash:t}),i.wait=(o,b)=>__awaiter$2(this,void 0,void 0,function*(){o==null&&(o=1),b==null&&(b=0);let u;o!==0&&c!=null&&(u={data:a.data,from:a.from,nonce:a.nonce,to:a.to,value:a.value,startBlock:c});const l=yield this._waitForTransaction(a.hash,o,b,u);return l==null&&o===0?null:(this._emitted["t:"+a.hash]=l.blockNumber,l.status===0&&logger$3.throwError("transaction failed",Logger.errors.CALL_EXCEPTION,{transactionHash:a.hash,transaction:a,receipt:l}),l)}),i}sendTransaction(a){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const t=yield Promise.resolve(a).then(o=>hexlify(o)),c=this.formatter.transaction(a);c.confirmations==null&&(c.confirmations=0);const i=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const o=yield this.perform("sendTransaction",{signedTransaction:t});return this._wrapTransaction(c,o,i)}catch(o){throw o.transaction=c,o.transactionHash=c.hash,o}})}_getTransactionRequest(a){return __awaiter$2(this,void 0,void 0,function*(){const t=yield a,c={};return["from","to"].forEach(i=>{t[i]!=null&&(c[i]=Promise.resolve(t[i]).then(o=>o?this._getAddress(o):null))}),["gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","value"].forEach(i=>{t[i]!=null&&(c[i]=Promise.resolve(t[i]).then(o=>o?BigNumber$1.from(o):null))}),["type"].forEach(i=>{t[i]!=null&&(c[i]=Promise.resolve(t[i]).then(o=>o??null))}),t.accessList&&(c.accessList=this.formatter.accessList(t.accessList)),["data"].forEach(i=>{t[i]!=null&&(c[i]=Promise.resolve(t[i]).then(o=>o?hexlify(o):null))}),this.formatter.transactionRequest(yield resolveProperties(c))})}_getFilter(a){return __awaiter$2(this,void 0,void 0,function*(){a=yield a;const t={};return a.address!=null&&(t.address=this._getAddress(a.address)),["blockHash","topics"].forEach(c=>{a[c]!=null&&(t[c]=a[c])}),["fromBlock","toBlock"].forEach(c=>{a[c]!=null&&(t[c]=this._getBlockTag(a[c]))}),this.formatter.filter(yield resolveProperties(t))})}_call(a,t,c){return __awaiter$2(this,void 0,void 0,function*(){c>=MAX_CCIP_REDIRECTS&&logger$3.throwError("CCIP read exceeded maximum redirections",Logger.errors.SERVER_ERROR,{redirects:c,transaction:a});const i=a.to,o=yield this.perform("call",{transaction:a,blockTag:t});if(c>=0&&t==="latest"&&i!=null&&o.substring(0,10)==="0x556f1830"&&hexDataLength(o)%32===4)try{const b=hexDataSlice(o,4),u=hexDataSlice(b,0,32);BigNumber$1.from(u).eq(i)||logger$3.throwError("CCIP Read sender did not match",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:a,data:o});const l=[],x=BigNumber$1.from(hexDataSlice(b,32,64)).toNumber(),g=BigNumber$1.from(hexDataSlice(b,x,x+32)).toNumber(),v=hexDataSlice(b,x+32);for(let C=0;C<g;C++){const O=_parseString(v,C*32);O==null&&logger$3.throwError("CCIP Read contained corrupt URL string",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:a,data:o}),l.push(O)}const E=_parseBytes(b,64);BigNumber$1.from(hexDataSlice(b,100,128)).isZero()||logger$3.throwError("CCIP Read callback selector included junk",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:a,data:o});const S=hexDataSlice(b,96,100),T=_parseBytes(b,128),I=yield this.ccipReadFetch(a,E,l);I==null&&logger$3.throwError("CCIP Read disabled or provided no URLs",Logger.errors.CALL_EXCEPTION,{name:"OffchainLookup",signature:"OffchainLookup(address,string[],bytes,bytes4,bytes)",transaction:a,data:o});const A={to:i,data:hexConcat([S,encodeBytes([I,T])])};return this._call(A,t,c+1)}catch(b){if(b.code===Logger.errors.SERVER_ERROR)throw b}try{return hexlify(o)}catch(b){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"call",params:{transaction:a,blockTag:t},result:o,error:b})}})}call(a,t){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const c=yield resolveProperties({transaction:this._getTransactionRequest(a),blockTag:this._getBlockTag(t),ccipReadEnabled:Promise.resolve(a.ccipReadEnabled)});return this._call(c.transaction,c.blockTag,c.ccipReadEnabled?0:-1)})}estimateGas(a){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const t=yield resolveProperties({transaction:this._getTransactionRequest(a)}),c=yield this.perform("estimateGas",t);try{return BigNumber$1.from(c)}catch(i){return logger$3.throwError("bad result from backend",Logger.errors.SERVER_ERROR,{method:"estimateGas",params:t,result:c,error:i})}})}_getAddress(a){return __awaiter$2(this,void 0,void 0,function*(){a=yield a,typeof a!="string"&&logger$3.throwArgumentError("invalid address or ENS name","name",a);const t=yield this.resolveName(a);return t==null&&logger$3.throwError("ENS name not configured",Logger.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(a)})`}),t})}_getBlock(a,t){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork(),a=yield a;let c=-128;const i={includeTransactions:!!t};if(isHexString$2(a,32))i.blockHash=a;else try{i.blockTag=yield this._getBlockTag(a),isHexString$2(i.blockTag)&&(c=parseInt(i.blockTag.substring(2),16))}catch{logger$3.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",a)}return poll(()=>__awaiter$2(this,void 0,void 0,function*(){const o=yield this.perform("getBlock",i);if(o==null)return i.blockHash!=null&&this._emitted["b:"+i.blockHash]==null||i.blockTag!=null&&c>this._emitted.block?null:void 0;if(t){let b=null;for(let l=0;l<o.transactions.length;l++){const x=o.transactions[l];if(x.blockNumber==null)x.confirmations=0;else if(x.confirmations==null){b==null&&(b=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let g=b-x.blockNumber+1;g<=0&&(g=1),x.confirmations=g}}const u=this.formatter.blockWithTransactions(o);return u.transactions=u.transactions.map(l=>this._wrapTransaction(l)),u}return this.formatter.block(o)}),{oncePoll:this})})}getBlock(a){return this._getBlock(a,!1)}getBlockWithTransactions(a){return this._getBlock(a,!0)}getTransaction(a){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork(),a=yield a;const t={transactionHash:this.formatter.hash(a,!0)};return poll(()=>__awaiter$2(this,void 0,void 0,function*(){const c=yield this.perform("getTransaction",t);if(c==null)return this._emitted["t:"+a]==null?null:void 0;const i=this.formatter.transactionResponse(c);if(i.blockNumber==null)i.confirmations=0;else if(i.confirmations==null){let b=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-i.blockNumber+1;b<=0&&(b=1),i.confirmations=b}return this._wrapTransaction(i)}),{oncePoll:this})})}getTransactionReceipt(a){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork(),a=yield a;const t={transactionHash:this.formatter.hash(a,!0)};return poll(()=>__awaiter$2(this,void 0,void 0,function*(){const c=yield this.perform("getTransactionReceipt",t);if(c==null)return this._emitted["t:"+a]==null?null:void 0;if(c.blockHash==null)return;const i=this.formatter.receipt(c);if(i.blockNumber==null)i.confirmations=0;else if(i.confirmations==null){let b=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-i.blockNumber+1;b<=0&&(b=1),i.confirmations=b}return i}),{oncePoll:this})})}getLogs(a){return __awaiter$2(this,void 0,void 0,function*(){yield this.getNetwork();const t=yield resolveProperties({filter:this._getFilter(a)}),c=yield this.perform("getLogs",t);return c.forEach(i=>{i.removed==null&&(i.removed=!1)}),Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(c)})}getEtherPrice(){return __awaiter$2(this,void 0,void 0,function*(){return yield this.getNetwork(),this.perform("getEtherPrice",{})})}_getBlockTag(a){return __awaiter$2(this,void 0,void 0,function*(){if(a=yield a,typeof a=="number"&&a<0){a%1&&logger$3.throwArgumentError("invalid BlockTag","blockTag",a);let t=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return t+=a,t<0&&(t=0),this.formatter.blockTag(t)}return this.formatter.blockTag(a)})}getResolver(a){return __awaiter$2(this,void 0,void 0,function*(){let t=a;for(;;){if(t===""||t==="."||a!=="eth"&&t==="eth")return null;const c=yield this._getResolver(t,"getResolver");if(c!=null){const i=new Resolver(this,c,a);return t!==a&&!(yield i.supportsWildcard())?null:i}t=t.split(".").slice(1).join(".")}})}_getResolver(a,t){return __awaiter$2(this,void 0,void 0,function*(){t==null&&(t="ENS");const c=yield this.getNetwork();c.ensAddress||logger$3.throwError("network does not support ENS",Logger.errors.UNSUPPORTED_OPERATION,{operation:t,network:c.name});try{const i=yield this.call({to:c.ensAddress,data:"0x0178b8bf"+namehash(a).substring(2)});return this.formatter.callAddress(i)}catch{}return null})}resolveName(a){return __awaiter$2(this,void 0,void 0,function*(){a=yield a;try{return Promise.resolve(this.formatter.address(a))}catch(c){if(isHexString$2(a))throw c}typeof a!="string"&&logger$3.throwArgumentError("invalid ENS name","name",a);const t=yield this.getResolver(a);return t?yield t.getAddress():null})}lookupAddress(a){return __awaiter$2(this,void 0,void 0,function*(){a=yield a,a=this.formatter.address(a);const t=a.substring(2).toLowerCase()+".addr.reverse",c=yield this._getResolver(t,"lookupAddress");if(c==null)return null;const i=_parseString(yield this.call({to:c,data:"0x691f3431"+namehash(t).substring(2)}),0);return(yield this.resolveName(i))!=a?null:i})}getAvatar(a){return __awaiter$2(this,void 0,void 0,function*(){let t=null;if(isHexString$2(a)){const o=this.formatter.address(a).substring(2).toLowerCase()+".addr.reverse",b=yield this._getResolver(o,"getAvatar");if(!b)return null;t=new Resolver(this,b,o);try{const u=yield t.getAvatar();if(u)return u.url}catch(u){if(u.code!==Logger.errors.CALL_EXCEPTION)throw u}try{const u=_parseString(yield this.call({to:b,data:"0x691f3431"+namehash(o).substring(2)}),0);t=yield this.getResolver(u)}catch(u){if(u.code!==Logger.errors.CALL_EXCEPTION)throw u;return null}}else if(t=yield this.getResolver(a),!t)return null;const c=yield t.getAvatar();return c==null?null:c.url})}perform(a,t){return logger$3.throwError(a+" not implemented",Logger.errors.NOT_IMPLEMENTED,{operation:a})}_startEvent(a){this.polling=this._events.filter(t=>t.pollable()).length>0}_stopEvent(a){this.polling=this._events.filter(t=>t.pollable()).length>0}_addEventListener(a,t,c){const i=new Event(getEventTag(a),t,c);return this._events.push(i),this._startEvent(i),this}on(a,t){return this._addEventListener(a,t,!1)}once(a,t){return this._addEventListener(a,t,!0)}emit(a,...t){let c=!1,i=[],o=getEventTag(a);return this._events=this._events.filter(b=>b.tag!==o?!0:(setTimeout(()=>{b.listener.apply(this,t)},0),c=!0,b.once?(i.push(b),!1):!0)),i.forEach(b=>{this._stopEvent(b)}),c}listenerCount(a){if(!a)return this._events.length;let t=getEventTag(a);return this._events.filter(c=>c.tag===t).length}listeners(a){if(a==null)return this._events.map(c=>c.listener);let t=getEventTag(a);return this._events.filter(c=>c.tag===t).map(c=>c.listener)}off(a,t){if(t==null)return this.removeAllListeners(a);const c=[];let i=!1,o=getEventTag(a);return this._events=this._events.filter(b=>b.tag!==o||b.listener!=t||i?!0:(i=!0,c.push(b),!1)),c.forEach(b=>{this._stopEvent(b)}),this}removeAllListeners(a){let t=[];if(a==null)t=this._events,this._events=[];else{const c=getEventTag(a);this._events=this._events.filter(i=>i.tag!==c?!0:(t.push(i),!1))}return t.forEach(c=>{this._stopEvent(c)}),this}}var __awaiter$1=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$2=new Logger(version$5),errorGas=["call","estimateGas"];function spelunk(e,a){if(e==null)return null;if(typeof e.message=="string"&&e.message.match("reverted")){const t=isHexString$2(e.data)?e.data:null;if(!a||t)return{message:e.message,data:t}}if(typeof e=="object"){for(const t in e){const c=spelunk(e[t],a);if(c)return c}return null}if(typeof e=="string")try{return spelunk(JSON.parse(e),a)}catch{}return null}function checkError(e,a,t){const c=t.transaction||t.signedTransaction;if(e==="call"){const o=spelunk(a,!0);if(o)return o.data;logger$2.throwError("missing revert data in call exception; Transaction reverted without a reason string",Logger.errors.CALL_EXCEPTION,{data:"0x",transaction:c,error:a})}if(e==="estimateGas"){let o=spelunk(a.body,!1);o==null&&(o=spelunk(a,!1)),o&&logger$2.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{reason:o.message,method:e,transaction:c,error:a})}let i=a.message;throw a.code===Logger.errors.SERVER_ERROR&&a.error&&typeof a.error.message=="string"?i=a.error.message:typeof a.body=="string"?i=a.body:typeof a.responseText=="string"&&(i=a.responseText),i=(i||"").toLowerCase(),i.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)&&logger$2.throwError("insufficient funds for intrinsic transaction cost",Logger.errors.INSUFFICIENT_FUNDS,{error:a,method:e,transaction:c}),i.match(/nonce (is )?too low/i)&&logger$2.throwError("nonce has already been used",Logger.errors.NONCE_EXPIRED,{error:a,method:e,transaction:c}),i.match(/replacement transaction underpriced|transaction gas price.*too low/i)&&logger$2.throwError("replacement fee too low",Logger.errors.REPLACEMENT_UNDERPRICED,{error:a,method:e,transaction:c}),i.match(/only replay-protected/i)&&logger$2.throwError("legacy pre-eip-155 transactions not supported",Logger.errors.UNSUPPORTED_OPERATION,{error:a,method:e,transaction:c}),errorGas.indexOf(e)>=0&&i.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)&&logger$2.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",Logger.errors.UNPREDICTABLE_GAS_LIMIT,{error:a,method:e,transaction:c}),a}function timer(e){return new Promise(function(a){setTimeout(a,e)})}function getResult(e){if(e.error){const a=new Error(e.error.message);throw a.code=e.error.code,a.data=e.error.data,a}return e.result}function getLowerCase(e){return e&&e.toLowerCase()}const _constructorGuard={};class JsonRpcSigner extends Signer{constructor(a,t,c){if(super(),a!==_constructorGuard)throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");defineReadOnly(this,"provider",t),c==null&&(c=0),typeof c=="string"?(defineReadOnly(this,"_address",this.provider.formatter.address(c)),defineReadOnly(this,"_index",null)):typeof c=="number"?(defineReadOnly(this,"_index",c),defineReadOnly(this,"_address",null)):logger$2.throwArgumentError("invalid address or index","addressOrIndex",c)}connect(a){return logger$2.throwError("cannot alter JSON-RPC Signer connection",Logger.errors.UNSUPPORTED_OPERATION,{operation:"connect"})}connectUnchecked(){return new UncheckedJsonRpcSigner(_constructorGuard,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send("eth_accounts",[]).then(a=>(a.length<=this._index&&logger$2.throwError("unknown account #"+this._index,Logger.errors.UNSUPPORTED_OPERATION,{operation:"getAddress"}),this.provider.formatter.address(a[this._index])))}sendUncheckedTransaction(a){a=shallowCopy(a);const t=this.getAddress().then(c=>(c&&(c=c.toLowerCase()),c));if(a.gasLimit==null){const c=shallowCopy(a);c.from=t,a.gasLimit=this.provider.estimateGas(c)}return a.to!=null&&(a.to=Promise.resolve(a.to).then(c=>__awaiter$1(this,void 0,void 0,function*(){if(c==null)return null;const i=yield this.provider.resolveName(c);return i==null&&logger$2.throwArgumentError("provided ENS name resolves to null","tx.to",c),i}))),resolveProperties({tx:resolveProperties(a),sender:t}).then(({tx:c,sender:i})=>{c.from!=null?c.from.toLowerCase()!==i&&logger$2.throwArgumentError("from address mismatch","transaction",a):c.from=i;const o=this.provider.constructor.hexlifyTransaction(c,{from:!0});return this.provider.send("eth_sendTransaction",[o]).then(b=>b,b=>(typeof b.message=="string"&&b.message.match(/user denied/i)&&logger$2.throwError("user rejected transaction",Logger.errors.ACTION_REJECTED,{action:"sendTransaction",transaction:c}),checkError("sendTransaction",b,o)))})}signTransaction(a){return logger$2.throwError("signing transactions is unsupported",Logger.errors.UNSUPPORTED_OPERATION,{operation:"signTransaction"})}sendTransaction(a){return __awaiter$1(this,void 0,void 0,function*(){const t=yield this.provider._getInternalBlockNumber(100+2*this.provider.pollingInterval),c=yield this.sendUncheckedTransaction(a);try{return yield poll(()=>__awaiter$1(this,void 0,void 0,function*(){const i=yield this.provider.getTransaction(c);if(i!==null)return this.provider._wrapTransaction(i,c,t)}),{oncePoll:this.provider})}catch(i){throw i.transactionHash=c,i}})}signMessage(a){return __awaiter$1(this,void 0,void 0,function*(){const t=typeof a=="string"?toUtf8Bytes(a):a,c=yield this.getAddress();try{return yield this.provider.send("personal_sign",[hexlify(t),c.toLowerCase()])}catch(i){throw typeof i.message=="string"&&i.message.match(/user denied/i)&&logger$2.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"signMessage",from:c,messageData:a}),i}})}_legacySignMessage(a){return __awaiter$1(this,void 0,void 0,function*(){const t=typeof a=="string"?toUtf8Bytes(a):a,c=yield this.getAddress();try{return yield this.provider.send("eth_sign",[c.toLowerCase(),hexlify(t)])}catch(i){throw typeof i.message=="string"&&i.message.match(/user denied/i)&&logger$2.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"_legacySignMessage",from:c,messageData:a}),i}})}_signTypedData(a,t,c){return __awaiter$1(this,void 0,void 0,function*(){const i=yield TypedDataEncoder.resolveNames(a,t,c,b=>this.provider.resolveName(b)),o=yield this.getAddress();try{return yield this.provider.send("eth_signTypedData_v4",[o.toLowerCase(),JSON.stringify(TypedDataEncoder.getPayload(i.domain,t,i.value))])}catch(b){throw typeof b.message=="string"&&b.message.match(/user denied/i)&&logger$2.throwError("user rejected signing",Logger.errors.ACTION_REJECTED,{action:"_signTypedData",from:o,messageData:{domain:i.domain,types:t,value:i.value}}),b}})}unlock(a){return __awaiter$1(this,void 0,void 0,function*(){const t=this.provider,c=yield this.getAddress();return t.send("personal_unlockAccount",[c.toLowerCase(),a,null])})}}class UncheckedJsonRpcSigner extends JsonRpcSigner{sendTransaction(a){return this.sendUncheckedTransaction(a).then(t=>({hash:t,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:c=>this.provider.waitForTransaction(t,c)}))}}const allowedTransactionKeys={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0};class JsonRpcProvider extends BaseProvider{constructor(a,t){let c=t;c==null&&(c=new Promise((i,o)=>{setTimeout(()=>{this.detectNetwork().then(b=>{i(b)},b=>{o(b)})},0)})),super(c),a||(a=getStatic(this.constructor,"defaultUrl")()),typeof a=="string"?defineReadOnly(this,"connection",Object.freeze({url:a})):defineReadOnly(this,"connection",Object.freeze(shallowCopy(a))),this._nextId=42}get _cache(){return this._eventLoopCache==null&&(this._eventLoopCache={}),this._eventLoopCache}static defaultUrl(){return"http://localhost:8545"}detectNetwork(){return this._cache.detectNetwork||(this._cache.detectNetwork=this._uncachedDetectNetwork(),setTimeout(()=>{this._cache.detectNetwork=null},0)),this._cache.detectNetwork}_uncachedDetectNetwork(){return __awaiter$1(this,void 0,void 0,function*(){yield timer(0);let a=null;try{a=yield this.send("eth_chainId",[])}catch{try{a=yield this.send("net_version",[])}catch{}}if(a!=null){const t=getStatic(this.constructor,"getNetwork");try{return t(BigNumber$1.from(a).toNumber())}catch(c){return logger$2.throwError("could not detect network",Logger.errors.NETWORK_ERROR,{chainId:a,event:"invalidNetwork",serverError:c})}}return logger$2.throwError("could not detect network",Logger.errors.NETWORK_ERROR,{event:"noNetwork"})})}getSigner(a){return new JsonRpcSigner(_constructorGuard,this,a)}getUncheckedSigner(a){return this.getSigner(a).connectUnchecked()}listAccounts(){return this.send("eth_accounts",[]).then(a=>a.map(t=>this.formatter.address(t)))}send(a,t){const c={method:a,params:t,id:this._nextId++,jsonrpc:"2.0"};this.emit("debug",{action:"request",request:deepCopy(c),provider:this});const i=["eth_chainId","eth_blockNumber"].indexOf(a)>=0;if(i&&this._cache[a])return this._cache[a];const o=fetchJson(this.connection,JSON.stringify(c),getResult).then(b=>(this.emit("debug",{action:"response",request:c,response:b,provider:this}),b),b=>{throw this.emit("debug",{action:"response",error:b,request:c,provider:this}),b});return i&&(this._cache[a]=o,setTimeout(()=>{this._cache[a]=null},0)),o}prepareRequest(a,t){switch(a){case"getBlockNumber":return["eth_blockNumber",[]];case"getGasPrice":return["eth_gasPrice",[]];case"getBalance":return["eth_getBalance",[getLowerCase(t.address),t.blockTag]];case"getTransactionCount":return["eth_getTransactionCount",[getLowerCase(t.address),t.blockTag]];case"getCode":return["eth_getCode",[getLowerCase(t.address),t.blockTag]];case"getStorageAt":return["eth_getStorageAt",[getLowerCase(t.address),hexZeroPad(t.position,32),t.blockTag]];case"sendTransaction":return["eth_sendRawTransaction",[t.signedTransaction]];case"getBlock":return t.blockTag?["eth_getBlockByNumber",[t.blockTag,!!t.includeTransactions]]:t.blockHash?["eth_getBlockByHash",[t.blockHash,!!t.includeTransactions]]:null;case"getTransaction":return["eth_getTransactionByHash",[t.transactionHash]];case"getTransactionReceipt":return["eth_getTransactionReceipt",[t.transactionHash]];case"call":return["eth_call",[getStatic(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0}),t.blockTag]];case"estimateGas":return["eth_estimateGas",[getStatic(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0})]];case"getLogs":return t.filter&&t.filter.address!=null&&(t.filter.address=getLowerCase(t.filter.address)),["eth_getLogs",[t.filter]]}return null}perform(a,t){return __awaiter$1(this,void 0,void 0,function*(){if(a==="call"||a==="estimateGas"){const i=t.transaction;if(i&&i.type!=null&&BigNumber$1.from(i.type).isZero()&&i.maxFeePerGas==null&&i.maxPriorityFeePerGas==null){const o=yield this.getFeeData();o.maxFeePerGas==null&&o.maxPriorityFeePerGas==null&&(t=shallowCopy(t),t.transaction=shallowCopy(i),delete t.transaction.type)}}const c=this.prepareRequest(a,t);c==null&&logger$2.throwError(a+" not implemented",Logger.errors.NOT_IMPLEMENTED,{operation:a});try{return yield this.send(c[0],c[1])}catch(i){return checkError(a,i,t)}})}_startEvent(a){a.tag==="pending"&&this._startPending(),super._startEvent(a)}_startPending(){if(this._pendingFilter!=null)return;const a=this,t=this.send("eth_newPendingTransactionFilter",[]);this._pendingFilter=t,t.then(function(c){function i(){a.send("eth_getFilterChanges",[c]).then(function(o){if(a._pendingFilter!=t)return null;let b=Promise.resolve();return o.forEach(function(u){a._emitted["t:"+u.toLowerCase()]="pending",b=b.then(function(){return a.getTransaction(u).then(function(l){return a.emit("pending",l),null})})}),b.then(function(){return timer(1e3)})}).then(function(){if(a._pendingFilter!=t){a.send("eth_uninstallFilter",[c]);return}return setTimeout(function(){i()},0),null}).catch(o=>{})}return i(),c}).catch(c=>{})}_stopEvent(a){a.tag==="pending"&&this.listenerCount("pending")===0&&(this._pendingFilter=null),super._stopEvent(a)}static hexlifyTransaction(a,t){const c=shallowCopy(allowedTransactionKeys);if(t)for(const o in t)t[o]&&(c[o]=!0);checkProperties(a,c);const i={};return["chainId","gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach(function(o){if(a[o]==null)return;const b=hexValue(BigNumber$1.from(a[o]));o==="gasLimit"&&(o="gas"),i[o]=b}),["from","to","data"].forEach(function(o){a[o]!=null&&(i[o]=hexlify(a[o]))}),a.accessList&&(i.accessList=accessListify(a.accessList)),i}}var __awaiter=globalThis&&globalThis.__awaiter||function(e,a,t,c){function i(o){return o instanceof t?o:new t(function(b){b(o)})}return new(t||(t=Promise))(function(o,b){function u(g){try{x(c.next(g))}catch(v){b(v)}}function l(g){try{x(c.throw(g))}catch(v){b(v)}}function x(g){g.done?o(g.value):i(g.value).then(u,l)}x((c=c.apply(e,a||[])).next())})};const logger$1=new Logger(version$5);class StaticJsonRpcProvider extends JsonRpcProvider{detectNetwork(){const a=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return __awaiter(this,void 0,void 0,function*(){let t=this.network;return t==null&&(t=yield a.detectNetwork.call(this),t||logger$1.throwError("no network detected",Logger.errors.UNKNOWN_ERROR,{}),this._network==null&&(defineReadOnly(this,"_network",t),this.emit("network",t,null))),t})}}const version$4="units/5.7.0",logger=new Logger(version$4),names$1=["wei","kwei","mwei","gwei","szabo","finney","ether"];function commify(e){const a=String(e).split(".");(a.length>2||!a[0].match(/^-?[0-9]*$/)||a[1]&&!a[1].match(/^[0-9]*$/)||e==="."||e==="-.")&&logger.throwArgumentError("invalid value","value",e);let t=a[0],c="";for(t.substring(0,1)==="-"&&(c="-",t=t.substring(1));t.substring(0,1)==="0";)t=t.substring(1);t===""&&(t="0");let i="";for(a.length===2&&(i="."+(a[1]||"0"));i.length>2&&i[i.length-1]==="0";)i=i.substring(0,i.length-1);const o=[];for(;t.length;)if(t.length<=3){o.unshift(t);break}else{const b=t.length-3;o.unshift(t.substring(b)),t=t.substring(0,b)}return c+o.join(",")+i}function formatUnits(e,a){if(typeof a=="string"){const t=names$1.indexOf(a);t!==-1&&(a=3*t)}return formatFixed(e,a??18)}function parseUnits(e,a){if(typeof e!="string"&&logger.throwArgumentError("value must be a string","value",e),typeof a=="string"){const t=names$1.indexOf(a);t!==-1&&(a=3*t)}return parseFixed(e,a??18)}function formatEther(e){return formatUnits(e,18)}function parseEther(e){return parseUnits(e,18)}const lib_esm=Object.freeze(Object.defineProperty({__proto__:null,commify,formatEther,formatUnits,parseEther,parseUnits},Symbol.toStringTag,{value:"Module"}));class SessionManagerCore{allSession=new Map;getSessionById(a){return this.allSession.get(a)}getSessionsByOrigin(a){return Array.from(this.allSession).map(t=>t[1]).filter(t=>t.origin===a)}getSessionsByRole(a){return Array.from(this.allSession).map(t=>t[1]).filter(t=>t.role===a)}addSession(a){this.allSession.get(a.id)||(this.allSession.set(a.id,a),a.on("disconnect",()=>{this.allSession.delete(a.id)}))}reset(){this.allSession=new Map}}const SessionManager=new SessionManagerCore;var koaCompose=compose$1;function compose$1(e){if(!Array.isArray(e))throw new TypeError("Middleware stack must be an array!");for(const a of e)if(typeof a!="function")throw new TypeError("Middleware must be composed of functions!");return function(a,t){let c=-1;return i(0);function i(o){if(o<=c)return Promise.reject(new Error("next() called multiple times"));c=o;let b=e[o];if(o===e.length&&(b=t),!b)return Promise.resolve();try{return Promise.resolve(b(a,i.bind(null,o+1)))}catch(u){return Promise.reject(u)}}}}class Application{middleware;constructor(){this.middleware=[]}listen(){return this.callback()}use(a){if(typeof a!="function")throw new TypeError("middleware must be a function!");return this.middleware.push(a),this}callback(){const a=koaCompose(this.middleware);return t=>{const c=this.createContext(t);return this.handleRequest(c,a)}}reset(){return this.middleware.splice(0,this.middleware.length),this}handleRequest(a,t){return t(a).catch(c=>{})}createContext(a){return new KoaContext(this,a)}}const constructJsonRpcResponse=e=>e.error?{id:e.id,jsonrpc:"2.0",error:e.error}:{id:e.id,jsonrpc:"2.0",result:e.result};function koaResponseForRequest(e){const a=constructJsonRpcResponse({id:e.reqMsg.payload.id,result:e.result,error:e.error});return{from:e.reqMsg.to,to:e.reqMsg.from,payload:a}}class KoaContext{req;app;responses=[];constructor(a,t){this.app=a,this.req=t}get id(){return this.req.id}get rpcReq(){return this.req.rpcReq}get rpcRes(){return this.req.rpcRes}get rpcResSuccess(){return this.req.rpcResSuccess}get rpcError(){return this.req.rpcError}get from(){return this.req.from}get to(){return this.req.to}get params(){return this.req?.rpcReq?.params??[]}pushResponse(a,t){return this.responses.push(koaResponseForRequest({reqMsg:this.req.msg,result:a,error:t})),{result:a,error:t}}}class KoaRequest{sess;msg;constructor(a,t){this.msg=t,this.sess=a}get from(){return this.msg.from}get to(){return this.msg.to}get id(){return this.msg.payload.id}get rpcReq(){if(this.msg.payload&&io(this.msg.payload))return this.msg.payload}get rpcRes(){if(this.msg.payload&&isJsonRpcResponse(this.msg.payload))return this.msg.payload}get rpcResSuccess(){if(this.msg.payload&&uo(this.msg.payload))return this.msg.payload}get rpcError(){if(this.msg.payload&&ao(this.msg.payload))return this.msg.payload}async respond(){if(this.msg)try{await this.sess.sendMsg(this.msg)}catch{}}}class Session extends SafeEventEmitter{role;chromePort;wsClient;id;viewingRequestId;get origin(){return this.chromePort?new URL(this.chromePort.sender?.url??"").origin??this.id:KOA_MESSAGE_MOBILE_ORIGIN}constructor(a){super();const{port:t,wsClient:c}=a;t?(this.role=roleOfExtensionClientPort(t),this.chromePort=t,t.onDisconnect.addListener(()=>{this.emit("disconnect")}),t.onMessage.addListener(i=>{this.receiveMessageFromDapp(i)}),this.id=t.name):c?(this.role="mobile",this.wsClient=c,this.id=c.id):(this.role="unknown",this.id=Xa())}close(){this.chromePort&&this.chromePort.disconnect()}receiveMessageFromDapp=a=>{if(!isKoaMessage(a))return;const{payload:t}=a;io(t)?this.emit(t.method,t):uo(t)?this.emit(`response-${t.id}`,t):ao(t)&&this.emit(`response-${t.id}`,t)};async sendRaw(a){this.chromePort?this.chromePort.postMessage(a):this.wsClient&&this.wsClient.sendRaw(a)}async sendMsg(a){this.chromePort?this.chromePort.postMessage(a):this.wsClient&&this.wsClient.send(a)}async sendRequestRPC(a){const{method:t,params:c,from:i=""}=a,o={from:i,to:this.origin,payload:{id:Qa(),jsonrpc:"2.0",method:t,params:c}};return this.sendMsg(o)}async sendRequest(a){const{method:t,params:c,from:i=""}=a,o={from:i,to:this.origin,payload:{id:Qa(),jsonrpc:"2.0",method:t,params:c}};return this.sendMsg(o),new Promise((b,u)=>{const l=setTimeout(()=>{this.emit(`response-${o.payload.id}`,{id:o.payload.id,jsonrpc:"2.0",error:{code:408,message:"request time out"}})},3e4);this.once(`response-${o.payload.id}`,x=>{clearTimeout(l),uo(x)?b(x.result):ao(x)?u(x.error):u(new Error("can not parse the response"))})})}async sendRespondRPC(a){const t={from:a.from,to:this.origin,payload:{id:a.id,jsonrpc:"2.0",result:a.result,error:a.error}};return this.sendMsg(t)}async sendRpcResponse(a){const t={from:a.from,to:this.origin,payload:a.payload};return this.sendMsg(t)}}class TokenBalanceModelDB extends $n{tokenBalances;constructor(){super("balance-model"),this.version(1).stores({tokenBalances:"&[currencyId+walletId+accountIndex], walletId, chainId, chainType, address, balance, accountIndex, updateTime"})}}const TokenBalanceModel=new TokenBalanceModelDB;class CurrencyModelDB extends $n{currencies;currencyVersion;addedCurrencies;constructor(){super("currency-model"),this.version(1).stores({currencies:"&id, chainType, chainId, symbol, denom, contractAddress, type",currencyVersion:"&[chainType+chainId]"}),this.version(2).stores({currencies:"&id, chainType, chainId, symbol, denom, contractAddress, type, name",currencyVersion:"&[chainType+chainId]",addedCurrencies:"&[id+walletId], id, walletId, chainId, chainType, contractAddress"}),this.version(3).stores({currencies:"&id, chainType, chainId, symbol, denom, contractAddress, type, name, protocol",currencyVersion:"&[chainType+chainId]",addedCurrencies:"&[id+walletId], id, walletId, chainId, chainType, contractAddress"}).upgrade(async a=>a.table("currencies").toCollection().modify(async t=>{t.protocol=PROTOCOL[t.chainType]?.default}))}}const CurrencyModel=new CurrencyModelDB,__viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0$9=getAugmentedNamespace(__viteBrowserExternal$1);var hasMap=typeof Map=="function"&&Map.prototype,mapSizeDescriptor=Object.getOwnPropertyDescriptor&&hasMap?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,mapSize=hasMap&&mapSizeDescriptor&&typeof mapSizeDescriptor.get=="function"?mapSizeDescriptor.get:null,mapForEach=hasMap&&Map.prototype.forEach,hasSet=typeof Set=="function"&&Set.prototype,setSizeDescriptor=Object.getOwnPropertyDescriptor&&hasSet?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,setSize=hasSet&&setSizeDescriptor&&typeof setSizeDescriptor.get=="function"?setSizeDescriptor.get:null,setForEach=hasSet&&Set.prototype.forEach,hasWeakMap=typeof WeakMap=="function"&&WeakMap.prototype,weakMapHas=hasWeakMap?WeakMap.prototype.has:null,hasWeakSet=typeof WeakSet=="function"&&WeakSet.prototype,weakSetHas=hasWeakSet?WeakSet.prototype.has:null,hasWeakRef=typeof WeakRef=="function"&&WeakRef.prototype,weakRefDeref=hasWeakRef?WeakRef.prototype.deref:null,booleanValueOf=Boolean.prototype.valueOf,objectToString$1=Object.prototype.toString,functionToString=Function.prototype.toString,$match=String.prototype.match,$slice=String.prototype.slice,$replace=String.prototype.replace,$toUpperCase=String.prototype.toUpperCase,$toLowerCase=String.prototype.toLowerCase,$test=RegExp.prototype.test,$concat=Array.prototype.concat,$join=Array.prototype.join,$arrSlice=Array.prototype.slice,$floor=Math.floor,bigIntValueOf=typeof BigInt=="function"?BigInt.prototype.valueOf:null,gOPS=Object.getOwnPropertySymbols,symToString=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Symbol.prototype.toString:null,hasShammedSymbols=typeof Symbol=="function"&&typeof Symbol.iterator=="object",toStringTag=typeof Symbol=="function"&&Symbol.toStringTag&&(typeof Symbol.toStringTag===hasShammedSymbols||"symbol")?Symbol.toStringTag:null,isEnumerable=Object.prototype.propertyIsEnumerable,gPO=(typeof Reflect=="function"?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function addNumericSeparator(e,a){if(e===1/0||e===-1/0||e!==e||e&&e>-1e3&&e<1e3||$test.call(/e/,a))return a;var t=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(typeof e=="number"){var c=e<0?-$floor(-e):$floor(e);if(c!==e){var i=String(c),o=$slice.call(a,i.length+1);return $replace.call(i,t,"$&_")+"."+$replace.call($replace.call(o,/([0-9]{3})/g,"$&_"),/_$/,"")}}return $replace.call(a,t,"$&_")}var utilInspect=require$$0$9,inspectCustom=utilInspect.custom,inspectSymbol=isSymbol(inspectCustom)?inspectCustom:null,objectInspect=function e(a,t,c,i){var o=t||{};if(has$3(o,"quoteStyle")&&o.quoteStyle!=="single"&&o.quoteStyle!=="double")throw new TypeError('option "quoteStyle" must be "single" or "double"');if(has$3(o,"maxStringLength")&&(typeof o.maxStringLength=="number"?o.maxStringLength<0&&o.maxStringLength!==1/0:o.maxStringLength!==null))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var b=has$3(o,"customInspect")?o.customInspect:!0;if(typeof b!="boolean"&&b!=="symbol")throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(has$3(o,"indent")&&o.indent!==null&&o.indent!=="	"&&!(parseInt(o.indent,10)===o.indent&&o.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(has$3(o,"numericSeparator")&&typeof o.numericSeparator!="boolean")throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var u=o.numericSeparator;if(typeof a>"u")return"undefined";if(a===null)return"null";if(typeof a=="boolean")return a?"true":"false";if(typeof a=="string")return inspectString(a,o);if(typeof a=="number"){if(a===0)return 1/0/a>0?"0":"-0";var l=String(a);return u?addNumericSeparator(a,l):l}if(typeof a=="bigint"){var x=String(a)+"n";return u?addNumericSeparator(a,x):x}var g=typeof o.depth>"u"?5:o.depth;if(typeof c>"u"&&(c=0),c>=g&&g>0&&typeof a=="object")return isArray$8(a)?"[Array]":"[Object]";var v=getIndent(o,c);if(typeof i>"u")i=[];else if(indexOf(i,a)>=0)return"[Circular]";function E(q,Y,U){if(Y&&(i=$arrSlice.call(i),i.push(Y)),U){var j={depth:o.depth};return has$3(o,"quoteStyle")&&(j.quoteStyle=o.quoteStyle),e(q,j,c+1,i)}return e(q,o,c+1,i)}if(typeof a=="function"&&!isRegExp$1(a)){var S=nameOf(a),T=arrObjKeys(a,E);return"[Function"+(S?": "+S:" (anonymous)")+"]"+(T.length>0?" { "+$join.call(T,", ")+" }":"")}if(isSymbol(a)){var I=hasShammedSymbols?$replace.call(String(a),/^(Symbol\(.*\))_[^)]*$/,"$1"):symToString.call(a);return typeof a=="object"&&!hasShammedSymbols?markBoxed(I):I}if(isElement(a)){for(var A="<"+$toLowerCase.call(String(a.nodeName)),C=a.attributes||[],O=0;O<C.length;O++)A+=" "+C[O].name+"="+wrapQuotes(quote(C[O].value),"double",o);return A+=">",a.childNodes&&a.childNodes.length&&(A+="..."),A+="</"+$toLowerCase.call(String(a.nodeName))+">",A}if(isArray$8(a)){if(a.length===0)return"[]";var R=arrObjKeys(a,E);return v&&!singleLineValues(R)?"["+indentedJoin(R,v)+"]":"[ "+$join.call(R,", ")+" ]"}if(isError(a)){var B=arrObjKeys(a,E);return!("cause"in Error.prototype)&&"cause"in a&&!isEnumerable.call(a,"cause")?"{ ["+String(a)+"] "+$join.call($concat.call("[cause]: "+E(a.cause),B),", ")+" }":B.length===0?"["+String(a)+"]":"{ ["+String(a)+"] "+$join.call(B,", ")+" }"}if(typeof a=="object"&&b){if(inspectSymbol&&typeof a[inspectSymbol]=="function"&&utilInspect)return utilInspect(a,{depth:g-c});if(b!=="symbol"&&typeof a.inspect=="function")return a.inspect()}if(isMap(a)){var M=[];return mapForEach&&mapForEach.call(a,function(q,Y){M.push(E(Y,a,!0)+" => "+E(q,a))}),collectionOf("Map",mapSize.call(a),M,v)}if(isSet$1(a)){var L=[];return setForEach&&setForEach.call(a,function(q){L.push(E(q,a))}),collectionOf("Set",setSize.call(a),L,v)}if(isWeakMap(a))return weakCollectionOf("WeakMap");if(isWeakSet(a))return weakCollectionOf("WeakSet");if(isWeakRef(a))return weakCollectionOf("WeakRef");if(isNumber$1(a))return markBoxed(E(Number(a)));if(isBigInt(a))return markBoxed(E(bigIntValueOf.call(a)));if(isBoolean(a))return markBoxed(booleanValueOf.call(a));if(isString$4(a))return markBoxed(E(String(a)));if(!isDate$2(a)&&!isRegExp$1(a)){var ee=arrObjKeys(a,E),z=gPO?gPO(a)===Object.prototype:a instanceof Object||a.constructor===Object,oe=a instanceof Object?"":"null prototype",W=!z&&toStringTag&&Object(a)===a&&toStringTag in a?$slice.call(toStr(a),8,-1):oe?"Object":"",P=z||typeof a.constructor!="function"?"":a.constructor.name?a.constructor.name+" ":"",D=P+(W||oe?"["+$join.call($concat.call([],W||[],oe||[]),": ")+"] ":"");return ee.length===0?D+"{}":v?D+"{"+indentedJoin(ee,v)+"}":D+"{ "+$join.call(ee,", ")+" }"}return String(a)};function wrapQuotes(e,a,t){var c=(t.quoteStyle||a)==="double"?'"':"'";return c+e+c}function quote(e){return $replace.call(String(e),/"/g,"&quot;")}function isArray$8(e){return toStr(e)==="[object Array]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isDate$2(e){return toStr(e)==="[object Date]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isRegExp$1(e){return toStr(e)==="[object RegExp]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isError(e){return toStr(e)==="[object Error]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isString$4(e){return toStr(e)==="[object String]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isNumber$1(e){return toStr(e)==="[object Number]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isBoolean(e){return toStr(e)==="[object Boolean]"&&(!toStringTag||!(typeof e=="object"&&toStringTag in e))}function isSymbol(e){if(hasShammedSymbols)return e&&typeof e=="object"&&e instanceof Symbol;if(typeof e=="symbol")return!0;if(!e||typeof e!="object"||!symToString)return!1;try{return symToString.call(e),!0}catch{}return!1}function isBigInt(e){if(!e||typeof e!="object"||!bigIntValueOf)return!1;try{return bigIntValueOf.call(e),!0}catch{}return!1}var hasOwn=Object.prototype.hasOwnProperty||function(e){return e in this};function has$3(e,a){return hasOwn.call(e,a)}function toStr(e){return objectToString$1.call(e)}function nameOf(e){if(e.name)return e.name;var a=$match.call(functionToString.call(e),/^function\s*([\w$]+)/);return a?a[1]:null}function indexOf(e,a){if(e.indexOf)return e.indexOf(a);for(var t=0,c=e.length;t<c;t++)if(e[t]===a)return t;return-1}function isMap(e){if(!mapSize||!e||typeof e!="object")return!1;try{mapSize.call(e);try{setSize.call(e)}catch{return!0}return e instanceof Map}catch{}return!1}function isWeakMap(e){if(!weakMapHas||!e||typeof e!="object")return!1;try{weakMapHas.call(e,weakMapHas);try{weakSetHas.call(e,weakSetHas)}catch{return!0}return e instanceof WeakMap}catch{}return!1}function isWeakRef(e){if(!weakRefDeref||!e||typeof e!="object")return!1;try{return weakRefDeref.call(e),!0}catch{}return!1}function isSet$1(e){if(!setSize||!e||typeof e!="object")return!1;try{setSize.call(e);try{mapSize.call(e)}catch{return!0}return e instanceof Set}catch{}return!1}function isWeakSet(e){if(!weakSetHas||!e||typeof e!="object")return!1;try{weakSetHas.call(e,weakSetHas);try{weakMapHas.call(e,weakMapHas)}catch{return!0}return e instanceof WeakSet}catch{}return!1}function isElement(e){return!e||typeof e!="object"?!1:typeof HTMLElement<"u"&&e instanceof HTMLElement?!0:typeof e.nodeName=="string"&&typeof e.getAttribute=="function"}function inspectString(e,a){if(e.length>a.maxStringLength){var t=e.length-a.maxStringLength,c="... "+t+" more character"+(t>1?"s":"");return inspectString($slice.call(e,0,a.maxStringLength),a)+c}var i=$replace.call($replace.call(e,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,lowbyte);return wrapQuotes(i,"single",a)}function lowbyte(e){var a=e.charCodeAt(0),t={8:"b",9:"t",10:"n",12:"f",13:"r"}[a];return t?"\\"+t:"\\x"+(a<16?"0":"")+$toUpperCase.call(a.toString(16))}function markBoxed(e){return"Object("+e+")"}function weakCollectionOf(e){return e+" { ? }"}function collectionOf(e,a,t,c){var i=c?indentedJoin(t,c):$join.call(t,", ");return e+" ("+a+") {"+i+"}"}function singleLineValues(e){for(var a=0;a<e.length;a++)if(indexOf(e[a],`
`)>=0)return!1;return!0}function getIndent(e,a){var t;if(e.indent==="	")t="	";else if(typeof e.indent=="number"&&e.indent>0)t=$join.call(Array(e.indent+1)," ");else return null;return{base:t,prev:$join.call(Array(a+1),t)}}function indentedJoin(e,a){if(e.length===0)return"";var t=`
`+a.prev+a.base;return t+$join.call(e,","+t)+`
`+a.prev}function arrObjKeys(e,a){var t=isArray$8(e),c=[];if(t){c.length=e.length;for(var i=0;i<e.length;i++)c[i]=has$3(e,i)?a(e[i],e):""}var o=typeof gOPS=="function"?gOPS(e):[],b;if(hasShammedSymbols){b={};for(var u=0;u<o.length;u++)b["$"+o[u]]=o[u]}for(var l in e)has$3(e,l)&&(t&&String(Number(l))===l&&l<e.length||hasShammedSymbols&&b["$"+l]instanceof Symbol||($test.call(/[^\w$]/,l)?c.push(a(l,e)+": "+a(e[l],e)):c.push(l+": "+a(e[l],e))));if(typeof gOPS=="function")for(var x=0;x<o.length;x++)isEnumerable.call(e,o[x])&&c.push("["+a(o[x])+"]: "+a(e[o[x]],e));return c}var GetIntrinsic=requireGetIntrinsic(),callBound=callBound$1,inspect=objectInspect,$TypeError=GetIntrinsic("%TypeError%"),$WeakMap=GetIntrinsic("%WeakMap%",!0),$Map=GetIntrinsic("%Map%",!0),$weakMapGet=callBound("WeakMap.prototype.get",!0),$weakMapSet=callBound("WeakMap.prototype.set",!0),$weakMapHas=callBound("WeakMap.prototype.has",!0),$mapGet=callBound("Map.prototype.get",!0),$mapSet=callBound("Map.prototype.set",!0),$mapHas=callBound("Map.prototype.has",!0),listGetNode=function(e,a){for(var t=e,c;(c=t.next)!==null;t=c)if(c.key===a)return t.next=c.next,c.next=e.next,e.next=c,c},listGet=function(e,a){var t=listGetNode(e,a);return t&&t.value},listSet=function(e,a,t){var c=listGetNode(e,a);c?c.value=t:e.next={key:a,next:e.next,value:t}},listHas=function(e,a){return!!listGetNode(e,a)},sideChannel=function(){var a,t,c,i={assert:function(o){if(!i.has(o))throw new $TypeError("Side channel does not contain "+inspect(o))},get:function(o){if($WeakMap&&o&&(typeof o=="object"||typeof o=="function")){if(a)return $weakMapGet(a,o)}else if($Map){if(t)return $mapGet(t,o)}else if(c)return listGet(c,o)},has:function(o){if($WeakMap&&o&&(typeof o=="object"||typeof o=="function")){if(a)return $weakMapHas(a,o)}else if($Map){if(t)return $mapHas(t,o)}else if(c)return listHas(c,o);return!1},set:function(o,b){$WeakMap&&o&&(typeof o=="object"||typeof o=="function")?(a||(a=new $WeakMap),$weakMapSet(a,o,b)):$Map?(t||(t=new $Map),$mapSet(t,o,b)):(c||(c={key:{},next:null}),listSet(c,o,b))}};return i},replace$1=String.prototype.replace,percentTwenties=/%20/g,Format={RFC1738:"RFC1738",RFC3986:"RFC3986"},formats$3={default:Format.RFC3986,formatters:{RFC1738:function(e){return replace$1.call(e,percentTwenties,"+")},RFC3986:function(e){return String(e)}},RFC1738:Format.RFC1738,RFC3986:Format.RFC3986},formats$2=formats$3,has$2=Object.prototype.hasOwnProperty,isArray$7=Array.isArray,hexTable=function(){for(var e=[],a=0;a<256;++a)e.push("%"+((a<16?"0":"")+a.toString(16)).toUpperCase());return e}(),compactQueue=function(a){for(;a.length>1;){var t=a.pop(),c=t.obj[t.prop];if(isArray$7(c)){for(var i=[],o=0;o<c.length;++o)typeof c[o]<"u"&&i.push(c[o]);t.obj[t.prop]=i}}},arrayToObject=function(a,t){for(var c=t&&t.plainObjects?Object.create(null):{},i=0;i<a.length;++i)typeof a[i]<"u"&&(c[i]=a[i]);return c},merge$1=function e(a,t,c){if(!t)return a;if(typeof t!="object"){if(isArray$7(a))a.push(t);else if(a&&typeof a=="object")(c&&(c.plainObjects||c.allowPrototypes)||!has$2.call(Object.prototype,t))&&(a[t]=!0);else return[a,t];return a}if(!a||typeof a!="object")return[a].concat(t);var i=a;return isArray$7(a)&&!isArray$7(t)&&(i=arrayToObject(a,c)),isArray$7(a)&&isArray$7(t)?(t.forEach(function(o,b){if(has$2.call(a,b)){var u=a[b];u&&typeof u=="object"&&o&&typeof o=="object"?a[b]=e(u,o,c):a.push(o)}else a[b]=o}),a):Object.keys(t).reduce(function(o,b){var u=t[b];return has$2.call(o,b)?o[b]=e(o[b],u,c):o[b]=u,o},i)},assign=function(a,t){return Object.keys(t).reduce(function(c,i){return c[i]=t[i],c},a)},decode$q=function(e,a,t){var c=e.replace(/\+/g," ");if(t==="iso-8859-1")return c.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(c)}catch{return c}},encode$r=function(a,t,c,i,o){if(a.length===0)return a;var b=a;if(typeof a=="symbol"?b=Symbol.prototype.toString.call(a):typeof a!="string"&&(b=String(a)),c==="iso-8859-1")return escape(b).replace(/%u[0-9a-f]{4}/gi,function(g){return"%26%23"+parseInt(g.slice(2),16)+"%3B"});for(var u="",l=0;l<b.length;++l){var x=b.charCodeAt(l);if(x===45||x===46||x===95||x===126||x>=48&&x<=57||x>=65&&x<=90||x>=97&&x<=122||o===formats$2.RFC1738&&(x===40||x===41)){u+=b.charAt(l);continue}if(x<128){u=u+hexTable[x];continue}if(x<2048){u=u+(hexTable[192|x>>6]+hexTable[128|x&63]);continue}if(x<55296||x>=57344){u=u+(hexTable[224|x>>12]+hexTable[128|x>>6&63]+hexTable[128|x&63]);continue}l+=1,x=65536+((x&1023)<<10|b.charCodeAt(l)&1023),u+=hexTable[240|x>>18]+hexTable[128|x>>12&63]+hexTable[128|x>>6&63]+hexTable[128|x&63]}return u},compact=function(a){for(var t=[{obj:{o:a},prop:"o"}],c=[],i=0;i<t.length;++i)for(var o=t[i],b=o.obj[o.prop],u=Object.keys(b),l=0;l<u.length;++l){var x=u[l],g=b[x];typeof g=="object"&&g!==null&&c.indexOf(g)===-1&&(t.push({obj:b,prop:x}),c.push(g))}return compactQueue(t),a},isRegExp=function(a){return Object.prototype.toString.call(a)==="[object RegExp]"},isBuffer$3=function(a){return!a||typeof a!="object"?!1:!!(a.constructor&&a.constructor.isBuffer&&a.constructor.isBuffer(a))},combine$1=function(a,t){return[].concat(a,t)},maybeMap=function(a,t){if(isArray$7(a)){for(var c=[],i=0;i<a.length;i+=1)c.push(t(a[i]));return c}return t(a)},utils$o={arrayToObject,assign,combine:combine$1,compact,decode:decode$q,encode:encode$r,isBuffer:isBuffer$3,isRegExp,maybeMap,merge:merge$1},getSideChannel=sideChannel,utils$n=utils$o,formats$1=formats$3,has$1=Object.prototype.hasOwnProperty,arrayPrefixGenerators={brackets:function(a){return a+"[]"},comma:"comma",indices:function(a,t){return a+"["+t+"]"},repeat:function(a){return a}},isArray$6=Array.isArray,push=Array.prototype.push,pushToArray=function(e,a){push.apply(e,isArray$6(a)?a:[a])},toISO=Date.prototype.toISOString,defaultFormat=formats$1.default,defaults$5={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:utils$n.encode,encodeValuesOnly:!1,format:defaultFormat,formatter:formats$1.formatters[defaultFormat],indices:!1,serializeDate:function(a){return toISO.call(a)},skipNulls:!1,strictNullHandling:!1},isNonNullishPrimitive=function(a){return typeof a=="string"||typeof a=="number"||typeof a=="boolean"||typeof a=="symbol"||typeof a=="bigint"},sentinel={},stringify$2=function e(a,t,c,i,o,b,u,l,x,g,v,E,S,T,I,A){for(var C=a,O=A,R=0,B=!1;(O=O.get(sentinel))!==void 0&&!B;){var M=O.get(a);if(R+=1,typeof M<"u"){if(M===R)throw new RangeError("Cyclic object value");B=!0}typeof O.get(sentinel)>"u"&&(R=0)}if(typeof l=="function"?C=l(t,C):C instanceof Date?C=v(C):c==="comma"&&isArray$6(C)&&(C=utils$n.maybeMap(C,function(j){return j instanceof Date?v(j):j})),C===null){if(o)return u&&!T?u(t,defaults$5.encoder,I,"key",E):t;C=""}if(isNonNullishPrimitive(C)||utils$n.isBuffer(C)){if(u){var L=T?t:u(t,defaults$5.encoder,I,"key",E);return[S(L)+"="+S(u(C,defaults$5.encoder,I,"value",E))]}return[S(t)+"="+S(String(C))]}var ee=[];if(typeof C>"u")return ee;var z;if(c==="comma"&&isArray$6(C))T&&u&&(C=utils$n.maybeMap(C,u)),z=[{value:C.length>0?C.join(",")||null:void 0}];else if(isArray$6(l))z=l;else{var oe=Object.keys(C);z=x?oe.sort(x):oe}for(var W=i&&isArray$6(C)&&C.length===1?t+"[]":t,P=0;P<z.length;++P){var D=z[P],q=typeof D=="object"&&typeof D.value<"u"?D.value:C[D];if(!(b&&q===null)){var Y=isArray$6(C)?typeof c=="function"?c(W,D):W:W+(g?"."+D:"["+D+"]");A.set(a,R);var U=getSideChannel();U.set(sentinel,A),pushToArray(ee,e(q,Y,c,i,o,b,c==="comma"&&T&&isArray$6(C)?null:u,l,x,g,v,E,S,T,I,U))}}return ee},normalizeStringifyOptions=function(a){if(!a)return defaults$5;if(a.encoder!==null&&typeof a.encoder<"u"&&typeof a.encoder!="function")throw new TypeError("Encoder has to be a function.");var t=a.charset||defaults$5.charset;if(typeof a.charset<"u"&&a.charset!=="utf-8"&&a.charset!=="iso-8859-1")throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var c=formats$1.default;if(typeof a.format<"u"){if(!has$1.call(formats$1.formatters,a.format))throw new TypeError("Unknown format option provided.");c=a.format}var i=formats$1.formatters[c],o=defaults$5.filter;return(typeof a.filter=="function"||isArray$6(a.filter))&&(o=a.filter),{addQueryPrefix:typeof a.addQueryPrefix=="boolean"?a.addQueryPrefix:defaults$5.addQueryPrefix,allowDots:typeof a.allowDots>"u"?defaults$5.allowDots:!!a.allowDots,charset:t,charsetSentinel:typeof a.charsetSentinel=="boolean"?a.charsetSentinel:defaults$5.charsetSentinel,delimiter:typeof a.delimiter>"u"?defaults$5.delimiter:a.delimiter,encode:typeof a.encode=="boolean"?a.encode:defaults$5.encode,encoder:typeof a.encoder=="function"?a.encoder:defaults$5.encoder,encodeValuesOnly:typeof a.encodeValuesOnly=="boolean"?a.encodeValuesOnly:defaults$5.encodeValuesOnly,filter:o,format:c,formatter:i,serializeDate:typeof a.serializeDate=="function"?a.serializeDate:defaults$5.serializeDate,skipNulls:typeof a.skipNulls=="boolean"?a.skipNulls:defaults$5.skipNulls,sort:typeof a.sort=="function"?a.sort:null,strictNullHandling:typeof a.strictNullHandling=="boolean"?a.strictNullHandling:defaults$5.strictNullHandling}},stringify_1=function(e,a){var t=e,c=normalizeStringifyOptions(a),i,o;typeof c.filter=="function"?(o=c.filter,t=o("",t)):isArray$6(c.filter)&&(o=c.filter,i=o);var b=[];if(typeof t!="object"||t===null)return"";var u;a&&a.arrayFormat in arrayPrefixGenerators?u=a.arrayFormat:a&&"indices"in a?u=a.indices?"indices":"repeat":u="indices";var l=arrayPrefixGenerators[u];if(a&&"commaRoundTrip"in a&&typeof a.commaRoundTrip!="boolean")throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var x=l==="comma"&&a&&a.commaRoundTrip;i||(i=Object.keys(t)),c.sort&&i.sort(c.sort);for(var g=getSideChannel(),v=0;v<i.length;++v){var E=i[v];c.skipNulls&&t[E]===null||pushToArray(b,stringify$2(t[E],E,l,x,c.strictNullHandling,c.skipNulls,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.format,c.formatter,c.encodeValuesOnly,c.charset,g))}var S=b.join(c.delimiter),T=c.addQueryPrefix===!0?"?":"";return c.charsetSentinel&&(c.charset==="iso-8859-1"?T+="utf8=%26%2310003%3B&":T+="utf8=%E2%9C%93&"),S.length>0?T+S:""},utils$m=utils$o,has=Object.prototype.hasOwnProperty,isArray$5=Array.isArray,defaults$4={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:utils$m.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},interpretNumericEntities=function(e){return e.replace(/&#(\d+);/g,function(a,t){return String.fromCharCode(parseInt(t,10))})},parseArrayValue=function(e,a){return e&&typeof e=="string"&&a.comma&&e.indexOf(",")>-1?e.split(","):e},isoSentinel="utf8=%26%2310003%3B",charsetSentinel="utf8=%E2%9C%93",parseValues=function(a,t){var c={},i=t.ignoreQueryPrefix?a.replace(/^\?/,""):a,o=t.parameterLimit===1/0?void 0:t.parameterLimit,b=i.split(t.delimiter,o),u=-1,l,x=t.charset;if(t.charsetSentinel)for(l=0;l<b.length;++l)b[l].indexOf("utf8=")===0&&(b[l]===charsetSentinel?x="utf-8":b[l]===isoSentinel&&(x="iso-8859-1"),u=l,l=b.length);for(l=0;l<b.length;++l)if(l!==u){var g=b[l],v=g.indexOf("]="),E=v===-1?g.indexOf("="):v+1,S,T;E===-1?(S=t.decoder(g,defaults$4.decoder,x,"key"),T=t.strictNullHandling?null:""):(S=t.decoder(g.slice(0,E),defaults$4.decoder,x,"key"),T=utils$m.maybeMap(parseArrayValue(g.slice(E+1),t),function(I){return t.decoder(I,defaults$4.decoder,x,"value")})),T&&t.interpretNumericEntities&&x==="iso-8859-1"&&(T=interpretNumericEntities(T)),g.indexOf("[]=")>-1&&(T=isArray$5(T)?[T]:T),has.call(c,S)?c[S]=utils$m.combine(c[S],T):c[S]=T}return c},parseObject=function(e,a,t,c){for(var i=c?a:parseArrayValue(a,t),o=e.length-1;o>=0;--o){var b,u=e[o];if(u==="[]"&&t.parseArrays)b=[].concat(i);else{b=t.plainObjects?Object.create(null):{};var l=u.charAt(0)==="["&&u.charAt(u.length-1)==="]"?u.slice(1,-1):u,x=parseInt(l,10);!t.parseArrays&&l===""?b={0:i}:!isNaN(x)&&u!==l&&String(x)===l&&x>=0&&t.parseArrays&&x<=t.arrayLimit?(b=[],b[x]=i):l!=="__proto__"&&(b[l]=i)}i=b}return i},parseKeys=function(a,t,c,i){if(a){var o=c.allowDots?a.replace(/\.([^.[]+)/g,"[$1]"):a,b=/(\[[^[\]]*])/,u=/(\[[^[\]]*])/g,l=c.depth>0&&b.exec(o),x=l?o.slice(0,l.index):o,g=[];if(x){if(!c.plainObjects&&has.call(Object.prototype,x)&&!c.allowPrototypes)return;g.push(x)}for(var v=0;c.depth>0&&(l=u.exec(o))!==null&&v<c.depth;){if(v+=1,!c.plainObjects&&has.call(Object.prototype,l[1].slice(1,-1))&&!c.allowPrototypes)return;g.push(l[1])}return l&&g.push("["+o.slice(l.index)+"]"),parseObject(g,t,c,i)}},normalizeParseOptions=function(a){if(!a)return defaults$4;if(a.decoder!==null&&a.decoder!==void 0&&typeof a.decoder!="function")throw new TypeError("Decoder has to be a function.");if(typeof a.charset<"u"&&a.charset!=="utf-8"&&a.charset!=="iso-8859-1")throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=typeof a.charset>"u"?defaults$4.charset:a.charset;return{allowDots:typeof a.allowDots>"u"?defaults$4.allowDots:!!a.allowDots,allowPrototypes:typeof a.allowPrototypes=="boolean"?a.allowPrototypes:defaults$4.allowPrototypes,allowSparse:typeof a.allowSparse=="boolean"?a.allowSparse:defaults$4.allowSparse,arrayLimit:typeof a.arrayLimit=="number"?a.arrayLimit:defaults$4.arrayLimit,charset:t,charsetSentinel:typeof a.charsetSentinel=="boolean"?a.charsetSentinel:defaults$4.charsetSentinel,comma:typeof a.comma=="boolean"?a.comma:defaults$4.comma,decoder:typeof a.decoder=="function"?a.decoder:defaults$4.decoder,delimiter:typeof a.delimiter=="string"||utils$m.isRegExp(a.delimiter)?a.delimiter:defaults$4.delimiter,depth:typeof a.depth=="number"||a.depth===!1?+a.depth:defaults$4.depth,ignoreQueryPrefix:a.ignoreQueryPrefix===!0,interpretNumericEntities:typeof a.interpretNumericEntities=="boolean"?a.interpretNumericEntities:defaults$4.interpretNumericEntities,parameterLimit:typeof a.parameterLimit=="number"?a.parameterLimit:defaults$4.parameterLimit,parseArrays:a.parseArrays!==!1,plainObjects:typeof a.plainObjects=="boolean"?a.plainObjects:defaults$4.plainObjects,strictNullHandling:typeof a.strictNullHandling=="boolean"?a.strictNullHandling:defaults$4.strictNullHandling}},parse$4=function(e,a){var t=normalizeParseOptions(a);if(e===""||e===null||typeof e>"u")return t.plainObjects?Object.create(null):{};for(var c=typeof e=="string"?parseValues(e,t):e,i=t.plainObjects?Object.create(null):{},o=Object.keys(c),b=0;b<o.length;++b){var u=o[b],l=parseKeys(u,c[u],t,typeof e=="string");i=utils$m.merge(i,l,t)}return t.allowSparse===!0?i:utils$m.compact(i)},stringify$1=stringify_1,parse$3=parse$4,formats=formats$3,lib$b={formats,parse:parse$3,stringify:stringify$1},global=typeof globalThis<"u"&&globalThis||typeof self<"u"&&self||typeof global<"u"&&global,support={searchParams:"URLSearchParams"in global,iterable:"Symbol"in global&&"iterator"in Symbol,blob:"FileReader"in global&&"Blob"in global&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in global,arrayBuffer:"ArrayBuffer"in global};function isDataView(e){return e&&DataView.prototype.isPrototypeOf(e)}if(support.arrayBuffer)var viewClasses=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],isArrayBufferView$1=ArrayBuffer.isView||function(e){return e&&viewClasses.indexOf(Object.prototype.toString.call(e))>-1};function normalizeName(e){if(typeof e!="string"&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e)||e==="")throw new TypeError('Invalid character in header field name: "'+e+'"');return e.toLowerCase()}function normalizeValue(e){return typeof e!="string"&&(e=String(e)),e}function iteratorFor(e){var a={next:function(){var t=e.shift();return{done:t===void 0,value:t}}};return support.iterable&&(a[Symbol.iterator]=function(){return a}),a}function Headers$1(e){this.map={},e instanceof Headers$1?e.forEach(function(a,t){this.append(t,a)},this):Array.isArray(e)?e.forEach(function(a){this.append(a[0],a[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(a){this.append(a,e[a])},this)}Headers$1.prototype.append=function(e,a){e=normalizeName(e),a=normalizeValue(a);var t=this.map[e];this.map[e]=t?t+", "+a:a};Headers$1.prototype.delete=function(e){delete this.map[normalizeName(e)]};Headers$1.prototype.get=function(e){return e=normalizeName(e),this.has(e)?this.map[e]:null};Headers$1.prototype.has=function(e){return this.map.hasOwnProperty(normalizeName(e))};Headers$1.prototype.set=function(e,a){this.map[normalizeName(e)]=normalizeValue(a)};Headers$1.prototype.forEach=function(e,a){for(var t in this.map)this.map.hasOwnProperty(t)&&e.call(a,this.map[t],t,this)};Headers$1.prototype.keys=function(){var e=[];return this.forEach(function(a,t){e.push(t)}),iteratorFor(e)};Headers$1.prototype.values=function(){var e=[];return this.forEach(function(a){e.push(a)}),iteratorFor(e)};Headers$1.prototype.entries=function(){var e=[];return this.forEach(function(a,t){e.push([t,a])}),iteratorFor(e)};support.iterable&&(Headers$1.prototype[Symbol.iterator]=Headers$1.prototype.entries);function consumed(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function fileReaderReady(e){return new Promise(function(a,t){e.onload=function(){a(e.result)},e.onerror=function(){t(e.error)}})}function readBlobAsArrayBuffer(e){var a=new FileReader,t=fileReaderReady(a);return a.readAsArrayBuffer(e),t}function readBlobAsText(e){var a=new FileReader,t=fileReaderReady(a);return a.readAsText(e),t}function readArrayBufferAsText(e){for(var a=new Uint8Array(e),t=new Array(a.length),c=0;c<a.length;c++)t[c]=String.fromCharCode(a[c]);return t.join("")}function bufferClone(e){if(e.slice)return e.slice(0);var a=new Uint8Array(e.byteLength);return a.set(new Uint8Array(e)),a.buffer}function Body(){return this.bodyUsed=!1,this._initBody=function(e){this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?typeof e=="string"?this._bodyText=e:support.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:support.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:support.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():support.arrayBuffer&&support.blob&&isDataView(e)?(this._bodyArrayBuffer=bufferClone(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):support.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||isArrayBufferView$1(e))?this._bodyArrayBuffer=bufferClone(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||(typeof e=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):support.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},support.blob&&(this.blob=function(){var e=consumed(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=consumed(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}else return this.blob().then(readBlobAsArrayBuffer)}),this.text=function(){var e=consumed(this);if(e)return e;if(this._bodyBlob)return readBlobAsText(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},support.formData&&(this.formData=function(){return this.text().then(decode$p)}),this.json=function(){return this.text().then(JSON.parse)},this}var methods=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function normalizeMethod(e){var a=e.toUpperCase();return methods.indexOf(a)>-1?a:e}function Request$1(e,a){if(!(this instanceof Request$1))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');a=a||{};var t=a.body;if(e instanceof Request$1){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,a.headers||(this.headers=new Headers$1(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,!t&&e._bodyInit!=null&&(t=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=a.credentials||this.credentials||"same-origin",(a.headers||!this.headers)&&(this.headers=new Headers$1(a.headers)),this.method=normalizeMethod(a.method||this.method||"GET"),this.mode=a.mode||this.mode||null,this.signal=a.signal||this.signal,this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&t)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(t),(this.method==="GET"||this.method==="HEAD")&&(a.cache==="no-store"||a.cache==="no-cache")){var c=/([?&])_=[^&]*/;if(c.test(this.url))this.url=this.url.replace(c,"$1_="+new Date().getTime());else{var i=/\?/;this.url+=(i.test(this.url)?"&":"?")+"_="+new Date().getTime()}}}Request$1.prototype.clone=function(){return new Request$1(this,{body:this._bodyInit})};function decode$p(e){var a=new FormData;return e.trim().split("&").forEach(function(t){if(t){var c=t.split("="),i=c.shift().replace(/\+/g," "),o=c.join("=").replace(/\+/g," ");a.append(decodeURIComponent(i),decodeURIComponent(o))}}),a}function parseHeaders$1(e){var a=new Headers$1,t=e.replace(/\r?\n[\t ]+/g," ");return t.split("\r").map(function(c){return c.indexOf(`
`)===0?c.substr(1,c.length):c}).forEach(function(c){var i=c.split(":"),o=i.shift().trim();if(o){var b=i.join(":").trim();a.append(o,b)}}),a}Body.call(Request$1.prototype);function Response(e,a){if(!(this instanceof Response))throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');a||(a={}),this.type="default",this.status=a.status===void 0?200:a.status,this.ok=this.status>=200&&this.status<300,this.statusText=a.statusText===void 0?"":""+a.statusText,this.headers=new Headers$1(a.headers),this.url=a.url||"",this._initBody(e)}Body.call(Response.prototype);Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers$1(this.headers),url:this.url})};Response.error=function(){var e=new Response(null,{status:0,statusText:""});return e.type="error",e};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(e,a){if(redirectStatuses.indexOf(a)===-1)throw new RangeError("Invalid status code");return new Response(null,{status:a,headers:{location:e}})};var DOMException=global.DOMException;try{new DOMException}catch{DOMException=function(a,t){this.message=a,this.name=t;var c=Error(a);this.stack=c.stack},DOMException.prototype=Object.create(Error.prototype),DOMException.prototype.constructor=DOMException}function fetch$2(e,a){return new Promise(function(t,c){var i=new Request$1(e,a);if(i.signal&&i.signal.aborted)return c(new DOMException("Aborted","AbortError"));var o=new XMLHttpRequest;function b(){o.abort()}o.onload=function(){var l={status:o.status,statusText:o.statusText,headers:parseHeaders$1(o.getAllResponseHeaders()||"")};l.url="responseURL"in o?o.responseURL:l.headers.get("X-Request-URL");var x="response"in o?o.response:o.responseText;setTimeout(function(){t(new Response(x,l))},0)},o.onerror=function(){setTimeout(function(){c(new TypeError("Network request failed"))},0)},o.ontimeout=function(){setTimeout(function(){c(new TypeError("Network request failed"))},0)},o.onabort=function(){setTimeout(function(){c(new DOMException("Aborted","AbortError"))},0)};function u(l){try{return l===""&&global.location.href?global.location.href:l}catch{return l}}o.open(i.method,u(i.url),!0),i.credentials==="include"?o.withCredentials=!0:i.credentials==="omit"&&(o.withCredentials=!1),"responseType"in o&&(support.blob?o.responseType="blob":support.arrayBuffer&&i.headers.get("Content-Type")&&i.headers.get("Content-Type").indexOf("application/octet-stream")!==-1&&(o.responseType="arraybuffer")),a&&typeof a.headers=="object"&&!(a.headers instanceof Headers$1)?Object.getOwnPropertyNames(a.headers).forEach(function(l){o.setRequestHeader(l,normalizeValue(a.headers[l]))}):i.headers.forEach(function(l,x){o.setRequestHeader(x,l)}),i.signal&&(i.signal.addEventListener("abort",b),o.onreadystatechange=function(){o.readyState===4&&i.signal.removeEventListener("abort",b)}),o.send(typeof i._bodyInit>"u"?null:i._bodyInit)})}fetch$2.polyfill=!0;global.fetch||(global.fetch=fetch$2,global.Headers=Headers$1,global.Request=Request$1,global.Response=Response);self.fetch.bind(self);function ownKeys(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);a&&(c=c.filter(function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable})),t.push.apply(t,c)}return t}function _objectSpread2(e){for(var a=1;a<arguments.length;a++){var t=arguments[a]!=null?arguments[a]:{};a%2?ownKeys(Object(t),!0).forEach(function(c){_defineProperty(e,c,t[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(c){Object.defineProperty(e,c,Object.getOwnPropertyDescriptor(t,c))})}return e}function _typeof$2(e){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?_typeof$2=function(a){return typeof a}:_typeof$2=function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof$2(e)}function _classCallCheck(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,a){for(var t=0;t<a.length;t++){var c=a[t];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}function _createClass(e,a,t){return a&&_defineProperties(e.prototype,a),t&&_defineProperties(e,t),e}function _defineProperty(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function _inherits(e,a){if(typeof a!="function"&&a!==null)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(a&&a.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),a&&_setPrototypeOf(e,a)}function _getPrototypeOf(e){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},_getPrototypeOf(e)}function _setPrototypeOf(e,a){return _setPrototypeOf=Object.setPrototypeOf||function(c,i){return c.__proto__=i,c},_setPrototypeOf(e,a)}function _isNativeReflectConstruct(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function _construct(e,a,t){return _isNativeReflectConstruct()?_construct=Reflect.construct:_construct=function(i,o,b){var u=[null];u.push.apply(u,o);var l=Function.bind.apply(i,u),x=new l;return b&&_setPrototypeOf(x,b.prototype),x},_construct.apply(null,arguments)}function _isNativeFunction(e){return Function.toString.call(e).indexOf("[native code]")!==-1}function _wrapNativeSuper(e){var a=typeof Map=="function"?new Map:void 0;return _wrapNativeSuper=function(c){if(c===null||!_isNativeFunction(c))return c;if(typeof c!="function")throw new TypeError("Super expression must either be null or a function");if(typeof a<"u"){if(a.has(c))return a.get(c);a.set(c,i)}function i(){return _construct(c,arguments,_getPrototypeOf(this).constructor)}return i.prototype=Object.create(c.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(i,c)},_wrapNativeSuper(e)}function _assertThisInitialized(e){if(e===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _possibleConstructorReturn(e,a){if(a&&(typeof a=="object"||typeof a=="function"))return a;if(a!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _createSuper(e){var a=_isNativeReflectConstruct();return function(){var c=_getPrototypeOf(e),i;if(a){var o=_getPrototypeOf(this).constructor;i=Reflect.construct(c,arguments,o)}else i=c.apply(this,arguments);return _possibleConstructorReturn(this,i)}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray$1(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray$1(e)}function _iterableToArray(e){if(typeof Symbol<"u"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function _unsupportedIterableToArray$1(e,a){if(e){if(typeof e=="string")return _arrayLikeToArray$1(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);if(t==="Object"&&e.constructor&&(t=e.constructor.name),t==="Map"||t==="Set")return Array.from(e);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray$1(e,a)}}function _arrayLikeToArray$1(e,a){(a==null||a>e.length)&&(a=e.length);for(var t=0,c=new Array(a);t<a;t++)c[t]=e[t];return c}function _nonIterableSpread(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function compose(e){if(!Array.isArray(e))throw new TypeError("Middlewares must be an array!");for(var a=e.length,t=0;t<a;t++)if(typeof e[t]!="function")throw new TypeError("Middleware must be componsed of function");return function(i,o){var b=-1;function u(l){if(l<=b)return Promise.reject(new Error("next() should not be called multiple times in one middleware!"));b=l;var x=e[l]||o;if(!x)return Promise.resolve();try{return Promise.resolve(x(i,function(){return u(l+1)}))}catch(g){return Promise.reject(g)}}return u(0)}}var Onion=function(){function e(a){if(_classCallCheck(this,e),!Array.isArray(a))throw new TypeError("Default middlewares must be an array!");this.defaultMiddlewares=_toConsumableArray(a),this.middlewares=[]}return _createClass(e,[{key:"use",value:function(t){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{global:!1,core:!1,defaultInstance:!1},i=!1,o=!1,b=!1;if(typeof c=="number"?(browserExports&&browserExports.env,i=!0,o=!1):_typeof$2(c)==="object"&&c&&(o=c.global||!1,i=c.core||!1,b=c.defaultInstance||!1),o){e.globalMiddlewares.splice(e.globalMiddlewares.length-e.defaultGlobalMiddlewaresLength,0,t);return}if(i){e.coreMiddlewares.splice(e.coreMiddlewares.length-e.defaultCoreMiddlewaresLength,0,t);return}if(b){this.defaultMiddlewares.push(t);return}this.middlewares.push(t)}},{key:"execute",value:function(){var t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,c=compose([].concat(_toConsumableArray(this.middlewares),_toConsumableArray(this.defaultMiddlewares),_toConsumableArray(e.globalMiddlewares),_toConsumableArray(e.coreMiddlewares)));return c(t)}}]),e}();Onion.globalMiddlewares=[];Onion.defaultGlobalMiddlewaresLength=0;Onion.coreMiddlewares=[];Onion.defaultCoreMiddlewaresLength=0;var MapCache=function(){function e(a){_classCallCheck(this,e),this.cache=new Map,this.timer={},this.extendOptions(a)}return _createClass(e,[{key:"extendOptions",value:function(t){this.maxCache=t.maxCache||0}},{key:"get",value:function(t){return this.cache.get(JSON.stringify(t))}},{key:"set",value:function(t,c){var i=this,o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:6e4;if(this.maxCache>0&&this.cache.size>=this.maxCache){var b=_toConsumableArray(this.cache.keys())[0];this.cache.delete(b),this.timer[b]&&clearTimeout(this.timer[b])}var u=JSON.stringify(t);this.cache.set(u,c),o>0&&(this.timer[u]=setTimeout(function(){i.cache.delete(u),delete i.timer[u]},o))}},{key:"delete",value:function(t){var c=JSON.stringify(t);return delete this.timer[c],this.cache.delete(c)}},{key:"clear",value:function(){return this.timer={},this.cache.clear()}}]),e}(),RequestError=function(e){_inherits(t,e);var a=_createSuper(t);function t(c,i){var o,b=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"RequestError";return _classCallCheck(this,t),o=a.call(this,c),o.name="RequestError",o.request=i,o.type=b,o}return t}(_wrapNativeSuper(Error)),ResponseError=function(e){_inherits(t,e);var a=_createSuper(t);function t(c,i,o,b){var u,l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:"ResponseError";return _classCallCheck(this,t),u=a.call(this,i||c.statusText),u.name="ResponseError",u.data=o,u.response=c,u.request=b,u.type=l,u}return t}(_wrapNativeSuper(Error));function readerGBK(e){return new Promise(function(a,t){var c=new FileReader;c.onload=function(){a(c.result)},c.onerror=t,c.readAsText(e,"GBK")})}function safeJsonParse$1(e){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,c=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;try{return JSON.parse(e)}catch{if(a)throw new ResponseError(t,"JSON.parse fail",e,c,"ParseError")}return e}function timeout2Throw(e,a,t){return new Promise(function(c,i){setTimeout(function(){i(new RequestError(a||"timeout of ".concat(e,"ms exceeded"),t,"Timeout"))},e)})}function cancel2Throw(e){return new Promise(function(a,t){e.cancelToken&&e.cancelToken.promise.then(function(c){t(c)})})}var toString$2=Object.prototype.toString;function getEnv(){var e;return typeof browserExports<"u"&&toString$2.call(browserExports)==="[object process]"&&(e="NODE"),typeof XMLHttpRequest<"u"&&(e="BROWSER"),e}function isArray$4(e){return _typeof$2(e)==="object"&&Object.prototype.toString.call(e)==="[object Array]"}function isURLSearchParams$1(e){return typeof URLSearchParams<"u"&&e instanceof URLSearchParams}function isDate$1(e){return _typeof$2(e)==="object"&&Object.prototype.toString.call(e)==="[object Date]"}function isObject$2(e){return e!==null&&_typeof$2(e)==="object"}function forEach2ObjArr(e,a){if(e)if(_typeof$2(e)!=="object"&&(e=[e]),isArray$4(e))for(var t=0;t<e.length;t++)a.call(null,e[t],t,e);else for(var c in e)Object.prototype.hasOwnProperty.call(e,c)&&a.call(null,e[c],c,e)}function getParamObject(e){return isURLSearchParams$1(e)?lib$b.parse(e.toString(),{strictNullHandling:!0}):typeof e=="string"?[e]:e}function reqStringify(e){return lib$b.stringify(e,{arrayFormat:"repeat",strictNullHandling:!0})}function mergeRequestOptions(e,a){return _objectSpread2(_objectSpread2(_objectSpread2({},e),a),{},{headers:_objectSpread2(_objectSpread2({},e.headers),a.headers),params:_objectSpread2(_objectSpread2({},getParamObject(e.params)),getParamObject(a.params)),method:(a.method||e.method||"get").toLowerCase()})}var addfix=function(a){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},c=t.prefix,i=t.suffix;return c&&(a="".concat(c).concat(a)),i&&(a="".concat(a).concat(i)),{url:a,options:t}},warnedCoreType=!1;function __defaultValidateCache(e,a){var t=a.method,c=t===void 0?"get":t;return c.toLowerCase()==="get"}function fetchMiddleware(e,a){if(!e)return a();var t=e.req;t=t===void 0?{}:t;var c=t.options,i=c===void 0?{}:c,o=t.url,b=o===void 0?"":o,u=e.cache,l=e.responseInterceptors,x=i.timeout,g=x===void 0?0:x,v=i.timeoutMessage,E=i.__umiRequestCoreType__,S=E===void 0?"normal":E,T=i.useCache,I=T===void 0?!1:T,A=i.method,C=A===void 0?"get":A,O=i.params,R=i.ttl,B=i.validateCache,M=B===void 0?__defaultValidateCache:B;if(S!=="normal")return browserExports&&browserExports.env,a();var L=fetch;if(!L)throw new Error("Global fetch not exist!");var ee=getEnv()==="BROWSER",z=M(b,i)&&I&&ee;if(z){var oe=u.get({url:b,params:O,method:C});if(oe)return oe=oe.clone(),oe.useCache=!0,e.res=oe,a()}var W;return g>0?W=Promise.race([cancel2Throw(i),L(b,i),timeout2Throw(g,v,e.req)]):W=Promise.race([cancel2Throw(i),L(b,i)]),l.forEach(function(P){W=W.then(function(D){var q=typeof D.clone=="function"?D.clone():D;return P(q,i)})}),W.then(function(P){if(z&&P.status===200){var D=P.clone();D.useCache=!0,u.set({url:b,params:O,method:C},D,R)}return e.res=P,a()})}function parseResponseMiddleware(e,a){var t;return a().then(function(){if(e){var c=e.res,i=c===void 0?{}:c,o=e.req,b=o===void 0?{}:o,u=b||{},l=u.options;l=l===void 0?{}:l;var x=l.responseType,g=x===void 0?"json":x,v=l.charset,E=v===void 0?"utf8":v;l.getResponse;var S=l.throwErrIfParseFail,T=S===void 0?!1:S,I=l.parseResponse,A=I===void 0?!0:I;if(A&&!(!i||!i.clone)){if(t=getEnv()==="BROWSER"?i.clone():i,t.useCache=i.useCache||!1,E==="gbk")try{return i.blob().then(readerGBK).then(function(C){return safeJsonParse$1(C,!1,t,b)})}catch(C){throw new ResponseError(t,C.message,null,b,"ParseError")}else if(g==="json")return i.text().then(function(C){return safeJsonParse$1(C,T,t,b)});try{return i[g]()}catch{throw new ResponseError(t,"responseType not support",null,b,"ParseError")}}}}).then(function(c){if(e){e.res;var i=e.req,o=i===void 0?{}:i,b=o||{},u=b.options;u=u===void 0?{}:u;var l=u.getResponse,x=l===void 0?!1:l;if(t){if(t.status>=200&&t.status<300){if(x){e.res={data:c,response:t};return}e.res=c;return}throw new ResponseError(t,"http error",c,o,"HttpError")}}}).catch(function(c){if(c instanceof RequestError||c instanceof ResponseError)throw c;var i=e.req,o=e.res;throw c.request=c.request||i,c.response=c.response||o,c.type=c.type||c.name,c.data=c.data||void 0,c})}function simplePostMiddleware(e,a){if(!e)return a();var t=e.req;t=t===void 0?{}:t;var c=t.options,i=c===void 0?{}:c,o=i.method,b=o===void 0?"get":o;if(["post","put","patch","delete"].indexOf(b.toLowerCase())===-1)return a();var u=i.requestType,l=u===void 0?"json":u,x=i.data;if(x){var g=Object.prototype.toString.call(x);g==="[object Object]"||g==="[object Array]"?l==="json"?(i.headers=_objectSpread2({Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},i.headers),i.body=JSON.stringify(x)):l==="form"&&(i.headers=_objectSpread2({Accept:"application/json","Content-Type":"application/x-www-form-urlencoded;charset=UTF-8"},i.headers),i.body=reqStringify(x)):(i.headers=_objectSpread2({Accept:"application/json"},i.headers),i.body=x)}return e.req.options=i,a()}function paramsSerialize(e,a){var t,c;if(e)if(a)t=a(e);else if(isURLSearchParams$1(e))t=e.toString();else if(isArray$4(e))c=[],forEach2ObjArr(e,function(o){o===null||typeof o>"u"?c.push(o):c.push(isObject$2(o)?JSON.stringify(o):o)}),t=reqStringify(c);else{c={},forEach2ObjArr(e,function(o,b){var u=o;o===null||typeof o>"u"?c[b]=o:isDate$1(o)?u=o.toISOString():isArray$4(o)?u=o:isObject$2(o)&&(u=JSON.stringify(o)),c[b]=u});var i=reqStringify(c);t=i}return t}function simpleGetMiddleware(e,a){if(!e)return a();var t=e.req;t=t===void 0?{}:t;var c=t.options,i=c===void 0?{}:c,o=i.paramsSerializer,b=i.params,u=e.req;u=u===void 0?{}:u;var l=u.url,x=l===void 0?"":l;i.method=i.method?i.method.toUpperCase():"GET",i.credentials=i.credentials||"same-origin";var g=paramsSerialize(b,o);if(e.req.originUrl=x,g){var v=x.indexOf("?")!==-1?"&":"?";e.req.url="".concat(x).concat(v).concat(g)}return e.req.options=i,a()}var globalMiddlewares=[simplePostMiddleware,simpleGetMiddleware,parseResponseMiddleware],coreMiddlewares=[fetchMiddleware];Onion.globalMiddlewares=globalMiddlewares;Onion.defaultGlobalMiddlewaresLength=globalMiddlewares.length;Onion.coreMiddlewares=coreMiddlewares;Onion.defaultCoreMiddlewaresLength=coreMiddlewares.length;var Core=function(){function e(a){_classCallCheck(this,e),this.onion=new Onion([]),this.fetchIndex=0,this.mapCache=new MapCache(a),this.initOptions=a,this.instanceRequestInterceptors=[],this.instanceResponseInterceptors=[]}return _createClass(e,[{key:"use",value:function(t){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{global:!1,core:!1};return this.onion.use(t,c),this}},{key:"extendOptions",value:function(t){this.initOptions=mergeRequestOptions(this.initOptions,t),this.mapCache.extendOptions(t)}},{key:"dealRequestInterceptors",value:function(t){var c=function(b,u){return b.then(function(){var l=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return t.req.url=l.url||t.req.url,t.req.options=l.options||t.req.options,u(t.req.url,t.req.options)})},i=[].concat(_toConsumableArray(e.requestInterceptors),_toConsumableArray(this.instanceRequestInterceptors));return i.reduce(c,Promise.resolve()).then(function(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return t.req.url=o.url||t.req.url,t.req.options=o.options||t.req.options,Promise.resolve()})}},{key:"request",value:function(t,c){var i=this,o=this.onion,b={req:{url:t,options:_objectSpread2(_objectSpread2({},c),{},{url:t})},res:null,cache:this.mapCache,responseInterceptors:[].concat(_toConsumableArray(e.responseInterceptors),_toConsumableArray(this.instanceResponseInterceptors))};if(typeof t!="string")throw new Error("url MUST be a string");return new Promise(function(u,l){i.dealRequestInterceptors(b).then(function(){return o.execute(b)}).then(function(){u(b.res)}).catch(function(x){var g=b.req.options.errorHandler;if(g)try{var v=g(x);u(v)}catch(E){l(E)}else l(x)})})}}],[{key:"requestUse",value:function(t){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{global:!0};if(typeof t!="function")throw new TypeError("Interceptor must be function!");c.global?e.requestInterceptors.push(t):this.instanceRequestInterceptors.push(t)}},{key:"responseUse",value:function(t){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{global:!0};if(typeof t!="function")throw new TypeError("Interceptor must be function!");c.global?e.responseInterceptors.push(t):this.instanceResponseInterceptors.push(t)}}]),e}();Core.requestInterceptors=[addfix];Core.responseInterceptors=[];function Cancel(e){this.message=e}Cancel.prototype.toString=function(){return this.message?"Cancel: ".concat(this.message):"Cancel"};Cancel.prototype.__CANCEL__=!0;function CancelToken(e){if(typeof e!="function")throw new TypeError("executor must be a function.");var a;this.promise=new Promise(function(i){a=i});var t=this;e(function(i){t.reason||(t.reason=new Cancel(i),a(t.reason))})}CancelToken.prototype.throwIfRequested=function(){if(this.reason)throw this.reason};CancelToken.source=function(){var a,t=new CancelToken(function(i){a=i});return{token:t,cancel:a}};function isCancel$2(e){return!!(e&&e.__CANCEL__)}var request$6=function(){var a=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},t=new Core(a),c=function(b){var u=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},l=mergeRequestOptions(t.initOptions,u);return t.request(b,l)};c.use=t.use.bind(t),c.fetchIndex=t.fetchIndex,c.interceptors={request:{use:Core.requestUse.bind(t)},response:{use:Core.responseUse.bind(t)}};var i=["get","post","delete","put","patch","head","options","rpc"];return i.forEach(function(o){c[o]=function(b,u){return c(b,_objectSpread2(_objectSpread2({},u),{},{method:o}))}}),c.Cancel=Cancel,c.CancelToken=CancelToken,c.isCancel=isCancel$2,c.extendOptions=t.extendOptions.bind(t),c.middlewares={instance:t.onion.middlewares,defaultInstance:t.onion.defaultMiddlewares,global:Onion.globalMiddlewares,core:Onion.coreMiddlewares},c},extend$1=function(a){return request$6(a)};request$6({parseResponse:!1});request$6({});var cryptoJsExports={},cryptoJs={get exports(){return cryptoJsExports},set exports(e){cryptoJsExports=e}},x64CoreExports={},x64Core={get exports(){return x64CoreExports},set exports(e){x64CoreExports=e}},hasRequiredX64Core;function requireX64Core(){return hasRequiredX64Core||(hasRequiredX64Core=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(c){var i=t,o=i.lib,b=o.Base,u=o.WordArray,l=i.x64={};l.Word=b.extend({init:function(x,g){this.high=x,this.low=g}}),l.WordArray=b.extend({init:function(x,g){x=this.words=x||[],g!=c?this.sigBytes=g:this.sigBytes=x.length*8},toX32:function(){for(var x=this.words,g=x.length,v=[],E=0;E<g;E++){var S=x[E];v.push(S.high),v.push(S.low)}return u.create(v,this.sigBytes)},clone:function(){for(var x=b.clone.call(this),g=x.words=this.words.slice(0),v=g.length,E=0;E<v;E++)g[E]=g[E].clone();return x}})}(),t})}(x64Core)),x64CoreExports}var libTypedarraysExports={},libTypedarrays={get exports(){return libTypedarraysExports},set exports(e){libTypedarraysExports=e}},hasRequiredLibTypedarrays;function requireLibTypedarrays(){return hasRequiredLibTypedarrays||(hasRequiredLibTypedarrays=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(){if(typeof ArrayBuffer=="function"){var c=t,i=c.lib,o=i.WordArray,b=o.init,u=o.init=function(l){if(l instanceof ArrayBuffer&&(l=new Uint8Array(l)),(l instanceof Int8Array||typeof Uint8ClampedArray<"u"&&l instanceof Uint8ClampedArray||l instanceof Int16Array||l instanceof Uint16Array||l instanceof Int32Array||l instanceof Uint32Array||l instanceof Float32Array||l instanceof Float64Array)&&(l=new Uint8Array(l.buffer,l.byteOffset,l.byteLength)),l instanceof Uint8Array){for(var x=l.byteLength,g=[],v=0;v<x;v++)g[v>>>2]|=l[v]<<24-v%4*8;b.call(this,g,x)}else b.apply(this,arguments)};u.prototype=o}}(),t.lib.WordArray})}(libTypedarrays)),libTypedarraysExports}var encUtf16Exports={},encUtf16={get exports(){return encUtf16Exports},set exports(e){encUtf16Exports=e}},hasRequiredEncUtf16;function requireEncUtf16(){return hasRequiredEncUtf16||(hasRequiredEncUtf16=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.WordArray,b=c.enc;b.Utf16=b.Utf16BE={stringify:function(l){for(var x=l.words,g=l.sigBytes,v=[],E=0;E<g;E+=2){var S=x[E>>>2]>>>16-E%4*8&65535;v.push(String.fromCharCode(S))}return v.join("")},parse:function(l){for(var x=l.length,g=[],v=0;v<x;v++)g[v>>>1]|=l.charCodeAt(v)<<16-v%2*16;return o.create(g,x*2)}},b.Utf16LE={stringify:function(l){for(var x=l.words,g=l.sigBytes,v=[],E=0;E<g;E+=2){var S=u(x[E>>>2]>>>16-E%4*8&65535);v.push(String.fromCharCode(S))}return v.join("")},parse:function(l){for(var x=l.length,g=[],v=0;v<x;v++)g[v>>>1]|=u(l.charCodeAt(v)<<16-v%2*16);return o.create(g,x*2)}};function u(l){return l<<8&4278255360|l>>>8&16711935}}(),t.enc.Utf16})}(encUtf16)),encUtf16Exports}var encBase64Exports={},encBase64={get exports(){return encBase64Exports},set exports(e){encBase64Exports=e}},hasRequiredEncBase64;function requireEncBase64(){return hasRequiredEncBase64||(hasRequiredEncBase64=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.WordArray,b=c.enc;b.Base64={stringify:function(l){var x=l.words,g=l.sigBytes,v=this._map;l.clamp();for(var E=[],S=0;S<g;S+=3)for(var T=x[S>>>2]>>>24-S%4*8&255,I=x[S+1>>>2]>>>24-(S+1)%4*8&255,A=x[S+2>>>2]>>>24-(S+2)%4*8&255,C=T<<16|I<<8|A,O=0;O<4&&S+O*.75<g;O++)E.push(v.charAt(C>>>6*(3-O)&63));var R=v.charAt(64);if(R)for(;E.length%4;)E.push(R);return E.join("")},parse:function(l){var x=l.length,g=this._map,v=this._reverseMap;if(!v){v=this._reverseMap=[];for(var E=0;E<g.length;E++)v[g.charCodeAt(E)]=E}var S=g.charAt(64);if(S){var T=l.indexOf(S);T!==-1&&(x=T)}return u(l,x,v)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function u(l,x,g){for(var v=[],E=0,S=0;S<x;S++)if(S%4){var T=g[l.charCodeAt(S-1)]<<S%4*2,I=g[l.charCodeAt(S)]>>>6-S%4*2,A=T|I;v[E>>>2]|=A<<24-E%4*8,E++}return o.create(v,E)}}(),t.enc.Base64})}(encBase64)),encBase64Exports}var encBase64urlExports={},encBase64url={get exports(){return encBase64urlExports},set exports(e){encBase64urlExports=e}},hasRequiredEncBase64url;function requireEncBase64url(){return hasRequiredEncBase64url||(hasRequiredEncBase64url=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.WordArray,b=c.enc;b.Base64url={stringify:function(l,x){x===void 0&&(x=!0);var g=l.words,v=l.sigBytes,E=x?this._safe_map:this._map;l.clamp();for(var S=[],T=0;T<v;T+=3)for(var I=g[T>>>2]>>>24-T%4*8&255,A=g[T+1>>>2]>>>24-(T+1)%4*8&255,C=g[T+2>>>2]>>>24-(T+2)%4*8&255,O=I<<16|A<<8|C,R=0;R<4&&T+R*.75<v;R++)S.push(E.charAt(O>>>6*(3-R)&63));var B=E.charAt(64);if(B)for(;S.length%4;)S.push(B);return S.join("")},parse:function(l,x){x===void 0&&(x=!0);var g=l.length,v=x?this._safe_map:this._map,E=this._reverseMap;if(!E){E=this._reverseMap=[];for(var S=0;S<v.length;S++)E[v.charCodeAt(S)]=S}var T=v.charAt(64);if(T){var I=l.indexOf(T);I!==-1&&(g=I)}return u(l,g,E)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function u(l,x,g){for(var v=[],E=0,S=0;S<x;S++)if(S%4){var T=g[l.charCodeAt(S-1)]<<S%4*2,I=g[l.charCodeAt(S)]>>>6-S%4*2,A=T|I;v[E>>>2]|=A<<24-E%4*8,E++}return o.create(v,E)}}(),t.enc.Base64url})}(encBase64url)),encBase64urlExports}var md5Exports$1={},md5$2={get exports(){return md5Exports$1},set exports(e){md5Exports$1=e}},hasRequiredMd5;function requireMd5(){return hasRequiredMd5||(hasRequiredMd5=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(c){var i=t,o=i.lib,b=o.WordArray,u=o.Hasher,l=i.algo,x=[];(function(){for(var I=0;I<64;I++)x[I]=c.abs(c.sin(I+1))*4294967296|0})();var g=l.MD5=u.extend({_doReset:function(){this._hash=new b.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(I,A){for(var C=0;C<16;C++){var O=A+C,R=I[O];I[O]=(R<<8|R>>>24)&16711935|(R<<24|R>>>8)&4278255360}var B=this._hash.words,M=I[A+0],L=I[A+1],ee=I[A+2],z=I[A+3],oe=I[A+4],W=I[A+5],P=I[A+6],D=I[A+7],q=I[A+8],Y=I[A+9],U=I[A+10],j=I[A+11],Q=I[A+12],X=I[A+13],F=I[A+14],Z=I[A+15],J=B[0],ce=B[1],re=B[2],ie=B[3];J=v(J,ce,re,ie,M,7,x[0]),ie=v(ie,J,ce,re,L,12,x[1]),re=v(re,ie,J,ce,ee,17,x[2]),ce=v(ce,re,ie,J,z,22,x[3]),J=v(J,ce,re,ie,oe,7,x[4]),ie=v(ie,J,ce,re,W,12,x[5]),re=v(re,ie,J,ce,P,17,x[6]),ce=v(ce,re,ie,J,D,22,x[7]),J=v(J,ce,re,ie,q,7,x[8]),ie=v(ie,J,ce,re,Y,12,x[9]),re=v(re,ie,J,ce,U,17,x[10]),ce=v(ce,re,ie,J,j,22,x[11]),J=v(J,ce,re,ie,Q,7,x[12]),ie=v(ie,J,ce,re,X,12,x[13]),re=v(re,ie,J,ce,F,17,x[14]),ce=v(ce,re,ie,J,Z,22,x[15]),J=E(J,ce,re,ie,L,5,x[16]),ie=E(ie,J,ce,re,P,9,x[17]),re=E(re,ie,J,ce,j,14,x[18]),ce=E(ce,re,ie,J,M,20,x[19]),J=E(J,ce,re,ie,W,5,x[20]),ie=E(ie,J,ce,re,U,9,x[21]),re=E(re,ie,J,ce,Z,14,x[22]),ce=E(ce,re,ie,J,oe,20,x[23]),J=E(J,ce,re,ie,Y,5,x[24]),ie=E(ie,J,ce,re,F,9,x[25]),re=E(re,ie,J,ce,z,14,x[26]),ce=E(ce,re,ie,J,q,20,x[27]),J=E(J,ce,re,ie,X,5,x[28]),ie=E(ie,J,ce,re,ee,9,x[29]),re=E(re,ie,J,ce,D,14,x[30]),ce=E(ce,re,ie,J,Q,20,x[31]),J=S(J,ce,re,ie,W,4,x[32]),ie=S(ie,J,ce,re,q,11,x[33]),re=S(re,ie,J,ce,j,16,x[34]),ce=S(ce,re,ie,J,F,23,x[35]),J=S(J,ce,re,ie,L,4,x[36]),ie=S(ie,J,ce,re,oe,11,x[37]),re=S(re,ie,J,ce,D,16,x[38]),ce=S(ce,re,ie,J,U,23,x[39]),J=S(J,ce,re,ie,X,4,x[40]),ie=S(ie,J,ce,re,M,11,x[41]),re=S(re,ie,J,ce,z,16,x[42]),ce=S(ce,re,ie,J,P,23,x[43]),J=S(J,ce,re,ie,Y,4,x[44]),ie=S(ie,J,ce,re,Q,11,x[45]),re=S(re,ie,J,ce,Z,16,x[46]),ce=S(ce,re,ie,J,ee,23,x[47]),J=T(J,ce,re,ie,M,6,x[48]),ie=T(ie,J,ce,re,D,10,x[49]),re=T(re,ie,J,ce,F,15,x[50]),ce=T(ce,re,ie,J,W,21,x[51]),J=T(J,ce,re,ie,Q,6,x[52]),ie=T(ie,J,ce,re,z,10,x[53]),re=T(re,ie,J,ce,U,15,x[54]),ce=T(ce,re,ie,J,L,21,x[55]),J=T(J,ce,re,ie,q,6,x[56]),ie=T(ie,J,ce,re,Z,10,x[57]),re=T(re,ie,J,ce,P,15,x[58]),ce=T(ce,re,ie,J,X,21,x[59]),J=T(J,ce,re,ie,oe,6,x[60]),ie=T(ie,J,ce,re,j,10,x[61]),re=T(re,ie,J,ce,ee,15,x[62]),ce=T(ce,re,ie,J,Y,21,x[63]),B[0]=B[0]+J|0,B[1]=B[1]+ce|0,B[2]=B[2]+re|0,B[3]=B[3]+ie|0},_doFinalize:function(){var I=this._data,A=I.words,C=this._nDataBytes*8,O=I.sigBytes*8;A[O>>>5]|=128<<24-O%32;var R=c.floor(C/4294967296),B=C;A[(O+64>>>9<<4)+15]=(R<<8|R>>>24)&16711935|(R<<24|R>>>8)&4278255360,A[(O+64>>>9<<4)+14]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,I.sigBytes=(A.length+1)*4,this._process();for(var M=this._hash,L=M.words,ee=0;ee<4;ee++){var z=L[ee];L[ee]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360}return M},clone:function(){var I=u.clone.call(this);return I._hash=this._hash.clone(),I}});function v(I,A,C,O,R,B,M){var L=I+(A&C|~A&O)+R+M;return(L<<B|L>>>32-B)+A}function E(I,A,C,O,R,B,M){var L=I+(A&O|C&~O)+R+M;return(L<<B|L>>>32-B)+A}function S(I,A,C,O,R,B,M){var L=I+(A^C^O)+R+M;return(L<<B|L>>>32-B)+A}function T(I,A,C,O,R,B,M){var L=I+(C^(A|~O))+R+M;return(L<<B|L>>>32-B)+A}i.MD5=u._createHelper(g),i.HmacMD5=u._createHmacHelper(g)}(Math),t.MD5})}(md5$2)),md5Exports$1}var sha1Exports={},sha1$1={get exports(){return sha1Exports},set exports(e){sha1Exports=e}},hasRequiredSha1;function requireSha1(){return hasRequiredSha1||(hasRequiredSha1=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.WordArray,b=i.Hasher,u=c.algo,l=[],x=u.SHA1=b.extend({_doReset:function(){this._hash=new o.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(g,v){for(var E=this._hash.words,S=E[0],T=E[1],I=E[2],A=E[3],C=E[4],O=0;O<80;O++){if(O<16)l[O]=g[v+O]|0;else{var R=l[O-3]^l[O-8]^l[O-14]^l[O-16];l[O]=R<<1|R>>>31}var B=(S<<5|S>>>27)+C+l[O];O<20?B+=(T&I|~T&A)+1518500249:O<40?B+=(T^I^A)+1859775393:O<60?B+=(T&I|T&A|I&A)-1894007588:B+=(T^I^A)-899497514,C=A,A=I,I=T<<30|T>>>2,T=S,S=B}E[0]=E[0]+S|0,E[1]=E[1]+T|0,E[2]=E[2]+I|0,E[3]=E[3]+A|0,E[4]=E[4]+C|0},_doFinalize:function(){var g=this._data,v=g.words,E=this._nDataBytes*8,S=g.sigBytes*8;return v[S>>>5]|=128<<24-S%32,v[(S+64>>>9<<4)+14]=Math.floor(E/4294967296),v[(S+64>>>9<<4)+15]=E,g.sigBytes=v.length*4,this._process(),this._hash},clone:function(){var g=b.clone.call(this);return g._hash=this._hash.clone(),g}});c.SHA1=b._createHelper(x),c.HmacSHA1=b._createHmacHelper(x)}(),t.SHA1})}(sha1$1)),sha1Exports}var sha512Exports={},sha512$2={get exports(){return sha512Exports},set exports(e){sha512Exports=e}},hasRequiredSha512;function requireSha512(){return hasRequiredSha512||(hasRequiredSha512=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireX64Core())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.Hasher,b=c.x64,u=b.Word,l=b.WordArray,x=c.algo;function g(){return u.create.apply(u,arguments)}var v=[g(1116352408,3609767458),g(1899447441,602891725),g(3049323471,3964484399),g(3921009573,2173295548),g(961987163,4081628472),g(1508970993,3053834265),g(2453635748,2937671579),g(2870763221,3664609560),g(3624381080,2734883394),g(310598401,1164996542),g(607225278,1323610764),g(1426881987,3590304994),g(1925078388,4068182383),g(2162078206,991336113),g(2614888103,633803317),g(3248222580,3479774868),g(3835390401,2666613458),g(4022224774,944711139),g(264347078,2341262773),g(604807628,2007800933),g(770255983,1495990901),g(1249150122,1856431235),g(1555081692,3175218132),g(1996064986,2198950837),g(2554220882,3999719339),g(2821834349,766784016),g(2952996808,2566594879),g(3210313671,3203337956),g(3336571891,1034457026),g(3584528711,2466948901),g(113926993,3758326383),g(338241895,168717936),g(666307205,1188179964),g(773529912,1546045734),g(1294757372,1522805485),g(1396182291,2643833823),g(1695183700,2343527390),g(1986661051,1014477480),g(2177026350,1206759142),g(2456956037,344077627),g(2730485921,1290863460),g(2820302411,3158454273),g(3259730800,3505952657),g(3345764771,106217008),g(3516065817,3606008344),g(3600352804,1432725776),g(4094571909,1467031594),g(275423344,851169720),g(430227734,3100823752),g(506948616,1363258195),g(659060556,3750685593),g(883997877,3785050280),g(958139571,3318307427),g(1322822218,3812723403),g(1537002063,2003034995),g(1747873779,3602036899),g(1955562222,1575990012),g(2024104815,1125592928),g(2227730452,2716904306),g(2361852424,442776044),g(2428436474,593698344),g(2756734187,3733110249),g(3204031479,2999351573),g(3329325298,3815920427),g(3391569614,3928383900),g(3515267271,566280711),g(3940187606,3454069534),g(4118630271,4000239992),g(116418474,1914138554),g(174292421,2731055270),g(289380356,3203993006),g(460393269,320620315),g(685471733,587496836),g(852142971,1086792851),g(1017036298,365543100),g(1126000580,2618297676),g(1288033470,3409855158),g(1501505948,4234509866),g(1607167915,987167468),g(1816402316,1246189591)],E=[];(function(){for(var T=0;T<80;T++)E[T]=g()})();var S=x.SHA512=o.extend({_doReset:function(){this._hash=new l.init([new u.init(1779033703,4089235720),new u.init(3144134277,2227873595),new u.init(1013904242,4271175723),new u.init(2773480762,1595750129),new u.init(1359893119,2917565137),new u.init(2600822924,725511199),new u.init(528734635,4215389547),new u.init(1541459225,327033209)])},_doProcessBlock:function(T,I){for(var A=this._hash.words,C=A[0],O=A[1],R=A[2],B=A[3],M=A[4],L=A[5],ee=A[6],z=A[7],oe=C.high,W=C.low,P=O.high,D=O.low,q=R.high,Y=R.low,U=B.high,j=B.low,Q=M.high,X=M.low,F=L.high,Z=L.low,J=ee.high,ce=ee.low,re=z.high,ie=z.low,fe=oe,pe=W,Oe=P,Se=D,Pe=q,a0=Y,qe=U,Ke=j,b0=Q,Je=X,i0=F,N0=Z,w0=J,_0=ce,H0=re,g0=ie,o0=0;o0<80;o0++){var M0,u0,S0=E[o0];if(o0<16)u0=S0.high=T[I+o0*2]|0,M0=S0.low=T[I+o0*2+1]|0;else{var J0=E[o0-15],h0=J0.high,y0=J0.low,Z0=(h0>>>1|y0<<31)^(h0>>>8|y0<<24)^h0>>>7,I0=(y0>>>1|h0<<31)^(y0>>>8|h0<<24)^(y0>>>7|h0<<25),C0=E[o0-2],q0=C0.high,l0=C0.low,p0=(q0>>>19|l0<<13)^(q0<<3|l0>>>29)^q0>>>6,j0=(l0>>>19|q0<<13)^(l0<<3|q0>>>29)^(l0>>>6|q0<<26),m0=E[o0-7],$0=m0.high,Y0=m0.low,v0=E[o0-16],E0=v0.high,K0=v0.low;M0=I0+Y0,u0=Z0+$0+(M0>>>0<I0>>>0?1:0),M0=M0+j0,u0=u0+p0+(M0>>>0<j0>>>0?1:0),M0=M0+K0,u0=u0+E0+(M0>>>0<K0>>>0?1:0),S0.high=u0,S0.low=M0}var P0=b0&i0^~b0&w0,r0=Je&N0^~Je&_0,z0=fe&Oe^fe&Pe^Oe&Pe,s0=pe&Se^pe&a0^Se&a0,be=(fe>>>28|pe<<4)^(fe<<30|pe>>>2)^(fe<<25|pe>>>7),se=(pe>>>28|fe<<4)^(pe<<30|fe>>>2)^(pe<<25|fe>>>7),de=(b0>>>14|Je<<18)^(b0>>>18|Je<<14)^(b0<<23|Je>>>9),le=(Je>>>14|b0<<18)^(Je>>>18|b0<<14)^(Je<<23|b0>>>9),ge=v[o0],we=ge.high,Ee=ge.low,Be=g0+le,V=H0+de+(Be>>>0<g0>>>0?1:0),Be=Be+r0,V=V+P0+(Be>>>0<r0>>>0?1:0),Be=Be+Ee,V=V+we+(Be>>>0<Ee>>>0?1:0),Be=Be+M0,V=V+u0+(Be>>>0<M0>>>0?1:0),ae=se+s0,te=be+z0+(ae>>>0<se>>>0?1:0);H0=w0,g0=_0,w0=i0,_0=N0,i0=b0,N0=Je,Je=Ke+Be|0,b0=qe+V+(Je>>>0<Ke>>>0?1:0)|0,qe=Pe,Ke=a0,Pe=Oe,a0=Se,Oe=fe,Se=pe,pe=Be+ae|0,fe=V+te+(pe>>>0<Be>>>0?1:0)|0}W=C.low=W+pe,C.high=oe+fe+(W>>>0<pe>>>0?1:0),D=O.low=D+Se,O.high=P+Oe+(D>>>0<Se>>>0?1:0),Y=R.low=Y+a0,R.high=q+Pe+(Y>>>0<a0>>>0?1:0),j=B.low=j+Ke,B.high=U+qe+(j>>>0<Ke>>>0?1:0),X=M.low=X+Je,M.high=Q+b0+(X>>>0<Je>>>0?1:0),Z=L.low=Z+N0,L.high=F+i0+(Z>>>0<N0>>>0?1:0),ce=ee.low=ce+_0,ee.high=J+w0+(ce>>>0<_0>>>0?1:0),ie=z.low=ie+g0,z.high=re+H0+(ie>>>0<g0>>>0?1:0)},_doFinalize:function(){var T=this._data,I=T.words,A=this._nDataBytes*8,C=T.sigBytes*8;I[C>>>5]|=128<<24-C%32,I[(C+128>>>10<<5)+30]=Math.floor(A/4294967296),I[(C+128>>>10<<5)+31]=A,T.sigBytes=I.length*4,this._process();var O=this._hash.toX32();return O},clone:function(){var T=o.clone.call(this);return T._hash=this._hash.clone(),T},blockSize:1024/32});c.SHA512=o._createHelper(S),c.HmacSHA512=o._createHmacHelper(S)}(),t.SHA512})}(sha512$2)),sha512Exports}var sha384Exports={},sha384$1={get exports(){return sha384Exports},set exports(e){sha384Exports=e}},hasRequiredSha384;function requireSha384(){return hasRequiredSha384||(hasRequiredSha384=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireX64Core(),requireSha512())})(commonjsGlobal,function(t){return function(){var c=t,i=c.x64,o=i.Word,b=i.WordArray,u=c.algo,l=u.SHA512,x=u.SHA384=l.extend({_doReset:function(){this._hash=new b.init([new o.init(3418070365,3238371032),new o.init(1654270250,914150663),new o.init(2438529370,812702999),new o.init(355462360,4144912697),new o.init(1731405415,4290775857),new o.init(2394180231,1750603025),new o.init(3675008525,1694076839),new o.init(1203062813,3204075428)])},_doFinalize:function(){var g=l._doFinalize.call(this);return g.sigBytes-=16,g}});c.SHA384=l._createHelper(x),c.HmacSHA384=l._createHmacHelper(x)}(),t.SHA384})}(sha384$1)),sha384Exports}var sha3Exports={},sha3$2={get exports(){return sha3Exports},set exports(e){sha3Exports=e}},hasRequiredSha3;function requireSha3(){return hasRequiredSha3||(hasRequiredSha3=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireX64Core())})(commonjsGlobal,function(t){return function(c){var i=t,o=i.lib,b=o.WordArray,u=o.Hasher,l=i.x64,x=l.Word,g=i.algo,v=[],E=[],S=[];(function(){for(var A=1,C=0,O=0;O<24;O++){v[A+5*C]=(O+1)*(O+2)/2%64;var R=C%5,B=(2*A+3*C)%5;A=R,C=B}for(var A=0;A<5;A++)for(var C=0;C<5;C++)E[A+5*C]=C+(2*A+3*C)%5*5;for(var M=1,L=0;L<24;L++){for(var ee=0,z=0,oe=0;oe<7;oe++){if(M&1){var W=(1<<oe)-1;W<32?z^=1<<W:ee^=1<<W-32}M&128?M=M<<1^113:M<<=1}S[L]=x.create(ee,z)}})();var T=[];(function(){for(var A=0;A<25;A++)T[A]=x.create()})();var I=g.SHA3=u.extend({cfg:u.cfg.extend({outputLength:512}),_doReset:function(){for(var A=this._state=[],C=0;C<25;C++)A[C]=new x.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(A,C){for(var O=this._state,R=this.blockSize/2,B=0;B<R;B++){var M=A[C+2*B],L=A[C+2*B+1];M=(M<<8|M>>>24)&16711935|(M<<24|M>>>8)&4278255360,L=(L<<8|L>>>24)&16711935|(L<<24|L>>>8)&4278255360;var ee=O[B];ee.high^=L,ee.low^=M}for(var z=0;z<24;z++){for(var oe=0;oe<5;oe++){for(var W=0,P=0,D=0;D<5;D++){var ee=O[oe+5*D];W^=ee.high,P^=ee.low}var q=T[oe];q.high=W,q.low=P}for(var oe=0;oe<5;oe++)for(var Y=T[(oe+4)%5],U=T[(oe+1)%5],j=U.high,Q=U.low,W=Y.high^(j<<1|Q>>>31),P=Y.low^(Q<<1|j>>>31),D=0;D<5;D++){var ee=O[oe+5*D];ee.high^=W,ee.low^=P}for(var X=1;X<25;X++){var W,P,ee=O[X],F=ee.high,Z=ee.low,J=v[X];J<32?(W=F<<J|Z>>>32-J,P=Z<<J|F>>>32-J):(W=Z<<J-32|F>>>64-J,P=F<<J-32|Z>>>64-J);var ce=T[E[X]];ce.high=W,ce.low=P}var re=T[0],ie=O[0];re.high=ie.high,re.low=ie.low;for(var oe=0;oe<5;oe++)for(var D=0;D<5;D++){var X=oe+5*D,ee=O[X],fe=T[X],pe=T[(oe+1)%5+5*D],Oe=T[(oe+2)%5+5*D];ee.high=fe.high^~pe.high&Oe.high,ee.low=fe.low^~pe.low&Oe.low}var ee=O[0],Se=S[z];ee.high^=Se.high,ee.low^=Se.low}},_doFinalize:function(){var A=this._data,C=A.words;this._nDataBytes*8;var O=A.sigBytes*8,R=this.blockSize*32;C[O>>>5]|=1<<24-O%32,C[(c.ceil((O+1)/R)*R>>>5)-1]|=128,A.sigBytes=C.length*4,this._process();for(var B=this._state,M=this.cfg.outputLength/8,L=M/8,ee=[],z=0;z<L;z++){var oe=B[z],W=oe.high,P=oe.low;W=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360,P=(P<<8|P>>>24)&16711935|(P<<24|P>>>8)&4278255360,ee.push(P),ee.push(W)}return new b.init(ee,M)},clone:function(){for(var A=u.clone.call(this),C=A._state=this._state.slice(0),O=0;O<25;O++)C[O]=C[O].clone();return A}});i.SHA3=u._createHelper(I),i.HmacSHA3=u._createHmacHelper(I)}(Math),t.SHA3})}(sha3$2)),sha3Exports}var ripemd160Exports={},ripemd160$1={get exports(){return ripemd160Exports},set exports(e){ripemd160Exports=e}},hasRequiredRipemd160;function requireRipemd160(){return hasRequiredRipemd160||(hasRequiredRipemd160=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(c){var i=t,o=i.lib,b=o.WordArray,u=o.Hasher,l=i.algo,x=b.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),g=b.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),v=b.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),E=b.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),S=b.create([0,1518500249,1859775393,2400959708,2840853838]),T=b.create([1352829926,1548603684,1836072691,2053994217,0]),I=l.RIPEMD160=u.extend({_doReset:function(){this._hash=b.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(L,ee){for(var z=0;z<16;z++){var oe=ee+z,W=L[oe];L[oe]=(W<<8|W>>>24)&16711935|(W<<24|W>>>8)&4278255360}var P=this._hash.words,D=S.words,q=T.words,Y=x.words,U=g.words,j=v.words,Q=E.words,X,F,Z,J,ce,re,ie,fe,pe,Oe;re=X=P[0],ie=F=P[1],fe=Z=P[2],pe=J=P[3],Oe=ce=P[4];for(var Se,z=0;z<80;z+=1)Se=X+L[ee+Y[z]]|0,z<16?Se+=A(F,Z,J)+D[0]:z<32?Se+=C(F,Z,J)+D[1]:z<48?Se+=O(F,Z,J)+D[2]:z<64?Se+=R(F,Z,J)+D[3]:Se+=B(F,Z,J)+D[4],Se=Se|0,Se=M(Se,j[z]),Se=Se+ce|0,X=ce,ce=J,J=M(Z,10),Z=F,F=Se,Se=re+L[ee+U[z]]|0,z<16?Se+=B(ie,fe,pe)+q[0]:z<32?Se+=R(ie,fe,pe)+q[1]:z<48?Se+=O(ie,fe,pe)+q[2]:z<64?Se+=C(ie,fe,pe)+q[3]:Se+=A(ie,fe,pe)+q[4],Se=Se|0,Se=M(Se,Q[z]),Se=Se+Oe|0,re=Oe,Oe=pe,pe=M(fe,10),fe=ie,ie=Se;Se=P[1]+Z+pe|0,P[1]=P[2]+J+Oe|0,P[2]=P[3]+ce+re|0,P[3]=P[4]+X+ie|0,P[4]=P[0]+F+fe|0,P[0]=Se},_doFinalize:function(){var L=this._data,ee=L.words,z=this._nDataBytes*8,oe=L.sigBytes*8;ee[oe>>>5]|=128<<24-oe%32,ee[(oe+64>>>9<<4)+14]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360,L.sigBytes=(ee.length+1)*4,this._process();for(var W=this._hash,P=W.words,D=0;D<5;D++){var q=P[D];P[D]=(q<<8|q>>>24)&16711935|(q<<24|q>>>8)&4278255360}return W},clone:function(){var L=u.clone.call(this);return L._hash=this._hash.clone(),L}});function A(L,ee,z){return L^ee^z}function C(L,ee,z){return L&ee|~L&z}function O(L,ee,z){return(L|~ee)^z}function R(L,ee,z){return L&z|ee&~z}function B(L,ee,z){return L^(ee|~z)}function M(L,ee){return L<<ee|L>>>32-ee}i.RIPEMD160=u._createHelper(I),i.HmacRIPEMD160=u._createHmacHelper(I)}(),t.RIPEMD160})}(ripemd160$1)),ripemd160Exports}var hmacExports={},hmac$3={get exports(){return hmacExports},set exports(e){hmacExports=e}},hasRequiredHmac;function requireHmac(){return hasRequiredHmac||(hasRequiredHmac=1,function(e,a){(function(t,c){e.exports=c(requireCore())})(commonjsGlobal,function(t){(function(){var c=t,i=c.lib,o=i.Base,b=c.enc,u=b.Utf8,l=c.algo;l.HMAC=o.extend({init:function(x,g){x=this._hasher=new x.init,typeof g=="string"&&(g=u.parse(g));var v=x.blockSize,E=v*4;g.sigBytes>E&&(g=x.finalize(g)),g.clamp();for(var S=this._oKey=g.clone(),T=this._iKey=g.clone(),I=S.words,A=T.words,C=0;C<v;C++)I[C]^=1549556828,A[C]^=909522486;S.sigBytes=T.sigBytes=E,this.reset()},reset:function(){var x=this._hasher;x.reset(),x.update(this._iKey)},update:function(x){return this._hasher.update(x),this},finalize:function(x){var g=this._hasher,v=g.finalize(x);g.reset();var E=g.finalize(this._oKey.clone().concat(v));return E}})})()})}(hmac$3)),hmacExports}var pbkdf2Exports={},pbkdf2$4={get exports(){return pbkdf2Exports},set exports(e){pbkdf2Exports=e}},hasRequiredPbkdf2;function requirePbkdf2(){return hasRequiredPbkdf2||(hasRequiredPbkdf2=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireSha256(),requireHmac())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.Base,b=i.WordArray,u=c.algo,l=u.SHA256,x=u.HMAC,g=u.PBKDF2=o.extend({cfg:o.extend({keySize:128/32,hasher:l,iterations:25e4}),init:function(v){this.cfg=this.cfg.extend(v)},compute:function(v,E){for(var S=this.cfg,T=x.create(S.hasher,v),I=b.create(),A=b.create([1]),C=I.words,O=A.words,R=S.keySize,B=S.iterations;C.length<R;){var M=T.update(E).finalize(A);T.reset();for(var L=M.words,ee=L.length,z=M,oe=1;oe<B;oe++){z=T.finalize(z),T.reset();for(var W=z.words,P=0;P<ee;P++)L[P]^=W[P]}I.concat(M),O[0]++}return I.sigBytes=R*4,I}});c.PBKDF2=function(v,E,S){return g.create(S).compute(v,E)}}(),t.PBKDF2})}(pbkdf2$4)),pbkdf2Exports}var evpkdfExports={},evpkdf={get exports(){return evpkdfExports},set exports(e){evpkdfExports=e}},hasRequiredEvpkdf;function requireEvpkdf(){return hasRequiredEvpkdf||(hasRequiredEvpkdf=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireSha1(),requireHmac())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.Base,b=i.WordArray,u=c.algo,l=u.MD5,x=u.EvpKDF=o.extend({cfg:o.extend({keySize:128/32,hasher:l,iterations:1}),init:function(g){this.cfg=this.cfg.extend(g)},compute:function(g,v){for(var E,S=this.cfg,T=S.hasher.create(),I=b.create(),A=I.words,C=S.keySize,O=S.iterations;A.length<C;){E&&T.update(E),E=T.update(g).finalize(v),T.reset();for(var R=1;R<O;R++)E=T.finalize(E),T.reset();I.concat(E)}return I.sigBytes=C*4,I}});c.EvpKDF=function(g,v,E){return x.create(E).compute(g,v)}}(),t.EvpKDF})}(evpkdf)),evpkdfExports}var cipherCoreExports={},cipherCore={get exports(){return cipherCoreExports},set exports(e){cipherCoreExports=e}},hasRequiredCipherCore;function requireCipherCore(){return hasRequiredCipherCore||(hasRequiredCipherCore=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEvpkdf())})(commonjsGlobal,function(t){t.lib.Cipher||function(c){var i=t,o=i.lib,b=o.Base,u=o.WordArray,l=o.BufferedBlockAlgorithm,x=i.enc;x.Utf8;var g=x.Base64,v=i.algo,E=v.EvpKDF,S=o.Cipher=l.extend({cfg:b.extend(),createEncryptor:function(W,P){return this.create(this._ENC_XFORM_MODE,W,P)},createDecryptor:function(W,P){return this.create(this._DEC_XFORM_MODE,W,P)},init:function(W,P,D){this.cfg=this.cfg.extend(D),this._xformMode=W,this._key=P,this.reset()},reset:function(){l.reset.call(this),this._doReset()},process:function(W){return this._append(W),this._process()},finalize:function(W){W&&this._append(W);var P=this._doFinalize();return P},keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function W(P){return typeof P=="string"?oe:L}return function(P){return{encrypt:function(D,q,Y){return W(q).encrypt(P,D,q,Y)},decrypt:function(D,q,Y){return W(q).decrypt(P,D,q,Y)}}}}()});o.StreamCipher=S.extend({_doFinalize:function(){var W=this._process(!0);return W},blockSize:1});var T=i.mode={},I=o.BlockCipherMode=b.extend({createEncryptor:function(W,P){return this.Encryptor.create(W,P)},createDecryptor:function(W,P){return this.Decryptor.create(W,P)},init:function(W,P){this._cipher=W,this._iv=P}}),A=T.CBC=function(){var W=I.extend();W.Encryptor=W.extend({processBlock:function(D,q){var Y=this._cipher,U=Y.blockSize;P.call(this,D,q,U),Y.encryptBlock(D,q),this._prevBlock=D.slice(q,q+U)}}),W.Decryptor=W.extend({processBlock:function(D,q){var Y=this._cipher,U=Y.blockSize,j=D.slice(q,q+U);Y.decryptBlock(D,q),P.call(this,D,q,U),this._prevBlock=j}});function P(D,q,Y){var U,j=this._iv;j?(U=j,this._iv=c):U=this._prevBlock;for(var Q=0;Q<Y;Q++)D[q+Q]^=U[Q]}return W}(),C=i.pad={},O=C.Pkcs7={pad:function(W,P){for(var D=P*4,q=D-W.sigBytes%D,Y=q<<24|q<<16|q<<8|q,U=[],j=0;j<q;j+=4)U.push(Y);var Q=u.create(U,q);W.concat(Q)},unpad:function(W){var P=W.words[W.sigBytes-1>>>2]&255;W.sigBytes-=P}};o.BlockCipher=S.extend({cfg:S.cfg.extend({mode:A,padding:O}),reset:function(){var W;S.reset.call(this);var P=this.cfg,D=P.iv,q=P.mode;this._xformMode==this._ENC_XFORM_MODE?W=q.createEncryptor:(W=q.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==W?this._mode.init(this,D&&D.words):(this._mode=W.call(q,this,D&&D.words),this._mode.__creator=W)},_doProcessBlock:function(W,P){this._mode.processBlock(W,P)},_doFinalize:function(){var W,P=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(P.pad(this._data,this.blockSize),W=this._process(!0)):(W=this._process(!0),P.unpad(W)),W},blockSize:128/32});var R=o.CipherParams=b.extend({init:function(W){this.mixIn(W)},toString:function(W){return(W||this.formatter).stringify(this)}}),B=i.format={},M=B.OpenSSL={stringify:function(W){var P,D=W.ciphertext,q=W.salt;return q?P=u.create([1398893684,1701076831]).concat(q).concat(D):P=D,P.toString(g)},parse:function(W){var P,D=g.parse(W),q=D.words;return q[0]==1398893684&&q[1]==1701076831&&(P=u.create(q.slice(2,4)),q.splice(0,4),D.sigBytes-=16),R.create({ciphertext:D,salt:P})}},L=o.SerializableCipher=b.extend({cfg:b.extend({format:M}),encrypt:function(W,P,D,q){q=this.cfg.extend(q);var Y=W.createEncryptor(D,q),U=Y.finalize(P),j=Y.cfg;return R.create({ciphertext:U,key:D,iv:j.iv,algorithm:W,mode:j.mode,padding:j.padding,blockSize:W.blockSize,formatter:q.format})},decrypt:function(W,P,D,q){q=this.cfg.extend(q),P=this._parse(P,q.format);var Y=W.createDecryptor(D,q).finalize(P.ciphertext);return Y},_parse:function(W,P){return typeof W=="string"?P.parse(W,this):W}}),ee=i.kdf={},z=ee.OpenSSL={execute:function(W,P,D,q,Y){if(q||(q=u.random(64/8)),Y)var U=E.create({keySize:P+D,hasher:Y}).compute(W,q);else var U=E.create({keySize:P+D}).compute(W,q);var j=u.create(U.words.slice(P),D*4);return U.sigBytes=P*4,R.create({key:U,iv:j,salt:q})}},oe=o.PasswordBasedCipher=L.extend({cfg:L.cfg.extend({kdf:z}),encrypt:function(W,P,D,q){q=this.cfg.extend(q);var Y=q.kdf.execute(D,W.keySize,W.ivSize,q.salt,q.hasher);q.iv=Y.iv;var U=L.encrypt.call(this,W,P,Y.key,q);return U.mixIn(Y),U},decrypt:function(W,P,D,q){q=this.cfg.extend(q),P=this._parse(P,q.format);var Y=q.kdf.execute(D,W.keySize,W.ivSize,P.salt,q.hasher);q.iv=Y.iv;var U=L.decrypt.call(this,W,P,Y.key,q);return U}})}()})}(cipherCore)),cipherCoreExports}var modeCfbExports={},modeCfb={get exports(){return modeCfbExports},set exports(e){modeCfbExports=e}},hasRequiredModeCfb;function requireModeCfb(){return hasRequiredModeCfb||(hasRequiredModeCfb=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.mode.CFB=function(){var c=t.lib.BlockCipherMode.extend();c.Encryptor=c.extend({processBlock:function(o,b){var u=this._cipher,l=u.blockSize;i.call(this,o,b,l,u),this._prevBlock=o.slice(b,b+l)}}),c.Decryptor=c.extend({processBlock:function(o,b){var u=this._cipher,l=u.blockSize,x=o.slice(b,b+l);i.call(this,o,b,l,u),this._prevBlock=x}});function i(o,b,u,l){var x,g=this._iv;g?(x=g.slice(0),this._iv=void 0):x=this._prevBlock,l.encryptBlock(x,0);for(var v=0;v<u;v++)o[b+v]^=x[v]}return c}(),t.mode.CFB})}(modeCfb)),modeCfbExports}var modeCtrExports={},modeCtr={get exports(){return modeCtrExports},set exports(e){modeCtrExports=e}},hasRequiredModeCtr;function requireModeCtr(){return hasRequiredModeCtr||(hasRequiredModeCtr=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.mode.CTR=function(){var c=t.lib.BlockCipherMode.extend(),i=c.Encryptor=c.extend({processBlock:function(o,b){var u=this._cipher,l=u.blockSize,x=this._iv,g=this._counter;x&&(g=this._counter=x.slice(0),this._iv=void 0);var v=g.slice(0);u.encryptBlock(v,0),g[l-1]=g[l-1]+1|0;for(var E=0;E<l;E++)o[b+E]^=v[E]}});return c.Decryptor=i,c}(),t.mode.CTR})}(modeCtr)),modeCtrExports}var modeCtrGladmanExports={},modeCtrGladman={get exports(){return modeCtrGladmanExports},set exports(e){modeCtrGladmanExports=e}},hasRequiredModeCtrGladman;function requireModeCtrGladman(){return hasRequiredModeCtrGladman||(hasRequiredModeCtrGladman=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return t.mode.CTRGladman=function(){var c=t.lib.BlockCipherMode.extend();function i(u){if((u>>24&255)===255){var l=u>>16&255,x=u>>8&255,g=u&255;l===255?(l=0,x===255?(x=0,g===255?g=0:++g):++x):++l,u=0,u+=l<<16,u+=x<<8,u+=g}else u+=1<<24;return u}function o(u){return(u[0]=i(u[0]))===0&&(u[1]=i(u[1])),u}var b=c.Encryptor=c.extend({processBlock:function(u,l){var x=this._cipher,g=x.blockSize,v=this._iv,E=this._counter;v&&(E=this._counter=v.slice(0),this._iv=void 0),o(E);var S=E.slice(0);x.encryptBlock(S,0);for(var T=0;T<g;T++)u[l+T]^=S[T]}});return c.Decryptor=b,c}(),t.mode.CTRGladman})}(modeCtrGladman)),modeCtrGladmanExports}var modeOfbExports={},modeOfb={get exports(){return modeOfbExports},set exports(e){modeOfbExports=e}},hasRequiredModeOfb;function requireModeOfb(){return hasRequiredModeOfb||(hasRequiredModeOfb=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.mode.OFB=function(){var c=t.lib.BlockCipherMode.extend(),i=c.Encryptor=c.extend({processBlock:function(o,b){var u=this._cipher,l=u.blockSize,x=this._iv,g=this._keystream;x&&(g=this._keystream=x.slice(0),this._iv=void 0),u.encryptBlock(g,0);for(var v=0;v<l;v++)o[b+v]^=g[v]}});return c.Decryptor=i,c}(),t.mode.OFB})}(modeOfb)),modeOfbExports}var modeEcbExports={},modeEcb={get exports(){return modeEcbExports},set exports(e){modeEcbExports=e}},hasRequiredModeEcb;function requireModeEcb(){return hasRequiredModeEcb||(hasRequiredModeEcb=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.mode.ECB=function(){var c=t.lib.BlockCipherMode.extend();return c.Encryptor=c.extend({processBlock:function(i,o){this._cipher.encryptBlock(i,o)}}),c.Decryptor=c.extend({processBlock:function(i,o){this._cipher.decryptBlock(i,o)}}),c}(),t.mode.ECB})}(modeEcb)),modeEcbExports}var padAnsix923Exports={},padAnsix923={get exports(){return padAnsix923Exports},set exports(e){padAnsix923Exports=e}},hasRequiredPadAnsix923;function requirePadAnsix923(){return hasRequiredPadAnsix923||(hasRequiredPadAnsix923=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.pad.AnsiX923={pad:function(c,i){var o=c.sigBytes,b=i*4,u=b-o%b,l=o+u-1;c.clamp(),c.words[l>>>2]|=u<<24-l%4*8,c.sigBytes+=u},unpad:function(c){var i=c.words[c.sigBytes-1>>>2]&255;c.sigBytes-=i}},t.pad.Ansix923})}(padAnsix923)),padAnsix923Exports}var padIso10126Exports={},padIso10126={get exports(){return padIso10126Exports},set exports(e){padIso10126Exports=e}},hasRequiredPadIso10126;function requirePadIso10126(){return hasRequiredPadIso10126||(hasRequiredPadIso10126=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.pad.Iso10126={pad:function(c,i){var o=i*4,b=o-c.sigBytes%o;c.concat(t.lib.WordArray.random(b-1)).concat(t.lib.WordArray.create([b<<24],1))},unpad:function(c){var i=c.words[c.sigBytes-1>>>2]&255;c.sigBytes-=i}},t.pad.Iso10126})}(padIso10126)),padIso10126Exports}var padIso97971Exports={},padIso97971={get exports(){return padIso97971Exports},set exports(e){padIso97971Exports=e}},hasRequiredPadIso97971;function requirePadIso97971(){return hasRequiredPadIso97971||(hasRequiredPadIso97971=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.pad.Iso97971={pad:function(c,i){c.concat(t.lib.WordArray.create([2147483648],1)),t.pad.ZeroPadding.pad(c,i)},unpad:function(c){t.pad.ZeroPadding.unpad(c),c.sigBytes--}},t.pad.Iso97971})}(padIso97971)),padIso97971Exports}var padZeropaddingExports={},padZeropadding={get exports(){return padZeropaddingExports},set exports(e){padZeropaddingExports=e}},hasRequiredPadZeropadding;function requirePadZeropadding(){return hasRequiredPadZeropadding||(hasRequiredPadZeropadding=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.pad.ZeroPadding={pad:function(c,i){var o=i*4;c.clamp(),c.sigBytes+=o-(c.sigBytes%o||o)},unpad:function(c){for(var i=c.words,o=c.sigBytes-1,o=c.sigBytes-1;o>=0;o--)if(i[o>>>2]>>>24-o%4*8&255){c.sigBytes=o+1;break}}},t.pad.ZeroPadding})}(padZeropadding)),padZeropaddingExports}var padNopaddingExports={},padNopadding={get exports(){return padNopaddingExports},set exports(e){padNopaddingExports=e}},hasRequiredPadNopadding;function requirePadNopadding(){return hasRequiredPadNopadding||(hasRequiredPadNopadding=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return t.pad.NoPadding={pad:function(){},unpad:function(){}},t.pad.NoPadding})}(padNopadding)),padNopaddingExports}var formatHexExports={},formatHex={get exports(){return formatHexExports},set exports(e){formatHexExports=e}},hasRequiredFormatHex;function requireFormatHex(){return hasRequiredFormatHex||(hasRequiredFormatHex=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireCipherCore())})(commonjsGlobal,function(t){return function(c){var i=t,o=i.lib,b=o.CipherParams,u=i.enc,l=u.Hex,x=i.format;x.Hex={stringify:function(g){return g.ciphertext.toString(l)},parse:function(g){var v=l.parse(g);return b.create({ciphertext:v})}}}(),t.format.Hex})}(formatHex)),formatHexExports}var aesExports={},aes={get exports(){return aesExports},set exports(e){aesExports=e}},hasRequiredAes;function requireAes(){return hasRequiredAes||(hasRequiredAes=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.BlockCipher,b=c.algo,u=[],l=[],x=[],g=[],v=[],E=[],S=[],T=[],I=[],A=[];(function(){for(var R=[],B=0;B<256;B++)B<128?R[B]=B<<1:R[B]=B<<1^283;for(var M=0,L=0,B=0;B<256;B++){var ee=L^L<<1^L<<2^L<<3^L<<4;ee=ee>>>8^ee&255^99,u[M]=ee,l[ee]=M;var z=R[M],oe=R[z],W=R[oe],P=R[ee]*257^ee*16843008;x[M]=P<<24|P>>>8,g[M]=P<<16|P>>>16,v[M]=P<<8|P>>>24,E[M]=P;var P=W*16843009^oe*65537^z*257^M*16843008;S[ee]=P<<24|P>>>8,T[ee]=P<<16|P>>>16,I[ee]=P<<8|P>>>24,A[ee]=P,M?(M=z^R[R[R[W^z]]],L^=R[R[L]]):M=L=1}})();var C=[0,1,2,4,8,16,32,64,128,27,54],O=b.AES=o.extend({_doReset:function(){var R;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var B=this._keyPriorReset=this._key,M=B.words,L=B.sigBytes/4,ee=this._nRounds=L+6,z=(ee+1)*4,oe=this._keySchedule=[],W=0;W<z;W++)W<L?oe[W]=M[W]:(R=oe[W-1],W%L?L>6&&W%L==4&&(R=u[R>>>24]<<24|u[R>>>16&255]<<16|u[R>>>8&255]<<8|u[R&255]):(R=R<<8|R>>>24,R=u[R>>>24]<<24|u[R>>>16&255]<<16|u[R>>>8&255]<<8|u[R&255],R^=C[W/L|0]<<24),oe[W]=oe[W-L]^R);for(var P=this._invKeySchedule=[],D=0;D<z;D++){var W=z-D;if(D%4)var R=oe[W];else var R=oe[W-4];D<4||W<=4?P[D]=R:P[D]=S[u[R>>>24]]^T[u[R>>>16&255]]^I[u[R>>>8&255]]^A[u[R&255]]}}},encryptBlock:function(R,B){this._doCryptBlock(R,B,this._keySchedule,x,g,v,E,u)},decryptBlock:function(R,B){var M=R[B+1];R[B+1]=R[B+3],R[B+3]=M,this._doCryptBlock(R,B,this._invKeySchedule,S,T,I,A,l);var M=R[B+1];R[B+1]=R[B+3],R[B+3]=M},_doCryptBlock:function(R,B,M,L,ee,z,oe,W){for(var P=this._nRounds,D=R[B]^M[0],q=R[B+1]^M[1],Y=R[B+2]^M[2],U=R[B+3]^M[3],j=4,Q=1;Q<P;Q++){var X=L[D>>>24]^ee[q>>>16&255]^z[Y>>>8&255]^oe[U&255]^M[j++],F=L[q>>>24]^ee[Y>>>16&255]^z[U>>>8&255]^oe[D&255]^M[j++],Z=L[Y>>>24]^ee[U>>>16&255]^z[D>>>8&255]^oe[q&255]^M[j++],J=L[U>>>24]^ee[D>>>16&255]^z[q>>>8&255]^oe[Y&255]^M[j++];D=X,q=F,Y=Z,U=J}var X=(W[D>>>24]<<24|W[q>>>16&255]<<16|W[Y>>>8&255]<<8|W[U&255])^M[j++],F=(W[q>>>24]<<24|W[Y>>>16&255]<<16|W[U>>>8&255]<<8|W[D&255])^M[j++],Z=(W[Y>>>24]<<24|W[U>>>16&255]<<16|W[D>>>8&255]<<8|W[q&255])^M[j++],J=(W[U>>>24]<<24|W[D>>>16&255]<<16|W[q>>>8&255]<<8|W[Y&255])^M[j++];R[B]=X,R[B+1]=F,R[B+2]=Z,R[B+3]=J},keySize:256/32});c.AES=o._createHelper(O)}(),t.AES})}(aes)),aesExports}var tripledesExports={},tripledes={get exports(){return tripledesExports},set exports(e){tripledesExports=e}},hasRequiredTripledes;function requireTripledes(){return hasRequiredTripledes||(hasRequiredTripledes=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.WordArray,b=i.BlockCipher,u=c.algo,l=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],x=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],g=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],v=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],E=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],S=u.DES=b.extend({_doReset:function(){for(var C=this._key,O=C.words,R=[],B=0;B<56;B++){var M=l[B]-1;R[B]=O[M>>>5]>>>31-M%32&1}for(var L=this._subKeys=[],ee=0;ee<16;ee++){for(var z=L[ee]=[],oe=g[ee],B=0;B<24;B++)z[B/6|0]|=R[(x[B]-1+oe)%28]<<31-B%6,z[4+(B/6|0)]|=R[28+(x[B+24]-1+oe)%28]<<31-B%6;z[0]=z[0]<<1|z[0]>>>31;for(var B=1;B<7;B++)z[B]=z[B]>>>(B-1)*4+3;z[7]=z[7]<<5|z[7]>>>27}for(var W=this._invSubKeys=[],B=0;B<16;B++)W[B]=L[15-B]},encryptBlock:function(C,O){this._doCryptBlock(C,O,this._subKeys)},decryptBlock:function(C,O){this._doCryptBlock(C,O,this._invSubKeys)},_doCryptBlock:function(C,O,R){this._lBlock=C[O],this._rBlock=C[O+1],T.call(this,4,252645135),T.call(this,16,65535),I.call(this,2,858993459),I.call(this,8,16711935),T.call(this,1,1431655765);for(var B=0;B<16;B++){for(var M=R[B],L=this._lBlock,ee=this._rBlock,z=0,oe=0;oe<8;oe++)z|=v[oe][((ee^M[oe])&E[oe])>>>0];this._lBlock=ee,this._rBlock=L^z}var W=this._lBlock;this._lBlock=this._rBlock,this._rBlock=W,T.call(this,1,1431655765),I.call(this,8,16711935),I.call(this,2,858993459),T.call(this,16,65535),T.call(this,4,252645135),C[O]=this._lBlock,C[O+1]=this._rBlock},keySize:64/32,ivSize:64/32,blockSize:64/32});function T(C,O){var R=(this._lBlock>>>C^this._rBlock)&O;this._rBlock^=R,this._lBlock^=R<<C}function I(C,O){var R=(this._rBlock>>>C^this._lBlock)&O;this._lBlock^=R,this._rBlock^=R<<C}c.DES=b._createHelper(S);var A=u.TripleDES=b.extend({_doReset:function(){var C=this._key,O=C.words;if(O.length!==2&&O.length!==4&&O.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var R=O.slice(0,2),B=O.length<4?O.slice(0,2):O.slice(2,4),M=O.length<6?O.slice(0,2):O.slice(4,6);this._des1=S.createEncryptor(o.create(R)),this._des2=S.createEncryptor(o.create(B)),this._des3=S.createEncryptor(o.create(M))},encryptBlock:function(C,O){this._des1.encryptBlock(C,O),this._des2.decryptBlock(C,O),this._des3.encryptBlock(C,O)},decryptBlock:function(C,O){this._des3.decryptBlock(C,O),this._des2.encryptBlock(C,O),this._des1.decryptBlock(C,O)},keySize:192/32,ivSize:64/32,blockSize:64/32});c.TripleDES=b._createHelper(A)}(),t.TripleDES})}(tripledes)),tripledesExports}var rc4Exports={},rc4={get exports(){return rc4Exports},set exports(e){rc4Exports=e}},hasRequiredRc4;function requireRc4(){return hasRequiredRc4||(hasRequiredRc4=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.StreamCipher,b=c.algo,u=b.RC4=o.extend({_doReset:function(){for(var g=this._key,v=g.words,E=g.sigBytes,S=this._S=[],T=0;T<256;T++)S[T]=T;for(var T=0,I=0;T<256;T++){var A=T%E,C=v[A>>>2]>>>24-A%4*8&255;I=(I+S[T]+C)%256;var O=S[T];S[T]=S[I],S[I]=O}this._i=this._j=0},_doProcessBlock:function(g,v){g[v]^=l.call(this)},keySize:256/32,ivSize:0});function l(){for(var g=this._S,v=this._i,E=this._j,S=0,T=0;T<4;T++){v=(v+1)%256,E=(E+g[v])%256;var I=g[v];g[v]=g[E],g[E]=I,S|=g[(g[v]+g[E])%256]<<24-T*8}return this._i=v,this._j=E,S}c.RC4=o._createHelper(u);var x=b.RC4Drop=u.extend({cfg:u.cfg.extend({drop:192}),_doReset:function(){u._doReset.call(this);for(var g=this.cfg.drop;g>0;g--)l.call(this)}});c.RC4Drop=o._createHelper(x)}(),t.RC4})}(rc4)),rc4Exports}var rabbitExports={},rabbit={get exports(){return rabbitExports},set exports(e){rabbitExports=e}},hasRequiredRabbit;function requireRabbit(){return hasRequiredRabbit||(hasRequiredRabbit=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.StreamCipher,b=c.algo,u=[],l=[],x=[],g=b.Rabbit=o.extend({_doReset:function(){for(var E=this._key.words,S=this.cfg.iv,T=0;T<4;T++)E[T]=(E[T]<<8|E[T]>>>24)&16711935|(E[T]<<24|E[T]>>>8)&4278255360;var I=this._X=[E[0],E[3]<<16|E[2]>>>16,E[1],E[0]<<16|E[3]>>>16,E[2],E[1]<<16|E[0]>>>16,E[3],E[2]<<16|E[1]>>>16],A=this._C=[E[2]<<16|E[2]>>>16,E[0]&4294901760|E[1]&65535,E[3]<<16|E[3]>>>16,E[1]&4294901760|E[2]&65535,E[0]<<16|E[0]>>>16,E[2]&4294901760|E[3]&65535,E[1]<<16|E[1]>>>16,E[3]&4294901760|E[0]&65535];this._b=0;for(var T=0;T<4;T++)v.call(this);for(var T=0;T<8;T++)A[T]^=I[T+4&7];if(S){var C=S.words,O=C[0],R=C[1],B=(O<<8|O>>>24)&16711935|(O<<24|O>>>8)&4278255360,M=(R<<8|R>>>24)&16711935|(R<<24|R>>>8)&4278255360,L=B>>>16|M&4294901760,ee=M<<16|B&65535;A[0]^=B,A[1]^=L,A[2]^=M,A[3]^=ee,A[4]^=B,A[5]^=L,A[6]^=M,A[7]^=ee;for(var T=0;T<4;T++)v.call(this)}},_doProcessBlock:function(E,S){var T=this._X;v.call(this),u[0]=T[0]^T[5]>>>16^T[3]<<16,u[1]=T[2]^T[7]>>>16^T[5]<<16,u[2]=T[4]^T[1]>>>16^T[7]<<16,u[3]=T[6]^T[3]>>>16^T[1]<<16;for(var I=0;I<4;I++)u[I]=(u[I]<<8|u[I]>>>24)&16711935|(u[I]<<24|u[I]>>>8)&4278255360,E[S+I]^=u[I]},blockSize:128/32,ivSize:64/32});function v(){for(var E=this._X,S=this._C,T=0;T<8;T++)l[T]=S[T];S[0]=S[0]+1295307597+this._b|0,S[1]=S[1]+3545052371+(S[0]>>>0<l[0]>>>0?1:0)|0,S[2]=S[2]+886263092+(S[1]>>>0<l[1]>>>0?1:0)|0,S[3]=S[3]+1295307597+(S[2]>>>0<l[2]>>>0?1:0)|0,S[4]=S[4]+3545052371+(S[3]>>>0<l[3]>>>0?1:0)|0,S[5]=S[5]+886263092+(S[4]>>>0<l[4]>>>0?1:0)|0,S[6]=S[6]+1295307597+(S[5]>>>0<l[5]>>>0?1:0)|0,S[7]=S[7]+3545052371+(S[6]>>>0<l[6]>>>0?1:0)|0,this._b=S[7]>>>0<l[7]>>>0?1:0;for(var T=0;T<8;T++){var I=E[T]+S[T],A=I&65535,C=I>>>16,O=((A*A>>>17)+A*C>>>15)+C*C,R=((I&4294901760)*I|0)+((I&65535)*I|0);x[T]=O^R}E[0]=x[0]+(x[7]<<16|x[7]>>>16)+(x[6]<<16|x[6]>>>16)|0,E[1]=x[1]+(x[0]<<8|x[0]>>>24)+x[7]|0,E[2]=x[2]+(x[1]<<16|x[1]>>>16)+(x[0]<<16|x[0]>>>16)|0,E[3]=x[3]+(x[2]<<8|x[2]>>>24)+x[1]|0,E[4]=x[4]+(x[3]<<16|x[3]>>>16)+(x[2]<<16|x[2]>>>16)|0,E[5]=x[5]+(x[4]<<8|x[4]>>>24)+x[3]|0,E[6]=x[6]+(x[5]<<16|x[5]>>>16)+(x[4]<<16|x[4]>>>16)|0,E[7]=x[7]+(x[6]<<8|x[6]>>>24)+x[5]|0}c.Rabbit=o._createHelper(g)}(),t.Rabbit})}(rabbit)),rabbitExports}var rabbitLegacyExports={},rabbitLegacy={get exports(){return rabbitLegacyExports},set exports(e){rabbitLegacyExports=e}},hasRequiredRabbitLegacy;function requireRabbitLegacy(){return hasRequiredRabbitLegacy||(hasRequiredRabbitLegacy=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.StreamCipher,b=c.algo,u=[],l=[],x=[],g=b.RabbitLegacy=o.extend({_doReset:function(){var E=this._key.words,S=this.cfg.iv,T=this._X=[E[0],E[3]<<16|E[2]>>>16,E[1],E[0]<<16|E[3]>>>16,E[2],E[1]<<16|E[0]>>>16,E[3],E[2]<<16|E[1]>>>16],I=this._C=[E[2]<<16|E[2]>>>16,E[0]&4294901760|E[1]&65535,E[3]<<16|E[3]>>>16,E[1]&4294901760|E[2]&65535,E[0]<<16|E[0]>>>16,E[2]&4294901760|E[3]&65535,E[1]<<16|E[1]>>>16,E[3]&4294901760|E[0]&65535];this._b=0;for(var A=0;A<4;A++)v.call(this);for(var A=0;A<8;A++)I[A]^=T[A+4&7];if(S){var C=S.words,O=C[0],R=C[1],B=(O<<8|O>>>24)&16711935|(O<<24|O>>>8)&4278255360,M=(R<<8|R>>>24)&16711935|(R<<24|R>>>8)&4278255360,L=B>>>16|M&4294901760,ee=M<<16|B&65535;I[0]^=B,I[1]^=L,I[2]^=M,I[3]^=ee,I[4]^=B,I[5]^=L,I[6]^=M,I[7]^=ee;for(var A=0;A<4;A++)v.call(this)}},_doProcessBlock:function(E,S){var T=this._X;v.call(this),u[0]=T[0]^T[5]>>>16^T[3]<<16,u[1]=T[2]^T[7]>>>16^T[5]<<16,u[2]=T[4]^T[1]>>>16^T[7]<<16,u[3]=T[6]^T[3]>>>16^T[1]<<16;for(var I=0;I<4;I++)u[I]=(u[I]<<8|u[I]>>>24)&16711935|(u[I]<<24|u[I]>>>8)&4278255360,E[S+I]^=u[I]},blockSize:128/32,ivSize:64/32});function v(){for(var E=this._X,S=this._C,T=0;T<8;T++)l[T]=S[T];S[0]=S[0]+1295307597+this._b|0,S[1]=S[1]+3545052371+(S[0]>>>0<l[0]>>>0?1:0)|0,S[2]=S[2]+886263092+(S[1]>>>0<l[1]>>>0?1:0)|0,S[3]=S[3]+1295307597+(S[2]>>>0<l[2]>>>0?1:0)|0,S[4]=S[4]+3545052371+(S[3]>>>0<l[3]>>>0?1:0)|0,S[5]=S[5]+886263092+(S[4]>>>0<l[4]>>>0?1:0)|0,S[6]=S[6]+1295307597+(S[5]>>>0<l[5]>>>0?1:0)|0,S[7]=S[7]+3545052371+(S[6]>>>0<l[6]>>>0?1:0)|0,this._b=S[7]>>>0<l[7]>>>0?1:0;for(var T=0;T<8;T++){var I=E[T]+S[T],A=I&65535,C=I>>>16,O=((A*A>>>17)+A*C>>>15)+C*C,R=((I&4294901760)*I|0)+((I&65535)*I|0);x[T]=O^R}E[0]=x[0]+(x[7]<<16|x[7]>>>16)+(x[6]<<16|x[6]>>>16)|0,E[1]=x[1]+(x[0]<<8|x[0]>>>24)+x[7]|0,E[2]=x[2]+(x[1]<<16|x[1]>>>16)+(x[0]<<16|x[0]>>>16)|0,E[3]=x[3]+(x[2]<<8|x[2]>>>24)+x[1]|0,E[4]=x[4]+(x[3]<<16|x[3]>>>16)+(x[2]<<16|x[2]>>>16)|0,E[5]=x[5]+(x[4]<<8|x[4]>>>24)+x[3]|0,E[6]=x[6]+(x[5]<<16|x[5]>>>16)+(x[4]<<16|x[4]>>>16)|0,E[7]=x[7]+(x[6]<<8|x[6]>>>24)+x[5]|0}c.RabbitLegacy=o._createHelper(g)}(),t.RabbitLegacy})}(rabbitLegacy)),rabbitLegacyExports}var blowfishExports={},blowfish={get exports(){return blowfishExports},set exports(e){blowfishExports=e}},hasRequiredBlowfish;function requireBlowfish(){return hasRequiredBlowfish||(hasRequiredBlowfish=1,function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireEncBase64(),requireMd5(),requireEvpkdf(),requireCipherCore())})(commonjsGlobal,function(t){return function(){var c=t,i=c.lib,o=i.BlockCipher,b=c.algo;const u=16,l=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],x=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var g={pbox:[],sbox:[]};function v(A,C){let O=C>>24&255,R=C>>16&255,B=C>>8&255,M=C&255,L=A.sbox[0][O]+A.sbox[1][R];return L=L^A.sbox[2][B],L=L+A.sbox[3][M],L}function E(A,C,O){let R=C,B=O,M;for(let L=0;L<u;++L)R=R^A.pbox[L],B=v(A,R)^B,M=R,R=B,B=M;return M=R,R=B,B=M,B=B^A.pbox[u],R=R^A.pbox[u+1],{left:R,right:B}}function S(A,C,O){let R=C,B=O,M;for(let L=u+1;L>1;--L)R=R^A.pbox[L],B=v(A,R)^B,M=R,R=B,B=M;return M=R,R=B,B=M,B=B^A.pbox[1],R=R^A.pbox[0],{left:R,right:B}}function T(A,C,O){for(let ee=0;ee<4;ee++){A.sbox[ee]=[];for(let z=0;z<256;z++)A.sbox[ee][z]=x[ee][z]}let R=0;for(let ee=0;ee<u+2;ee++)A.pbox[ee]=l[ee]^C[R],R++,R>=O&&(R=0);let B=0,M=0,L=0;for(let ee=0;ee<u+2;ee+=2)L=E(A,B,M),B=L.left,M=L.right,A.pbox[ee]=B,A.pbox[ee+1]=M;for(let ee=0;ee<4;ee++)for(let z=0;z<256;z+=2)L=E(A,B,M),B=L.left,M=L.right,A.sbox[ee][z]=B,A.sbox[ee][z+1]=M;return!0}var I=b.Blowfish=o.extend({_doReset:function(){if(this._keyPriorReset!==this._key){var A=this._keyPriorReset=this._key,C=A.words,O=A.sigBytes/4;T(g,C,O)}},encryptBlock:function(A,C){var O=E(g,A[C],A[C+1]);A[C]=O.left,A[C+1]=O.right},decryptBlock:function(A,C){var O=S(g,A[C],A[C+1]);A[C]=O.left,A[C+1]=O.right},blockSize:64/32,keySize:128/32,ivSize:64/32});c.Blowfish=o._createHelper(I)}(),t.Blowfish})}(blowfish)),blowfishExports}(function(e,a){(function(t,c,i){e.exports=c(requireCore(),requireX64Core(),requireLibTypedarrays(),requireEncUtf16(),requireEncBase64(),requireEncBase64url(),requireMd5(),requireSha1(),requireSha256(),requireSha224(),requireSha512(),requireSha384(),requireSha3(),requireRipemd160(),requireHmac(),requirePbkdf2(),requireEvpkdf(),requireCipherCore(),requireModeCfb(),requireModeCtr(),requireModeCtrGladman(),requireModeOfb(),requireModeEcb(),requirePadAnsix923(),requirePadIso10126(),requirePadIso97971(),requirePadZeropadding(),requirePadNopadding(),requireFormatHex(),requireAes(),requireTripledes(),requireRc4(),requireRabbit(),requireRabbitLegacy(),requireBlowfish())})(commonjsGlobal,function(t){return t})})(cryptoJs);let getRandomValues;const rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&(getRandomValues=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!getRandomValues))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const byteToHex=[];for(let e=0;e<256;++e)byteToHex.push((e+256).toString(16).slice(1));function unsafeStringify(e,a=0){return(byteToHex[e[a+0]]+byteToHex[e[a+1]]+byteToHex[e[a+2]]+byteToHex[e[a+3]]+"-"+byteToHex[e[a+4]]+byteToHex[e[a+5]]+"-"+byteToHex[e[a+6]]+byteToHex[e[a+7]]+"-"+byteToHex[e[a+8]]+byteToHex[e[a+9]]+"-"+byteToHex[e[a+10]]+byteToHex[e[a+11]]+byteToHex[e[a+12]]+byteToHex[e[a+13]]+byteToHex[e[a+14]]+byteToHex[e[a+15]]).toLowerCase()}const randomUUID=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),native$2={randomUUID};function v4(e,a,t){if(native$2.randomUUID&&!a&&!e)return native$2.randomUUID();e=e||{};const c=e.random||(e.rng||rng)();if(c[6]=c[6]&15|64,c[8]=c[8]&63|128,a){t=t||0;for(let i=0;i<16;++i)a[t+i]=c[i];return a}return unsafeStringify(c)}const SERVER_GLOBAL_ENV={config:{appVersion:"",appVersionName:""}};class ClientAuthHeader{"Client-Name"="Wallet-Extension";"Client-Request-Time";"Client-Request-ID";"Client-Request-Token";Version;constructor(){this["Client-Request-Time"]=new Date().getTime().toString(),this["Client-Request-ID"]=v4(),this["Client-Request-Token"]=cryptoJsExports.SHA256(this["Client-Name"]+this["Client-Request-Time"]+this["Client-Request-ID"]+"w4FLQbMAWzsBTEJyFZ4_6CGF").toString(),this.Version=SERVER_GLOBAL_ENV.config.appVersion}getAuthHeader(){return{"Client-Name":this["Client-Name"],"Client-Request-Time":this["Client-Request-Time"],"Client-Request-ID":this["Client-Request-ID"],"Client-Request-Token":this["Client-Request-Token"],Version:this.Version}}}function objectUnderlineToHump(e){if(typeof e!="object"||!e)return e;if(Array.isArray(e))return e.map(t=>objectUnderlineToHump(t));const a={};for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const c=t.replace(/_([a-z])/g,i=>i[1].toUpperCase());Object.prototype.hasOwnProperty.call(e,c)?a[t]=objectUnderlineToHump(e[t]):a[c]=objectUnderlineToHump(e[t])}return a}function objectHumpToUnderline(e){if(typeof e!="object"||!e)return e;if(Array.isArray(e))return e.map(t=>objectHumpToUnderline(t));const a={};for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const c=t.replace(/([A-Z])/g,i=>"_"+i.toLowerCase());a[c]=objectHumpToUnderline(e[t])}return a}function getNetworkExplorer(e,a="address/",t="tx/"){if(!e)return{domain:"",accountPath:"",txnPath:""};let c=e;return e.endsWith("/")||(c=e+"/"),{domain:c,accountPath:a,txnPath:t}}const request$5=extend$1({timeout:6e4});class CommonError extends Error{code;message;constructor(a,t){super(t),this.code=a,this.message=t}}const requestInterceptors=[(e,a)=>e.indexOf("http")===0?{url:e,options:a}:{url:"https://ex-wallet.crypto.com"+e,options:a},(e,a)=>{const t=new ClientAuthHeader().getAuthHeader();return a.credentials="include",a.headers={...a.headers,...t},{url:e,options:a}},(e,a)=>{const t={client_type:"Extension"};return a.headers={...a.headers,...t},{url:e,options:a}},(e,a)=>a.isCloseHumpToUnderline?{url:e,options:a}:(a.params=objectHumpToUnderline(a.params??{}),a.data=objectHumpToUnderline(a.data),{url:e,options:a})],responseInterceptors=[async e=>{if(!e.ok){const a=new Error;a.name="BizError";const t=await e.clone().json();throw a.response=t,a}return e},async e=>{let a;try{a=await e.clone().json()}catch{a={}}const{code:t,message:c,ok:i,...o}=a;let b=o;const{data:u,filter:l,...x}=b;if(a.hasOwnProperty("data"))Array.isArray(u)?b=u:b={...x,...u};else if(a.hasOwnProperty("code")&&a.hasOwnProperty("message")&&Object.keys(a).length===2)throw new CommonError(a.code,a.message);return{code:t,message:c,ok:i,data:objectUnderlineToHump(b),filter:objectUnderlineToHump(l)}}];requestInterceptors.forEach(e=>{request$5.interceptors.request.use(e)});responseInterceptors.forEach(e=>{request$5.interceptors.response.use(e)});var naclFastExports={},naclFast={get exports(){return naclFastExports},set exports(e){naclFastExports=e}};(function(e){(function(a){var t=function(V){var ae,te=new Float64Array(16);if(V)for(ae=0;ae<V.length;ae++)te[ae]=V[ae];return te},c=function(){throw new Error("no PRNG")},i=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var b=t(),u=t([1]),l=t([56129,1]),x=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),g=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),v=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),E=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),S=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function T(V,ae,te,H){V[ae]=te>>24&255,V[ae+1]=te>>16&255,V[ae+2]=te>>8&255,V[ae+3]=te&255,V[ae+4]=H>>24&255,V[ae+5]=H>>16&255,V[ae+6]=H>>8&255,V[ae+7]=H&255}function I(V,ae,te,H,ne){var he,xe=0;for(he=0;he<ne;he++)xe|=V[ae+he]^te[H+he];return(1&xe-1>>>8)-1}function A(V,ae,te,H){return I(V,ae,te,H,16)}function C(V,ae,te,H){return I(V,ae,te,H,32)}function O(V,ae,te,H){for(var ne=H[0]&255|(H[1]&255)<<8|(H[2]&255)<<16|(H[3]&255)<<24,he=te[0]&255|(te[1]&255)<<8|(te[2]&255)<<16|(te[3]&255)<<24,xe=te[4]&255|(te[5]&255)<<8|(te[6]&255)<<16|(te[7]&255)<<24,me=te[8]&255|(te[9]&255)<<8|(te[10]&255)<<16|(te[11]&255)<<24,Te=te[12]&255|(te[13]&255)<<8|(te[14]&255)<<16|(te[15]&255)<<24,De=H[4]&255|(H[5]&255)<<8|(H[6]&255)<<16|(H[7]&255)<<24,Ce=ae[0]&255|(ae[1]&255)<<8|(ae[2]&255)<<16|(ae[3]&255)<<24,t0=ae[4]&255|(ae[5]&255)<<8|(ae[6]&255)<<16|(ae[7]&255)<<24,Re=ae[8]&255|(ae[9]&255)<<8|(ae[10]&255)<<16|(ae[11]&255)<<24,We=ae[12]&255|(ae[13]&255)<<8|(ae[14]&255)<<16|(ae[15]&255)<<24,Ge=H[8]&255|(H[9]&255)<<8|(H[10]&255)<<16|(H[11]&255)<<24,e0=te[16]&255|(te[17]&255)<<8|(te[18]&255)<<16|(te[19]&255)<<24,Qe=te[20]&255|(te[21]&255)<<8|(te[22]&255)<<16|(te[23]&255)<<24,Ve=te[24]&255|(te[25]&255)<<8|(te[26]&255)<<16|(te[27]&255)<<24,Ye=te[28]&255|(te[29]&255)<<8|(te[30]&255)<<16|(te[31]&255)<<24,Xe=H[12]&255|(H[13]&255)<<8|(H[14]&255)<<16|(H[15]&255)<<24,Fe=ne,ze=he,Ne=xe,Le=me,He=Te,Me=De,ye=Ce,ve=t0,ke=Re,$e=We,Ae=Ge,Ie=e0,Ze=Qe,c0=Ve,f0=Ye,n0=Xe,ue,x0=0;x0<20;x0+=2)ue=Fe+Ze|0,He^=ue<<7|ue>>>32-7,ue=He+Fe|0,ke^=ue<<9|ue>>>32-9,ue=ke+He|0,Ze^=ue<<13|ue>>>32-13,ue=Ze+ke|0,Fe^=ue<<18|ue>>>32-18,ue=Me+ze|0,$e^=ue<<7|ue>>>32-7,ue=$e+Me|0,c0^=ue<<9|ue>>>32-9,ue=c0+$e|0,ze^=ue<<13|ue>>>32-13,ue=ze+c0|0,Me^=ue<<18|ue>>>32-18,ue=Ae+ye|0,f0^=ue<<7|ue>>>32-7,ue=f0+Ae|0,Ne^=ue<<9|ue>>>32-9,ue=Ne+f0|0,ye^=ue<<13|ue>>>32-13,ue=ye+Ne|0,Ae^=ue<<18|ue>>>32-18,ue=n0+Ie|0,Le^=ue<<7|ue>>>32-7,ue=Le+n0|0,ve^=ue<<9|ue>>>32-9,ue=ve+Le|0,Ie^=ue<<13|ue>>>32-13,ue=Ie+ve|0,n0^=ue<<18|ue>>>32-18,ue=Fe+Le|0,ze^=ue<<7|ue>>>32-7,ue=ze+Fe|0,Ne^=ue<<9|ue>>>32-9,ue=Ne+ze|0,Le^=ue<<13|ue>>>32-13,ue=Le+Ne|0,Fe^=ue<<18|ue>>>32-18,ue=Me+He|0,ye^=ue<<7|ue>>>32-7,ue=ye+Me|0,ve^=ue<<9|ue>>>32-9,ue=ve+ye|0,He^=ue<<13|ue>>>32-13,ue=He+ve|0,Me^=ue<<18|ue>>>32-18,ue=Ae+$e|0,Ie^=ue<<7|ue>>>32-7,ue=Ie+Ae|0,ke^=ue<<9|ue>>>32-9,ue=ke+Ie|0,$e^=ue<<13|ue>>>32-13,ue=$e+ke|0,Ae^=ue<<18|ue>>>32-18,ue=n0+f0|0,Ze^=ue<<7|ue>>>32-7,ue=Ze+n0|0,c0^=ue<<9|ue>>>32-9,ue=c0+Ze|0,f0^=ue<<13|ue>>>32-13,ue=f0+c0|0,n0^=ue<<18|ue>>>32-18;Fe=Fe+ne|0,ze=ze+he|0,Ne=Ne+xe|0,Le=Le+me|0,He=He+Te|0,Me=Me+De|0,ye=ye+Ce|0,ve=ve+t0|0,ke=ke+Re|0,$e=$e+We|0,Ae=Ae+Ge|0,Ie=Ie+e0|0,Ze=Ze+Qe|0,c0=c0+Ve|0,f0=f0+Ye|0,n0=n0+Xe|0,V[0]=Fe>>>0&255,V[1]=Fe>>>8&255,V[2]=Fe>>>16&255,V[3]=Fe>>>24&255,V[4]=ze>>>0&255,V[5]=ze>>>8&255,V[6]=ze>>>16&255,V[7]=ze>>>24&255,V[8]=Ne>>>0&255,V[9]=Ne>>>8&255,V[10]=Ne>>>16&255,V[11]=Ne>>>24&255,V[12]=Le>>>0&255,V[13]=Le>>>8&255,V[14]=Le>>>16&255,V[15]=Le>>>24&255,V[16]=He>>>0&255,V[17]=He>>>8&255,V[18]=He>>>16&255,V[19]=He>>>24&255,V[20]=Me>>>0&255,V[21]=Me>>>8&255,V[22]=Me>>>16&255,V[23]=Me>>>24&255,V[24]=ye>>>0&255,V[25]=ye>>>8&255,V[26]=ye>>>16&255,V[27]=ye>>>24&255,V[28]=ve>>>0&255,V[29]=ve>>>8&255,V[30]=ve>>>16&255,V[31]=ve>>>24&255,V[32]=ke>>>0&255,V[33]=ke>>>8&255,V[34]=ke>>>16&255,V[35]=ke>>>24&255,V[36]=$e>>>0&255,V[37]=$e>>>8&255,V[38]=$e>>>16&255,V[39]=$e>>>24&255,V[40]=Ae>>>0&255,V[41]=Ae>>>8&255,V[42]=Ae>>>16&255,V[43]=Ae>>>24&255,V[44]=Ie>>>0&255,V[45]=Ie>>>8&255,V[46]=Ie>>>16&255,V[47]=Ie>>>24&255,V[48]=Ze>>>0&255,V[49]=Ze>>>8&255,V[50]=Ze>>>16&255,V[51]=Ze>>>24&255,V[52]=c0>>>0&255,V[53]=c0>>>8&255,V[54]=c0>>>16&255,V[55]=c0>>>24&255,V[56]=f0>>>0&255,V[57]=f0>>>8&255,V[58]=f0>>>16&255,V[59]=f0>>>24&255,V[60]=n0>>>0&255,V[61]=n0>>>8&255,V[62]=n0>>>16&255,V[63]=n0>>>24&255}function R(V,ae,te,H){for(var ne=H[0]&255|(H[1]&255)<<8|(H[2]&255)<<16|(H[3]&255)<<24,he=te[0]&255|(te[1]&255)<<8|(te[2]&255)<<16|(te[3]&255)<<24,xe=te[4]&255|(te[5]&255)<<8|(te[6]&255)<<16|(te[7]&255)<<24,me=te[8]&255|(te[9]&255)<<8|(te[10]&255)<<16|(te[11]&255)<<24,Te=te[12]&255|(te[13]&255)<<8|(te[14]&255)<<16|(te[15]&255)<<24,De=H[4]&255|(H[5]&255)<<8|(H[6]&255)<<16|(H[7]&255)<<24,Ce=ae[0]&255|(ae[1]&255)<<8|(ae[2]&255)<<16|(ae[3]&255)<<24,t0=ae[4]&255|(ae[5]&255)<<8|(ae[6]&255)<<16|(ae[7]&255)<<24,Re=ae[8]&255|(ae[9]&255)<<8|(ae[10]&255)<<16|(ae[11]&255)<<24,We=ae[12]&255|(ae[13]&255)<<8|(ae[14]&255)<<16|(ae[15]&255)<<24,Ge=H[8]&255|(H[9]&255)<<8|(H[10]&255)<<16|(H[11]&255)<<24,e0=te[16]&255|(te[17]&255)<<8|(te[18]&255)<<16|(te[19]&255)<<24,Qe=te[20]&255|(te[21]&255)<<8|(te[22]&255)<<16|(te[23]&255)<<24,Ve=te[24]&255|(te[25]&255)<<8|(te[26]&255)<<16|(te[27]&255)<<24,Ye=te[28]&255|(te[29]&255)<<8|(te[30]&255)<<16|(te[31]&255)<<24,Xe=H[12]&255|(H[13]&255)<<8|(H[14]&255)<<16|(H[15]&255)<<24,Fe=ne,ze=he,Ne=xe,Le=me,He=Te,Me=De,ye=Ce,ve=t0,ke=Re,$e=We,Ae=Ge,Ie=e0,Ze=Qe,c0=Ve,f0=Ye,n0=Xe,ue,x0=0;x0<20;x0+=2)ue=Fe+Ze|0,He^=ue<<7|ue>>>32-7,ue=He+Fe|0,ke^=ue<<9|ue>>>32-9,ue=ke+He|0,Ze^=ue<<13|ue>>>32-13,ue=Ze+ke|0,Fe^=ue<<18|ue>>>32-18,ue=Me+ze|0,$e^=ue<<7|ue>>>32-7,ue=$e+Me|0,c0^=ue<<9|ue>>>32-9,ue=c0+$e|0,ze^=ue<<13|ue>>>32-13,ue=ze+c0|0,Me^=ue<<18|ue>>>32-18,ue=Ae+ye|0,f0^=ue<<7|ue>>>32-7,ue=f0+Ae|0,Ne^=ue<<9|ue>>>32-9,ue=Ne+f0|0,ye^=ue<<13|ue>>>32-13,ue=ye+Ne|0,Ae^=ue<<18|ue>>>32-18,ue=n0+Ie|0,Le^=ue<<7|ue>>>32-7,ue=Le+n0|0,ve^=ue<<9|ue>>>32-9,ue=ve+Le|0,Ie^=ue<<13|ue>>>32-13,ue=Ie+ve|0,n0^=ue<<18|ue>>>32-18,ue=Fe+Le|0,ze^=ue<<7|ue>>>32-7,ue=ze+Fe|0,Ne^=ue<<9|ue>>>32-9,ue=Ne+ze|0,Le^=ue<<13|ue>>>32-13,ue=Le+Ne|0,Fe^=ue<<18|ue>>>32-18,ue=Me+He|0,ye^=ue<<7|ue>>>32-7,ue=ye+Me|0,ve^=ue<<9|ue>>>32-9,ue=ve+ye|0,He^=ue<<13|ue>>>32-13,ue=He+ve|0,Me^=ue<<18|ue>>>32-18,ue=Ae+$e|0,Ie^=ue<<7|ue>>>32-7,ue=Ie+Ae|0,ke^=ue<<9|ue>>>32-9,ue=ke+Ie|0,$e^=ue<<13|ue>>>32-13,ue=$e+ke|0,Ae^=ue<<18|ue>>>32-18,ue=n0+f0|0,Ze^=ue<<7|ue>>>32-7,ue=Ze+n0|0,c0^=ue<<9|ue>>>32-9,ue=c0+Ze|0,f0^=ue<<13|ue>>>32-13,ue=f0+c0|0,n0^=ue<<18|ue>>>32-18;V[0]=Fe>>>0&255,V[1]=Fe>>>8&255,V[2]=Fe>>>16&255,V[3]=Fe>>>24&255,V[4]=Me>>>0&255,V[5]=Me>>>8&255,V[6]=Me>>>16&255,V[7]=Me>>>24&255,V[8]=Ae>>>0&255,V[9]=Ae>>>8&255,V[10]=Ae>>>16&255,V[11]=Ae>>>24&255,V[12]=n0>>>0&255,V[13]=n0>>>8&255,V[14]=n0>>>16&255,V[15]=n0>>>24&255,V[16]=ye>>>0&255,V[17]=ye>>>8&255,V[18]=ye>>>16&255,V[19]=ye>>>24&255,V[20]=ve>>>0&255,V[21]=ve>>>8&255,V[22]=ve>>>16&255,V[23]=ve>>>24&255,V[24]=ke>>>0&255,V[25]=ke>>>8&255,V[26]=ke>>>16&255,V[27]=ke>>>24&255,V[28]=$e>>>0&255,V[29]=$e>>>8&255,V[30]=$e>>>16&255,V[31]=$e>>>24&255}function B(V,ae,te,H){O(V,ae,te,H)}function M(V,ae,te,H){R(V,ae,te,H)}var L=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function ee(V,ae,te,H,ne,he,xe){var me=new Uint8Array(16),Te=new Uint8Array(64),De,Ce;for(Ce=0;Ce<16;Ce++)me[Ce]=0;for(Ce=0;Ce<8;Ce++)me[Ce]=he[Ce];for(;ne>=64;){for(B(Te,me,xe,L),Ce=0;Ce<64;Ce++)V[ae+Ce]=te[H+Ce]^Te[Ce];for(De=1,Ce=8;Ce<16;Ce++)De=De+(me[Ce]&255)|0,me[Ce]=De&255,De>>>=8;ne-=64,ae+=64,H+=64}if(ne>0)for(B(Te,me,xe,L),Ce=0;Ce<ne;Ce++)V[ae+Ce]=te[H+Ce]^Te[Ce];return 0}function z(V,ae,te,H,ne){var he=new Uint8Array(16),xe=new Uint8Array(64),me,Te;for(Te=0;Te<16;Te++)he[Te]=0;for(Te=0;Te<8;Te++)he[Te]=H[Te];for(;te>=64;){for(B(xe,he,ne,L),Te=0;Te<64;Te++)V[ae+Te]=xe[Te];for(me=1,Te=8;Te<16;Te++)me=me+(he[Te]&255)|0,he[Te]=me&255,me>>>=8;te-=64,ae+=64}if(te>0)for(B(xe,he,ne,L),Te=0;Te<te;Te++)V[ae+Te]=xe[Te];return 0}function oe(V,ae,te,H,ne){var he=new Uint8Array(32);M(he,H,ne,L);for(var xe=new Uint8Array(8),me=0;me<8;me++)xe[me]=H[me+16];return z(V,ae,te,xe,he)}function W(V,ae,te,H,ne,he,xe){var me=new Uint8Array(32);M(me,he,xe,L);for(var Te=new Uint8Array(8),De=0;De<8;De++)Te[De]=he[De+16];return ee(V,ae,te,H,ne,Te,me)}var P=function(V){this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0;var ae,te,H,ne,he,xe,me,Te;ae=V[0]&255|(V[1]&255)<<8,this.r[0]=ae&8191,te=V[2]&255|(V[3]&255)<<8,this.r[1]=(ae>>>13|te<<3)&8191,H=V[4]&255|(V[5]&255)<<8,this.r[2]=(te>>>10|H<<6)&7939,ne=V[6]&255|(V[7]&255)<<8,this.r[3]=(H>>>7|ne<<9)&8191,he=V[8]&255|(V[9]&255)<<8,this.r[4]=(ne>>>4|he<<12)&255,this.r[5]=he>>>1&8190,xe=V[10]&255|(V[11]&255)<<8,this.r[6]=(he>>>14|xe<<2)&8191,me=V[12]&255|(V[13]&255)<<8,this.r[7]=(xe>>>11|me<<5)&8065,Te=V[14]&255|(V[15]&255)<<8,this.r[8]=(me>>>8|Te<<8)&8191,this.r[9]=Te>>>5&127,this.pad[0]=V[16]&255|(V[17]&255)<<8,this.pad[1]=V[18]&255|(V[19]&255)<<8,this.pad[2]=V[20]&255|(V[21]&255)<<8,this.pad[3]=V[22]&255|(V[23]&255)<<8,this.pad[4]=V[24]&255|(V[25]&255)<<8,this.pad[5]=V[26]&255|(V[27]&255)<<8,this.pad[6]=V[28]&255|(V[29]&255)<<8,this.pad[7]=V[30]&255|(V[31]&255)<<8};P.prototype.blocks=function(V,ae,te){for(var H=this.fin?0:2048,ne,he,xe,me,Te,De,Ce,t0,Re,We,Ge,e0,Qe,Ve,Ye,Xe,Fe,ze,Ne,Le=this.h[0],He=this.h[1],Me=this.h[2],ye=this.h[3],ve=this.h[4],ke=this.h[5],$e=this.h[6],Ae=this.h[7],Ie=this.h[8],Ze=this.h[9],c0=this.r[0],f0=this.r[1],n0=this.r[2],ue=this.r[3],x0=this.r[4],k0=this.r[5],B0=this.r[6],d0=this.r[7],A0=this.r[8],T0=this.r[9];te>=16;)ne=V[ae+0]&255|(V[ae+1]&255)<<8,Le+=ne&8191,he=V[ae+2]&255|(V[ae+3]&255)<<8,He+=(ne>>>13|he<<3)&8191,xe=V[ae+4]&255|(V[ae+5]&255)<<8,Me+=(he>>>10|xe<<6)&8191,me=V[ae+6]&255|(V[ae+7]&255)<<8,ye+=(xe>>>7|me<<9)&8191,Te=V[ae+8]&255|(V[ae+9]&255)<<8,ve+=(me>>>4|Te<<12)&8191,ke+=Te>>>1&8191,De=V[ae+10]&255|(V[ae+11]&255)<<8,$e+=(Te>>>14|De<<2)&8191,Ce=V[ae+12]&255|(V[ae+13]&255)<<8,Ae+=(De>>>11|Ce<<5)&8191,t0=V[ae+14]&255|(V[ae+15]&255)<<8,Ie+=(Ce>>>8|t0<<8)&8191,Ze+=t0>>>5|H,Re=0,We=Re,We+=Le*c0,We+=He*(5*T0),We+=Me*(5*A0),We+=ye*(5*d0),We+=ve*(5*B0),Re=We>>>13,We&=8191,We+=ke*(5*k0),We+=$e*(5*x0),We+=Ae*(5*ue),We+=Ie*(5*n0),We+=Ze*(5*f0),Re+=We>>>13,We&=8191,Ge=Re,Ge+=Le*f0,Ge+=He*c0,Ge+=Me*(5*T0),Ge+=ye*(5*A0),Ge+=ve*(5*d0),Re=Ge>>>13,Ge&=8191,Ge+=ke*(5*B0),Ge+=$e*(5*k0),Ge+=Ae*(5*x0),Ge+=Ie*(5*ue),Ge+=Ze*(5*n0),Re+=Ge>>>13,Ge&=8191,e0=Re,e0+=Le*n0,e0+=He*f0,e0+=Me*c0,e0+=ye*(5*T0),e0+=ve*(5*A0),Re=e0>>>13,e0&=8191,e0+=ke*(5*d0),e0+=$e*(5*B0),e0+=Ae*(5*k0),e0+=Ie*(5*x0),e0+=Ze*(5*ue),Re+=e0>>>13,e0&=8191,Qe=Re,Qe+=Le*ue,Qe+=He*n0,Qe+=Me*f0,Qe+=ye*c0,Qe+=ve*(5*T0),Re=Qe>>>13,Qe&=8191,Qe+=ke*(5*A0),Qe+=$e*(5*d0),Qe+=Ae*(5*B0),Qe+=Ie*(5*k0),Qe+=Ze*(5*x0),Re+=Qe>>>13,Qe&=8191,Ve=Re,Ve+=Le*x0,Ve+=He*ue,Ve+=Me*n0,Ve+=ye*f0,Ve+=ve*c0,Re=Ve>>>13,Ve&=8191,Ve+=ke*(5*T0),Ve+=$e*(5*A0),Ve+=Ae*(5*d0),Ve+=Ie*(5*B0),Ve+=Ze*(5*k0),Re+=Ve>>>13,Ve&=8191,Ye=Re,Ye+=Le*k0,Ye+=He*x0,Ye+=Me*ue,Ye+=ye*n0,Ye+=ve*f0,Re=Ye>>>13,Ye&=8191,Ye+=ke*c0,Ye+=$e*(5*T0),Ye+=Ae*(5*A0),Ye+=Ie*(5*d0),Ye+=Ze*(5*B0),Re+=Ye>>>13,Ye&=8191,Xe=Re,Xe+=Le*B0,Xe+=He*k0,Xe+=Me*x0,Xe+=ye*ue,Xe+=ve*n0,Re=Xe>>>13,Xe&=8191,Xe+=ke*f0,Xe+=$e*c0,Xe+=Ae*(5*T0),Xe+=Ie*(5*A0),Xe+=Ze*(5*d0),Re+=Xe>>>13,Xe&=8191,Fe=Re,Fe+=Le*d0,Fe+=He*B0,Fe+=Me*k0,Fe+=ye*x0,Fe+=ve*ue,Re=Fe>>>13,Fe&=8191,Fe+=ke*n0,Fe+=$e*f0,Fe+=Ae*c0,Fe+=Ie*(5*T0),Fe+=Ze*(5*A0),Re+=Fe>>>13,Fe&=8191,ze=Re,ze+=Le*A0,ze+=He*d0,ze+=Me*B0,ze+=ye*k0,ze+=ve*x0,Re=ze>>>13,ze&=8191,ze+=ke*ue,ze+=$e*n0,ze+=Ae*f0,ze+=Ie*c0,ze+=Ze*(5*T0),Re+=ze>>>13,ze&=8191,Ne=Re,Ne+=Le*T0,Ne+=He*A0,Ne+=Me*d0,Ne+=ye*B0,Ne+=ve*k0,Re=Ne>>>13,Ne&=8191,Ne+=ke*x0,Ne+=$e*ue,Ne+=Ae*n0,Ne+=Ie*f0,Ne+=Ze*c0,Re+=Ne>>>13,Ne&=8191,Re=(Re<<2)+Re|0,Re=Re+We|0,We=Re&8191,Re=Re>>>13,Ge+=Re,Le=We,He=Ge,Me=e0,ye=Qe,ve=Ve,ke=Ye,$e=Xe,Ae=Fe,Ie=ze,Ze=Ne,ae+=16,te-=16;this.h[0]=Le,this.h[1]=He,this.h[2]=Me,this.h[3]=ye,this.h[4]=ve,this.h[5]=ke,this.h[6]=$e,this.h[7]=Ae,this.h[8]=Ie,this.h[9]=Ze},P.prototype.finish=function(V,ae){var te=new Uint16Array(10),H,ne,he,xe;if(this.leftover){for(xe=this.leftover,this.buffer[xe++]=1;xe<16;xe++)this.buffer[xe]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(H=this.h[1]>>>13,this.h[1]&=8191,xe=2;xe<10;xe++)this.h[xe]+=H,H=this.h[xe]>>>13,this.h[xe]&=8191;for(this.h[0]+=H*5,H=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=H,H=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=H,te[0]=this.h[0]+5,H=te[0]>>>13,te[0]&=8191,xe=1;xe<10;xe++)te[xe]=this.h[xe]+H,H=te[xe]>>>13,te[xe]&=8191;for(te[9]-=1<<13,ne=(H^1)-1,xe=0;xe<10;xe++)te[xe]&=ne;for(ne=~ne,xe=0;xe<10;xe++)this.h[xe]=this.h[xe]&ne|te[xe];for(this.h[0]=(this.h[0]|this.h[1]<<13)&65535,this.h[1]=(this.h[1]>>>3|this.h[2]<<10)&65535,this.h[2]=(this.h[2]>>>6|this.h[3]<<7)&65535,this.h[3]=(this.h[3]>>>9|this.h[4]<<4)&65535,this.h[4]=(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14)&65535,this.h[5]=(this.h[6]>>>2|this.h[7]<<11)&65535,this.h[6]=(this.h[7]>>>5|this.h[8]<<8)&65535,this.h[7]=(this.h[8]>>>8|this.h[9]<<5)&65535,he=this.h[0]+this.pad[0],this.h[0]=he&65535,xe=1;xe<8;xe++)he=(this.h[xe]+this.pad[xe]|0)+(he>>>16)|0,this.h[xe]=he&65535;V[ae+0]=this.h[0]>>>0&255,V[ae+1]=this.h[0]>>>8&255,V[ae+2]=this.h[1]>>>0&255,V[ae+3]=this.h[1]>>>8&255,V[ae+4]=this.h[2]>>>0&255,V[ae+5]=this.h[2]>>>8&255,V[ae+6]=this.h[3]>>>0&255,V[ae+7]=this.h[3]>>>8&255,V[ae+8]=this.h[4]>>>0&255,V[ae+9]=this.h[4]>>>8&255,V[ae+10]=this.h[5]>>>0&255,V[ae+11]=this.h[5]>>>8&255,V[ae+12]=this.h[6]>>>0&255,V[ae+13]=this.h[6]>>>8&255,V[ae+14]=this.h[7]>>>0&255,V[ae+15]=this.h[7]>>>8&255},P.prototype.update=function(V,ae,te){var H,ne;if(this.leftover){for(ne=16-this.leftover,ne>te&&(ne=te),H=0;H<ne;H++)this.buffer[this.leftover+H]=V[ae+H];if(te-=ne,ae+=ne,this.leftover+=ne,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(te>=16&&(ne=te-te%16,this.blocks(V,ae,ne),ae+=ne,te-=ne),te){for(H=0;H<te;H++)this.buffer[this.leftover+H]=V[ae+H];this.leftover+=te}};function D(V,ae,te,H,ne,he){var xe=new P(he);return xe.update(te,H,ne),xe.finish(V,ae),0}function q(V,ae,te,H,ne,he){var xe=new Uint8Array(16);return D(xe,0,te,H,ne,he),A(V,ae,xe,0)}function Y(V,ae,te,H,ne){var he;if(te<32)return-1;for(W(V,0,ae,0,te,H,ne),D(V,16,V,32,te-32,V),he=0;he<16;he++)V[he]=0;return 0}function U(V,ae,te,H,ne){var he,xe=new Uint8Array(32);if(te<32||(oe(xe,0,32,H,ne),q(ae,16,ae,32,te-32,xe)!==0))return-1;for(W(V,0,ae,0,te,H,ne),he=0;he<32;he++)V[he]=0;return 0}function j(V,ae){var te;for(te=0;te<16;te++)V[te]=ae[te]|0}function Q(V){var ae,te,H=1;for(ae=0;ae<16;ae++)te=V[ae]+H+65535,H=Math.floor(te/65536),V[ae]=te-H*65536;V[0]+=H-1+37*(H-1)}function X(V,ae,te){for(var H,ne=~(te-1),he=0;he<16;he++)H=ne&(V[he]^ae[he]),V[he]^=H,ae[he]^=H}function F(V,ae){var te,H,ne,he=t(),xe=t();for(te=0;te<16;te++)xe[te]=ae[te];for(Q(xe),Q(xe),Q(xe),H=0;H<2;H++){for(he[0]=xe[0]-65517,te=1;te<15;te++)he[te]=xe[te]-65535-(he[te-1]>>16&1),he[te-1]&=65535;he[15]=xe[15]-32767-(he[14]>>16&1),ne=he[15]>>16&1,he[14]&=65535,X(xe,he,1-ne)}for(te=0;te<16;te++)V[2*te]=xe[te]&255,V[2*te+1]=xe[te]>>8}function Z(V,ae){var te=new Uint8Array(32),H=new Uint8Array(32);return F(te,V),F(H,ae),C(te,0,H,0)}function J(V){var ae=new Uint8Array(32);return F(ae,V),ae[0]&1}function ce(V,ae){var te;for(te=0;te<16;te++)V[te]=ae[2*te]+(ae[2*te+1]<<8);V[15]&=32767}function re(V,ae,te){for(var H=0;H<16;H++)V[H]=ae[H]+te[H]}function ie(V,ae,te){for(var H=0;H<16;H++)V[H]=ae[H]-te[H]}function fe(V,ae,te){var H,ne,he=0,xe=0,me=0,Te=0,De=0,Ce=0,t0=0,Re=0,We=0,Ge=0,e0=0,Qe=0,Ve=0,Ye=0,Xe=0,Fe=0,ze=0,Ne=0,Le=0,He=0,Me=0,ye=0,ve=0,ke=0,$e=0,Ae=0,Ie=0,Ze=0,c0=0,f0=0,n0=0,ue=te[0],x0=te[1],k0=te[2],B0=te[3],d0=te[4],A0=te[5],T0=te[6],L0=te[7],R0=te[8],D0=te[9],F0=te[10],U0=te[11],W0=te[12],G0=te[13],V0=te[14],X0=te[15];H=ae[0],he+=H*ue,xe+=H*x0,me+=H*k0,Te+=H*B0,De+=H*d0,Ce+=H*A0,t0+=H*T0,Re+=H*L0,We+=H*R0,Ge+=H*D0,e0+=H*F0,Qe+=H*U0,Ve+=H*W0,Ye+=H*G0,Xe+=H*V0,Fe+=H*X0,H=ae[1],xe+=H*ue,me+=H*x0,Te+=H*k0,De+=H*B0,Ce+=H*d0,t0+=H*A0,Re+=H*T0,We+=H*L0,Ge+=H*R0,e0+=H*D0,Qe+=H*F0,Ve+=H*U0,Ye+=H*W0,Xe+=H*G0,Fe+=H*V0,ze+=H*X0,H=ae[2],me+=H*ue,Te+=H*x0,De+=H*k0,Ce+=H*B0,t0+=H*d0,Re+=H*A0,We+=H*T0,Ge+=H*L0,e0+=H*R0,Qe+=H*D0,Ve+=H*F0,Ye+=H*U0,Xe+=H*W0,Fe+=H*G0,ze+=H*V0,Ne+=H*X0,H=ae[3],Te+=H*ue,De+=H*x0,Ce+=H*k0,t0+=H*B0,Re+=H*d0,We+=H*A0,Ge+=H*T0,e0+=H*L0,Qe+=H*R0,Ve+=H*D0,Ye+=H*F0,Xe+=H*U0,Fe+=H*W0,ze+=H*G0,Ne+=H*V0,Le+=H*X0,H=ae[4],De+=H*ue,Ce+=H*x0,t0+=H*k0,Re+=H*B0,We+=H*d0,Ge+=H*A0,e0+=H*T0,Qe+=H*L0,Ve+=H*R0,Ye+=H*D0,Xe+=H*F0,Fe+=H*U0,ze+=H*W0,Ne+=H*G0,Le+=H*V0,He+=H*X0,H=ae[5],Ce+=H*ue,t0+=H*x0,Re+=H*k0,We+=H*B0,Ge+=H*d0,e0+=H*A0,Qe+=H*T0,Ve+=H*L0,Ye+=H*R0,Xe+=H*D0,Fe+=H*F0,ze+=H*U0,Ne+=H*W0,Le+=H*G0,He+=H*V0,Me+=H*X0,H=ae[6],t0+=H*ue,Re+=H*x0,We+=H*k0,Ge+=H*B0,e0+=H*d0,Qe+=H*A0,Ve+=H*T0,Ye+=H*L0,Xe+=H*R0,Fe+=H*D0,ze+=H*F0,Ne+=H*U0,Le+=H*W0,He+=H*G0,Me+=H*V0,ye+=H*X0,H=ae[7],Re+=H*ue,We+=H*x0,Ge+=H*k0,e0+=H*B0,Qe+=H*d0,Ve+=H*A0,Ye+=H*T0,Xe+=H*L0,Fe+=H*R0,ze+=H*D0,Ne+=H*F0,Le+=H*U0,He+=H*W0,Me+=H*G0,ye+=H*V0,ve+=H*X0,H=ae[8],We+=H*ue,Ge+=H*x0,e0+=H*k0,Qe+=H*B0,Ve+=H*d0,Ye+=H*A0,Xe+=H*T0,Fe+=H*L0,ze+=H*R0,Ne+=H*D0,Le+=H*F0,He+=H*U0,Me+=H*W0,ye+=H*G0,ve+=H*V0,ke+=H*X0,H=ae[9],Ge+=H*ue,e0+=H*x0,Qe+=H*k0,Ve+=H*B0,Ye+=H*d0,Xe+=H*A0,Fe+=H*T0,ze+=H*L0,Ne+=H*R0,Le+=H*D0,He+=H*F0,Me+=H*U0,ye+=H*W0,ve+=H*G0,ke+=H*V0,$e+=H*X0,H=ae[10],e0+=H*ue,Qe+=H*x0,Ve+=H*k0,Ye+=H*B0,Xe+=H*d0,Fe+=H*A0,ze+=H*T0,Ne+=H*L0,Le+=H*R0,He+=H*D0,Me+=H*F0,ye+=H*U0,ve+=H*W0,ke+=H*G0,$e+=H*V0,Ae+=H*X0,H=ae[11],Qe+=H*ue,Ve+=H*x0,Ye+=H*k0,Xe+=H*B0,Fe+=H*d0,ze+=H*A0,Ne+=H*T0,Le+=H*L0,He+=H*R0,Me+=H*D0,ye+=H*F0,ve+=H*U0,ke+=H*W0,$e+=H*G0,Ae+=H*V0,Ie+=H*X0,H=ae[12],Ve+=H*ue,Ye+=H*x0,Xe+=H*k0,Fe+=H*B0,ze+=H*d0,Ne+=H*A0,Le+=H*T0,He+=H*L0,Me+=H*R0,ye+=H*D0,ve+=H*F0,ke+=H*U0,$e+=H*W0,Ae+=H*G0,Ie+=H*V0,Ze+=H*X0,H=ae[13],Ye+=H*ue,Xe+=H*x0,Fe+=H*k0,ze+=H*B0,Ne+=H*d0,Le+=H*A0,He+=H*T0,Me+=H*L0,ye+=H*R0,ve+=H*D0,ke+=H*F0,$e+=H*U0,Ae+=H*W0,Ie+=H*G0,Ze+=H*V0,c0+=H*X0,H=ae[14],Xe+=H*ue,Fe+=H*x0,ze+=H*k0,Ne+=H*B0,Le+=H*d0,He+=H*A0,Me+=H*T0,ye+=H*L0,ve+=H*R0,ke+=H*D0,$e+=H*F0,Ae+=H*U0,Ie+=H*W0,Ze+=H*G0,c0+=H*V0,f0+=H*X0,H=ae[15],Fe+=H*ue,ze+=H*x0,Ne+=H*k0,Le+=H*B0,He+=H*d0,Me+=H*A0,ye+=H*T0,ve+=H*L0,ke+=H*R0,$e+=H*D0,Ae+=H*F0,Ie+=H*U0,Ze+=H*W0,c0+=H*G0,f0+=H*V0,n0+=H*X0,he+=38*ze,xe+=38*Ne,me+=38*Le,Te+=38*He,De+=38*Me,Ce+=38*ye,t0+=38*ve,Re+=38*ke,We+=38*$e,Ge+=38*Ae,e0+=38*Ie,Qe+=38*Ze,Ve+=38*c0,Ye+=38*f0,Xe+=38*n0,ne=1,H=he+ne+65535,ne=Math.floor(H/65536),he=H-ne*65536,H=xe+ne+65535,ne=Math.floor(H/65536),xe=H-ne*65536,H=me+ne+65535,ne=Math.floor(H/65536),me=H-ne*65536,H=Te+ne+65535,ne=Math.floor(H/65536),Te=H-ne*65536,H=De+ne+65535,ne=Math.floor(H/65536),De=H-ne*65536,H=Ce+ne+65535,ne=Math.floor(H/65536),Ce=H-ne*65536,H=t0+ne+65535,ne=Math.floor(H/65536),t0=H-ne*65536,H=Re+ne+65535,ne=Math.floor(H/65536),Re=H-ne*65536,H=We+ne+65535,ne=Math.floor(H/65536),We=H-ne*65536,H=Ge+ne+65535,ne=Math.floor(H/65536),Ge=H-ne*65536,H=e0+ne+65535,ne=Math.floor(H/65536),e0=H-ne*65536,H=Qe+ne+65535,ne=Math.floor(H/65536),Qe=H-ne*65536,H=Ve+ne+65535,ne=Math.floor(H/65536),Ve=H-ne*65536,H=Ye+ne+65535,ne=Math.floor(H/65536),Ye=H-ne*65536,H=Xe+ne+65535,ne=Math.floor(H/65536),Xe=H-ne*65536,H=Fe+ne+65535,ne=Math.floor(H/65536),Fe=H-ne*65536,he+=ne-1+37*(ne-1),ne=1,H=he+ne+65535,ne=Math.floor(H/65536),he=H-ne*65536,H=xe+ne+65535,ne=Math.floor(H/65536),xe=H-ne*65536,H=me+ne+65535,ne=Math.floor(H/65536),me=H-ne*65536,H=Te+ne+65535,ne=Math.floor(H/65536),Te=H-ne*65536,H=De+ne+65535,ne=Math.floor(H/65536),De=H-ne*65536,H=Ce+ne+65535,ne=Math.floor(H/65536),Ce=H-ne*65536,H=t0+ne+65535,ne=Math.floor(H/65536),t0=H-ne*65536,H=Re+ne+65535,ne=Math.floor(H/65536),Re=H-ne*65536,H=We+ne+65535,ne=Math.floor(H/65536),We=H-ne*65536,H=Ge+ne+65535,ne=Math.floor(H/65536),Ge=H-ne*65536,H=e0+ne+65535,ne=Math.floor(H/65536),e0=H-ne*65536,H=Qe+ne+65535,ne=Math.floor(H/65536),Qe=H-ne*65536,H=Ve+ne+65535,ne=Math.floor(H/65536),Ve=H-ne*65536,H=Ye+ne+65535,ne=Math.floor(H/65536),Ye=H-ne*65536,H=Xe+ne+65535,ne=Math.floor(H/65536),Xe=H-ne*65536,H=Fe+ne+65535,ne=Math.floor(H/65536),Fe=H-ne*65536,he+=ne-1+37*(ne-1),V[0]=he,V[1]=xe,V[2]=me,V[3]=Te,V[4]=De,V[5]=Ce,V[6]=t0,V[7]=Re,V[8]=We,V[9]=Ge,V[10]=e0,V[11]=Qe,V[12]=Ve,V[13]=Ye,V[14]=Xe,V[15]=Fe}function pe(V,ae){fe(V,ae,ae)}function Oe(V,ae){var te=t(),H;for(H=0;H<16;H++)te[H]=ae[H];for(H=253;H>=0;H--)pe(te,te),H!==2&&H!==4&&fe(te,te,ae);for(H=0;H<16;H++)V[H]=te[H]}function Se(V,ae){var te=t(),H;for(H=0;H<16;H++)te[H]=ae[H];for(H=250;H>=0;H--)pe(te,te),H!==1&&fe(te,te,ae);for(H=0;H<16;H++)V[H]=te[H]}function Pe(V,ae,te){var H=new Uint8Array(32),ne=new Float64Array(80),he,xe,me=t(),Te=t(),De=t(),Ce=t(),t0=t(),Re=t();for(xe=0;xe<31;xe++)H[xe]=ae[xe];for(H[31]=ae[31]&127|64,H[0]&=248,ce(ne,te),xe=0;xe<16;xe++)Te[xe]=ne[xe],Ce[xe]=me[xe]=De[xe]=0;for(me[0]=Ce[0]=1,xe=254;xe>=0;--xe)he=H[xe>>>3]>>>(xe&7)&1,X(me,Te,he),X(De,Ce,he),re(t0,me,De),ie(me,me,De),re(De,Te,Ce),ie(Te,Te,Ce),pe(Ce,t0),pe(Re,me),fe(me,De,me),fe(De,Te,t0),re(t0,me,De),ie(me,me,De),pe(Te,me),ie(De,Ce,Re),fe(me,De,l),re(me,me,Ce),fe(De,De,me),fe(me,Ce,Re),fe(Ce,Te,ne),pe(Te,t0),X(me,Te,he),X(De,Ce,he);for(xe=0;xe<16;xe++)ne[xe+16]=me[xe],ne[xe+32]=De[xe],ne[xe+48]=Te[xe],ne[xe+64]=Ce[xe];var We=ne.subarray(32),Ge=ne.subarray(16);return Oe(We,We),fe(Ge,Ge,We),F(V,Ge),0}function a0(V,ae){return Pe(V,ae,o)}function qe(V,ae){return c(ae,32),a0(V,ae)}function Ke(V,ae,te){var H=new Uint8Array(32);return Pe(H,te,ae),M(V,i,H,L)}var b0=Y,Je=U;function i0(V,ae,te,H,ne,he){var xe=new Uint8Array(32);return Ke(xe,ne,he),b0(V,ae,te,H,xe)}function N0(V,ae,te,H,ne,he){var xe=new Uint8Array(32);return Ke(xe,ne,he),Je(V,ae,te,H,xe)}var w0=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function _0(V,ae,te,H){for(var ne=new Int32Array(16),he=new Int32Array(16),xe,me,Te,De,Ce,t0,Re,We,Ge,e0,Qe,Ve,Ye,Xe,Fe,ze,Ne,Le,He,Me,ye,ve,ke,$e,Ae,Ie,Ze=V[0],c0=V[1],f0=V[2],n0=V[3],ue=V[4],x0=V[5],k0=V[6],B0=V[7],d0=ae[0],A0=ae[1],T0=ae[2],L0=ae[3],R0=ae[4],D0=ae[5],F0=ae[6],U0=ae[7],W0=0;H>=128;){for(He=0;He<16;He++)Me=8*He+W0,ne[He]=te[Me+0]<<24|te[Me+1]<<16|te[Me+2]<<8|te[Me+3],he[He]=te[Me+4]<<24|te[Me+5]<<16|te[Me+6]<<8|te[Me+7];for(He=0;He<80;He++)if(xe=Ze,me=c0,Te=f0,De=n0,Ce=ue,t0=x0,Re=k0,We=B0,Ge=d0,e0=A0,Qe=T0,Ve=L0,Ye=R0,Xe=D0,Fe=F0,ze=U0,ye=B0,ve=U0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=(ue>>>14|R0<<32-14)^(ue>>>18|R0<<32-18)^(R0>>>41-32|ue<<32-(41-32)),ve=(R0>>>14|ue<<32-14)^(R0>>>18|ue<<32-18)^(ue>>>41-32|R0<<32-(41-32)),ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,ye=ue&x0^~ue&k0,ve=R0&D0^~R0&F0,ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,ye=w0[He*2],ve=w0[He*2+1],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,ye=ne[He%16],ve=he[He%16],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,Ne=Ae&65535|Ie<<16,Le=ke&65535|$e<<16,ye=Ne,ve=Le,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=(Ze>>>28|d0<<32-28)^(d0>>>34-32|Ze<<32-(34-32))^(d0>>>39-32|Ze<<32-(39-32)),ve=(d0>>>28|Ze<<32-28)^(Ze>>>34-32|d0<<32-(34-32))^(Ze>>>39-32|d0<<32-(39-32)),ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,ye=Ze&c0^Ze&f0^c0&f0,ve=d0&A0^d0&T0^A0&T0,ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,We=Ae&65535|Ie<<16,ze=ke&65535|$e<<16,ye=De,ve=Ve,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=Ne,ve=Le,ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,De=Ae&65535|Ie<<16,Ve=ke&65535|$e<<16,c0=xe,f0=me,n0=Te,ue=De,x0=Ce,k0=t0,B0=Re,Ze=We,A0=Ge,T0=e0,L0=Qe,R0=Ve,D0=Ye,F0=Xe,U0=Fe,d0=ze,He%16===15)for(Me=0;Me<16;Me++)ye=ne[Me],ve=he[Me],ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=ne[(Me+9)%16],ve=he[(Me+9)%16],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,Ne=ne[(Me+1)%16],Le=he[(Me+1)%16],ye=(Ne>>>1|Le<<32-1)^(Ne>>>8|Le<<32-8)^Ne>>>7,ve=(Le>>>1|Ne<<32-1)^(Le>>>8|Ne<<32-8)^(Le>>>7|Ne<<32-7),ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,Ne=ne[(Me+14)%16],Le=he[(Me+14)%16],ye=(Ne>>>19|Le<<32-19)^(Le>>>61-32|Ne<<32-(61-32))^Ne>>>6,ve=(Le>>>19|Ne<<32-19)^(Ne>>>61-32|Le<<32-(61-32))^(Le>>>6|Ne<<32-6),ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,ne[Me]=Ae&65535|Ie<<16,he[Me]=ke&65535|$e<<16;ye=Ze,ve=d0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[0],ve=ae[0],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[0]=Ze=Ae&65535|Ie<<16,ae[0]=d0=ke&65535|$e<<16,ye=c0,ve=A0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[1],ve=ae[1],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[1]=c0=Ae&65535|Ie<<16,ae[1]=A0=ke&65535|$e<<16,ye=f0,ve=T0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[2],ve=ae[2],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[2]=f0=Ae&65535|Ie<<16,ae[2]=T0=ke&65535|$e<<16,ye=n0,ve=L0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[3],ve=ae[3],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[3]=n0=Ae&65535|Ie<<16,ae[3]=L0=ke&65535|$e<<16,ye=ue,ve=R0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[4],ve=ae[4],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[4]=ue=Ae&65535|Ie<<16,ae[4]=R0=ke&65535|$e<<16,ye=x0,ve=D0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[5],ve=ae[5],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[5]=x0=Ae&65535|Ie<<16,ae[5]=D0=ke&65535|$e<<16,ye=k0,ve=F0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[6],ve=ae[6],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[6]=k0=Ae&65535|Ie<<16,ae[6]=F0=ke&65535|$e<<16,ye=B0,ve=U0,ke=ve&65535,$e=ve>>>16,Ae=ye&65535,Ie=ye>>>16,ye=V[7],ve=ae[7],ke+=ve&65535,$e+=ve>>>16,Ae+=ye&65535,Ie+=ye>>>16,$e+=ke>>>16,Ae+=$e>>>16,Ie+=Ae>>>16,V[7]=B0=Ae&65535|Ie<<16,ae[7]=U0=ke&65535|$e<<16,W0+=128,H-=128}return H}function H0(V,ae,te){var H=new Int32Array(8),ne=new Int32Array(8),he=new Uint8Array(256),xe,me=te;for(H[0]=1779033703,H[1]=3144134277,H[2]=1013904242,H[3]=2773480762,H[4]=1359893119,H[5]=2600822924,H[6]=528734635,H[7]=1541459225,ne[0]=4089235720,ne[1]=2227873595,ne[2]=4271175723,ne[3]=1595750129,ne[4]=2917565137,ne[5]=725511199,ne[6]=4215389547,ne[7]=327033209,_0(H,ne,ae,te),te%=128,xe=0;xe<te;xe++)he[xe]=ae[me-te+xe];for(he[te]=128,te=256-128*(te<112?1:0),he[te-9]=0,T(he,te-8,me/536870912|0,me<<3),_0(H,ne,he,te),xe=0;xe<8;xe++)T(V,8*xe,H[xe],ne[xe]);return 0}function g0(V,ae){var te=t(),H=t(),ne=t(),he=t(),xe=t(),me=t(),Te=t(),De=t(),Ce=t();ie(te,V[1],V[0]),ie(Ce,ae[1],ae[0]),fe(te,te,Ce),re(H,V[0],V[1]),re(Ce,ae[0],ae[1]),fe(H,H,Ce),fe(ne,V[3],ae[3]),fe(ne,ne,g),fe(he,V[2],ae[2]),re(he,he,he),ie(xe,H,te),ie(me,he,ne),re(Te,he,ne),re(De,H,te),fe(V[0],xe,me),fe(V[1],De,Te),fe(V[2],Te,me),fe(V[3],xe,De)}function o0(V,ae,te){var H;for(H=0;H<4;H++)X(V[H],ae[H],te)}function M0(V,ae){var te=t(),H=t(),ne=t();Oe(ne,ae[2]),fe(te,ae[0],ne),fe(H,ae[1],ne),F(V,H),V[31]^=J(te)<<7}function u0(V,ae,te){var H,ne;for(j(V[0],b),j(V[1],u),j(V[2],u),j(V[3],b),ne=255;ne>=0;--ne)H=te[ne/8|0]>>(ne&7)&1,o0(V,ae,H),g0(ae,V),g0(V,V),o0(V,ae,H)}function S0(V,ae){var te=[t(),t(),t(),t()];j(te[0],v),j(te[1],E),j(te[2],u),fe(te[3],v,E),u0(V,te,ae)}function J0(V,ae,te){var H=new Uint8Array(64),ne=[t(),t(),t(),t()],he;for(te||c(ae,32),H0(H,ae,32),H[0]&=248,H[31]&=127,H[31]|=64,S0(ne,H),M0(V,ne),he=0;he<32;he++)ae[he+32]=V[he];return 0}var h0=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function y0(V,ae){var te,H,ne,he;for(H=63;H>=32;--H){for(te=0,ne=H-32,he=H-12;ne<he;++ne)ae[ne]+=te-16*ae[H]*h0[ne-(H-32)],te=Math.floor((ae[ne]+128)/256),ae[ne]-=te*256;ae[ne]+=te,ae[H]=0}for(te=0,ne=0;ne<32;ne++)ae[ne]+=te-(ae[31]>>4)*h0[ne],te=ae[ne]>>8,ae[ne]&=255;for(ne=0;ne<32;ne++)ae[ne]-=te*h0[ne];for(H=0;H<32;H++)ae[H+1]+=ae[H]>>8,V[H]=ae[H]&255}function Z0(V){var ae=new Float64Array(64),te;for(te=0;te<64;te++)ae[te]=V[te];for(te=0;te<64;te++)V[te]=0;y0(V,ae)}function I0(V,ae,te,H){var ne=new Uint8Array(64),he=new Uint8Array(64),xe=new Uint8Array(64),me,Te,De=new Float64Array(64),Ce=[t(),t(),t(),t()];H0(ne,H,32),ne[0]&=248,ne[31]&=127,ne[31]|=64;var t0=te+64;for(me=0;me<te;me++)V[64+me]=ae[me];for(me=0;me<32;me++)V[32+me]=ne[32+me];for(H0(xe,V.subarray(32),te+32),Z0(xe),S0(Ce,xe),M0(V,Ce),me=32;me<64;me++)V[me]=H[me];for(H0(he,V,te+64),Z0(he),me=0;me<64;me++)De[me]=0;for(me=0;me<32;me++)De[me]=xe[me];for(me=0;me<32;me++)for(Te=0;Te<32;Te++)De[me+Te]+=he[me]*ne[Te];return y0(V.subarray(32),De),t0}function C0(V,ae){var te=t(),H=t(),ne=t(),he=t(),xe=t(),me=t(),Te=t();return j(V[2],u),ce(V[1],ae),pe(ne,V[1]),fe(he,ne,x),ie(ne,ne,V[2]),re(he,V[2],he),pe(xe,he),pe(me,xe),fe(Te,me,xe),fe(te,Te,ne),fe(te,te,he),Se(te,te),fe(te,te,ne),fe(te,te,he),fe(te,te,he),fe(V[0],te,he),pe(H,V[0]),fe(H,H,he),Z(H,ne)&&fe(V[0],V[0],S),pe(H,V[0]),fe(H,H,he),Z(H,ne)?-1:(J(V[0])===ae[31]>>7&&ie(V[0],b,V[0]),fe(V[3],V[0],V[1]),0)}function q0(V,ae,te,H){var ne,he=new Uint8Array(32),xe=new Uint8Array(64),me=[t(),t(),t(),t()],Te=[t(),t(),t(),t()];if(te<64||C0(Te,H))return-1;for(ne=0;ne<te;ne++)V[ne]=ae[ne];for(ne=0;ne<32;ne++)V[ne+32]=H[ne];if(H0(xe,V,te),Z0(xe),u0(me,Te,xe),S0(Te,ae.subarray(32)),g0(me,Te),M0(he,me),te-=64,C(ae,0,he,0)){for(ne=0;ne<te;ne++)V[ne]=0;return-1}for(ne=0;ne<te;ne++)V[ne]=ae[ne+64];return te}var l0=32,p0=24,j0=32,m0=16,$0=32,Y0=32,v0=32,E0=32,K0=32,P0=p0,r0=j0,z0=m0,s0=64,be=32,se=64,de=32,le=64;a.lowlevel={crypto_core_hsalsa20:M,crypto_stream_xor:W,crypto_stream:oe,crypto_stream_salsa20_xor:ee,crypto_stream_salsa20:z,crypto_onetimeauth:D,crypto_onetimeauth_verify:q,crypto_verify_16:A,crypto_verify_32:C,crypto_secretbox:Y,crypto_secretbox_open:U,crypto_scalarmult:Pe,crypto_scalarmult_base:a0,crypto_box_beforenm:Ke,crypto_box_afternm:b0,crypto_box:i0,crypto_box_open:N0,crypto_box_keypair:qe,crypto_hash:H0,crypto_sign:I0,crypto_sign_keypair:J0,crypto_sign_open:q0,crypto_secretbox_KEYBYTES:l0,crypto_secretbox_NONCEBYTES:p0,crypto_secretbox_ZEROBYTES:j0,crypto_secretbox_BOXZEROBYTES:m0,crypto_scalarmult_BYTES:$0,crypto_scalarmult_SCALARBYTES:Y0,crypto_box_PUBLICKEYBYTES:v0,crypto_box_SECRETKEYBYTES:E0,crypto_box_BEFORENMBYTES:K0,crypto_box_NONCEBYTES:P0,crypto_box_ZEROBYTES:r0,crypto_box_BOXZEROBYTES:z0,crypto_sign_BYTES:s0,crypto_sign_PUBLICKEYBYTES:be,crypto_sign_SECRETKEYBYTES:se,crypto_sign_SEEDBYTES:de,crypto_hash_BYTES:le,gf:t,D:x,L:h0,pack25519:F,unpack25519:ce,M:fe,A:re,S:pe,Z:ie,pow2523:Se,add:g0,set25519:j,modL:y0,scalarmult:u0,scalarbase:S0};function ge(V,ae){if(V.length!==l0)throw new Error("bad key size");if(ae.length!==p0)throw new Error("bad nonce size")}function we(V,ae){if(V.length!==v0)throw new Error("bad public key size");if(ae.length!==E0)throw new Error("bad secret key size")}function Ee(){for(var V=0;V<arguments.length;V++)if(!(arguments[V]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function Be(V){for(var ae=0;ae<V.length;ae++)V[ae]=0}a.randomBytes=function(V){var ae=new Uint8Array(V);return c(ae,V),ae},a.secretbox=function(V,ae,te){Ee(V,ae,te),ge(te,ae);for(var H=new Uint8Array(j0+V.length),ne=new Uint8Array(H.length),he=0;he<V.length;he++)H[he+j0]=V[he];return Y(ne,H,H.length,ae,te),ne.subarray(m0)},a.secretbox.open=function(V,ae,te){Ee(V,ae,te),ge(te,ae);for(var H=new Uint8Array(m0+V.length),ne=new Uint8Array(H.length),he=0;he<V.length;he++)H[he+m0]=V[he];return H.length<32||U(ne,H,H.length,ae,te)!==0?null:ne.subarray(j0)},a.secretbox.keyLength=l0,a.secretbox.nonceLength=p0,a.secretbox.overheadLength=m0,a.scalarMult=function(V,ae){if(Ee(V,ae),V.length!==Y0)throw new Error("bad n size");if(ae.length!==$0)throw new Error("bad p size");var te=new Uint8Array($0);return Pe(te,V,ae),te},a.scalarMult.base=function(V){if(Ee(V),V.length!==Y0)throw new Error("bad n size");var ae=new Uint8Array($0);return a0(ae,V),ae},a.scalarMult.scalarLength=Y0,a.scalarMult.groupElementLength=$0,a.box=function(V,ae,te,H){var ne=a.box.before(te,H);return a.secretbox(V,ae,ne)},a.box.before=function(V,ae){Ee(V,ae),we(V,ae);var te=new Uint8Array(K0);return Ke(te,V,ae),te},a.box.after=a.secretbox,a.box.open=function(V,ae,te,H){var ne=a.box.before(te,H);return a.secretbox.open(V,ae,ne)},a.box.open.after=a.secretbox.open,a.box.keyPair=function(){var V=new Uint8Array(v0),ae=new Uint8Array(E0);return qe(V,ae),{publicKey:V,secretKey:ae}},a.box.keyPair.fromSecretKey=function(V){if(Ee(V),V.length!==E0)throw new Error("bad secret key size");var ae=new Uint8Array(v0);return a0(ae,V),{publicKey:ae,secretKey:new Uint8Array(V)}},a.box.publicKeyLength=v0,a.box.secretKeyLength=E0,a.box.sharedKeyLength=K0,a.box.nonceLength=P0,a.box.overheadLength=a.secretbox.overheadLength,a.sign=function(V,ae){if(Ee(V,ae),ae.length!==se)throw new Error("bad secret key size");var te=new Uint8Array(s0+V.length);return I0(te,V,V.length,ae),te},a.sign.open=function(V,ae){if(Ee(V,ae),ae.length!==be)throw new Error("bad public key size");var te=new Uint8Array(V.length),H=q0(te,V,V.length,ae);if(H<0)return null;for(var ne=new Uint8Array(H),he=0;he<ne.length;he++)ne[he]=te[he];return ne},a.sign.detached=function(V,ae){for(var te=a.sign(V,ae),H=new Uint8Array(s0),ne=0;ne<H.length;ne++)H[ne]=te[ne];return H},a.sign.detached.verify=function(V,ae,te){if(Ee(V,ae,te),ae.length!==s0)throw new Error("bad signature size");if(te.length!==be)throw new Error("bad public key size");var H=new Uint8Array(s0+V.length),ne=new Uint8Array(s0+V.length),he;for(he=0;he<s0;he++)H[he]=ae[he];for(he=0;he<V.length;he++)H[he+s0]=V[he];return q0(ne,H,H.length,te)>=0},a.sign.keyPair=function(){var V=new Uint8Array(be),ae=new Uint8Array(se);return J0(V,ae),{publicKey:V,secretKey:ae}},a.sign.keyPair.fromSecretKey=function(V){if(Ee(V),V.length!==se)throw new Error("bad secret key size");for(var ae=new Uint8Array(be),te=0;te<ae.length;te++)ae[te]=V[32+te];return{publicKey:ae,secretKey:new Uint8Array(V)}},a.sign.keyPair.fromSeed=function(V){if(Ee(V),V.length!==de)throw new Error("bad seed size");for(var ae=new Uint8Array(be),te=new Uint8Array(se),H=0;H<32;H++)te[H]=V[H];return J0(ae,te,!0),{publicKey:ae,secretKey:te}},a.sign.publicKeyLength=be,a.sign.secretKeyLength=se,a.sign.seedLength=de,a.sign.signatureLength=s0,a.hash=function(V){Ee(V);var ae=new Uint8Array(le);return H0(ae,V,V.length),ae},a.hash.hashLength=le,a.verify=function(V,ae){return Ee(V,ae),V.length===0||ae.length===0||V.length!==ae.length?!1:I(V,0,ae,0,V.length)===0},a.setPRNG=function(V){c=V},function(){var V=typeof self<"u"?self.crypto||self.msCrypto:null;if(V&&V.getRandomValues){var ae=65536;a.setPRNG(function(te,H){var ne,he=new Uint8Array(H);for(ne=0;ne<H;ne+=ae)V.getRandomValues(he.subarray(ne,ne+Math.min(H-ne,ae)));for(ne=0;ne<H;ne++)te[ne]=he[ne];Be(he)})}else typeof commonjsRequire$1<"u"&&(V=requireCryptoBrowserify(),V&&V.randomBytes&&a.setPRNG(function(te,H){var ne,he=V.randomBytes(H);for(ne=0;ne<H;ne++)te[ne]=he[ne];Be(he)}))}()})(e.exports?e.exports:self.nacl=self.nacl||{})})(naclFast);var bip39={},_assert={};Object.defineProperty(_assert,"__esModule",{value:!0});_assert.output=_assert.exists=_assert.hash=_assert.bytes=_assert.bool=_assert.number=void 0;function number$h(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}_assert.number=number$h;function bool$1(e){if(typeof e!="boolean")throw new Error(`Expected boolean, not ${e}`)}_assert.bool=bool$1;function bytes$3(e,...a){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(a.length>0&&!a.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${a}, not of length=${e.length}`)}_assert.bytes=bytes$3;function hash$5(e){if(typeof e!="function"||typeof e.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number$h(e.outputLen),number$h(e.blockLen)}_assert.hash=hash$5;function exists$1(e,a=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(a&&e.finished)throw new Error("Hash#digest() has already been called")}_assert.exists=exists$1;function output$2(e,a){bytes$3(e);const t=a.outputLen;if(e.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}_assert.output=output$2;const assert$b={number:number$h,bool:bool$1,bytes:bytes$3,hash:hash$5,exists:exists$1,output:output$2};_assert.default=assert$b;var pbkdf2$3={},hmac$2={},utils$l={};const crypto$3={node:void 0,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},cryptoBrowser=Object.freeze(Object.defineProperty({__proto__:null,crypto:crypto$3},Symbol.toStringTag,{value:"Module"})),require$$0$8=getAugmentedNamespace(cryptoBrowser);(function(e){/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */Object.defineProperty(e,"__esModule",{value:!0}),e.randomBytes=e.wrapConstructorWithOpts=e.wrapConstructor=e.checkOpts=e.Hash=e.concatBytes=e.toBytes=e.utf8ToBytes=e.asyncLoop=e.nextTick=e.hexToBytes=e.bytesToHex=e.isLE=e.rotr=e.createView=e.u32=e.u8=void 0;const a=require$$0$8,t=B=>new Uint8Array(B.buffer,B.byteOffset,B.byteLength);e.u8=t;const c=B=>new Uint32Array(B.buffer,B.byteOffset,Math.floor(B.byteLength/4));e.u32=c;const i=B=>new DataView(B.buffer,B.byteOffset,B.byteLength);e.createView=i;const o=(B,M)=>B<<32-M|B>>>M;if(e.rotr=o,e.isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,!e.isLE)throw new Error("Non little-endian hardware is not supported");const b=Array.from({length:256},(B,M)=>M.toString(16).padStart(2,"0"));function u(B){if(!(B instanceof Uint8Array))throw new Error("Uint8Array expected");let M="";for(let L=0;L<B.length;L++)M+=b[B[L]];return M}e.bytesToHex=u;function l(B){if(typeof B!="string")throw new TypeError("hexToBytes: expected string, got "+typeof B);if(B.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const M=new Uint8Array(B.length/2);for(let L=0;L<M.length;L++){const ee=L*2,z=B.slice(ee,ee+2),oe=Number.parseInt(z,16);if(Number.isNaN(oe)||oe<0)throw new Error("Invalid byte sequence");M[L]=oe}return M}e.hexToBytes=l;const x=async()=>{};e.nextTick=x;async function g(B,M,L){let ee=Date.now();for(let z=0;z<B;z++){L(z);const oe=Date.now()-ee;oe>=0&&oe<M||(await(0,e.nextTick)(),ee+=oe)}}e.asyncLoop=g;function v(B){if(typeof B!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof B}`);return new TextEncoder().encode(B)}e.utf8ToBytes=v;function E(B){if(typeof B=="string"&&(B=v(B)),!(B instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof B})`);return B}e.toBytes=E;function S(...B){if(!B.every(ee=>ee instanceof Uint8Array))throw new Error("Uint8Array list expected");if(B.length===1)return B[0];const M=B.reduce((ee,z)=>ee+z.length,0),L=new Uint8Array(M);for(let ee=0,z=0;ee<B.length;ee++){const oe=B[ee];L.set(oe,z),z+=oe.length}return L}e.concatBytes=S;class T{clone(){return this._cloneInto()}}e.Hash=T;const I=B=>Object.prototype.toString.call(B)==="[object Object]"&&B.constructor===Object;function A(B,M){if(M!==void 0&&(typeof M!="object"||!I(M)))throw new TypeError("Options should be object or undefined");return Object.assign(B,M)}e.checkOpts=A;function C(B){const M=ee=>B().update(E(ee)).digest(),L=B();return M.outputLen=L.outputLen,M.blockLen=L.blockLen,M.create=()=>B(),M}e.wrapConstructor=C;function O(B){const M=(ee,z)=>B(z).update(E(ee)).digest(),L=B({});return M.outputLen=L.outputLen,M.blockLen=L.blockLen,M.create=ee=>B(ee),M}e.wrapConstructorWithOpts=O;function R(B=32){if(a.crypto.web)return a.crypto.web.getRandomValues(new Uint8Array(B));if(a.crypto.node)return new Uint8Array(a.crypto.node.randomBytes(B).buffer);throw new Error("The environment doesn't have randomBytes function")}e.randomBytes=R})(utils$l);(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hmac=void 0;const a=_assert,t=utils$l;class c extends t.Hash{constructor(b,u){super(),this.finished=!1,this.destroyed=!1,a.default.hash(b);const l=(0,t.toBytes)(u);if(this.iHash=b.create(),typeof this.iHash.update!="function")throw new TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const x=this.blockLen,g=new Uint8Array(x);g.set(l.length>x?b.create().update(l).digest():l);for(let v=0;v<g.length;v++)g[v]^=54;this.iHash.update(g),this.oHash=b.create();for(let v=0;v<g.length;v++)g[v]^=106;this.oHash.update(g),g.fill(0)}update(b){return a.default.exists(this),this.iHash.update(b),this}digestInto(b){a.default.exists(this),a.default.bytes(b,this.outputLen),this.finished=!0,this.iHash.digestInto(b),this.oHash.update(b),this.oHash.digestInto(b),this.destroy()}digest(){const b=new Uint8Array(this.oHash.outputLen);return this.digestInto(b),b}_cloneInto(b){b||(b=Object.create(Object.getPrototypeOf(this),{}));const{oHash:u,iHash:l,finished:x,destroyed:g,blockLen:v,outputLen:E}=this;return b=b,b.finished=x,b.destroyed=g,b.blockLen=v,b.outputLen=E,b.oHash=u._cloneInto(b.oHash),b.iHash=l._cloneInto(b.iHash),b}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const i=(o,b,u)=>new c(o,b).update(u).digest();e.hmac=i,e.hmac.create=(o,b)=>new c(o,b)})(hmac$2);Object.defineProperty(pbkdf2$3,"__esModule",{value:!0});pbkdf2$3.pbkdf2Async=pbkdf2$3.pbkdf2=void 0;const _assert_js_1$1=_assert,hmac_js_1=hmac$2,utils_js_1$2=utils$l;function pbkdf2Init(e,a,t,c){_assert_js_1$1.default.hash(e);const i=(0,utils_js_1$2.checkOpts)({dkLen:32,asyncTick:10},c),{c:o,dkLen:b,asyncTick:u}=i;if(_assert_js_1$1.default.number(o),_assert_js_1$1.default.number(b),_assert_js_1$1.default.number(u),o<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const l=(0,utils_js_1$2.toBytes)(a),x=(0,utils_js_1$2.toBytes)(t),g=new Uint8Array(b),v=hmac_js_1.hmac.create(e,l),E=v._cloneInto().update(x);return{c:o,dkLen:b,asyncTick:u,DK:g,PRF:v,PRFSalt:E}}function pbkdf2Output(e,a,t,c,i){return e.destroy(),a.destroy(),c&&c.destroy(),i.fill(0),t}function pbkdf2$2(e,a,t,c){const{c:i,dkLen:o,DK:b,PRF:u,PRFSalt:l}=pbkdf2Init(e,a,t,c);let x;const g=new Uint8Array(4),v=(0,utils_js_1$2.createView)(g),E=new Uint8Array(u.outputLen);for(let S=1,T=0;T<o;S++,T+=u.outputLen){const I=b.subarray(T,T+u.outputLen);v.setInt32(0,S,!1),(x=l._cloneInto(x)).update(g).digestInto(E),I.set(E.subarray(0,I.length));for(let A=1;A<i;A++){u._cloneInto(x).update(E).digestInto(E);for(let C=0;C<I.length;C++)I[C]^=E[C]}}return pbkdf2Output(u,l,b,x,E)}pbkdf2$3.pbkdf2=pbkdf2$2;async function pbkdf2Async(e,a,t,c){const{c:i,dkLen:o,asyncTick:b,DK:u,PRF:l,PRFSalt:x}=pbkdf2Init(e,a,t,c);let g;const v=new Uint8Array(4),E=(0,utils_js_1$2.createView)(v),S=new Uint8Array(l.outputLen);for(let T=1,I=0;I<o;T++,I+=l.outputLen){const A=u.subarray(I,I+l.outputLen);E.setInt32(0,T,!1),(g=x._cloneInto(g)).update(v).digestInto(S),A.set(S.subarray(0,A.length)),await(0,utils_js_1$2.asyncLoop)(i-1,b,C=>{l._cloneInto(g).update(S).digestInto(S);for(let O=0;O<A.length;O++)A[O]^=S[O]})}return pbkdf2Output(l,x,u,g,S)}pbkdf2$3.pbkdf2Async=pbkdf2Async;var sha256$4={},_sha2={};Object.defineProperty(_sha2,"__esModule",{value:!0});_sha2.SHA2=void 0;const _assert_js_1=_assert,utils_js_1$1=utils$l;function setBigUint64$1(e,a,t,c){if(typeof e.setBigUint64=="function")return e.setBigUint64(a,t,c);const i=BigInt(32),o=BigInt(4294967295),b=Number(t>>i&o),u=Number(t&o),l=c?4:0,x=c?0:4;e.setUint32(a+l,b,c),e.setUint32(a+x,u,c)}let SHA2$1=class extends utils_js_1$1.Hash{constructor(a,t,c,i){super(),this.blockLen=a,this.outputLen=t,this.padOffset=c,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(a),this.view=(0,utils_js_1$1.createView)(this.buffer)}update(a){_assert_js_1.default.exists(this);const{view:t,buffer:c,blockLen:i}=this;a=(0,utils_js_1$1.toBytes)(a);const o=a.length;for(let b=0;b<o;){const u=Math.min(i-this.pos,o-b);if(u===i){const l=(0,utils_js_1$1.createView)(a);for(;i<=o-b;b+=i)this.process(l,b);continue}c.set(a.subarray(b,b+u),this.pos),this.pos+=u,b+=u,this.pos===i&&(this.process(t,0),this.pos=0)}return this.length+=a.length,this.roundClean(),this}digestInto(a){_assert_js_1.default.exists(this),_assert_js_1.default.output(a,this),this.finished=!0;const{buffer:t,view:c,blockLen:i,isLE:o}=this;let{pos:b}=this;t[b++]=128,this.buffer.subarray(b).fill(0),this.padOffset>i-b&&(this.process(c,0),b=0);for(let l=b;l<i;l++)t[l]=0;setBigUint64$1(c,i-8,BigInt(this.length*8),o),this.process(c,0);const u=(0,utils_js_1$1.createView)(a);this.get().forEach((l,x)=>u.setUint32(4*x,l,o))}digest(){const{buffer:a,outputLen:t}=this;this.digestInto(a);const c=a.slice(0,t);return this.destroy(),c}_cloneInto(a){a||(a=new this.constructor),a.set(...this.get());const{blockLen:t,buffer:c,length:i,finished:o,destroyed:b,pos:u}=this;return a.length=i,a.pos=u,a.finished=o,a.destroyed=b,i%t&&a.buffer.set(c),a}};_sha2.SHA2=SHA2$1;Object.defineProperty(sha256$4,"__esModule",{value:!0});sha256$4.sha256=void 0;const _sha2_js_1=_sha2,utils_js_1=utils$l,Chi=(e,a,t)=>e&a^~e&t,Maj=(e,a,t)=>e&a^e&t^a&t,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends _sha2_js_1.SHA2{constructor(){super(64,32,8,!1),this.A=IV[0]|0,this.B=IV[1]|0,this.C=IV[2]|0,this.D=IV[3]|0,this.E=IV[4]|0,this.F=IV[5]|0,this.G=IV[6]|0,this.H=IV[7]|0}get(){const{A:a,B:t,C:c,D:i,E:o,F:b,G:u,H:l}=this;return[a,t,c,i,o,b,u,l]}set(a,t,c,i,o,b,u,l){this.A=a|0,this.B=t|0,this.C=c|0,this.D=i|0,this.E=o|0,this.F=b|0,this.G=u|0,this.H=l|0}process(a,t){for(let v=0;v<16;v++,t+=4)SHA256_W[v]=a.getUint32(t,!1);for(let v=16;v<64;v++){const E=SHA256_W[v-15],S=SHA256_W[v-2],T=(0,utils_js_1.rotr)(E,7)^(0,utils_js_1.rotr)(E,18)^E>>>3,I=(0,utils_js_1.rotr)(S,17)^(0,utils_js_1.rotr)(S,19)^S>>>10;SHA256_W[v]=I+SHA256_W[v-7]+T+SHA256_W[v-16]|0}let{A:c,B:i,C:o,D:b,E:u,F:l,G:x,H:g}=this;for(let v=0;v<64;v++){const E=(0,utils_js_1.rotr)(u,6)^(0,utils_js_1.rotr)(u,11)^(0,utils_js_1.rotr)(u,25),S=g+E+Chi(u,l,x)+SHA256_K[v]+SHA256_W[v]|0,I=((0,utils_js_1.rotr)(c,2)^(0,utils_js_1.rotr)(c,13)^(0,utils_js_1.rotr)(c,22))+Maj(c,i,o)|0;g=x,x=l,l=u,u=b+S|0,b=o,o=i,i=c,c=S+I|0}c=c+this.A|0,i=i+this.B|0,o=o+this.C|0,b=b+this.D|0,u=u+this.E|0,l=l+this.F|0,x=x+this.G|0,g=g+this.H|0,this.set(c,i,o,b,u,l,x,g)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}sha256$4.sha256=(0,utils_js_1.wrapConstructor)(()=>new SHA256);function number$g(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function bool(e){if(typeof e!="boolean")throw new Error(`Expected boolean, not ${e}`)}function bytes$2(e,...a){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(a.length>0&&!a.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${a}, not of length=${e.length}`)}function hash$4(e){if(typeof e!="function"||typeof e.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");number$g(e.outputLen),number$g(e.blockLen)}function exists(e,a=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(a&&e.finished)throw new Error("Hash#digest() has already been called")}function output$1(e,a){bytes$2(e);const t=a.outputLen;if(e.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}const assert$a={number:number$g,bool,bytes:bytes$2,hash:hash$4,exists,output:output$1};/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength),u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),rotr=(e,a)=>e<<32-a|e>>>a,isLE=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!isLE)throw new Error("Non little-endian hardware is not supported");const hexes=Array.from({length:256},(e,a)=>a.toString(16).padStart(2,"0"));function bytesToHex$2(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected");let a="";for(let t=0;t<e.length;t++)a+=hexes[e[t]];return a}function hexToBytes$1(e){if(typeof e!="string")throw new TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw new Error("hexToBytes: received invalid unpadded hex");const a=new Uint8Array(e.length/2);for(let t=0;t<a.length;t++){const c=t*2,i=e.slice(c,c+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");a[t]=o}return a}const nextTick=async()=>{};async function asyncLoop(e,a,t){let c=Date.now();for(let i=0;i<e;i++){t(i);const o=Date.now()-c;o>=0&&o<a||(await nextTick(),c+=o)}}function utf8ToBytes(e){if(typeof e!="string")throw new TypeError(`utf8ToBytes expected string, got ${typeof e}`);return new TextEncoder().encode(e)}function toBytes(e){if(typeof e=="string"&&(e=utf8ToBytes(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function concatBytes(...e){if(!e.every(c=>c instanceof Uint8Array))throw new Error("Uint8Array list expected");if(e.length===1)return e[0];const a=e.reduce((c,i)=>c+i.length,0),t=new Uint8Array(a);for(let c=0,i=0;c<e.length;c++){const o=e[c];t.set(o,i),i+=o.length}return t}let Hash$4=class{clone(){return this._cloneInto()}};const isPlainObject$1=e=>Object.prototype.toString.call(e)==="[object Object]"&&e.constructor===Object;function checkOpts(e,a){if(a!==void 0&&(typeof a!="object"||!isPlainObject$1(a)))throw new TypeError("Options should be object or undefined");return Object.assign(e,a)}function wrapConstructor(e){const a=c=>e().update(toBytes(c)).digest(),t=e();return a.outputLen=t.outputLen,a.blockLen=t.blockLen,a.create=()=>e(),a}function wrapConstructorWithOpts(e){const a=(c,i)=>e(i).update(toBytes(c)).digest(),t=e({});return a.outputLen=t.outputLen,a.blockLen=t.blockLen,a.create=c=>e(c),a}function randomBytes$3(e=32){if(crypto$3.web)return crypto$3.web.getRandomValues(new Uint8Array(e));if(crypto$3.node)return new Uint8Array(crypto$3.node.randomBytes(e).buffer);throw new Error("The environment doesn't have randomBytes function")}const utils$k=Object.freeze(Object.defineProperty({__proto__:null,Hash:Hash$4,asyncLoop,bytesToHex:bytesToHex$2,checkOpts,concatBytes,createView,hexToBytes:hexToBytes$1,isLE,nextTick,randomBytes:randomBytes$3,rotr,toBytes,u32,u8,utf8ToBytes,wrapConstructor,wrapConstructorWithOpts},Symbol.toStringTag,{value:"Module"}));function setBigUint64(e,a,t,c){if(typeof e.setBigUint64=="function")return e.setBigUint64(a,t,c);const i=BigInt(32),o=BigInt(4294967295),b=Number(t>>i&o),u=Number(t&o),l=c?4:0,x=c?0:4;e.setUint32(a+l,b,c),e.setUint32(a+x,u,c)}class SHA2 extends Hash$4{constructor(a,t,c,i){super(),this.blockLen=a,this.outputLen=t,this.padOffset=c,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(a),this.view=createView(this.buffer)}update(a){assert$a.exists(this);const{view:t,buffer:c,blockLen:i}=this;a=toBytes(a);const o=a.length;for(let b=0;b<o;){const u=Math.min(i-this.pos,o-b);if(u===i){const l=createView(a);for(;i<=o-b;b+=i)this.process(l,b);continue}c.set(a.subarray(b,b+u),this.pos),this.pos+=u,b+=u,this.pos===i&&(this.process(t,0),this.pos=0)}return this.length+=a.length,this.roundClean(),this}digestInto(a){assert$a.exists(this),assert$a.output(a,this),this.finished=!0;const{buffer:t,view:c,blockLen:i,isLE:o}=this;let{pos:b}=this;t[b++]=128,this.buffer.subarray(b).fill(0),this.padOffset>i-b&&(this.process(c,0),b=0);for(let l=b;l<i;l++)t[l]=0;setBigUint64(c,i-8,BigInt(this.length*8),o),this.process(c,0);const u=createView(a);this.get().forEach((l,x)=>u.setUint32(4*x,l,o))}digest(){const{buffer:a,outputLen:t}=this;this.digestInto(a);const c=a.slice(0,t);return this.destroy(),c}_cloneInto(a){a||(a=new this.constructor),a.set(...this.get());const{blockLen:t,buffer:c,length:i,finished:o,destroyed:b,pos:u}=this;return a.length=i,a.pos=u,a.finished=o,a.destroyed=b,i%t&&a.buffer.set(c),a}}const U32_MASK64=BigInt(2**32-1),_32n=BigInt(32);function fromBig(e,a=!1){return a?{h:Number(e&U32_MASK64),l:Number(e>>_32n&U32_MASK64)}:{h:Number(e>>_32n&U32_MASK64)|0,l:Number(e&U32_MASK64)|0}}function split(e,a=!1){let t=new Uint32Array(e.length),c=new Uint32Array(e.length);for(let i=0;i<e.length;i++){const{h:o,l:b}=fromBig(e[i],a);[t[i],c[i]]=[o,b]}return[t,c]}const toBig=(e,a)=>BigInt(e>>>0)<<_32n|BigInt(a>>>0),shrSH=(e,a,t)=>e>>>t,shrSL=(e,a,t)=>e<<32-t|a>>>t,rotrSH=(e,a,t)=>e>>>t|a<<32-t,rotrSL=(e,a,t)=>e<<32-t|a>>>t,rotrBH=(e,a,t)=>e<<64-t|a>>>t-32,rotrBL=(e,a,t)=>e>>>t-32|a<<64-t,rotr32H=(e,a)=>a,rotr32L=(e,a)=>e,rotlSH=(e,a,t)=>e<<t|a>>>32-t,rotlSL=(e,a,t)=>a<<t|e>>>32-t,rotlBH=(e,a,t)=>a<<t-32|e>>>64-t,rotlBL=(e,a,t)=>e<<t-32|a>>>64-t;function add(e,a,t,c){const i=(a>>>0)+(c>>>0);return{h:e+t+(i/2**32|0)|0,l:i|0}}const add3L=(e,a,t)=>(e>>>0)+(a>>>0)+(t>>>0),add3H=(e,a,t,c)=>a+t+c+(e/2**32|0)|0,add4L=(e,a,t,c)=>(e>>>0)+(a>>>0)+(t>>>0)+(c>>>0),add4H=(e,a,t,c,i)=>a+t+c+i+(e/2**32|0)|0,add5L=(e,a,t,c,i)=>(e>>>0)+(a>>>0)+(t>>>0)+(c>>>0)+(i>>>0),add5H=(e,a,t,c,i,o)=>a+t+c+i+o+(e/2**32|0)|0,u64={fromBig,split,toBig,shrSH,shrSL,rotrSH,rotrSL,rotrBH,rotrBL,rotr32H,rotr32L,rotlSH,rotlSL,rotlBH,rotlBL,add,add3L,add3H,add4L,add4H,add5H,add5L},[SHA512_Kh,SHA512_Kl]=u64.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:a,Al:t,Bh:c,Bl:i,Ch:o,Cl:b,Dh:u,Dl:l,Eh:x,El:g,Fh:v,Fl:E,Gh:S,Gl:T,Hh:I,Hl:A}=this;return[a,t,c,i,o,b,u,l,x,g,v,E,S,T,I,A]}set(a,t,c,i,o,b,u,l,x,g,v,E,S,T,I,A){this.Ah=a|0,this.Al=t|0,this.Bh=c|0,this.Bl=i|0,this.Ch=o|0,this.Cl=b|0,this.Dh=u|0,this.Dl=l|0,this.Eh=x|0,this.El=g|0,this.Fh=v|0,this.Fl=E|0,this.Gh=S|0,this.Gl=T|0,this.Hh=I|0,this.Hl=A|0}process(a,t){for(let R=0;R<16;R++,t+=4)SHA512_W_H[R]=a.getUint32(t),SHA512_W_L[R]=a.getUint32(t+=4);for(let R=16;R<80;R++){const B=SHA512_W_H[R-15]|0,M=SHA512_W_L[R-15]|0,L=u64.rotrSH(B,M,1)^u64.rotrSH(B,M,8)^u64.shrSH(B,M,7),ee=u64.rotrSL(B,M,1)^u64.rotrSL(B,M,8)^u64.shrSL(B,M,7),z=SHA512_W_H[R-2]|0,oe=SHA512_W_L[R-2]|0,W=u64.rotrSH(z,oe,19)^u64.rotrBH(z,oe,61)^u64.shrSH(z,oe,6),P=u64.rotrSL(z,oe,19)^u64.rotrBL(z,oe,61)^u64.shrSL(z,oe,6),D=u64.add4L(ee,P,SHA512_W_L[R-7],SHA512_W_L[R-16]),q=u64.add4H(D,L,W,SHA512_W_H[R-7],SHA512_W_H[R-16]);SHA512_W_H[R]=q|0,SHA512_W_L[R]=D|0}let{Ah:c,Al:i,Bh:o,Bl:b,Ch:u,Cl:l,Dh:x,Dl:g,Eh:v,El:E,Fh:S,Fl:T,Gh:I,Gl:A,Hh:C,Hl:O}=this;for(let R=0;R<80;R++){const B=u64.rotrSH(v,E,14)^u64.rotrSH(v,E,18)^u64.rotrBH(v,E,41),M=u64.rotrSL(v,E,14)^u64.rotrSL(v,E,18)^u64.rotrBL(v,E,41),L=v&S^~v&I,ee=E&T^~E&A,z=u64.add5L(O,M,ee,SHA512_Kl[R],SHA512_W_L[R]),oe=u64.add5H(z,C,B,L,SHA512_Kh[R],SHA512_W_H[R]),W=z|0,P=u64.rotrSH(c,i,28)^u64.rotrBH(c,i,34)^u64.rotrBH(c,i,39),D=u64.rotrSL(c,i,28)^u64.rotrBL(c,i,34)^u64.rotrBL(c,i,39),q=c&o^c&u^o&u,Y=i&b^i&l^b&l;C=I|0,O=A|0,I=S|0,A=T|0,S=v|0,T=E|0,{h:v,l:E}=u64.add(x|0,g|0,oe|0,W|0),x=u|0,g=l|0,u=o|0,l=b|0,o=c|0,b=i|0;const U=u64.add3L(W,D,Y);c=u64.add3H(U,oe,P,q),i=U|0}({h:c,l:i}=u64.add(this.Ah|0,this.Al|0,c|0,i|0)),{h:o,l:b}=u64.add(this.Bh|0,this.Bl|0,o|0,b|0),{h:u,l}=u64.add(this.Ch|0,this.Cl|0,u|0,l|0),{h:x,l:g}=u64.add(this.Dh|0,this.Dl|0,x|0,g|0),{h:v,l:E}=u64.add(this.Eh|0,this.El|0,v|0,E|0),{h:S,l:T}=u64.add(this.Fh|0,this.Fl|0,S|0,T|0),{h:I,l:A}=u64.add(this.Gh|0,this.Gl|0,I|0,A|0),{h:C,l:O}=u64.add(this.Hh|0,this.Hl|0,C|0,O|0),this.set(c,i,o,b,u,l,x,g,v,E,S,T,I,A,C,O)}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class SHA512_256 extends SHA512{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class SHA384 extends SHA512{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const sha512=wrapConstructor(()=>new SHA512),sha512_256=wrapConstructor(()=>new SHA512_256),sha384=wrapConstructor(()=>new SHA384),sha512$1=Object.freeze(Object.defineProperty({__proto__:null,SHA512,sha384,sha512,sha512_256},Symbol.toStringTag,{value:"Module"})),require$$3$5=getAugmentedNamespace(sha512$1),require$$4$5=getAugmentedNamespace(utils$k);var lib$a={};(function(e){/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */Object.defineProperty(e,"__esModule",{value:!0}),e.bytes=e.stringToBytes=e.str=e.bytesToString=e.hex=e.utf8=e.bech32m=e.bech32=e.base58check=e.base58xmr=e.base58xrp=e.base58flickr=e.base58=e.base64url=e.base64=e.base32crockford=e.base32hex=e.base32=e.base16=e.utils=e.assertNumber=void 0;function a(P){if(!Number.isSafeInteger(P))throw new Error(`Wrong integer: ${P}`)}e.assertNumber=a;function t(...P){const D=(U,j)=>Q=>U(j(Q)),q=Array.from(P).reverse().reduce((U,j)=>U?D(U,j.encode):j.encode,void 0),Y=P.reduce((U,j)=>U?D(U,j.decode):j.decode,void 0);return{encode:q,decode:Y}}function c(P){return{encode:D=>{if(!Array.isArray(D)||D.length&&typeof D[0]!="number")throw new Error("alphabet.encode input should be an array of numbers");return D.map(q=>{if(a(q),q<0||q>=P.length)throw new Error(`Digit index outside alphabet: ${q} (alphabet: ${P.length})`);return P[q]})},decode:D=>{if(!Array.isArray(D)||D.length&&typeof D[0]!="string")throw new Error("alphabet.decode input should be array of strings");return D.map(q=>{if(typeof q!="string")throw new Error(`alphabet.decode: not string element=${q}`);const Y=P.indexOf(q);if(Y===-1)throw new Error(`Unknown letter: "${q}". Allowed: ${P}`);return Y})}}}function i(P=""){if(typeof P!="string")throw new Error("join separator should be string");return{encode:D=>{if(!Array.isArray(D)||D.length&&typeof D[0]!="string")throw new Error("join.encode input should be array of strings");for(let q of D)if(typeof q!="string")throw new Error(`join.encode: non-string input=${q}`);return D.join(P)},decode:D=>{if(typeof D!="string")throw new Error("join.decode input should be string");return D.split(P)}}}function o(P,D="="){if(a(P),typeof D!="string")throw new Error("padding chr should be string");return{encode(q){if(!Array.isArray(q)||q.length&&typeof q[0]!="string")throw new Error("padding.encode input should be array of strings");for(let Y of q)if(typeof Y!="string")throw new Error(`padding.encode: non-string input=${Y}`);for(;q.length*P%8;)q.push(D);return q},decode(q){if(!Array.isArray(q)||q.length&&typeof q[0]!="string")throw new Error("padding.encode input should be array of strings");for(let U of q)if(typeof U!="string")throw new Error(`padding.decode: non-string input=${U}`);let Y=q.length;if(Y*P%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;Y>0&&q[Y-1]===D;Y--)if(!((Y-1)*P%8))throw new Error("Invalid padding: string has too much padding");return q.slice(0,Y)}}}function b(P){if(typeof P!="function")throw new Error("normalize fn should be function");return{encode:D=>D,decode:D=>P(D)}}function u(P,D,q){if(D<2)throw new Error(`convertRadix: wrong from=${D}, base cannot be less than 2`);if(q<2)throw new Error(`convertRadix: wrong to=${q}, base cannot be less than 2`);if(!Array.isArray(P))throw new Error("convertRadix: data should be array");if(!P.length)return[];let Y=0;const U=[],j=Array.from(P);for(j.forEach(Q=>{if(a(Q),Q<0||Q>=D)throw new Error(`Wrong integer: ${Q}`)});;){let Q=0,X=!0;for(let F=Y;F<j.length;F++){const Z=j[F],J=D*Q+Z;if(!Number.isSafeInteger(J)||D*Q/D!==Q||J-Z!==D*Q)throw new Error("convertRadix: carry overflow");if(Q=J%q,j[F]=Math.floor(J/q),!Number.isSafeInteger(j[F])||j[F]*q+Q!==J)throw new Error("convertRadix: carry overflow");if(X)j[F]?X=!1:Y=F;else continue}if(U.push(Q),X)break}for(let Q=0;Q<P.length-1&&P[Q]===0;Q++)U.push(0);return U.reverse()}const l=(P,D)=>D?l(D,P%D):P,x=(P,D)=>P+(D-l(P,D));function g(P,D,q,Y){if(!Array.isArray(P))throw new Error("convertRadix2: data should be array");if(D<=0||D>32)throw new Error(`convertRadix2: wrong from=${D}`);if(q<=0||q>32)throw new Error(`convertRadix2: wrong to=${q}`);if(x(D,q)>32)throw new Error(`convertRadix2: carry overflow from=${D} to=${q} carryBits=${x(D,q)}`);let U=0,j=0;const Q=2**q-1,X=[];for(const F of P){if(a(F),F>=2**D)throw new Error(`convertRadix2: invalid data word=${F} from=${D}`);if(U=U<<D|F,j+D>32)throw new Error(`convertRadix2: carry overflow pos=${j} from=${D}`);for(j+=D;j>=q;j-=q)X.push((U>>j-q&Q)>>>0);U&=2**j-1}if(U=U<<q-j&Q,!Y&&j>=D)throw new Error("Excess padding");if(!Y&&U)throw new Error(`Non-zero padding: ${U}`);return Y&&j>0&&X.push(U>>>0),X}function v(P){return a(P),{encode:D=>{if(!(D instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return u(Array.from(D),2**8,P)},decode:D=>{if(!Array.isArray(D)||D.length&&typeof D[0]!="number")throw new Error("radix.decode input should be array of strings");return Uint8Array.from(u(D,P,2**8))}}}function E(P,D=!1){if(a(P),P<=0||P>32)throw new Error("radix2: bits should be in (0..32]");if(x(8,P)>32||x(P,8)>32)throw new Error("radix2: carry overflow");return{encode:q=>{if(!(q instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return g(Array.from(q),8,P,!D)},decode:q=>{if(!Array.isArray(q)||q.length&&typeof q[0]!="number")throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(g(q,P,8,D))}}}function S(P){if(typeof P!="function")throw new Error("unsafeWrapper fn should be function");return function(...D){try{return P.apply(null,D)}catch{}}}function T(P,D){if(a(P),typeof D!="function")throw new Error("checksum fn should be function");return{encode(q){if(!(q instanceof Uint8Array))throw new Error("checksum.encode: input should be Uint8Array");const Y=D(q).slice(0,P),U=new Uint8Array(q.length+P);return U.set(q),U.set(Y,q.length),U},decode(q){if(!(q instanceof Uint8Array))throw new Error("checksum.decode: input should be Uint8Array");const Y=q.slice(0,-P),U=D(Y).slice(0,P),j=q.slice(-P);for(let Q=0;Q<P;Q++)if(U[Q]!==j[Q])throw new Error("Invalid checksum");return Y}}}e.utils={alphabet:c,chain:t,checksum:T,radix:v,radix2:E,join:i,padding:o},e.base16=t(E(4),c("0123456789ABCDEF"),i("")),e.base32=t(E(5),c("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),o(5),i("")),e.base32hex=t(E(5),c("0123456789ABCDEFGHIJKLMNOPQRSTUV"),o(5),i("")),e.base32crockford=t(E(5),c("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),i(""),b(P=>P.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1"))),e.base64=t(E(6),c("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),o(6),i("")),e.base64url=t(E(6),c("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),o(6),i(""));const I=P=>t(v(58),c(P),i(""));e.base58=I("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),e.base58flickr=I("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),e.base58xrp=I("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const A=[0,2,3,5,6,7,9,10,11];e.base58xmr={encode(P){let D="";for(let q=0;q<P.length;q+=8){const Y=P.subarray(q,q+8);D+=e.base58.encode(Y).padStart(A[Y.length],"1")}return D},decode(P){let D=[];for(let q=0;q<P.length;q+=11){const Y=P.slice(q,q+11),U=A.indexOf(Y.length),j=e.base58.decode(Y);for(let Q=0;Q<j.length-U;Q++)if(j[Q]!==0)throw new Error("base58xmr: wrong padding");D=D.concat(Array.from(j.slice(j.length-U)))}return Uint8Array.from(D)}};const C=P=>t(T(4,D=>P(P(D))),e.base58);e.base58check=C;const O=t(c("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),i("")),R=[996825010,642813549,513874426,1027748829,705979059];function B(P){const D=P>>25;let q=(P&33554431)<<5;for(let Y=0;Y<R.length;Y++)(D>>Y&1)===1&&(q^=R[Y]);return q}function M(P,D,q=1){const Y=P.length;let U=1;for(let j=0;j<Y;j++){const Q=P.charCodeAt(j);if(Q<33||Q>126)throw new Error(`Invalid prefix (${P})`);U=B(U)^Q>>5}U=B(U);for(let j=0;j<Y;j++)U=B(U)^P.charCodeAt(j)&31;for(let j of D)U=B(U)^j;for(let j=0;j<6;j++)U=B(U);return U^=q,O.encode(g([U%2**30],30,5,!1))}function L(P){const D=P==="bech32"?1:734539939,q=E(5),Y=q.decode,U=q.encode,j=S(Y);function Q(J,ce,re=90){if(typeof J!="string")throw new Error(`bech32.encode prefix should be string, not ${typeof J}`);if(!Array.isArray(ce)||ce.length&&typeof ce[0]!="number")throw new Error(`bech32.encode words should be array of numbers, not ${typeof ce}`);const ie=J.length+7+ce.length;if(re!==!1&&ie>re)throw new TypeError(`Length ${ie} exceeds limit ${re}`);return J=J.toLowerCase(),`${J}1${O.encode(ce)}${M(J,ce,D)}`}function X(J,ce=90){if(typeof J!="string")throw new Error(`bech32.decode input should be string, not ${typeof J}`);if(J.length<8||ce!==!1&&J.length>ce)throw new TypeError(`Wrong string length: ${J.length} (${J}). Expected (8..${ce})`);const re=J.toLowerCase();if(J!==re&&J!==J.toUpperCase())throw new Error("String must be lowercase or uppercase");J=re;const ie=J.lastIndexOf("1");if(ie===0||ie===-1)throw new Error('Letter "1" must be present between prefix and data only');const fe=J.slice(0,ie),pe=J.slice(ie+1);if(pe.length<6)throw new Error("Data must be at least 6 characters long");const Oe=O.decode(pe).slice(0,-6),Se=M(fe,Oe,D);if(!pe.endsWith(Se))throw new Error(`Invalid checksum in ${J}: expected "${Se}"`);return{prefix:fe,words:Oe}}const F=S(X);function Z(J){const{prefix:ce,words:re}=X(J,!1);return{prefix:ce,words:re,bytes:Y(re)}}return{encode:Q,decode:X,decodeToBytes:Z,decodeUnsafe:F,fromWords:Y,fromWordsUnsafe:j,toWords:U}}e.bech32=L("bech32"),e.bech32m=L("bech32m"),e.utf8={encode:P=>new TextDecoder().decode(P),decode:P=>new TextEncoder().encode(P)},e.hex=t(E(4),c("0123456789abcdef"),i(""),b(P=>{if(typeof P!="string"||P.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof P} with length ${P.length}`);return P.toLowerCase()}));const ee={utf8:e.utf8,hex:e.hex,base16:e.base16,base32:e.base32,base64:e.base64,base64url:e.base64url,base58:e.base58,base58xmr:e.base58xmr},z=`Invalid encoding type. Available types: ${Object.keys(ee).join(", ")}`,oe=(P,D)=>{if(typeof P!="string"||!ee.hasOwnProperty(P))throw new TypeError(z);if(!(D instanceof Uint8Array))throw new TypeError("bytesToString() expects Uint8Array");return ee[P].encode(D)};e.bytesToString=oe,e.str=e.bytesToString;const W=(P,D)=>{if(!ee.hasOwnProperty(P))throw new TypeError(z);if(typeof D!="string")throw new TypeError("stringToBytes() expects string");return ee[P].decode(D)};e.stringToBytes=W,e.bytes=e.stringToBytes})(lib$a);Object.defineProperty(bip39,"__esModule",{value:!0});var mnemonicToSeedSync_1=bip39.mnemonicToSeedSync=bip39.mnemonicToSeed=bip39.validateMnemonic=bip39.entropyToMnemonic=bip39.mnemonicToEntropy=bip39.generateMnemonic=void 0;/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */const _assert_1=_assert,pbkdf2_1$2=pbkdf2$3,sha256_1$1=sha256$4,sha512_1$1=require$$3$5,utils_1$4=require$$4$5,base_1=lib$a,isJapanese=e=>e[0]==="あいこくしん";function nfkd(e){if(typeof e!="string")throw new TypeError(`Invalid mnemonic type: ${typeof e}`);return e.normalize("NFKD")}function normalize$1(e){const a=nfkd(e),t=a.split(" ");if(![12,15,18,21,24].includes(t.length))throw new Error("Invalid mnemonic");return{nfkd:a,words:t}}function assertEntropy(e){_assert_1.default.bytes(e,16,20,24,28,32)}function generateMnemonic$1(e,a=128){if(_assert_1.default.number(a),a%32!==0||a>256)throw new TypeError("Invalid entropy");return entropyToMnemonic$1((0,utils_1$4.randomBytes)(a/8),e)}bip39.generateMnemonic=generateMnemonic$1;const calcChecksum=e=>{const a=8-e.length/4;return new Uint8Array([(0,sha256_1$1.sha256)(e)[0]>>a<<a])};function getCoder(e){if(!Array.isArray(e)||e.length!==2**11||typeof e[0]!="string")throw new Error("Worlist: expected array of 2048 strings");return e.forEach(a=>{if(typeof a!="string")throw new Error(`Wordlist: non-string element: ${a}`)}),base_1.utils.chain(base_1.utils.checksum(1,calcChecksum),base_1.utils.radix2(11,!0),base_1.utils.alphabet(e))}function mnemonicToEntropy$1(e,a){const{words:t}=normalize$1(e),c=getCoder(a).decode(t);return assertEntropy(c),c}bip39.mnemonicToEntropy=mnemonicToEntropy$1;function entropyToMnemonic$1(e,a){return assertEntropy(e),getCoder(a).encode(e).join(isJapanese(a)?"　":" ")}bip39.entropyToMnemonic=entropyToMnemonic$1;function validateMnemonic$1(e,a){try{mnemonicToEntropy$1(e,a)}catch{return!1}return!0}bip39.validateMnemonic=validateMnemonic$1;const salt$1=e=>nfkd(`mnemonic${e}`);function mnemonicToSeed$1(e,a=""){return(0,pbkdf2_1$2.pbkdf2Async)(sha512_1$1.sha512,normalize$1(e).nfkd,salt$1(a),{c:2048,dkLen:64})}bip39.mnemonicToSeed=mnemonicToSeed$1;function mnemonicToSeedSync$1(e,a=""){return(0,pbkdf2_1$2.pbkdf2)(sha512_1$1.sha512,normalize$1(e).nfkd,salt$1(a),{c:2048,dkLen:64})}mnemonicToSeedSync_1=bip39.mnemonicToSeedSync=mnemonicToSeedSync$1;const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]],_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_7n=BigInt(7),_256n=BigInt(256),_0x71n=BigInt(113);for(let e=0,a=_1n,t=1,c=0;e<24;e++){[t,c]=[c,(2*t+3*c)%5],SHA3_PI.push(2*(5*c+t)),SHA3_ROTL.push((e+1)*(e+2)/2%64);let i=_0n;for(let o=0;o<7;o++)a=(a<<_1n^(a>>_7n)*_0x71n)%_256n,a&_2n&&(i^=_1n<<(_1n<<BigInt(o))-_1n);_SHA3_IOTA.push(i)}const[SHA3_IOTA_H,SHA3_IOTA_L]=u64.split(_SHA3_IOTA,!0),rotlH=(e,a,t)=>t>32?u64.rotlBH(e,a,t):u64.rotlSH(e,a,t),rotlL=(e,a,t)=>t>32?u64.rotlBL(e,a,t):u64.rotlSL(e,a,t);function keccakP(e,a=24){const t=new Uint32Array(10);for(let c=24-a;c<24;c++){for(let b=0;b<10;b++)t[b]=e[b]^e[b+10]^e[b+20]^e[b+30]^e[b+40];for(let b=0;b<10;b+=2){const u=(b+8)%10,l=(b+2)%10,x=t[l],g=t[l+1],v=rotlH(x,g,1)^t[u],E=rotlL(x,g,1)^t[u+1];for(let S=0;S<50;S+=10)e[b+S]^=v,e[b+S+1]^=E}let i=e[2],o=e[3];for(let b=0;b<24;b++){const u=SHA3_ROTL[b],l=rotlH(i,o,u),x=rotlL(i,o,u),g=SHA3_PI[b];i=e[g],o=e[g+1],e[g]=l,e[g+1]=x}for(let b=0;b<50;b+=10){for(let u=0;u<10;u++)t[u]=e[b+u];for(let u=0;u<10;u++)e[b+u]^=~t[(u+2)%10]&t[(u+4)%10]}e[0]^=SHA3_IOTA_H[c],e[1]^=SHA3_IOTA_L[c]}t.fill(0)}let Keccak$1=class ta extends Hash$4{constructor(a,t,c,i=!1,o=24){if(super(),this.blockLen=a,this.suffix=t,this.outputLen=c,this.enableXOF=i,this.rounds=o,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,assert$a.number(c),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32(this.state)}keccak(){keccakP(this.state32,this.rounds),this.posOut=0,this.pos=0}update(a){assert$a.exists(this);const{blockLen:t,state:c}=this;a=toBytes(a);const i=a.length;for(let o=0;o<i;){const b=Math.min(t-this.pos,i-o);for(let u=0;u<b;u++)c[this.pos++]^=a[o++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:a,suffix:t,pos:c,blockLen:i}=this;a[c]^=t,t&128&&c===i-1&&this.keccak(),a[i-1]^=128,this.keccak()}writeInto(a){assert$a.exists(this,!1),assert$a.bytes(a),this.finish();const t=this.state,{blockLen:c}=this;for(let i=0,o=a.length;i<o;){this.posOut>=c&&this.keccak();const b=Math.min(c-this.posOut,o-i);a.set(t.subarray(this.posOut,this.posOut+b),i),this.posOut+=b,i+=b}return a}xofInto(a){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(a)}xof(a){return assert$a.number(a),this.xofInto(new Uint8Array(a))}digestInto(a){if(assert$a.output(a,this),this.finished)throw new Error("digest() was already called");return this.writeInto(a),this.destroy(),a}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(a){const{blockLen:t,suffix:c,outputLen:i,rounds:o,enableXOF:b}=this;return a||(a=new ta(t,c,i,b,o)),a.state32.set(this.state32),a.pos=this.pos,a.posOut=this.posOut,a.finished=this.finished,a.rounds=o,a.suffix=c,a.outputLen=i,a.enableXOF=b,a.destroyed=this.destroyed,a}};const gen=(e,a,t)=>wrapConstructor(()=>new Keccak$1(a,e,t));gen(6,144,224/8);const sha3_256=gen(6,136,256/8);gen(6,104,384/8);gen(6,72,512/8);gen(1,144,224/8);gen(1,136,256/8);gen(1,104,384/8);gen(1,72,512/8);const genShake=(e,a,t)=>wrapConstructorWithOpts((c={})=>new Keccak$1(a,e,c.dkLen===void 0?t:c.dkLen,!0));genShake(31,168,128/8);genShake(31,136,256/8);class HMAC extends Hash$4{constructor(a,t){super(),this.finished=!1,this.destroyed=!1,assert$a.hash(a);const c=toBytes(t);if(this.iHash=a.create(),typeof this.iHash.update!="function")throw new TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,o=new Uint8Array(i);o.set(c.length>i?a.create().update(c).digest():c);for(let b=0;b<o.length;b++)o[b]^=54;this.iHash.update(o),this.oHash=a.create();for(let b=0;b<o.length;b++)o[b]^=106;this.oHash.update(o),o.fill(0)}update(a){return assert$a.exists(this),this.iHash.update(a),this}digestInto(a){assert$a.exists(this),assert$a.bytes(a,this.outputLen),this.finished=!0,this.iHash.digestInto(a),this.oHash.update(a),this.oHash.digestInto(a),this.destroy()}digest(){const a=new Uint8Array(this.oHash.outputLen);return this.digestInto(a),a}_cloneInto(a){a||(a=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:c,finished:i,destroyed:o,blockLen:b,outputLen:u}=this;return a=a,a.finished=i,a.destroyed=o,a.blockLen=b,a.outputLen=u,a.oHash=t._cloneInto(a.oHash),a.iHash=c._cloneInto(a.iHash),a}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const hmac$1=(e,a,t)=>new HMAC(e,a).update(t).digest();hmac$1.create=(e,a)=>new HMAC(e,a);var axiosExports$1={},axios$4={get exports(){return axiosExports$1},set exports(e){axiosExports$1=e}},axiosExports={},axios$3={get exports(){return axiosExports},set exports(e){axiosExports=e}},bind$2=function(a,t){return function(){for(var i=new Array(arguments.length),o=0;o<i.length;o++)i[o]=arguments[o];return a.apply(t,i)}},bind$1=bind$2,toString$1=Object.prototype.toString,kindOf=function(e){return function(a){var t=toString$1.call(a);return e[t]||(e[t]=t.slice(8,-1).toLowerCase())}}(Object.create(null));function kindOfTest(e){return e=e.toLowerCase(),function(t){return kindOf(t)===e}}function isArray$3(e){return Array.isArray(e)}function isUndefined$1(e){return typeof e>"u"}function isBuffer$2(e){return e!==null&&!isUndefined$1(e)&&e.constructor!==null&&!isUndefined$1(e.constructor)&&typeof e.constructor.isBuffer=="function"&&e.constructor.isBuffer(e)}var isArrayBuffer=kindOfTest("ArrayBuffer");function isArrayBufferView(e){var a;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?a=ArrayBuffer.isView(e):a=e&&e.buffer&&isArrayBuffer(e.buffer),a}function isString$3(e){return typeof e=="string"}function isNumber(e){return typeof e=="number"}function isObject$1(e){return e!==null&&typeof e=="object"}function isPlainObject(e){if(kindOf(e)!=="object")return!1;var a=Object.getPrototypeOf(e);return a===null||a===Object.prototype}var isDate=kindOfTest("Date"),isFile=kindOfTest("File"),isBlob$1=kindOfTest("Blob"),isFileList=kindOfTest("FileList");function isFunction(e){return toString$1.call(e)==="[object Function]"}function isStream(e){return isObject$1(e)&&isFunction(e.pipe)}function isFormData$2(e){var a="[object FormData]";return e&&(typeof FormData=="function"&&e instanceof FormData||toString$1.call(e)===a||isFunction(e.toString)&&e.toString()===a)}var isURLSearchParams=kindOfTest("URLSearchParams");function trim(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function isStandardBrowserEnv$1(){return typeof navigator<"u"&&(navigator.product==="ReactNative"||navigator.product==="NativeScript"||navigator.product==="NS")?!1:typeof window<"u"&&typeof document<"u"}function forEach(e,a){if(!(e===null||typeof e>"u"))if(typeof e!="object"&&(e=[e]),isArray$3(e))for(var t=0,c=e.length;t<c;t++)a.call(null,e[t],t,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&a.call(null,e[i],i,e)}function merge(){var e={};function a(i,o){isPlainObject(e[o])&&isPlainObject(i)?e[o]=merge(e[o],i):isPlainObject(i)?e[o]=merge({},i):isArray$3(i)?e[o]=i.slice():e[o]=i}for(var t=0,c=arguments.length;t<c;t++)forEach(arguments[t],a);return e}function extend(e,a,t){return forEach(a,function(i,o){t&&typeof i=="function"?e[o]=bind$1(i,t):e[o]=i}),e}function stripBOM(e){return e.charCodeAt(0)===65279&&(e=e.slice(1)),e}function inherits(e,a,t,c){e.prototype=Object.create(a.prototype,c),e.prototype.constructor=e,t&&Object.assign(e.prototype,t)}function toFlatObject(e,a,t){var c,i,o,b={};a=a||{};do{for(c=Object.getOwnPropertyNames(e),i=c.length;i-- >0;)o=c[i],b[o]||(a[o]=e[o],b[o]=!0);e=Object.getPrototypeOf(e)}while(e&&(!t||t(e,a))&&e!==Object.prototype);return a}function endsWith(e,a,t){e=String(e),(t===void 0||t>e.length)&&(t=e.length),t-=a.length;var c=e.indexOf(a,t);return c!==-1&&c===t}function toArray(e){if(!e)return null;var a=e.length;if(isUndefined$1(a))return null;for(var t=new Array(a);a-- >0;)t[a]=e[a];return t}var isTypedArray=function(e){return function(a){return e&&a instanceof e}}(typeof Uint8Array<"u"&&Object.getPrototypeOf(Uint8Array)),utils$j={isArray:isArray$3,isArrayBuffer,isBuffer:isBuffer$2,isFormData:isFormData$2,isArrayBufferView,isString:isString$3,isNumber,isObject:isObject$1,isPlainObject,isUndefined:isUndefined$1,isDate,isFile,isBlob:isBlob$1,isFunction,isStream,isURLSearchParams,isStandardBrowserEnv:isStandardBrowserEnv$1,forEach,merge,extend,trim,stripBOM,inherits,toFlatObject,kindOf,kindOfTest,endsWith,toArray,isTypedArray,isFileList},utils$i=utils$j;function encode$q(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var buildURL$2=function(a,t,c){if(!t)return a;var i;if(c)i=c(t);else if(utils$i.isURLSearchParams(t))i=t.toString();else{var o=[];utils$i.forEach(t,function(l,x){l===null||typeof l>"u"||(utils$i.isArray(l)?x=x+"[]":l=[l],utils$i.forEach(l,function(v){utils$i.isDate(v)?v=v.toISOString():utils$i.isObject(v)&&(v=JSON.stringify(v)),o.push(encode$q(x)+"="+encode$q(v))}))}),i=o.join("&")}if(i){var b=a.indexOf("#");b!==-1&&(a=a.slice(0,b)),a+=(a.indexOf("?")===-1?"?":"&")+i}return a},utils$h=utils$j;function InterceptorManager$1(){this.handlers=[]}InterceptorManager$1.prototype.use=function(a,t,c){return this.handlers.push({fulfilled:a,rejected:t,synchronous:c?c.synchronous:!1,runWhen:c?c.runWhen:null}),this.handlers.length-1};InterceptorManager$1.prototype.eject=function(a){this.handlers[a]&&(this.handlers[a]=null)};InterceptorManager$1.prototype.forEach=function(a){utils$h.forEach(this.handlers,function(c){c!==null&&a(c)})};var InterceptorManager_1=InterceptorManager$1,utils$g=utils$j,normalizeHeaderName$1=function(a,t){utils$g.forEach(a,function(i,o){o!==t&&o.toUpperCase()===t.toUpperCase()&&(a[t]=i,delete a[o])})},utils$f=utils$j;function AxiosError$4(e,a,t,c,i){Error.call(this),this.message=e,this.name="AxiosError",a&&(this.code=a),t&&(this.config=t),c&&(this.request=c),i&&(this.response=i)}utils$f.inherits(AxiosError$4,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var prototype=AxiosError$4.prototype,descriptors={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach(function(e){descriptors[e]={value:e}});Object.defineProperties(AxiosError$4,descriptors);Object.defineProperty(prototype,"isAxiosError",{value:!0});AxiosError$4.from=function(e,a,t,c,i,o){var b=Object.create(prototype);return utils$f.toFlatObject(e,b,function(l){return l!==Error.prototype}),AxiosError$4.call(b,e.message,a,t,c,i),b.name=e.name,o&&Object.assign(b,o),b};var AxiosError_1=AxiosError$4,transitional={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},utils$e=utils$j;function toFormData$1(e,a){a=a||new FormData;var t=[];function c(o){return o===null?"":utils$e.isDate(o)?o.toISOString():utils$e.isArrayBuffer(o)||utils$e.isTypedArray(o)?typeof Blob=="function"?new Blob([o]):buffer$2.Buffer.from(o):o}function i(o,b){if(utils$e.isPlainObject(o)||utils$e.isArray(o)){if(t.indexOf(o)!==-1)throw Error("Circular reference detected in "+b);t.push(o),utils$e.forEach(o,function(l,x){if(!utils$e.isUndefined(l)){var g=b?b+"."+x:x,v;if(l&&!b&&typeof l=="object"){if(utils$e.endsWith(x,"{}"))l=JSON.stringify(l);else if(utils$e.endsWith(x,"[]")&&(v=utils$e.toArray(l))){v.forEach(function(E){!utils$e.isUndefined(E)&&a.append(g,c(E))});return}}i(l,g)}}),t.pop()}else a.append(b,c(o))}return i(e),a}var toFormData_1=toFormData$1,AxiosError$3=AxiosError_1,settle$1=function(a,t,c){var i=c.config.validateStatus;!c.status||!i||i(c.status)?a(c):t(new AxiosError$3("Request failed with status code "+c.status,[AxiosError$3.ERR_BAD_REQUEST,AxiosError$3.ERR_BAD_RESPONSE][Math.floor(c.status/100)-4],c.config,c.request,c))},cookies,hasRequiredCookies;function requireCookies(){if(hasRequiredCookies)return cookies;hasRequiredCookies=1;var e=utils$j;return cookies=e.isStandardBrowserEnv()?function(){return{write:function(c,i,o,b,u,l){var x=[];x.push(c+"="+encodeURIComponent(i)),e.isNumber(o)&&x.push("expires="+new Date(o).toGMTString()),e.isString(b)&&x.push("path="+b),e.isString(u)&&x.push("domain="+u),l===!0&&x.push("secure"),document.cookie=x.join("; ")},read:function(c){var i=document.cookie.match(new RegExp("(^|;\\s*)("+c+")=([^;]*)"));return i?decodeURIComponent(i[3]):null},remove:function(c){this.write(c,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}(),cookies}var isAbsoluteURL$1=function(a){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(a)},combineURLs$1=function(a,t){return t?a.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):a},isAbsoluteURL=isAbsoluteURL$1,combineURLs=combineURLs$1,buildFullPath$2=function(a,t){return a&&!isAbsoluteURL(t)?combineURLs(a,t):t},parseHeaders,hasRequiredParseHeaders;function requireParseHeaders(){if(hasRequiredParseHeaders)return parseHeaders;hasRequiredParseHeaders=1;var e=utils$j,a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];return parseHeaders=function(c){var i={},o,b,u;return c&&e.forEach(c.split(`
`),function(x){if(u=x.indexOf(":"),o=e.trim(x.substr(0,u)).toLowerCase(),b=e.trim(x.substr(u+1)),o){if(i[o]&&a.indexOf(o)>=0)return;o==="set-cookie"?i[o]=(i[o]?i[o]:[]).concat([b]):i[o]=i[o]?i[o]+", "+b:b}}),i},parseHeaders}var isURLSameOrigin,hasRequiredIsURLSameOrigin;function requireIsURLSameOrigin(){if(hasRequiredIsURLSameOrigin)return isURLSameOrigin;hasRequiredIsURLSameOrigin=1;var e=utils$j;return isURLSameOrigin=e.isStandardBrowserEnv()?function(){var t=/(msie|trident)/i.test(navigator.userAgent),c=document.createElement("a"),i;function o(b){var u=b;return t&&(c.setAttribute("href",u),u=c.href),c.setAttribute("href",u),{href:c.href,protocol:c.protocol?c.protocol.replace(/:$/,""):"",host:c.host,search:c.search?c.search.replace(/^\?/,""):"",hash:c.hash?c.hash.replace(/^#/,""):"",hostname:c.hostname,port:c.port,pathname:c.pathname.charAt(0)==="/"?c.pathname:"/"+c.pathname}}return i=o(window.location.href),function(u){var l=e.isString(u)?o(u):u;return l.protocol===i.protocol&&l.host===i.host}}():function(){return function(){return!0}}(),isURLSameOrigin}var CanceledError_1,hasRequiredCanceledError;function requireCanceledError(){if(hasRequiredCanceledError)return CanceledError_1;hasRequiredCanceledError=1;var e=AxiosError_1,a=utils$j;function t(c){e.call(this,c??"canceled",e.ERR_CANCELED),this.name="CanceledError"}return a.inherits(t,e,{__CANCEL__:!0}),CanceledError_1=t,CanceledError_1}var parseProtocol,hasRequiredParseProtocol;function requireParseProtocol(){return hasRequiredParseProtocol||(hasRequiredParseProtocol=1,parseProtocol=function(a){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(a);return t&&t[1]||""}),parseProtocol}var xhr,hasRequiredXhr;function requireXhr(){if(hasRequiredXhr)return xhr;hasRequiredXhr=1;var e=utils$j,a=settle$1,t=requireCookies(),c=buildURL$2,i=buildFullPath$2,o=requireParseHeaders(),b=requireIsURLSameOrigin(),u=transitional,l=AxiosError_1,x=requireCanceledError(),g=requireParseProtocol();return xhr=function(E){return new Promise(function(T,I){var A=E.data,C=E.headers,O=E.responseType,R;function B(){E.cancelToken&&E.cancelToken.unsubscribe(R),E.signal&&E.signal.removeEventListener("abort",R)}e.isFormData(A)&&e.isStandardBrowserEnv()&&delete C["Content-Type"];var M=new XMLHttpRequest;if(E.auth){var L=E.auth.username||"",ee=E.auth.password?unescape(encodeURIComponent(E.auth.password)):"";C.Authorization="Basic "+btoa(L+":"+ee)}var z=i(E.baseURL,E.url);M.open(E.method.toUpperCase(),c(z,E.params,E.paramsSerializer),!0),M.timeout=E.timeout;function oe(){if(M){var D="getAllResponseHeaders"in M?o(M.getAllResponseHeaders()):null,q=!O||O==="text"||O==="json"?M.responseText:M.response,Y={data:q,status:M.status,statusText:M.statusText,headers:D,config:E,request:M};a(function(j){T(j),B()},function(j){I(j),B()},Y),M=null}}if("onloadend"in M?M.onloadend=oe:M.onreadystatechange=function(){!M||M.readyState!==4||M.status===0&&!(M.responseURL&&M.responseURL.indexOf("file:")===0)||setTimeout(oe)},M.onabort=function(){M&&(I(new l("Request aborted",l.ECONNABORTED,E,M)),M=null)},M.onerror=function(){I(new l("Network Error",l.ERR_NETWORK,E,M,M)),M=null},M.ontimeout=function(){var q=E.timeout?"timeout of "+E.timeout+"ms exceeded":"timeout exceeded",Y=E.transitional||u;E.timeoutErrorMessage&&(q=E.timeoutErrorMessage),I(new l(q,Y.clarifyTimeoutError?l.ETIMEDOUT:l.ECONNABORTED,E,M)),M=null},e.isStandardBrowserEnv()){var W=(E.withCredentials||b(z))&&E.xsrfCookieName?t.read(E.xsrfCookieName):void 0;W&&(C[E.xsrfHeaderName]=W)}"setRequestHeader"in M&&e.forEach(C,function(q,Y){typeof A>"u"&&Y.toLowerCase()==="content-type"?delete C[Y]:M.setRequestHeader(Y,q)}),e.isUndefined(E.withCredentials)||(M.withCredentials=!!E.withCredentials),O&&O!=="json"&&(M.responseType=E.responseType),typeof E.onDownloadProgress=="function"&&M.addEventListener("progress",E.onDownloadProgress),typeof E.onUploadProgress=="function"&&M.upload&&M.upload.addEventListener("progress",E.onUploadProgress),(E.cancelToken||E.signal)&&(R=function(D){M&&(I(!D||D&&D.type?new x:D),M.abort(),M=null)},E.cancelToken&&E.cancelToken.subscribe(R),E.signal&&(E.signal.aborted?R():E.signal.addEventListener("abort",R))),A||(A=null);var P=g(z);if(P&&["http","https","file"].indexOf(P)===-1){I(new l("Unsupported protocol "+P+":",l.ERR_BAD_REQUEST,E));return}M.send(A)})},xhr}var{isUndefined,isStandardBrowserEnv,isFormData:isFormData$1}=utils$j,settle=settle$1,buildFullPath$1=buildFullPath$2,buildURL$1=buildURL$2,AxiosError$2=AxiosError_1;async function fetchAdapter$1(e){const a=createRequest$1(e),t=[getResponse$1(a,e)];e.timeout&&e.timeout>0&&t.push(new Promise(i=>{setTimeout(()=>{const o=e.timeoutErrorMessage?e.timeoutErrorMessage:"timeout of "+e.timeout+"ms exceeded";i(createError$1(o,e,"ECONNABORTED",a))},e.timeout)}));const c=await Promise.race(t);return new Promise((i,o)=>{c instanceof Error?o(c):Object.prototype.toString.call(e.settle)==="[object Function]"?e.settle(i,o,c):settle(i,o,c)})}async function getResponse$1(e,a){let t;try{t=await fetch(e)}catch{return createError$1("Network Error",a,"ERR_NETWORK",e)}const c={ok:t.ok,status:t.status,statusText:t.statusText,headers:new Headers(t.headers),config:a,request:e};if(t.status>=200&&t.status!==204)switch(a.responseType){case"arraybuffer":c.data=await t.arrayBuffer();break;case"blob":c.data=await t.blob();break;case"json":c.data=await t.json();break;case"formData":c.data=await t.formData();break;default:c.data=await t.text();break}return c}function createRequest$1(e){const a=new Headers(e.headers);if(e.auth){const b=e.auth.username||"",u=e.auth.password?decodeURI(encodeURIComponent(e.auth.password)):"";a.set("Authorization",`Basic ${btoa(b+":"+u)}`)}const t=e.method.toUpperCase(),c={headers:a,method:t};t!=="GET"&&t!=="HEAD"&&(c.body=e.data,isFormData$1(c.body)&&isStandardBrowserEnv()&&a.delete("Content-Type")),e.mode&&(c.mode=e.mode),e.cache&&(c.cache=e.cache),e.integrity&&(c.integrity=e.integrity),e.redirect&&(c.redirect=e.redirect),e.referrer&&(c.referrer=e.referrer),isUndefined(e.withCredentials)||(c.credentials=e.withCredentials?"include":"omit");const i=buildFullPath$1(e.baseURL,e.url),o=buildURL$1(i,e.params,e.paramsSerializer);return new Request(o,c)}function createError$1(e,a,t,c,i){if(AxiosError$2&&typeof AxiosError$2=="function")return new AxiosError$2(e,AxiosError$2[t],a,c,i);var o=new Error(e);return enhanceError$1(o,a,t,c,i)}function enhanceError$1(e,a,t,c,i){return e.config=a,t&&(e.code=t),e.request=c,e.response=i,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}const fetch$1=Object.freeze(Object.defineProperty({__proto__:null,default:fetchAdapter$1},Symbol.toStringTag,{value:"Module"})),require$$7$5=getAugmentedNamespace(fetch$1);var _null,hasRequired_null;function require_null(){return hasRequired_null||(hasRequired_null=1,_null=null),_null}var utils$d=utils$j,normalizeHeaderName=normalizeHeaderName$1,AxiosError$1=AxiosError_1,transitionalDefaults=transitional,toFormData=toFormData_1,DEFAULT_CONTENT_TYPE={"Content-Type":"application/x-www-form-urlencoded"};function setContentTypeIfUnset(e,a){!utils$d.isUndefined(e)&&utils$d.isUndefined(e["Content-Type"])&&(e["Content-Type"]=a)}function getDefaultAdapter(){var e;return typeof XMLHttpRequest<"u"||typeof browserExports<"u"&&Object.prototype.toString.call(browserExports)==="[object process]"?e=requireXhr():typeof fetch=="function"&&(e=require$$7$5.default),e}function stringifySafely(e,a,t){if(utils$d.isString(e))try{return(a||JSON.parse)(e),utils$d.trim(e)}catch(c){if(c.name!=="SyntaxError")throw c}return(t||JSON.stringify)(e)}var defaults$3={transitional:transitionalDefaults,adapter:getDefaultAdapter(),transformRequest:[function(a,t){if(normalizeHeaderName(t,"Accept"),normalizeHeaderName(t,"Content-Type"),utils$d.isFormData(a)||utils$d.isArrayBuffer(a)||utils$d.isBuffer(a)||utils$d.isStream(a)||utils$d.isFile(a)||utils$d.isBlob(a))return a;if(utils$d.isArrayBufferView(a))return a.buffer;if(utils$d.isURLSearchParams(a))return setContentTypeIfUnset(t,"application/x-www-form-urlencoded;charset=utf-8"),a.toString();var c=utils$d.isObject(a),i=t&&t["Content-Type"],o;if((o=utils$d.isFileList(a))||c&&i==="multipart/form-data"){var b=this.env&&this.env.FormData;return toFormData(o?{"files[]":a}:a,b&&new b)}else if(c||i==="application/json")return setContentTypeIfUnset(t,"application/json"),stringifySafely(a);return a}],transformResponse:[function(a){var t=this.transitional||defaults$3.transitional,c=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,o=!c&&this.responseType==="json";if(o||i&&utils$d.isString(a)&&a.length)try{return JSON.parse(a)}catch(b){if(o)throw b.name==="SyntaxError"?AxiosError$1.from(b,AxiosError$1.ERR_BAD_RESPONSE,this,null,this.response):b}return a}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:require_null()},validateStatus:function(a){return a>=200&&a<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};utils$d.forEach(["delete","get","head"],function(a){defaults$3.headers[a]={}});utils$d.forEach(["post","put","patch"],function(a){defaults$3.headers[a]=utils$d.merge(DEFAULT_CONTENT_TYPE)});var defaults_1=defaults$3,utils$c=utils$j,defaults$2=defaults_1,transformData$1=function(a,t,c){var i=this||defaults$2;return utils$c.forEach(c,function(b){a=b.call(i,a,t)}),a},isCancel$1,hasRequiredIsCancel;function requireIsCancel(){return hasRequiredIsCancel||(hasRequiredIsCancel=1,isCancel$1=function(a){return!!(a&&a.__CANCEL__)}),isCancel$1}var utils$b=utils$j,transformData=transformData$1,isCancel=requireIsCancel(),defaults$1=defaults_1,CanceledError=requireCanceledError();function throwIfCancellationRequested(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new CanceledError}var dispatchRequest$1=function(a){throwIfCancellationRequested(a),a.headers=a.headers||{},a.data=transformData.call(a,a.data,a.headers,a.transformRequest),a.headers=utils$b.merge(a.headers.common||{},a.headers[a.method]||{},a.headers),utils$b.forEach(["delete","get","head","post","put","patch","common"],function(i){delete a.headers[i]});var t=a.adapter||defaults$1.adapter;return t(a).then(function(i){return throwIfCancellationRequested(a),i.data=transformData.call(a,i.data,i.headers,a.transformResponse),i},function(i){return isCancel(i)||(throwIfCancellationRequested(a),i&&i.response&&(i.response.data=transformData.call(a,i.response.data,i.response.headers,a.transformResponse))),Promise.reject(i)})},utils$a=utils$j,mergeConfig$2=function(a,t){t=t||{};var c={};function i(g,v){return utils$a.isPlainObject(g)&&utils$a.isPlainObject(v)?utils$a.merge(g,v):utils$a.isPlainObject(v)?utils$a.merge({},v):utils$a.isArray(v)?v.slice():v}function o(g){if(utils$a.isUndefined(t[g])){if(!utils$a.isUndefined(a[g]))return i(void 0,a[g])}else return i(a[g],t[g])}function b(g){if(!utils$a.isUndefined(t[g]))return i(void 0,t[g])}function u(g){if(utils$a.isUndefined(t[g])){if(!utils$a.isUndefined(a[g]))return i(void 0,a[g])}else return i(void 0,t[g])}function l(g){if(g in t)return i(a[g],t[g]);if(g in a)return i(void 0,a[g])}var x={url:b,method:b,data:b,baseURL:u,transformRequest:u,transformResponse:u,paramsSerializer:u,timeout:u,timeoutMessage:u,withCredentials:u,adapter:u,responseType:u,xsrfCookieName:u,xsrfHeaderName:u,onUploadProgress:u,onDownloadProgress:u,decompress:u,maxContentLength:u,maxBodyLength:u,beforeRedirect:u,transport:u,httpAgent:u,httpsAgent:u,cancelToken:u,socketPath:u,responseEncoding:u,validateStatus:l};return utils$a.forEach(Object.keys(a).concat(Object.keys(t)),function(v){var E=x[v]||o,S=E(v);utils$a.isUndefined(S)&&E!==l||(c[v]=S)}),c},data$1,hasRequiredData;function requireData(){return hasRequiredData||(hasRequiredData=1,data$1={version:"0.27.2"}),data$1}var VERSION=requireData().version,AxiosError=AxiosError_1,validators$1={};["object","boolean","number","function","string","symbol"].forEach(function(e,a){validators$1[e]=function(c){return typeof c===e||"a"+(a<1?"n ":" ")+e}});var deprecatedWarnings={};validators$1.transitional=function(a,t,c){function i(o,b){return"[Axios v"+VERSION+"] Transitional option '"+o+"'"+b+(c?". "+c:"")}return function(o,b,u){if(a===!1)throw new AxiosError(i(b," has been removed"+(t?" in "+t:"")),AxiosError.ERR_DEPRECATED);return t&&!deprecatedWarnings[b]&&(deprecatedWarnings[b]=!0),a?a(o,b,u):!0}};function assertOptions(e,a,t){if(typeof e!="object")throw new AxiosError("options must be an object",AxiosError.ERR_BAD_OPTION_VALUE);for(var c=Object.keys(e),i=c.length;i-- >0;){var o=c[i],b=a[o];if(b){var u=e[o],l=u===void 0||b(u,o,e);if(l!==!0)throw new AxiosError("option "+o+" must be "+l,AxiosError.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new AxiosError("Unknown option "+o,AxiosError.ERR_BAD_OPTION)}}var validator$1={assertOptions,validators:validators$1},utils$9=utils$j,buildURL=buildURL$2,InterceptorManager=InterceptorManager_1,dispatchRequest=dispatchRequest$1,mergeConfig$1=mergeConfig$2,buildFullPath=buildFullPath$2,validator=validator$1,validators=validator.validators;function Axios$1(e){this.defaults=e,this.interceptors={request:new InterceptorManager,response:new InterceptorManager}}Axios$1.prototype.request=function(a,t){typeof a=="string"?(t=t||{},t.url=a):t=a||{},t=mergeConfig$1(this.defaults,t),t.method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var c=t.transitional;c!==void 0&&validator.assertOptions(c,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},!1);var i=[],o=!0;this.interceptors.request.forEach(function(S){typeof S.runWhen=="function"&&S.runWhen(t)===!1||(o=o&&S.synchronous,i.unshift(S.fulfilled,S.rejected))});var b=[];this.interceptors.response.forEach(function(S){b.push(S.fulfilled,S.rejected)});var u;if(!o){var l=[dispatchRequest,void 0];for(Array.prototype.unshift.apply(l,i),l=l.concat(b),u=Promise.resolve(t);l.length;)u=u.then(l.shift(),l.shift());return u}for(var x=t;i.length;){var g=i.shift(),v=i.shift();try{x=g(x)}catch(E){v(E);break}}try{u=dispatchRequest(x)}catch(E){return Promise.reject(E)}for(;b.length;)u=u.then(b.shift(),b.shift());return u};Axios$1.prototype.getUri=function(a){a=mergeConfig$1(this.defaults,a);var t=buildFullPath(a.baseURL,a.url);return buildURL(t,a.params,a.paramsSerializer)};utils$9.forEach(["delete","get","head","options"],function(a){Axios$1.prototype[a]=function(t,c){return this.request(mergeConfig$1(c||{},{method:a,url:t,data:(c||{}).data}))}});utils$9.forEach(["post","put","patch"],function(a){function t(c){return function(o,b,u){return this.request(mergeConfig$1(u||{},{method:a,headers:c?{"Content-Type":"multipart/form-data"}:{},url:o,data:b}))}}Axios$1.prototype[a]=t(),Axios$1.prototype[a+"Form"]=t(!0)});var Axios_1=Axios$1,CancelToken_1,hasRequiredCancelToken;function requireCancelToken(){if(hasRequiredCancelToken)return CancelToken_1;hasRequiredCancelToken=1;var e=requireCanceledError();function a(t){if(typeof t!="function")throw new TypeError("executor must be a function.");var c;this.promise=new Promise(function(b){c=b});var i=this;this.promise.then(function(o){if(i._listeners){var b,u=i._listeners.length;for(b=0;b<u;b++)i._listeners[b](o);i._listeners=null}}),this.promise.then=function(o){var b,u=new Promise(function(l){i.subscribe(l),b=l}).then(o);return u.cancel=function(){i.unsubscribe(b)},u},t(function(b){i.reason||(i.reason=new e(b),c(i.reason))})}return a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.prototype.subscribe=function(c){if(this.reason){c(this.reason);return}this._listeners?this._listeners.push(c):this._listeners=[c]},a.prototype.unsubscribe=function(c){if(this._listeners){var i=this._listeners.indexOf(c);i!==-1&&this._listeners.splice(i,1)}},a.source=function(){var c,i=new a(function(b){c=b});return{token:i,cancel:c}},CancelToken_1=a,CancelToken_1}var spread,hasRequiredSpread;function requireSpread(){return hasRequiredSpread||(hasRequiredSpread=1,spread=function(a){return function(c){return a.apply(null,c)}}),spread}var isAxiosError,hasRequiredIsAxiosError;function requireIsAxiosError(){if(hasRequiredIsAxiosError)return isAxiosError;hasRequiredIsAxiosError=1;var e=utils$j;return isAxiosError=function(t){return e.isObject(t)&&t.isAxiosError===!0},isAxiosError}var utils$8=utils$j,bind=bind$2,Axios=Axios_1,mergeConfig=mergeConfig$2,defaults=defaults_1;function createInstance(e){var a=new Axios(e),t=bind(Axios.prototype.request,a);return utils$8.extend(t,Axios.prototype,a),utils$8.extend(t,a),t.create=function(i){return createInstance(mergeConfig(e,i))},t}var axios$2=createInstance(defaults);axios$2.Axios=Axios;axios$2.CanceledError=requireCanceledError();axios$2.CancelToken=requireCancelToken();axios$2.isCancel=requireIsCancel();axios$2.VERSION=requireData().version;axios$2.toFormData=toFormData_1;axios$2.AxiosError=AxiosError_1;axios$2.Cancel=axios$2.CanceledError;axios$2.all=function(a){return Promise.all(a)};axios$2.spread=requireSpread();axios$2.isAxiosError=requireIsAxiosError();axios$3.exports=axios$2;axiosExports.default=axios$2;(function(e){e.exports=axiosExports,e.exports.defaults=axiosExports})(axios$4);const axios$1=getDefaultExportFromCjs(axiosExports$1);var browser$2=typeof self=="object"?self.FormData:window.FormData,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__export=(e,a)=>{for(var t in a)__defProp(e,t,{get:a[t],enumerable:!0})},__decorateClass=(e,a,t,c)=>{for(var i=c>1?void 0:c?__getOwnPropDesc(a,t):a,o=e.length-1,b;o>=0;o--)(b=e[o])&&(i=(c?b(a,t,i):b(i))||i);return c&&i&&__defProp(a,t,i),i},pathRegex=/^m(\/[0-9]+')+$/,replaceDerive=e=>e.replace("'",""),HMAC_KEY="ed25519 seed",HARDENED_OFFSET=2147483648,getMasterKeyFromSeed=e=>{const t=hmac$1.create(sha512,HMAC_KEY).update(hexToBytes$1(e)).digest(),c=t.slice(0,32),i=t.slice(32);return{key:c,chainCode:i}},CKDPriv=({key:e,chainCode:a},t)=>{const c=new ArrayBuffer(4);new DataView(c).setUint32(0,t);const i=new Uint8Array(c),o=new Uint8Array([0]),b=new Uint8Array([...o,...e,...i]),u=hmac$1.create(sha512,a).update(b).digest(),l=u.slice(0,32),x=u.slice(32);return{key:l,chainCode:x}},isValidPath=e=>pathRegex.test(e)?!e.split("/").slice(1).map(replaceDerive).some(Number.isNaN):!1,derivePath=(e,a,t=HARDENED_OFFSET)=>{if(!isValidPath(e))throw new Error("Invalid derivation path");const{key:c,chainCode:i}=getMasterKeyFromSeed(a);return e.split("/").slice(1).map(replaceDerive).map(b=>parseInt(b,10)).reduce((b,u)=>CKDPriv(b,u+t),{key:c,chainCode:i})};async function sleep(e){return new Promise(a=>{setTimeout(a,e)})}var DEFAULT_VERSION_PATH_BASE="/v1";function fixNodeUrl(e){let a=`${e}`;return a.endsWith("/")&&(a=a.substring(0,a.length-1)),a.endsWith(DEFAULT_VERSION_PATH_BASE)||(a=`${a}${DEFAULT_VERSION_PATH_BASE}`),a}var DEFAULT_MAX_GAS_AMOUNT=2e5,DEFAULT_TXN_EXP_SEC_FROM_NOW=20,DEFAULT_TXN_TIMEOUT_SEC=20,APTOS_COIN="0x1::aptos_coin::AptosCoin";function Memoize(e){let a,t,c;return typeof e=="object"?(a=e.hashFunction,t=e.ttlMs,c=e.tags):a=e,(i,o,b)=>{if(b.value!=null)b.value=getNewFunction(b.value,a,t,c);else if(b.get!=null)b.get=getNewFunction(b.get,a,t,c);else throw new Error("Only put a Memoize() decorator on a method or get accessor.")}}function MemoizeExpiring(e,a){return Memoize({ttlMs:e,hashFunction:a})}var clearCacheTagsMap=new Map;function clear(e){const a=new Set;for(const t of e){const c=clearCacheTagsMap.get(t);if(c)for(const i of c)a.has(i)||(i.clear(),a.add(i))}return a.size}function getNewFunction(e,a,t=0,c){const i=Symbol("__memoized_map__");return function(...o){let b;const u=this;u.hasOwnProperty(i)||Object.defineProperty(u,i,{configurable:!1,enumerable:!1,writable:!1,value:new Map});const l=u[i];if(Array.isArray(c))for(const x of c)clearCacheTagsMap.has(x)?clearCacheTagsMap.get(x).push(l):clearCacheTagsMap.set(x,[l]);if(a||o.length>0||t>0){let x;a===!0?x=o.map(E=>E.toString()).join("!"):a?x=a.apply(u,o):x=o[0];const g=`${x}__timestamp`;let v=!1;if(t>0)if(!l.has(g))v=!0;else{const E=l.get(g);v=Date.now()-E>t}l.has(x)&&!v?b=l.get(x):(b=e.apply(u,o),l.set(x,b),t>0&&l.set(g,Date.now()))}else{const x=u;l.has(x)?b=l.get(x):(b=e.apply(u,o),l.set(x,b))}return b}}var HexString=class{static fromBuffer(e){return HexString.fromUint8Array(e)}static fromUint8Array(e){return new HexString(bytesToHex$2(e))}static ensure(e){return typeof e=="string"?new HexString(e):e}constructor(e){e.startsWith("0x")?this.hexString=e:this.hexString=`0x${e}`}hex(){return this.hexString}noPrefix(){return this.hexString.slice(2)}toString(){return this.hex()}toShortString(){return`0x${this.hexString.replace(/^0x0*/,"")}`}toUint8Array(){return Uint8Array.from(hexToBytes$1(this.noPrefix()))}};async function paginateWithCursor(e,a,t,c){var i;const o=[];let b;for(;;){const u=await e(HexString.ensure(a).hex(),(i=c?.ledgerVersion)==null?void 0:i.toString(),b,t);if(b=u.__headers["x-aptos-cursor"],delete u.__headers,o.push(...u),b==null)break}return o}var NetworkToIndexerAPI={mainnet:"https://indexer.mainnet.aptoslabs.com/v1/graphql",testnet:"https://indexer-testnet.staging.gcp.aptosdev.com/v1/graphql",devnet:"https://indexer-devnet.staging.gcp.aptosdev.com/v1/graphql"},NetworkToNodeAPI={mainnet:"https://fullnode.mainnet.aptoslabs.com/v1",testnet:"https://fullnode.testnet.aptoslabs.com/v1",devnet:"https://fullnode.devnet.aptoslabs.com/v1"},aptos_types_exports={};__export(aptos_types_exports,{AccountAddress:()=>AccountAddress,AccountAuthenticator:()=>AccountAuthenticator,AccountAuthenticatorEd25519:()=>AccountAuthenticatorEd25519,AccountAuthenticatorMultiEd25519:()=>AccountAuthenticatorMultiEd25519,ArgumentABI:()=>ArgumentABI,AuthenticationKey:()=>AuthenticationKey,ChainId:()=>ChainId,ChangeSet:()=>ChangeSet,Ed25519PublicKey:()=>Ed25519PublicKey,Ed25519Signature:()=>Ed25519Signature,EntryFunction:()=>EntryFunction,EntryFunctionABI:()=>EntryFunctionABI,Identifier:()=>Identifier,Module:()=>Module,ModuleId:()=>ModuleId,MultiAgentRawTransaction:()=>MultiAgentRawTransaction,MultiEd25519PublicKey:()=>MultiEd25519PublicKey,MultiEd25519Signature:()=>MultiEd25519Signature,MultiSig:()=>MultiSig,MultiSigTransactionPayload:()=>MultiSigTransactionPayload,RawTransaction:()=>RawTransaction,RawTransactionWithData:()=>RawTransactionWithData,RotationProofChallenge:()=>RotationProofChallenge,Script:()=>Script,ScriptABI:()=>ScriptABI,SignedTransaction:()=>SignedTransaction,StructTag:()=>StructTag,Transaction:()=>Transaction$4,TransactionArgument:()=>TransactionArgument,TransactionArgumentAddress:()=>TransactionArgumentAddress,TransactionArgumentBool:()=>TransactionArgumentBool,TransactionArgumentU128:()=>TransactionArgumentU128,TransactionArgumentU16:()=>TransactionArgumentU16,TransactionArgumentU256:()=>TransactionArgumentU256,TransactionArgumentU32:()=>TransactionArgumentU32,TransactionArgumentU64:()=>TransactionArgumentU64,TransactionArgumentU8:()=>TransactionArgumentU8,TransactionArgumentU8Vector:()=>TransactionArgumentU8Vector,TransactionAuthenticator:()=>TransactionAuthenticator,TransactionAuthenticatorEd25519:()=>TransactionAuthenticatorEd25519,TransactionAuthenticatorMultiAgent:()=>TransactionAuthenticatorMultiAgent,TransactionAuthenticatorMultiEd25519:()=>TransactionAuthenticatorMultiEd25519,TransactionPayload:()=>TransactionPayload,TransactionPayloadEntryFunction:()=>TransactionPayloadEntryFunction,TransactionPayloadMultisig:()=>TransactionPayloadMultisig,TransactionPayloadScript:()=>TransactionPayloadScript,TransactionScriptABI:()=>TransactionScriptABI,TypeArgumentABI:()=>TypeArgumentABI,TypeTag:()=>TypeTag,TypeTagAddress:()=>TypeTagAddress,TypeTagBool:()=>TypeTagBool,TypeTagSigner:()=>TypeTagSigner,TypeTagStruct:()=>TypeTagStruct,TypeTagU128:()=>TypeTagU128,TypeTagU16:()=>TypeTagU16,TypeTagU256:()=>TypeTagU256,TypeTagU32:()=>TypeTagU32,TypeTagU64:()=>TypeTagU64,TypeTagU8:()=>TypeTagU8,TypeTagVector:()=>TypeTagVector,UserTransaction:()=>UserTransaction,WriteSet:()=>WriteSet});var bcs_exports={};__export(bcs_exports,{Deserializer:()=>Deserializer,Serializer:()=>Serializer,bcsSerializeBool:()=>bcsSerializeBool,bcsSerializeBytes:()=>bcsSerializeBytes,bcsSerializeFixedBytes:()=>bcsSerializeFixedBytes,bcsSerializeStr:()=>bcsSerializeStr,bcsSerializeU128:()=>bcsSerializeU128,bcsSerializeU16:()=>bcsSerializeU16,bcsSerializeU32:()=>bcsSerializeU32,bcsSerializeU8:()=>bcsSerializeU8,bcsSerializeUint64:()=>bcsSerializeUint64,bcsToBytes:()=>bcsToBytes,deserializeVector:()=>deserializeVector,serializeVector:()=>serializeVector,serializeVectorWithFunc:()=>serializeVectorWithFunc});var MAX_U8_NUMBER=2**8-1,MAX_U16_NUMBER=2**16-1,MAX_U32_NUMBER=2**32-1,MAX_U64_BIG_INT=BigInt(2**64)-BigInt(1),MAX_U128_BIG_INT=BigInt(2**128)-BigInt(1),MAX_U256_BIG_INT=BigInt(2**256)-BigInt(1),Serializer=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){for(;this.buffer.byteLength<this.offset+e;){const a=new ArrayBuffer(this.buffer.byteLength*2);new Uint8Array(a).set(new Uint8Array(this.buffer)),this.buffer=a}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeWithFunction(e,a,t){this.ensureBufferWillHandleSize(a);const c=new DataView(this.buffer,this.offset);e.apply(c,[0,t,!0]),this.offset+=a}serializeStr(e){const a=new TextEncoder;this.serializeBytes(a.encode(e))}serializeBytes(e){this.serializeU32AsUleb128(e.length),this.serialize(e)}serializeFixedBytes(e){this.serialize(e)}serializeBool(e){if(typeof e!="boolean")throw new Error("Value needs to be a boolean");const a=e?1:0;this.serialize(new Uint8Array([a]))}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){const a=BigInt(e.toString())&BigInt(MAX_U32_NUMBER),t=BigInt(e.toString())>>BigInt(32);this.serializeU32(Number(a)),this.serializeU32(Number(t))}serializeU128(e){const a=BigInt(e.toString())&MAX_U64_BIG_INT,t=BigInt(e.toString())>>BigInt(64);this.serializeU64(a),this.serializeU64(t)}serializeU256(e){const a=BigInt(e.toString())&MAX_U128_BIG_INT,t=BigInt(e.toString())>>BigInt(128);this.serializeU128(a),this.serializeU128(t)}serializeU32AsUleb128(e){let a=e;const t=[];for(;a>>>7;)t.push(a&127|128),a>>>=7;t.push(a),this.serialize(new Uint8Array(t))}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}};__decorateClass([checkNumberRange(0,MAX_U8_NUMBER)],Serializer.prototype,"serializeU8",1);__decorateClass([checkNumberRange(0,MAX_U16_NUMBER)],Serializer.prototype,"serializeU16",1);__decorateClass([checkNumberRange(0,MAX_U32_NUMBER)],Serializer.prototype,"serializeU32",1);__decorateClass([checkNumberRange(BigInt(0),MAX_U64_BIG_INT)],Serializer.prototype,"serializeU64",1);__decorateClass([checkNumberRange(BigInt(0),MAX_U128_BIG_INT)],Serializer.prototype,"serializeU128",1);__decorateClass([checkNumberRange(BigInt(0),MAX_U256_BIG_INT)],Serializer.prototype,"serializeU256",1);__decorateClass([checkNumberRange(0,MAX_U32_NUMBER)],Serializer.prototype,"serializeU32AsUleb128",1);function checkNumberRange(e,a,t){return(c,i,o)=>{const b=o.value;return o.value=function(l){const x=BigInt(l.toString());if(x>BigInt(a.toString())||x<BigInt(e.toString()))throw new Error(t||"Value is out of range");b.apply(this,[l])},o}}var Deserializer=class{constructor(e){this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e,0),this.offset=0}read(e){if(this.offset+e>this.buffer.byteLength)throw new Error("Reached to the end of buffer");const a=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,a}deserializeStr(){const e=this.deserializeBytes();return new TextDecoder().decode(e)}deserializeBytes(){const e=this.deserializeUleb128AsU32();return new Uint8Array(this.read(e))}deserializeFixedBytes(e){return new Uint8Array(this.read(e))}deserializeBool(){const e=new Uint8Array(this.read(1))[0];if(e!==1&&e!==0)throw new Error("Invalid boolean value");return e===1}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){const e=this.deserializeU32(),a=this.deserializeU32();return BigInt(BigInt(a)<<BigInt(32)|BigInt(e))}deserializeU128(){const e=this.deserializeU64(),a=this.deserializeU64();return BigInt(a<<BigInt(64)|e)}deserializeU256(){const e=this.deserializeU128(),a=this.deserializeU128();return BigInt(a<<BigInt(128)|e)}deserializeUleb128AsU32(){let e=BigInt(0),a=0;for(;e<MAX_U32_NUMBER;){const t=this.deserializeU8();if(e|=BigInt(t&127)<<BigInt(a),!(t&128))break;a+=7}if(e>MAX_U32_NUMBER)throw new Error("Overflow while parsing uleb128-encoded uint32 value");return Number(e)}};function serializeVector(e,a){a.serializeU32AsUleb128(e.length),e.forEach(t=>{t.serialize(a)})}function serializeVectorWithFunc(e,a){const t=new Serializer;t.serializeU32AsUleb128(e.length);const c=t[a];return e.forEach(i=>{c.call(t,i)}),t.getBytes()}function deserializeVector(e,a){const t=e.deserializeUleb128AsU32(),c=[];for(let i=0;i<t;i+=1)c.push(a.deserialize(e));return c}function bcsToBytes(e){const a=new Serializer;return e.serialize(a),a.getBytes()}function bcsSerializeUint64(e){const a=new Serializer;return a.serializeU64(e),a.getBytes()}function bcsSerializeU8(e){const a=new Serializer;return a.serializeU8(e),a.getBytes()}function bcsSerializeU16(e){const a=new Serializer;return a.serializeU16(e),a.getBytes()}function bcsSerializeU32(e){const a=new Serializer;return a.serializeU32(e),a.getBytes()}function bcsSerializeU128(e){const a=new Serializer;return a.serializeU128(e),a.getBytes()}function bcsSerializeBool(e){const a=new Serializer;return a.serializeBool(e),a.getBytes()}function bcsSerializeStr(e){const a=new Serializer;return a.serializeStr(e),a.getBytes()}function bcsSerializeBytes(e){const a=new Serializer;return a.serializeBytes(e),a.getBytes()}function bcsSerializeFixedBytes(e){const a=new Serializer;return a.serializeFixedBytes(e),a.getBytes()}var _AccountAddress=class{constructor(e){if(e.length!==_AccountAddress.LENGTH)throw new Error("Expected address of length 32");this.address=e}static fromHex(e){let a=HexString.ensure(e);a.noPrefix().length%2!==0&&(a=new HexString(`0${a.noPrefix()}`));const t=a.toUint8Array();if(t.length>_AccountAddress.LENGTH)throw new Error("Hex string is too long. Address's length is 32 bytes.");if(t.length===_AccountAddress.LENGTH)return new _AccountAddress(t);const c=new Uint8Array(_AccountAddress.LENGTH);return c.set(t,_AccountAddress.LENGTH-t.length),new _AccountAddress(c)}static isValid(e){if(e==="")return!1;let a=HexString.ensure(e);return a.noPrefix().length%2!==0&&(a=new HexString(`0${a.noPrefix()}`)),a.toUint8Array().length<=_AccountAddress.LENGTH}toHexString(){return HexString.fromUint8Array(this.address).hex()}serialize(e){e.serializeFixedBytes(this.address)}static deserialize(e){return new _AccountAddress(e.deserializeFixedBytes(_AccountAddress.LENGTH))}},AccountAddress=_AccountAddress;AccountAddress.LENGTH=32;AccountAddress.CORE_CODE_ADDRESS=_AccountAddress.fromHex("0x1");var _Ed25519PublicKey=class{constructor(e){if(e.length!==_Ed25519PublicKey.LENGTH)throw new Error(`Ed25519PublicKey length should be ${_Ed25519PublicKey.LENGTH}`);this.value=e}toBytes(){return this.value}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const a=e.deserializeBytes();return new _Ed25519PublicKey(a)}},Ed25519PublicKey=_Ed25519PublicKey;Ed25519PublicKey.LENGTH=32;var _Ed25519Signature=class{constructor(e){if(this.value=e,e.length!==_Ed25519Signature.LENGTH)throw new Error(`Ed25519Signature length should be ${_Ed25519Signature.LENGTH}`)}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const a=e.deserializeBytes();return new _Ed25519Signature(a)}},Ed25519Signature=_Ed25519Signature;Ed25519Signature.LENGTH=64;var MAX_SIGNATURES_SUPPORTED=32,MultiEd25519PublicKey=class{constructor(e,a){if(this.public_keys=e,this.threshold=a,a>MAX_SIGNATURES_SUPPORTED)throw new Error(`"threshold" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`)}toBytes(){const e=new Uint8Array(this.public_keys.length*Ed25519PublicKey.LENGTH+1);return this.public_keys.forEach((a,t)=>{e.set(a.value,t*Ed25519PublicKey.LENGTH)}),e[this.public_keys.length*Ed25519PublicKey.LENGTH]=this.threshold,e}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const a=e.deserializeBytes(),t=a[a.length-1],c=[];for(let i=0;i<a.length-1;i+=Ed25519PublicKey.LENGTH){const o=i;c.push(new Ed25519PublicKey(a.subarray(o,o+Ed25519PublicKey.LENGTH)))}return new MultiEd25519PublicKey(c,t)}},_MultiEd25519Signature=class{constructor(e,a){if(this.signatures=e,this.bitmap=a,a.length!==_MultiEd25519Signature.BITMAP_LEN)throw new Error(`"bitmap" length should be ${_MultiEd25519Signature.BITMAP_LEN}`)}toBytes(){const e=new Uint8Array(this.signatures.length*Ed25519Signature.LENGTH+_MultiEd25519Signature.BITMAP_LEN);return this.signatures.forEach((a,t)=>{e.set(a.value,t*Ed25519Signature.LENGTH)}),e.set(this.bitmap,this.signatures.length*Ed25519Signature.LENGTH),e}static createBitmap(e){const t=new Uint8Array([0,0,0,0]),c=new Set;return e.forEach(i=>{if(i>=MAX_SIGNATURES_SUPPORTED)throw new Error(`Invalid bit value ${i}.`);if(c.has(i))throw new Error("Duplicated bits detected.");c.add(i);const o=Math.floor(i/8);let b=t[o];b|=128>>i%8,t[o]=b}),t}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const a=e.deserializeBytes(),t=a.subarray(a.length-4),c=[];for(let i=0;i<a.length-t.length;i+=Ed25519Signature.LENGTH){const o=i;c.push(new Ed25519Signature(a.subarray(o,o+Ed25519Signature.LENGTH)))}return new _MultiEd25519Signature(c,t)}},MultiEd25519Signature=_MultiEd25519Signature;MultiEd25519Signature.BITMAP_LEN=4;var TransactionAuthenticator=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return TransactionAuthenticatorEd25519.load(e);case 1:return TransactionAuthenticatorMultiEd25519.load(e);case 2:return TransactionAuthenticatorMultiAgent.load(e);default:throw new Error(`Unknown variant index for TransactionAuthenticator: ${a}`)}}},TransactionAuthenticatorEd25519=class extends TransactionAuthenticator{constructor(e,a){super(),this.public_key=e,this.signature=a}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const a=Ed25519PublicKey.deserialize(e),t=Ed25519Signature.deserialize(e);return new TransactionAuthenticatorEd25519(a,t)}},TransactionAuthenticatorMultiEd25519=class extends TransactionAuthenticator{constructor(e,a){super(),this.public_key=e,this.signature=a}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const a=MultiEd25519PublicKey.deserialize(e),t=MultiEd25519Signature.deserialize(e);return new TransactionAuthenticatorMultiEd25519(a,t)}},TransactionAuthenticatorMultiAgent=class extends TransactionAuthenticator{constructor(e,a,t){super(),this.sender=e,this.secondary_signer_addresses=a,this.secondary_signers=t}serialize(e){e.serializeU32AsUleb128(2),this.sender.serialize(e),serializeVector(this.secondary_signer_addresses,e),serializeVector(this.secondary_signers,e)}static load(e){const a=AccountAuthenticator.deserialize(e),t=deserializeVector(e,AccountAddress),c=deserializeVector(e,AccountAuthenticator);return new TransactionAuthenticatorMultiAgent(a,t,c)}},AccountAuthenticator=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return AccountAuthenticatorEd25519.load(e);case 1:return AccountAuthenticatorMultiEd25519.load(e);default:throw new Error(`Unknown variant index for AccountAuthenticator: ${a}`)}}},AccountAuthenticatorEd25519=class extends AccountAuthenticator{constructor(e,a){super(),this.public_key=e,this.signature=a}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const a=Ed25519PublicKey.deserialize(e),t=Ed25519Signature.deserialize(e);return new AccountAuthenticatorEd25519(a,t)}},AccountAuthenticatorMultiEd25519=class extends AccountAuthenticator{constructor(e,a){super(),this.public_key=e,this.signature=a}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const a=MultiEd25519PublicKey.deserialize(e),t=MultiEd25519Signature.deserialize(e);return new AccountAuthenticatorMultiEd25519(a,t)}},Identifier=class{constructor(e){this.value=e}serialize(e){e.serializeStr(this.value)}static deserialize(e){const a=e.deserializeStr();return new Identifier(a)}},TypeTag=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return TypeTagBool.load(e);case 1:return TypeTagU8.load(e);case 2:return TypeTagU64.load(e);case 3:return TypeTagU128.load(e);case 4:return TypeTagAddress.load(e);case 5:return TypeTagSigner.load(e);case 6:return TypeTagVector.load(e);case 7:return TypeTagStruct.load(e);case 8:return TypeTagU16.load(e);case 9:return TypeTagU32.load(e);case 10:return TypeTagU256.load(e);default:throw new Error(`Unknown variant index for TypeTag: ${a}`)}}},TypeTagBool=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(0)}static load(e){return new TypeTagBool}},TypeTagU8=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new TypeTagU8}},TypeTagU16=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new TypeTagU16}},TypeTagU32=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new TypeTagU32}},TypeTagU64=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(2)}static load(e){return new TypeTagU64}},TypeTagU128=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(3)}static load(e){return new TypeTagU128}},TypeTagU256=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new TypeTagU256}},TypeTagAddress=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(4)}static load(e){return new TypeTagAddress}},TypeTagSigner=class extends TypeTag{serialize(e){e.serializeU32AsUleb128(5)}static load(e){return new TypeTagSigner}},TypeTagVector=class extends TypeTag{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),this.value.serialize(e)}static load(e){const a=TypeTag.deserialize(e);return new TypeTagVector(a)}},TypeTagStruct=class extends TypeTag{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),this.value.serialize(e)}static load(e){const a=StructTag.deserialize(e);return new TypeTagStruct(a)}isStringTypeTag(){return this.value.module_name.value==="string"&&this.value.name.value==="String"&&this.value.address.toHexString()===AccountAddress.fromHex("0x1").toHexString()}},StructTag=class{constructor(e,a,t,c){this.address=e,this.module_name=a,this.name=t,this.type_args=c}static fromString(e){if(e.includes("<"))throw new Error("Not implemented");const a=e.split("::");if(a.length!==3)throw new Error("Invalid struct tag string literal.");return new StructTag(AccountAddress.fromHex(a[0]),new Identifier(a[1]),new Identifier(a[2]),[])}serialize(e){this.address.serialize(e),this.module_name.serialize(e),this.name.serialize(e),serializeVector(this.type_args,e)}static deserialize(e){const a=AccountAddress.deserialize(e),t=Identifier.deserialize(e),c=Identifier.deserialize(e),i=deserializeVector(e,TypeTag);return new StructTag(a,t,c,i)}},RawTransaction=class{constructor(e,a,t,c,i,o,b){this.sender=e,this.sequence_number=a,this.payload=t,this.max_gas_amount=c,this.gas_unit_price=i,this.expiration_timestamp_secs=o,this.chain_id=b}serialize(e){this.sender.serialize(e),e.serializeU64(this.sequence_number),this.payload.serialize(e),e.serializeU64(this.max_gas_amount),e.serializeU64(this.gas_unit_price),e.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(e)}static deserialize(e){const a=AccountAddress.deserialize(e),t=e.deserializeU64(),c=TransactionPayload.deserialize(e),i=e.deserializeU64(),o=e.deserializeU64(),b=e.deserializeU64(),u=ChainId.deserialize(e);return new RawTransaction(a,t,c,i,o,b,u)}},Script=class{constructor(e,a,t){this.code=e,this.ty_args=a,this.args=t}serialize(e){e.serializeBytes(this.code),serializeVector(this.ty_args,e),serializeVector(this.args,e)}static deserialize(e){const a=e.deserializeBytes(),t=deserializeVector(e,TypeTag),c=deserializeVector(e,TransactionArgument);return new Script(a,t,c)}},EntryFunction=class{constructor(e,a,t,c){this.module_name=e,this.function_name=a,this.ty_args=t,this.args=c}static natural(e,a,t,c){return new EntryFunction(ModuleId.fromStr(e),new Identifier(a),t,c)}static natual(e,a,t,c){return EntryFunction.natural(e,a,t,c)}serialize(e){this.module_name.serialize(e),this.function_name.serialize(e),serializeVector(this.ty_args,e),e.serializeU32AsUleb128(this.args.length),this.args.forEach(a=>{e.serializeBytes(a)})}static deserialize(e){const a=ModuleId.deserialize(e),t=Identifier.deserialize(e),c=deserializeVector(e,TypeTag),i=e.deserializeUleb128AsU32(),o=[];for(let u=0;u<i;u+=1)o.push(e.deserializeBytes());const b=o;return new EntryFunction(a,t,c,b)}},MultiSigTransactionPayload=class{constructor(e){this.transaction_payload=e}serialize(e){e.serializeU32AsUleb128(0),this.transaction_payload.serialize(e)}static deserialize(e){return new MultiSigTransactionPayload(EntryFunction.deserialize(e))}},MultiSig=class{constructor(e,a){this.multisig_address=e,this.transaction_payload=a}serialize(e){this.multisig_address.serialize(e),this.transaction_payload===void 0?e.serializeBool(!1):(e.serializeBool(!0),this.transaction_payload.serialize(e))}static deserialize(e){const a=AccountAddress.deserialize(e),t=e.deserializeBool();let c;return t&&(c=MultiSigTransactionPayload.deserialize(e)),new MultiSig(a,c)}},Module=class{constructor(e){this.code=e}serialize(e){e.serializeBytes(this.code)}static deserialize(e){const a=e.deserializeBytes();return new Module(a)}},ModuleId=class{constructor(e,a){this.address=e,this.name=a}static fromStr(e){const a=e.split("::");if(a.length!==2)throw new Error("Invalid module id.");return new ModuleId(AccountAddress.fromHex(new HexString(a[0])),new Identifier(a[1]))}serialize(e){this.address.serialize(e),this.name.serialize(e)}static deserialize(e){const a=AccountAddress.deserialize(e),t=Identifier.deserialize(e);return new ModuleId(a,t)}},ChangeSet=class{serialize(e){throw new Error("Not implemented.")}static deserialize(e){throw new Error("Not implemented.")}},WriteSet=class{serialize(e){throw new Error("Not implmented.")}static deserialize(e){throw new Error("Not implmented.")}},SignedTransaction=class{constructor(e,a){this.raw_txn=e,this.authenticator=a}serialize(e){this.raw_txn.serialize(e),this.authenticator.serialize(e)}static deserialize(e){const a=RawTransaction.deserialize(e),t=TransactionAuthenticator.deserialize(e);return new SignedTransaction(a,t)}},RawTransactionWithData=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return MultiAgentRawTransaction.load(e);default:throw new Error(`Unknown variant index for RawTransactionWithData: ${a}`)}}},MultiAgentRawTransaction=class extends RawTransactionWithData{constructor(e,a){super(),this.raw_txn=e,this.secondary_signer_addresses=a}serialize(e){e.serializeU32AsUleb128(0),this.raw_txn.serialize(e),serializeVector(this.secondary_signer_addresses,e)}static load(e){const a=RawTransaction.deserialize(e),t=deserializeVector(e,AccountAddress);return new MultiAgentRawTransaction(a,t)}},TransactionPayload=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return TransactionPayloadScript.load(e);case 2:return TransactionPayloadEntryFunction.load(e);case 3:return TransactionPayloadMultisig.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${a}`)}}},TransactionPayloadScript=class extends TransactionPayload{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){const a=Script.deserialize(e);return new TransactionPayloadScript(a)}},TransactionPayloadEntryFunction=class extends TransactionPayload{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),this.value.serialize(e)}static load(e){const a=EntryFunction.deserialize(e);return new TransactionPayloadEntryFunction(a)}},TransactionPayloadMultisig=class extends TransactionPayload{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const a=MultiSig.deserialize(e);return new TransactionPayloadMultisig(a)}},ChainId=class{constructor(e){this.value=e}serialize(e){e.serializeU8(this.value)}static deserialize(e){const a=e.deserializeU8();return new ChainId(a)}},TransactionArgument=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return TransactionArgumentU8.load(e);case 1:return TransactionArgumentU64.load(e);case 2:return TransactionArgumentU128.load(e);case 3:return TransactionArgumentAddress.load(e);case 4:return TransactionArgumentU8Vector.load(e);case 5:return TransactionArgumentBool.load(e);case 6:return TransactionArgumentU16.load(e);case 7:return TransactionArgumentU32.load(e);case 8:return TransactionArgumentU256.load(e);default:throw new Error(`Unknown variant index for TransactionArgument: ${a}`)}}},TransactionArgumentU8=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),e.serializeU8(this.value)}static load(e){const a=e.deserializeU8();return new TransactionArgumentU8(a)}},TransactionArgumentU16=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),e.serializeU16(this.value)}static load(e){const a=e.deserializeU16();return new TransactionArgumentU16(a)}},TransactionArgumentU32=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),e.serializeU32(this.value)}static load(e){const a=e.deserializeU32();return new TransactionArgumentU32(a)}},TransactionArgumentU64=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(1),e.serializeU64(this.value)}static load(e){const a=e.deserializeU64();return new TransactionArgumentU64(a)}},TransactionArgumentU128=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),e.serializeU128(this.value)}static load(e){const a=e.deserializeU128();return new TransactionArgumentU128(a)}},TransactionArgumentU256=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(8),e.serializeU256(this.value)}static load(e){const a=e.deserializeU256();return new TransactionArgumentU256(a)}},TransactionArgumentAddress=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const a=AccountAddress.deserialize(e);return new TransactionArgumentAddress(a)}},TransactionArgumentU8Vector=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(4),e.serializeBytes(this.value)}static load(e){const a=e.deserializeBytes();return new TransactionArgumentU8Vector(a)}},TransactionArgumentBool=class extends TransactionArgument{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(5),e.serializeBool(this.value)}static load(e){const a=e.deserializeBool();return new TransactionArgumentBool(a)}},Transaction$4=class{getHashSalt(){const a=sha3_256.create();return a.update("APTOS::Transaction"),a.digest()}static deserialize(a){const t=a.deserializeUleb128AsU32();switch(t){case 0:return UserTransaction.load(a);default:throw new Error(`Unknown variant index for Transaction: ${t}`)}}},UserTransaction=class extends Transaction$4{constructor(e){super(),this.value=e}hash(){const e=sha3_256.create();return e.update(this.getHashSalt()),e.update(bcsToBytes(this)),e.digest()}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){return new UserTransaction(SignedTransaction.deserialize(e))}},TypeArgumentABI=class{constructor(e){this.name=e}serialize(e){e.serializeStr(this.name)}static deserialize(e){const a=e.deserializeStr();return new TypeArgumentABI(a)}},ArgumentABI=class{constructor(e,a){this.name=e,this.type_tag=a}serialize(e){e.serializeStr(this.name),this.type_tag.serialize(e)}static deserialize(e){const a=e.deserializeStr(),t=TypeTag.deserialize(e);return new ArgumentABI(a,t)}},ScriptABI=class{static deserialize(e){const a=e.deserializeUleb128AsU32();switch(a){case 0:return TransactionScriptABI.load(e);case 1:return EntryFunctionABI.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${a}`)}}},TransactionScriptABI=class extends ScriptABI{constructor(e,a,t,c,i){super(),this.name=e,this.doc=a,this.code=t,this.ty_args=c,this.args=i}serialize(e){e.serializeU32AsUleb128(0),e.serializeStr(this.name),e.serializeStr(this.doc),e.serializeBytes(this.code),serializeVector(this.ty_args,e),serializeVector(this.args,e)}static load(e){const a=e.deserializeStr(),t=e.deserializeStr(),c=e.deserializeBytes(),i=deserializeVector(e,TypeArgumentABI),o=deserializeVector(e,ArgumentABI);return new TransactionScriptABI(a,t,c,i,o)}},EntryFunctionABI=class extends ScriptABI{constructor(e,a,t,c,i){super(),this.name=e,this.module_name=a,this.doc=t,this.ty_args=c,this.args=i}serialize(e){e.serializeU32AsUleb128(1),e.serializeStr(this.name),this.module_name.serialize(e),e.serializeStr(this.doc),serializeVector(this.ty_args,e),serializeVector(this.args,e)}static load(e){const a=e.deserializeStr(),t=ModuleId.deserialize(e),c=e.deserializeStr(),i=deserializeVector(e,TypeArgumentABI),o=deserializeVector(e,ArgumentABI);return new EntryFunctionABI(a,t,c,i,o)}},_AuthenticationKey=class{constructor(e){if(e.length!==_AuthenticationKey.LENGTH)throw new Error("Expected a byte array of length 32");this.bytes=e}static fromMultiEd25519PublicKey(e){const a=e.toBytes(),t=new Uint8Array(a.length+1);t.set(a),t.set([_AuthenticationKey.MULTI_ED25519_SCHEME],a.length);const c=sha3_256.create();return c.update(t),new _AuthenticationKey(c.digest())}static fromEd25519PublicKey(e){const a=e.value,t=new Uint8Array(a.length+1);t.set(a),t.set([_AuthenticationKey.ED25519_SCHEME],a.length);const c=sha3_256.create();return c.update(t),new _AuthenticationKey(c.digest())}derivedAddress(){return HexString.fromUint8Array(this.bytes)}},AuthenticationKey=_AuthenticationKey;AuthenticationKey.LENGTH=32;AuthenticationKey.MULTI_ED25519_SCHEME=1;AuthenticationKey.ED25519_SCHEME=0;AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME=255;var RotationProofChallenge=class{constructor(e,a,t,c,i,o,b){this.accountAddress=e,this.moduleName=a,this.structName=t,this.sequenceNumber=c,this.originator=i,this.currentAuthKey=o,this.newPublicKey=b}serialize(e){this.accountAddress.serialize(e),e.serializeStr(this.moduleName),e.serializeStr(this.structName),e.serializeU64(this.sequenceNumber),this.originator.serialize(e),this.currentAuthKey.serialize(e),e.serializeBytes(this.newPublicKey)}},_AptosAccount=class{static fromAptosAccountObject(e){return new _AptosAccount(HexString.ensure(e.privateKeyHex).toUint8Array(),e.address)}static fromDerivePath(e,a){if(!_AptosAccount.isValidPath(e))throw new Error("Invalid derivation path");const t=a.trim().split(/\s+/).map(i=>i.toLowerCase()).join(" "),{key:c}=derivePath(e,bytesToHex$2(mnemonicToSeedSync_1(t)));return new _AptosAccount(c)}constructor(e,a){e?this.signingKey=naclFastExports.sign.keyPair.fromSeed(e.slice(0,32)):this.signingKey=naclFastExports.sign.keyPair(),this.accountAddress=HexString.ensure(a||this.authKey().hex())}address(){return this.accountAddress}authKey(){const e=new Ed25519PublicKey(this.signingKey.publicKey);return AuthenticationKey.fromEd25519PublicKey(e).derivedAddress()}static getResourceAccountAddress(e,a){const t=bcsToBytes(AccountAddress.fromHex(e)),c=new Uint8Array([...t,...a,AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME]),i=sha3_256.create();return i.update(c),HexString.fromUint8Array(i.digest())}pubKey(){return HexString.fromUint8Array(this.signingKey.publicKey)}signBuffer(e){const a=naclFastExports.sign(e,this.signingKey.secretKey);return HexString.fromUint8Array(a.slice(0,64))}signHexString(e){const a=HexString.ensure(e).toUint8Array();return this.signBuffer(a)}toPrivateKeyObject(){return{address:this.address().hex(),publicKeyHex:this.pubKey().hex(),privateKeyHex:HexString.fromUint8Array(this.signingKey.secretKey.slice(0,32)).hex()}}},AptosAccount=_AptosAccount;AptosAccount.isValidPath=e=>!!/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e);__decorateClass([Memoize()],AptosAccount.prototype,"authKey",1);var TokenDataFieldsFragmentDoc=`
    fragment TokenDataFields on current_token_datas {
  creator_address
  collection_name
  description
  metadata_uri
  name
  token_data_id_hash
  collection_data_id_hash
}
    `,CollectionDataFieldsFragmentDoc=`
    fragment CollectionDataFields on current_collection_datas {
  metadata_uri
  supply
  description
  collection_name
  collection_data_id_hash
  table_handle
  creator_address
}
    `,GetAccountCurrentTokens=`
    query getAccountCurrentTokens($address: String!, $offset: Int, $limit: Int) {
  current_token_ownerships(
    where: {owner_address: {_eq: $address}, amount: {_gt: 0}}
    order_by: [{last_transaction_version: desc}, {creator_address: asc}, {collection_name: asc}, {name: asc}]
    offset: $offset
    limit: $limit
  ) {
    amount
    current_token_data {
      ...TokenDataFields
    }
    current_collection_data {
      ...CollectionDataFields
    }
    last_transaction_version
    property_version
  }
}
    ${TokenDataFieldsFragmentDoc}
${CollectionDataFieldsFragmentDoc}`,GetIndexerLedgerInfo=`
    query getIndexerLedgerInfo {
  ledger_infos {
    chain_id
  }
}
    `,GetTokenActivities=`
    query getTokenActivities($idHash: String!) {
  token_activities(where: {token_data_id_hash: {_eq: $idHash}}) {
    creator_address
    collection_name
    name
    token_data_id_hash
    collection_data_id_hash
    from_address
    to_address
    transaction_version
    transaction_timestamp
    property_version
    transfer_type
    event_sequence_number
    token_amount
  }
}
    `,IndexerClient=class{constructor(e){this.endpoint=e}async queryIndexer(e){const{data:a}=await axios$1.post(this.endpoint,e);if(a.errors)throw new Error(`Indexer data error ${JSON.stringify(a.errors,null," ")}`);return a.data}async getIndexerLedgerInfo(){const e={query:GetIndexerLedgerInfo};return this.queryIndexer(e)}async getAccountNFTs(e,a){const t={query:GetAccountCurrentTokens,variables:{address:e,offset:a?.offset,limit:a?.limit}};return this.queryIndexer(t)}async getTokenActivities(e){const a={query:GetTokenActivities,variables:{idHash:e}};return this.queryIndexer(a)}},generated_exports={};__export(generated_exports,{$AccountData:()=>$AccountData,$AccountSignature:()=>$AccountSignature,$AccountSignature_Ed25519Signature:()=>$AccountSignature_Ed25519Signature,$AccountSignature_MultiEd25519Signature:()=>$AccountSignature_MultiEd25519Signature,$Address:()=>$Address,$AptosError:()=>$AptosError,$AptosErrorCode:()=>$AptosErrorCode,$Block:()=>$Block,$BlockMetadataTransaction:()=>$BlockMetadataTransaction,$DecodedTableData:()=>$DecodedTableData,$DeleteModule:()=>$DeleteModule,$DeleteResource:()=>$DeleteResource,$DeleteTableItem:()=>$DeleteTableItem,$DeletedTableData:()=>$DeletedTableData,$DirectWriteSet:()=>$DirectWriteSet,$Ed25519Signature:()=>$Ed25519Signature,$EncodeSubmissionRequest:()=>$EncodeSubmissionRequest,$EntryFunctionId:()=>$EntryFunctionId,$EntryFunctionPayload:()=>$EntryFunctionPayload,$Event:()=>$Event,$EventGuid:()=>$EventGuid,$GasEstimation:()=>$GasEstimation,$GenesisPayload:()=>$GenesisPayload,$GenesisPayload_WriteSetPayload:()=>$GenesisPayload_WriteSetPayload,$GenesisTransaction:()=>$GenesisTransaction,$HashValue:()=>$HashValue,$HealthCheckSuccess:()=>$HealthCheckSuccess,$HexEncodedBytes:()=>$HexEncodedBytes,$IdentifierWrapper:()=>$IdentifierWrapper,$IndexResponse:()=>$IndexResponse,$ModuleBundlePayload:()=>$ModuleBundlePayload,$MoveAbility:()=>$MoveAbility,$MoveFunction:()=>$MoveFunction,$MoveFunctionGenericTypeParam:()=>$MoveFunctionGenericTypeParam,$MoveFunctionVisibility:()=>$MoveFunctionVisibility,$MoveModule:()=>$MoveModule,$MoveModuleBytecode:()=>$MoveModuleBytecode,$MoveModuleId:()=>$MoveModuleId,$MoveResource:()=>$MoveResource,$MoveScriptBytecode:()=>$MoveScriptBytecode,$MoveStruct:()=>$MoveStruct,$MoveStructField:()=>$MoveStructField,$MoveStructGenericTypeParam:()=>$MoveStructGenericTypeParam,$MoveStructTag:()=>$MoveStructTag,$MoveStructValue:()=>$MoveStructValue,$MoveType:()=>$MoveType,$MoveValue:()=>$MoveValue,$MultiAgentSignature:()=>$MultiAgentSignature,$MultiEd25519Signature:()=>$MultiEd25519Signature,$MultisigPayload:()=>$MultisigPayload,$MultisigTransactionPayload:()=>$MultisigTransactionPayload,$PendingTransaction:()=>$PendingTransaction,$RawTableItemRequest:()=>$RawTableItemRequest,$RoleType:()=>$RoleType,$ScriptPayload:()=>$ScriptPayload,$ScriptWriteSet:()=>$ScriptWriteSet,$StateCheckpointTransaction:()=>$StateCheckpointTransaction,$StateKeyWrapper:()=>$StateKeyWrapper,$SubmitTransactionRequest:()=>$SubmitTransactionRequest,$TableItemRequest:()=>$TableItemRequest,$Transaction:()=>$Transaction,$TransactionPayload:()=>$TransactionPayload,$TransactionPayload_EntryFunctionPayload:()=>$TransactionPayload_EntryFunctionPayload,$TransactionPayload_ModuleBundlePayload:()=>$TransactionPayload_ModuleBundlePayload,$TransactionPayload_MultisigPayload:()=>$TransactionPayload_MultisigPayload,$TransactionPayload_ScriptPayload:()=>$TransactionPayload_ScriptPayload,$TransactionSignature:()=>$TransactionSignature,$TransactionSignature_Ed25519Signature:()=>$TransactionSignature_Ed25519Signature,$TransactionSignature_MultiAgentSignature:()=>$TransactionSignature_MultiAgentSignature,$TransactionSignature_MultiEd25519Signature:()=>$TransactionSignature_MultiEd25519Signature,$Transaction_BlockMetadataTransaction:()=>$Transaction_BlockMetadataTransaction,$Transaction_GenesisTransaction:()=>$Transaction_GenesisTransaction,$Transaction_PendingTransaction:()=>$Transaction_PendingTransaction,$Transaction_StateCheckpointTransaction:()=>$Transaction_StateCheckpointTransaction,$Transaction_UserTransaction:()=>$Transaction_UserTransaction,$TransactionsBatchSingleSubmissionFailure:()=>$TransactionsBatchSingleSubmissionFailure,$TransactionsBatchSubmissionResult:()=>$TransactionsBatchSubmissionResult,$U128:()=>$U128,$U256:()=>$U256,$U64:()=>$U64,$UserTransaction:()=>$UserTransaction,$VersionedEvent:()=>$VersionedEvent,$ViewRequest:()=>$ViewRequest,$WriteModule:()=>$WriteModule,$WriteResource:()=>$WriteResource,$WriteSet:()=>$WriteSet,$WriteSetChange:()=>$WriteSetChange,$WriteSetChange_DeleteModule:()=>$WriteSetChange_DeleteModule,$WriteSetChange_DeleteResource:()=>$WriteSetChange_DeleteResource,$WriteSetChange_DeleteTableItem:()=>$WriteSetChange_DeleteTableItem,$WriteSetChange_WriteModule:()=>$WriteSetChange_WriteModule,$WriteSetChange_WriteResource:()=>$WriteSetChange_WriteResource,$WriteSetChange_WriteTableItem:()=>$WriteSetChange_WriteTableItem,$WriteSetPayload:()=>$WriteSetPayload,$WriteSet_DirectWriteSet:()=>$WriteSet_DirectWriteSet,$WriteSet_ScriptWriteSet:()=>$WriteSet_ScriptWriteSet,$WriteTableItem:()=>$WriteTableItem,AccountsService:()=>AccountsService,ApiError:()=>ApiError,AptosErrorCode:()=>AptosErrorCode,AptosGeneratedClient:()=>AptosGeneratedClient,BaseHttpRequest:()=>BaseHttpRequest,BlocksService:()=>BlocksService,CancelError:()=>CancelError,CancelablePromise:()=>CancelablePromise,EventsService:()=>EventsService,GeneralService:()=>GeneralService,MoveFunctionVisibility:()=>MoveFunctionVisibility,OpenAPI:()=>OpenAPI,RoleType:()=>RoleType,TablesService:()=>TablesService,TransactionsService:()=>TransactionsService,ViewService:()=>ViewService});var BaseHttpRequest=class{constructor(e){this.config=e}},ApiError=class extends Error{constructor(e,a,t){super(t),this.name="ApiError",this.url=a.url,this.status=a.status,this.statusText=a.statusText,this.body=a.body,this.request=e}},CancelError=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},CancelablePromise=class{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this._cancelHandlers=[],this._promise=new Promise((a,t)=>{this._resolve=a,this._reject=t;const c=b=>{var u;this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,(u=this._resolve)==null||u.call(this,b))},i=b=>{var u;this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,(u=this._reject)==null||u.call(this,b))},o=b=>{this._isResolved||this._isRejected||this._isCancelled||this._cancelHandlers.push(b)};return Object.defineProperty(o,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(o,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(o,"isCancelled",{get:()=>this._isCancelled}),e(c,i,o)})}then(e,a){return this._promise.then(e,a)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(){var e;if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this._cancelHandlers.length)try{for(const a of this._cancelHandlers)a()}catch{return}this._cancelHandlers.length=0,(e=this._reject)==null||e.call(this,new CancelError("Request aborted"))}}get isCancelled(){return this._isCancelled}},CookieJar=class{constructor(e=new Map){this.jar=e}setCookie(e,a){var t;const c=e.origin.toLowerCase();this.jar.has(c)||this.jar.set(c,[]);const i=CookieJar.parse(a);this.jar.set(c,[...((t=this.jar.get(c))==null?void 0:t.filter(o=>o.name!==i.name))||[],i])}getCookies(e){var a;const t=e.origin.toLowerCase();return this.jar.get(t)?((a=this.jar.get(t))==null?void 0:a.filter(c=>!c.expires||c.expires>new Date))||[]:[]}static parse(e){if(typeof e!="string")throw new Error("argument str must be a string");const a=e.split(";").map(c=>c.trim());let t;if(a.length>0){const[c,i]=a[0].split("=");if(!c||!i)throw new Error("Invalid cookie");t={name:c,value:i}}else throw new Error("Invalid cookie");return a.slice(1).forEach(c=>{const[i,o]=c.split("=");if(!i.trim())throw new Error("Invalid cookie");const b=i.toLowerCase(),u=o?.charAt(0)==="'"||o?.charAt(0)==='"'?o?.slice(1,-1):o;if(b==="expires"&&(t.expires=new Date(u)),b==="path"&&(t.path=u),b==="samesite"){if(u!=="Lax"&&u!=="None"&&u!=="Strict")throw new Error("Invalid cookie SameSite value");t.sameSite=u}b==="secure"&&(t.secure=!0)}),t}},jar=new CookieJar;axios$1.interceptors.response.use(e=>(Array.isArray(e.headers["set-cookie"])&&e.headers["set-cookie"].forEach(a=>{jar.setCookie(new URL(e.config.url),a)}),e));axios$1.interceptors.request.use(function(e){const a=jar.getCookies(new URL(e.url));return a?.length>0&&e.headers&&(e.headers.cookie=a.map(t=>`${t.name}=${t.value}`).join("; ")),e});var isDefined=e=>e!=null,isString$2=e=>typeof e=="string",isStringWithValue=e=>isString$2(e)&&e!=="",isBlob=e=>typeof e=="object"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.arrayBuffer=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag]),isFormData=e=>e instanceof browser$2,isSuccess=e=>e>=200&&e<300,base64=e=>btoa(e),getQueryString=e=>{const a=[],t=(i,o)=>{a.push(`${encodeURIComponent(i)}=${encodeURIComponent(String(o))}`)},c=(i,o)=>{isDefined(o)&&(Array.isArray(o)?o.forEach(b=>{c(i,b)}):typeof o=="object"?Object.entries(o).forEach(([b,u])=>{c(`${i}[${b}]`,u)}):t(i,o))};return Object.entries(e).forEach(([i,o])=>{c(i,o)}),a.length>0?`?${a.join("&")}`:""},getUrl=(e,a)=>{const t=e.ENCODE_PATH||encodeURI,c=a.url.replace("{api-version}",e.VERSION).replace(/{(.*?)}/g,(o,b)=>{var u;return(u=a.path)!=null&&u.hasOwnProperty(b)?t(String(a.path[b])):o}),i=`${e.BASE}${c}`;return a.query?`${i}${getQueryString(a.query)}`:i},getFormData=e=>{if(e.formData){const a=new browser$2,t=(c,i)=>{isString$2(i)||isBlob(i)?a.append(c,i):a.append(c,JSON.stringify(i))};return Object.entries(e.formData).filter(([c,i])=>isDefined(i)).forEach(([c,i])=>{Array.isArray(i)?i.forEach(o=>t(c,o)):t(c,i)}),a}},resolve$2=async(e,a)=>typeof a=="function"?a(e):a,getHeaders=async(e,a,t)=>{const c=await resolve$2(a,e.TOKEN),i=await resolve$2(a,e.USERNAME),o=await resolve$2(a,e.PASSWORD),b=await resolve$2(a,e.HEADERS),u=typeof t?.getHeaders=="function"&&t?.getHeaders()||{},l=Object.entries({Accept:"application/json",...b,...a.headers,...u}).filter(([x,g])=>isDefined(g)).reduce((x,[g,v])=>({...x,[g]:String(v)}),{});if(isStringWithValue(c)&&(l.Authorization=`Bearer ${c}`),isStringWithValue(i)&&isStringWithValue(o)){const x=base64(`${i}:${o}`);l.Authorization=`Basic ${x}`}return a.body&&(a.mediaType?l["Content-Type"]=a.mediaType:isBlob(a.body)?l["Content-Type"]=a.body.type||"application/octet-stream":isString$2(a.body)?l["Content-Type"]="text/plain":isFormData(a.body)||(l["Content-Type"]="application/json")),l},getRequestBody=e=>{if(e.body)return e.body},sendRequest=async(e,a,t,c,i,o,b)=>{const u=axios$1.CancelToken.source(),l={url:t,headers:o,data:c??i,method:a.method,withCredentials:e.WITH_CREDENTIALS,cancelToken:u.token};Object.keys(e.HEADERS||{}).filter(g=>g.toLowerCase()==="accept").map(g=>e.HEADERS[g]).includes("application/x-bcs")&&(l.responseType="arraybuffer"),b(()=>u.cancel("The user aborted a request."));try{return await axios$1.request(l)}catch(g){const v=g;if(v.response)return v.response;throw g}},getResponseHeader=(e,a)=>{if(a){const t=e.headers[a];if(isString$2(t))return t}},getResponseBody=e=>{if(e.status!==204)return e.data},catchErrorCodes=(e,a)=>{const c={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",429:"Too Many Requests",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...e.errors}[a.status];if(c)throw new ApiError(e,a,c);if(!a.ok)throw new ApiError(e,a,"Generic Error")},request$4=(e,a)=>new CancelablePromise(async(t,c,i)=>{try{const o=getUrl(e,a),b=getFormData(a),u=getRequestBody(a),l=await getHeaders(e,a,b);if(!i.isCancelled){const x=await sendRequest(e,a,o,u,b,l,i),g=getResponseBody(x),v=getResponseHeader(x,a.responseHeader),E={url:o,ok:isSuccess(x.status),status:x.status,statusText:x.statusText,body:v??g};catchErrorCodes(a,E);const S=E.body;try{S.__headers=x.headers}catch{}t(S)}}catch(o){c(o)}}),AxiosHttpRequest=class extends BaseHttpRequest{constructor(e){super(e)}request(e){return request$4(this.config,e)}},AccountsService=class{constructor(e){this.httpRequest=e}getAccount(e,a){return this.httpRequest.request({method:"GET",url:"/accounts/{address}",path:{address:e},query:{ledger_version:a}})}getAccountResources(e,a,t,c){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resources",path:{address:e},query:{ledger_version:a,start:t,limit:c}})}getAccountModules(e,a,t,c){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/modules",path:{address:e},query:{ledger_version:a,start:t,limit:c}})}getAccountResource(e,a,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resource/{resource_type}",path:{address:e,resource_type:a},query:{ledger_version:t}})}getAccountModule(e,a,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/module/{module_name}",path:{address:e,module_name:a},query:{ledger_version:t}})}},BlocksService=class{constructor(e){this.httpRequest=e}getBlockByHeight(e,a){return this.httpRequest.request({method:"GET",url:"/blocks/by_height/{block_height}",path:{block_height:e},query:{with_transactions:a}})}getBlockByVersion(e,a){return this.httpRequest.request({method:"GET",url:"/blocks/by_version/{version}",path:{version:e},query:{with_transactions:a}})}},EventsService=class{constructor(e){this.httpRequest=e}getEventsByCreationNumber(e,a,t,c){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{creation_number}",path:{address:e,creation_number:a},query:{start:t,limit:c}})}getEventsByEventHandle(e,a,t,c,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{event_handle}/{field_name}",path:{address:e,event_handle:a,field_name:t},query:{start:c,limit:i}})}},GeneralService=class{constructor(e){this.httpRequest=e}spec(){return this.httpRequest.request({method:"GET",url:"/spec"})}healthy(e){return this.httpRequest.request({method:"GET",url:"/-/healthy",query:{duration_secs:e}})}getLedgerInfo(){return this.httpRequest.request({method:"GET",url:"/"})}},TablesService=class{constructor(e){this.httpRequest=e}getTableItem(e,a,t){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/item",path:{table_handle:e},query:{ledger_version:t},body:a,mediaType:"application/json"})}getRawTableItem(e,a,t){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/raw_item",path:{table_handle:e},query:{ledger_version:t},body:a,mediaType:"application/json"})}},TransactionsService=class{constructor(e){this.httpRequest=e}getTransactions(e,a){return this.httpRequest.request({method:"GET",url:"/transactions",query:{start:e,limit:a}})}submitTransaction(e){return this.httpRequest.request({method:"POST",url:"/transactions",body:e,mediaType:"application/json"})}getTransactionByHash(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_hash/{txn_hash}",path:{txn_hash:e}})}getTransactionByVersion(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_version/{txn_version}",path:{txn_version:e}})}getAccountTransactions(e,a,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/transactions",path:{address:e},query:{start:a,limit:t}})}submitBatchTransactions(e){return this.httpRequest.request({method:"POST",url:"/transactions/batch",body:e,mediaType:"application/json"})}simulateTransaction(e,a,t,c){return this.httpRequest.request({method:"POST",url:"/transactions/simulate",query:{estimate_max_gas_amount:a,estimate_gas_unit_price:t,estimate_prioritized_gas_unit_price:c},body:e,mediaType:"application/json"})}encodeSubmission(e){return this.httpRequest.request({method:"POST",url:"/transactions/encode_submission",body:e,mediaType:"application/json"})}estimateGasPrice(){return this.httpRequest.request({method:"GET",url:"/estimate_gas_price"})}},ViewService=class{constructor(e){this.httpRequest=e}view(e,a){return this.httpRequest.request({method:"POST",url:"/view",query:{ledger_version:a},body:e,mediaType:"application/json"})}},AptosGeneratedClient=class{constructor(e,a=AxiosHttpRequest){var t,c,i,o;this.request=new a({BASE:(t=e?.BASE)!=null?t:"/v1",VERSION:(c=e?.VERSION)!=null?c:"1.2.0",WITH_CREDENTIALS:(i=e?.WITH_CREDENTIALS)!=null?i:!1,CREDENTIALS:(o=e?.CREDENTIALS)!=null?o:"include",TOKEN:e?.TOKEN,USERNAME:e?.USERNAME,PASSWORD:e?.PASSWORD,HEADERS:e?.HEADERS,ENCODE_PATH:e?.ENCODE_PATH}),this.accounts=new AccountsService(this.request),this.blocks=new BlocksService(this.request),this.events=new EventsService(this.request),this.general=new GeneralService(this.request),this.tables=new TablesService(this.request),this.transactions=new TransactionsService(this.request),this.view=new ViewService(this.request)}},OpenAPI={BASE:"/v1",VERSION:"1.2.0",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0},AptosErrorCode=(e=>(e.ACCOUNT_NOT_FOUND="account_not_found",e.RESOURCE_NOT_FOUND="resource_not_found",e.MODULE_NOT_FOUND="module_not_found",e.STRUCT_FIELD_NOT_FOUND="struct_field_not_found",e.VERSION_NOT_FOUND="version_not_found",e.TRANSACTION_NOT_FOUND="transaction_not_found",e.TABLE_ITEM_NOT_FOUND="table_item_not_found",e.BLOCK_NOT_FOUND="block_not_found",e.VERSION_PRUNED="version_pruned",e.BLOCK_PRUNED="block_pruned",e.INVALID_INPUT="invalid_input",e.INVALID_TRANSACTION_UPDATE="invalid_transaction_update",e.SEQUENCE_NUMBER_TOO_OLD="sequence_number_too_old",e.VM_ERROR="vm_error",e.HEALTH_CHECK_FAILED="health_check_failed",e.MEMPOOL_IS_FULL="mempool_is_full",e.INTERNAL_ERROR="internal_error",e.WEB_FRAMEWORK_ERROR="web_framework_error",e.BCS_NOT_SUPPORTED="bcs_not_supported",e.API_DISABLED="api_disabled",e))(AptosErrorCode||{}),MoveFunctionVisibility=(e=>(e.PRIVATE="private",e.PUBLIC="public",e.FRIEND="friend",e))(MoveFunctionVisibility||{}),RoleType=(e=>(e.VALIDATOR="validator",e.FULL_NODE="full_node",e))(RoleType||{}),$AccountData={description:`Account data

    A simplified version of the onchain Account resource`,properties:{sequence_number:{type:"U64",isRequired:!0},authentication_key:{type:"HexEncodedBytes",isRequired:!0}}},$AccountSignature={type:"one-of",description:`Account signature scheme

    The account signature scheme allows you to have two types of accounts:

    1. A single Ed25519 key account, one private key
    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.`,contains:[{type:"AccountSignature_Ed25519Signature"},{type:"AccountSignature_MultiEd25519Signature"}]},$AccountSignature_Ed25519Signature={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},$AccountSignature_MultiEd25519Signature={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},$Address={type:"string",description:`A hex encoded 32 byte Aptos account address.

    This is represented in a string as a 64 character hex string, sometimes
    shortened by stripping leading 0s, and adding a 0x.

    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.
    `,format:"hex"},$AptosError={description:`This is the generic struct we use for all API errors, it contains a string
    message and an Aptos API specific error code.`,properties:{message:{type:"string",description:"A message describing the error",isRequired:!0},error_code:{type:"AptosErrorCode",isRequired:!0},vm_error_code:{type:"number",description:"A code providing VM error details when submitting transactions to the VM",format:"uint64"}}},$AptosErrorCode={type:"Enum"},$Block={description:`A Block with or without transactions

    This contains the information about a transactions along with
    associated transactions if requested`,properties:{block_height:{type:"U64",isRequired:!0},block_hash:{type:"HashValue",isRequired:!0},block_timestamp:{type:"U64",isRequired:!0},first_version:{type:"U64",isRequired:!0},last_version:{type:"U64",isRequired:!0},transactions:{type:"array",contains:{type:"Transaction"}}}},$BlockMetadataTransaction={description:`A block metadata transaction

    This signifies the beginning of a block, and contains information
    about the specific block`,properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},id:{type:"HashValue",isRequired:!0},epoch:{type:"U64",isRequired:!0},round:{type:"U64",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0},previous_block_votes_bitvec:{type:"array",contains:{type:"number",format:"uint8"},isRequired:!0},proposer:{type:"Address",isRequired:!0},failed_proposer_indices:{type:"array",contains:{type:"number",format:"uint32"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},$DecodedTableData={description:"Decoded table data",properties:{key:{description:"Key of table in JSON",properties:{},isRequired:!0},key_type:{type:"string",description:"Type of key",isRequired:!0},value:{description:"Value of table in JSON",properties:{},isRequired:!0},value_type:{type:"string",description:"Type of value",isRequired:!0}}},$DeletedTableData={description:"Deleted table data",properties:{key:{description:"Deleted key",properties:{},isRequired:!0},key_type:{type:"string",description:"Deleted key type",isRequired:!0}}},$DeleteModule={description:"Delete a module",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},module:{type:"MoveModuleId",isRequired:!0}}},$DeleteResource={description:"Delete a resource",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},resource:{type:"MoveStructTag",isRequired:!0}}},$DeleteTableItem={description:"Delete a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DeletedTableData"}}},$DirectWriteSet={properties:{changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},$Ed25519Signature={description:"A single Ed25519 signature",properties:{public_key:{type:"HexEncodedBytes",isRequired:!0},signature:{type:"HexEncodedBytes",isRequired:!0}}},$EncodeSubmissionRequest={description:"Request to encode a submission",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},secondary_signers:{type:"array",contains:{type:"Address"}}}},$EntryFunctionId={type:"string",description:"Entry function id is string representation of a entry function defined on-chain.\n\n    Format: `{address}::{module name}::{function name}`\n\n    Both `module name` and `function name` are case-sensitive.\n    "},$EntryFunctionPayload={description:"Payload which runs a single entry function",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},$Event={description:"An event from a transaction",properties:{guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},$EventGuid={properties:{creation_number:{type:"U64",isRequired:!0},account_address:{type:"Address",isRequired:!0}}},$GasEstimation={description:"Struct holding the outputs of the estimate gas API",properties:{deprioritized_gas_estimate:{type:"number",description:"The deprioritized estimate for the gas unit price",format:"uint64"},gas_estimate:{type:"number",description:"The current estimate for the gas unit price",isRequired:!0,format:"uint64"},prioritized_gas_estimate:{type:"number",description:"The prioritized estimate for the gas unit price",format:"uint64"}}},$GenesisPayload={type:"one-of",description:"The writeset payload of the Genesis transaction",contains:[{type:"GenesisPayload_WriteSetPayload"}]},$GenesisPayload_WriteSetPayload={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteSetPayload"}]},$GenesisTransaction={description:`The genesis transaction

    This only occurs at the genesis transaction (version 0)`,properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},payload:{type:"GenesisPayload",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},$HashValue={type:"string"},$HealthCheckSuccess={description:"Representation of a successful healthcheck",properties:{message:{type:"string",isRequired:!0}}},$HexEncodedBytes={type:"string",description:"All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the `Address` type, HexEncodedBytes will not trim any zeros.\n    ",format:"hex"},$IdentifierWrapper={type:"string"},$IndexResponse={description:`The struct holding all data returned to the client by the
    index endpoint (i.e., GET "/").  Only for responding in JSON`,properties:{chain_id:{type:"number",description:"Chain ID of the current chain",isRequired:!0,format:"uint8"},epoch:{type:"U64",isRequired:!0},ledger_version:{type:"U64",isRequired:!0},oldest_ledger_version:{type:"U64",isRequired:!0},ledger_timestamp:{type:"U64",isRequired:!0},node_role:{type:"RoleType",isRequired:!0},oldest_block_height:{type:"U64",isRequired:!0},block_height:{type:"U64",isRequired:!0},git_hash:{type:"string",description:`Git hash of the build of the API endpoint.  Can be used to determine the exact
            software version used by the API endpoint.`}}},$ModuleBundlePayload={properties:{modules:{type:"array",contains:{type:"MoveModuleBytecode"},isRequired:!0}}},$MoveAbility={type:"string"},$MoveFunction={description:"Move function",properties:{name:{type:"IdentifierWrapper",isRequired:!0},visibility:{type:"MoveFunctionVisibility",isRequired:!0},is_entry:{type:"boolean",description:"Whether the function can be called as an entry function directly in a transaction",isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveFunctionGenericTypeParam"},isRequired:!0},params:{type:"array",contains:{type:"MoveType"},isRequired:!0},return:{type:"array",contains:{type:"MoveType"},isRequired:!0}}},$MoveFunctionGenericTypeParam={description:"Move function generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},$MoveFunctionVisibility={type:"Enum"},$MoveModule={description:"A Move module",properties:{address:{type:"Address",isRequired:!0},name:{type:"IdentifierWrapper",isRequired:!0},friends:{type:"array",contains:{type:"MoveModuleId"},isRequired:!0},exposed_functions:{type:"array",contains:{type:"MoveFunction"},isRequired:!0},structs:{type:"array",contains:{type:"MoveStruct"},isRequired:!0}}},$MoveModuleBytecode={description:"Move module bytecode along with it's ABI",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveModule"}}},$MoveModuleId={type:"string",description:`Move module id is a string representation of Move module.

    Format: \`{address}::{module name}\`

    \`address\` should be hex-encoded 32 byte account address that is prefixed with \`0x\`.

    Module name is case-sensitive.
    `},$MoveResource={description:"A parsed Move resource",properties:{type:{type:"MoveStructTag",isRequired:!0},data:{type:"MoveStructValue",isRequired:!0}}},$MoveScriptBytecode={description:"Move script bytecode",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveFunction"}}},$MoveStruct={description:"A move struct",properties:{name:{type:"IdentifierWrapper",isRequired:!0},is_native:{type:"boolean",description:"Whether the struct is a native struct of Move",isRequired:!0},abilities:{type:"array",contains:{type:"MoveAbility"},isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveStructGenericTypeParam"},isRequired:!0},fields:{type:"array",contains:{type:"MoveStructField"},isRequired:!0}}},$MoveStructField={description:"Move struct field",properties:{name:{type:"IdentifierWrapper",isRequired:!0},type:{type:"MoveType",isRequired:!0}}},$MoveStructGenericTypeParam={description:"Move generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},$MoveStructTag={type:"string",description:"String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`\n    2. `struct generic type parameters` joined by `, `\n\n    Examples:\n     * `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`\n     * `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/accounts) for more details.\n    ",pattern:"^0x[0-9a-zA-Z:_<>]+$"},$MoveStructValue={description:'This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move `bool` type value is serialized into `boolean`.\n\n    Move `u8`, `u16` and `u32` type value is serialized into `integer`.\n\n    Move `u64`, `u128` and `u256` type value is serialized into `string`.\n\n    Move `address` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - `0x1`\n    - `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\n    Move `vector` type value is serialized into `array`, except `vector<u8>` which is serialized into a\n    HexEncodedBytes string with `0x` prefix.\n    For example:\n    - `vector<u64>{255, 255}` => `["255", "255"]`\n    - `vector<u8>{255, 255}` => `0xffff`\n\n    Move `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n    ```json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    ```\n\n    For example:\n    `{ "created": "0xa550c18", "role_id": "0" }`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into `string`. For example, struct value `0x1::string::String{bytes: b"Hello World!"}`\n    is serialized as `"Hello World!"` in JSON.\n    ',properties:{}},$MoveType={type:"string",description:`String representation of an on-chain Move type tag that is exposed in transaction payload.
    Values:
    - bool
    - u8
    - u16
    - u32
    - u64
    - u128
    - u256
    - address
    - signer
    - vector: \`vector<{non-reference MoveTypeId}>\`
    - struct: \`{address}::{module_name}::{struct_name}::<{generic types}>\`

    Vector type value examples:
    - \`vector<u8>\`
    - \`vector<vector<u64>>\`
    - \`vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>\`

    Struct type value examples:
    - \`0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>
    - \`0x1::account::Account\`

    Note:
    1. Empty chars should be ignored when comparing 2 struct tag ids.
    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).
    `,pattern:"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$"},$MoveValue={type:"any-of",description:"An enum of the possible Move value types",contains:[{type:"number",format:"uint8"},{type:"number",format:"uint16"},{type:"number",format:"uint32"},{type:"U64"},{type:"U128"},{type:"U256"},{type:"boolean"},{type:"Address"},{type:"array",contains:{type:"MoveValue"}},{type:"HexEncodedBytes"},{type:"MoveStructValue"},{type:"string"}]},$MultiAgentSignature={description:`Multi agent signature for multi agent transactions

    This allows you to have transactions across multiple accounts`,properties:{sender:{type:"AccountSignature",isRequired:!0},secondary_signer_addresses:{type:"array",contains:{type:"Address"},isRequired:!0},secondary_signers:{type:"array",contains:{type:"AccountSignature"},isRequired:!0}}},$MultiEd25519Signature={description:`A Ed25519 multi-sig signature

    This allows k-of-n signing for a transaction`,properties:{public_keys:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},signatures:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},threshold:{type:"number",description:"The number of signatures required for a successful transaction",isRequired:!0,format:"uint8"},bitmap:{type:"HexEncodedBytes",isRequired:!0}}},$MultisigPayload={description:`A multisig transaction that allows an owner of a multisig account to execute a pre-approved
    transaction as the multisig account.`,properties:{multisig_address:{type:"Address",isRequired:!0},transaction_payload:{type:"MultisigTransactionPayload"}}},$MultisigTransactionPayload={type:"any-of",contains:[{type:"EntryFunctionPayload"}]},$PendingTransaction={description:"A transaction waiting in mempool",properties:{hash:{type:"HashValue",isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"}}},$RawTableItemRequest={description:"Table Item request for the GetTableItemRaw API",properties:{key:{type:"HexEncodedBytes",isRequired:!0}}},$RoleType={type:"Enum"},$ScriptPayload={description:"Payload which runs a script that can run multiple functions",properties:{code:{type:"MoveScriptBytecode",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},$ScriptWriteSet={properties:{execute_as:{type:"Address",isRequired:!0},script:{type:"ScriptPayload",isRequired:!0}}},$StateCheckpointTransaction={description:"A state checkpoint transaction",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},$StateKeyWrapper={type:"string",description:`Representation of a StateKey as a hex string. This is used for cursor based pagination.
    `},$SubmitTransactionRequest={description:`A request to submit a transaction

    This requires a transaction and a signature of it`,properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature",isRequired:!0}}},$TableItemRequest={description:"Table Item request for the GetTableItem API",properties:{key_type:{type:"MoveType",isRequired:!0},value_type:{type:"MoveType",isRequired:!0},key:{description:"The value of the table item's key",properties:{},isRequired:!0}}},$Transaction={type:"one-of",description:"Enum of the different types of transactions in Aptos",contains:[{type:"Transaction_PendingTransaction"},{type:"Transaction_UserTransaction"},{type:"Transaction_GenesisTransaction"},{type:"Transaction_BlockMetadataTransaction"},{type:"Transaction_StateCheckpointTransaction"}]},$Transaction_BlockMetadataTransaction={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"BlockMetadataTransaction"}]},$Transaction_GenesisTransaction={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"GenesisTransaction"}]},$Transaction_PendingTransaction={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"PendingTransaction"}]},$Transaction_StateCheckpointTransaction={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"StateCheckpointTransaction"}]},$Transaction_UserTransaction={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"UserTransaction"}]},$TransactionPayload={type:"one-of",description:"An enum of the possible transaction payloads",contains:[{type:"TransactionPayload_EntryFunctionPayload"},{type:"TransactionPayload_ScriptPayload"},{type:"TransactionPayload_ModuleBundlePayload"},{type:"TransactionPayload_MultisigPayload"}]},$TransactionPayload_EntryFunctionPayload={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"EntryFunctionPayload"}]},$TransactionPayload_ModuleBundlePayload={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ModuleBundlePayload"}]},$TransactionPayload_MultisigPayload={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultisigPayload"}]},$TransactionPayload_ScriptPayload={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptPayload"}]},$TransactionsBatchSingleSubmissionFailure={description:"Information telling which batch submission transactions failed",properties:{error:{type:"AptosError",isRequired:!0},transaction_index:{type:"number",description:"The index of which transaction failed, same as submission order",isRequired:!0,format:"uint64"}}},$TransactionsBatchSubmissionResult={description:`Batch transaction submission result

    Tells which transactions failed`,properties:{transaction_failures:{type:"array",contains:{type:"TransactionsBatchSingleSubmissionFailure"},isRequired:!0}}},$TransactionSignature={type:"one-of",description:"An enum representing the different transaction signatures available",contains:[{type:"TransactionSignature_Ed25519Signature"},{type:"TransactionSignature_MultiEd25519Signature"},{type:"TransactionSignature_MultiAgentSignature"}]},$TransactionSignature_Ed25519Signature={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},$TransactionSignature_MultiAgentSignature={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiAgentSignature"}]},$TransactionSignature_MultiEd25519Signature={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},$U128={type:"string",description:`A string containing a 128-bit unsigned integer.

    We represent u128 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u128s in JSON natively.
    `,format:"uint128"},$U256={type:"string",description:`A string containing a 256-bit unsigned integer.

    We represent u256 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u256s in JSON natively.
    `,format:"uint256"},$U64={type:"string",description:`A string containing a 64-bit unsigned integer.

    We represent u64 values as a string to ensure compatibility with languages such
    as JavaScript that do not parse u64s in JSON natively.
    `,format:"uint64"},$UserTransaction={description:"A transaction submitted by a user to change the state of the blockchain",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"},events:{type:"array",contains:{type:"Event"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},$VersionedEvent={description:"An event from a transaction with a version",properties:{version:{type:"U64",isRequired:!0},guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},$ViewRequest={description:"View request for the Move View Function API",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},$WriteModule={description:"Write a new module or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveModuleBytecode",isRequired:!0}}},$WriteResource={description:"Write a resource or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveResource",isRequired:!0}}},$WriteSet={type:"one-of",description:"The associated writeset with a payload",contains:[{type:"WriteSet_ScriptWriteSet"},{type:"WriteSet_DirectWriteSet"}]},$WriteSet_DirectWriteSet={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DirectWriteSet"}]},$WriteSet_ScriptWriteSet={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptWriteSet"}]},$WriteSetChange={type:"one-of",description:"A final state change of a transaction on a resource or module",contains:[{type:"WriteSetChange_DeleteModule"},{type:"WriteSetChange_DeleteResource"},{type:"WriteSetChange_DeleteTableItem"},{type:"WriteSetChange_WriteModule"},{type:"WriteSetChange_WriteResource"},{type:"WriteSetChange_WriteTableItem"}]},$WriteSetChange_DeleteModule={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteModule"}]},$WriteSetChange_DeleteResource={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteResource"}]},$WriteSetChange_DeleteTableItem={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteTableItem"}]},$WriteSetChange_WriteModule={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteModule"}]},$WriteSetChange_WriteResource={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteResource"}]},$WriteSetChange_WriteTableItem={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteTableItem"}]},$WriteSetPayload={description:"A writeset payload, used only for genesis",properties:{write_set:{type:"WriteSet",isRequired:!0}}},$WriteTableItem={description:"Change set to write a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},value:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DecodedTableData"}}},stringStructTag=new StructTag(AccountAddress.fromHex("0x1"),new Identifier("string"),new Identifier("String"),[]);function assertType(e,a,t){if(!a?.includes(typeof e))throw new Error(t||`Invalid arg: ${e} type should be ${a instanceof Array?a.join(" or "):a}`)}function bail(e){throw new Error(e)}function isWhiteSpace(e){return!!e.match(/\s/)}function isValidAlphabetic(e){return!!e.match(/[_A-Za-z0-9]/g)}function nextToken(e,a){const t=e[a];if(t===":"){if(e.slice(a,a+2)==="::")return[["COLON","::"],2];bail("Unrecognized token.")}else{if(t==="<")return[["LT","<"],1];if(t===">")return[["GT",">"],1];if(t===",")return[["COMMA",","],1];if(isWhiteSpace(t)){let c="";for(let i=a;i<e.length;i+=1){const o=e[i];if(isWhiteSpace(o))c=`${c}${o}`;else break}return[["SPACE",c],c.length]}else if(isValidAlphabetic(t)){let c="";for(let i=a;i<e.length;i+=1){const o=e[i];if(isValidAlphabetic(o))c=`${c}${o}`;else break}return[["IDENT",c],c.length]}}throw new Error("Unrecognized token.")}function tokenize(e){let a=0;const t=[];for(;a<e.length;){const[c,i]=nextToken(e,a);c[0]!=="SPACE"&&t.push(c),a+=i}return t}var TypeTagParser=class{constructor(e){this.tokens=tokenize(e)}consume(e){const a=this.tokens.shift();(!a||a[1]!==e)&&bail("Invalid type tag.")}parseCommaList(e,a){const t=[];for(this.tokens.length<=0&&bail("Invalid type tag.");this.tokens[0][1]!==e&&(t.push(this.parseTypeTag()),!(this.tokens.length>0&&this.tokens[0][1]===e||(this.consume(","),this.tokens.length>0&&this.tokens[0][1]===e&&a)));)this.tokens.length<=0&&bail("Invalid type tag.");return t}parseTypeTag(){this.tokens.length===0&&bail("Invalid type tag.");const[e,a]=this.tokens.shift();if(a==="u8")return new TypeTagU8;if(a==="u16")return new TypeTagU16;if(a==="u32")return new TypeTagU32;if(a==="u64")return new TypeTagU64;if(a==="u128")return new TypeTagU128;if(a==="u256")return new TypeTagU256;if(a==="bool")return new TypeTagBool;if(a==="address")return new TypeTagAddress;if(a==="vector"){this.consume("<");const t=this.parseTypeTag();return this.consume(">"),new TypeTagVector(t)}if(e==="IDENT"&&(a.startsWith("0x")||a.startsWith("0X"))){const t=a;this.consume("::");const[c,i]=this.tokens.shift();c!=="IDENT"&&bail("Invalid type tag."),this.consume("::");const[o,b]=this.tokens.shift();o!=="IDENT"&&bail("Invalid type tag.");let u=[];this.tokens.length>0&&this.tokens[0][1]==="<"&&(this.consume("<"),u=this.parseCommaList(">",!0),this.consume(">"));const l=new StructTag(AccountAddress.fromHex(t),new Identifier(i),new Identifier(b),u);return new TypeTagStruct(l)}throw new Error("Invalid type tag.")}};function ensureBoolean(e){if(assertType(e,["boolean","string"]),typeof e=="boolean")return e;if(e==="true")return!0;if(e==="false")return!1;throw new Error("Invalid boolean string.")}function ensureNumber(e){if(assertType(e,["number","string"]),typeof e=="number")return e;const a=Number.parseInt(e,10);if(Number.isNaN(a))throw new Error("Invalid number string.");return a}function ensureBigInt(e){return assertType(e,["number","bigint","string"]),BigInt(e)}function serializeArg(e,a,t){if(a instanceof TypeTagBool){t.serializeBool(ensureBoolean(e));return}if(a instanceof TypeTagU8){t.serializeU8(ensureNumber(e));return}if(a instanceof TypeTagU16){t.serializeU16(ensureNumber(e));return}if(a instanceof TypeTagU32){t.serializeU32(ensureNumber(e));return}if(a instanceof TypeTagU64){t.serializeU64(ensureBigInt(e));return}if(a instanceof TypeTagU128){t.serializeU128(ensureBigInt(e));return}if(a instanceof TypeTagU256){t.serializeU256(ensureBigInt(e));return}if(a instanceof TypeTagAddress){let c;if(typeof e=="string"||e instanceof HexString)c=AccountAddress.fromHex(e);else if(e instanceof AccountAddress)c=e;else throw new Error("Invalid account address.");c.serialize(t);return}if(a instanceof TypeTagVector){if(a.value instanceof TypeTagU8){if(e instanceof Uint8Array){t.serializeBytes(e);return}if(typeof e=="string"){t.serializeStr(e);return}}if(!Array.isArray(e))throw new Error("Invalid vector args.");t.serializeU32AsUleb128(e.length),e.forEach(c=>serializeArg(c,a.value,t));return}if(a instanceof TypeTagStruct){const{address:c,module_name:i,name:o}=a.value;if(`${HexString.fromUint8Array(c.address).toShortString()}::${i.value}::${o.value}`!="0x1::string::String")throw new Error("The only supported struct arg is of type 0x1::string::String");assertType(e,["string"]),t.serializeStr(e);return}throw new Error("Unsupported arg type.")}function argToTransactionArgument(e,a){if(a instanceof TypeTagBool)return new TransactionArgumentBool(ensureBoolean(e));if(a instanceof TypeTagU8)return new TransactionArgumentU8(ensureNumber(e));if(a instanceof TypeTagU16)return new TransactionArgumentU16(ensureNumber(e));if(a instanceof TypeTagU32)return new TransactionArgumentU32(ensureNumber(e));if(a instanceof TypeTagU64)return new TransactionArgumentU64(ensureBigInt(e));if(a instanceof TypeTagU128)return new TransactionArgumentU128(ensureBigInt(e));if(a instanceof TypeTagU256)return new TransactionArgumentU256(ensureBigInt(e));if(a instanceof TypeTagAddress){let t;if(typeof e=="string"||e instanceof HexString)t=AccountAddress.fromHex(e);else if(e instanceof AccountAddress)t=e;else throw new Error("Invalid account address.");return new TransactionArgumentAddress(t)}if(a instanceof TypeTagVector&&a.value instanceof TypeTagU8){if(!(e instanceof Uint8Array))throw new Error(`${e} should be an instance of Uint8Array`);return new TransactionArgumentU8Vector(e)}throw new Error("Unknown type for TransactionArgument.")}var RAW_TRANSACTION_SALT="APTOS::RawTransaction",RAW_TRANSACTION_WITH_DATA_SALT="APTOS::RawTransactionWithData",TransactionBuilder=class{constructor(e,a){this.rawTxnBuilder=a,this.signingFunction=e}build(e,a,t){if(!this.rawTxnBuilder)throw new Error("this.rawTxnBuilder doesn't exist.");return this.rawTxnBuilder.build(e,a,t)}static getSigningMessage(e){const a=sha3_256.create();if(e instanceof RawTransaction)a.update(RAW_TRANSACTION_SALT);else if(e instanceof MultiAgentRawTransaction)a.update(RAW_TRANSACTION_WITH_DATA_SALT);else throw new Error("Unknown transaction type.");const t=a.digest(),c=bcsToBytes(e),i=new Uint8Array(t.length+c.length);return i.set(t),i.set(c,t.length),i}},TransactionBuilderEd25519=class extends TransactionBuilder{constructor(e,a,t){super(e,t),this.publicKey=a}rawToSigned(e){const a=TransactionBuilder.getSigningMessage(e),t=this.signingFunction(a),c=new TransactionAuthenticatorEd25519(new Ed25519PublicKey(this.publicKey),t);return new SignedTransaction(e,c)}sign(e){return bcsToBytes(this.rawToSigned(e))}},TransactionBuilderMultiEd25519=class extends TransactionBuilder{constructor(e,a){super(e),this.publicKey=a}rawToSigned(e){const a=TransactionBuilder.getSigningMessage(e),t=this.signingFunction(a),c=new TransactionAuthenticatorMultiEd25519(this.publicKey,t);return new SignedTransaction(e,c)}sign(e){return bcsToBytes(this.rawToSigned(e))}},TransactionBuilderABI=class{constructor(e,a){this.abiMap=new Map,e.forEach(t=>{const c=new Deserializer(t),i=ScriptABI.deserialize(c);let o;if(i instanceof EntryFunctionABI){const b=i,{address:u,name:l}=b.module_name;o=`${HexString.fromUint8Array(u.address).toShortString()}::${l.value}::${b.name}`}else o=i.name;if(this.abiMap.has(o))throw new Error("Found conflicting ABI interfaces");this.abiMap.set(o,i)}),this.builderConfig={maxGasAmount:BigInt(DEFAULT_MAX_GAS_AMOUNT),expSecFromNow:DEFAULT_TXN_EXP_SEC_FROM_NOW,...a}}static toBCSArgs(e,a){if(e.length!==a.length)throw new Error("Wrong number of args provided.");return a.map((t,c)=>{const i=new Serializer;return serializeArg(t,e[c].type_tag,i),i.getBytes()})}static toTransactionArguments(e,a){if(e.length!==a.length)throw new Error("Wrong number of args provided.");return a.map((t,c)=>argToTransactionArgument(t,e[c].type_tag))}setSequenceNumber(e){this.builderConfig.sequenceNumber=BigInt(e)}buildTransactionPayload(e,a,t){const c=a.map(b=>new TypeTagParser(b).parseTypeTag());let i;if(!this.abiMap.has(e))throw new Error(`Cannot find function: ${e}`);const o=this.abiMap.get(e);if(o instanceof EntryFunctionABI){const b=o,u=TransactionBuilderABI.toBCSArgs(b.args,t);i=new TransactionPayloadEntryFunction(new EntryFunction(b.module_name,new Identifier(b.name),c,u))}else if(o instanceof TransactionScriptABI){const b=o,u=TransactionBuilderABI.toTransactionArguments(b.args,t);i=new TransactionPayloadScript(new Script(b.code,c,u))}else throw new Error("Unknown ABI format.");return i}build(e,a,t){const{sender:c,sequenceNumber:i,gasUnitPrice:o,maxGasAmount:b,expSecFromNow:u,chainId:l}=this.builderConfig;if(!o)throw new Error("No gasUnitPrice provided.");const x=c instanceof AccountAddress?c:AccountAddress.fromHex(c),g=BigInt(Math.floor(Date.now()/1e3)+Number(u)),v=this.buildTransactionPayload(e,a,t);if(v)return new RawTransaction(x,BigInt(i),v,BigInt(b),BigInt(o),g,new ChainId(Number(l)));throw new Error("Invalid ABI.")}},TransactionBuilderRemoteABI=class{constructor(e,a){this.aptosClient=e,this.builderConfig=a}async fetchABI(e){const t=(await this.aptosClient.getAccountModules(e)).map(i=>i.abi).flatMap(i=>i.exposed_functions.filter(o=>o.is_entry).map(o=>({fullName:`${i.address}::${i.name}::${o.name}`,...o}))),c=new Map;return t.forEach(i=>{c.set(i.fullName,i)}),c}async build(e,a,t){if(e=(R=>R.replace(/^0[xX]0*/g,"0x"))(e),e.split("::").length!==3)throw new Error("'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer");const[o,b]=e.split("::"),u=await this.fetchABI(o);if(!u.has(e))throw new Error(`${e} doesn't exist.`);const l=u.get(e),g=l.params.filter(R=>R!=="signer"&&R!=="&signer").map((R,B)=>new ArgumentABI(`var${B}`,new TypeTagParser(R).parseTypeTag())),v=new EntryFunctionABI(l.name,ModuleId.fromStr(`${o}::${b}`),"",l.generic_type_params.map((R,B)=>new TypeArgumentABI(`${B}`)),g),{sender:E,...S}=this.builderConfig,T=E instanceof AccountAddress?HexString.fromUint8Array(E.address):E,[{sequence_number:I},A,{gas_estimate:C}]=await Promise.all([S?.sequenceNumber?Promise.resolve({sequence_number:S?.sequenceNumber}):this.aptosClient.getAccount(T),S?.chainId?Promise.resolve(S?.chainId):this.aptosClient.getChainId(),S?.gasUnitPrice?Promise.resolve({gas_estimate:S?.gasUnitPrice}):this.aptosClient.estimateGasPrice()]);return new TransactionBuilderABI([bcsToBytes(v)],{sender:E,sequenceNumber:I,chainId:A,gasUnitPrice:BigInt(C),...S}).build(e,a,t)}};__decorateClass([MemoizeExpiring(10*60*1e3)],TransactionBuilderRemoteABI.prototype,"fetchABI",1);var _AptosClient=class{constructor(e,a,t=!1){if(!e)throw new Error("Node URL cannot be empty.");const c=a==null?{}:{...a};t?this.nodeUrl=e:this.nodeUrl=fixNodeUrl(e),c.BASE=this.nodeUrl,a?.WITH_CREDENTIALS===!1?c.WITH_CREDENTIALS=!1:c.WITH_CREDENTIALS=!0,this.client=new AptosGeneratedClient(c)}async getAccount(e){return this.client.accounts.getAccount(HexString.ensure(e).hex())}async getAccountTransactions(e,a){var t;return this.client.transactions.getAccountTransactions(HexString.ensure(e).hex(),(t=a?.start)==null?void 0:t.toString(),a?.limit)}async getAccountModules(e,a){const t=this.client.accounts.getAccountModules.bind({httpRequest:this.client.request});return await paginateWithCursor(t,e,1e3,a)}async getAccountModule(e,a,t){var c;return this.client.accounts.getAccountModule(HexString.ensure(e).hex(),a,(c=t?.ledgerVersion)==null?void 0:c.toString())}async getAccountResources(e,a){const t=this.client.accounts.getAccountResources.bind({httpRequest:this.client.request});return await paginateWithCursor(t,e,9999,a)}async getAccountResource(e,a,t){var c;return this.client.accounts.getAccountResource(HexString.ensure(e).hex(),a,(c=t?.ledgerVersion)==null?void 0:c.toString())}static generateBCSTransaction(e,a){return new TransactionBuilderEd25519(c=>{const i=e.signBuffer(c);return new aptos_types_exports.Ed25519Signature(i.toUint8Array())},e.pubKey().toUint8Array()).sign(a)}static generateBCSSimulation(e,a){return new TransactionBuilderEd25519(c=>{const i=new Uint8Array(64);return new aptos_types_exports.Ed25519Signature(i)},e.pubKey().toUint8Array()).sign(a)}async generateTransaction(e,a,t){const c={sender:e};if(t?.sequence_number&&(c.sequenceNumber=t.sequence_number),t?.gas_unit_price&&(c.gasUnitPrice=t.gas_unit_price),t?.max_gas_amount&&(c.maxGasAmount=t.max_gas_amount),t?.expiration_timestamp_secs){const o=Number.parseInt(t.expiration_timestamp_secs,10);c.expSecFromNow=o-Math.floor(Date.now()/1e3)}return new TransactionBuilderRemoteABI(this,c).build(a.function,a.type_arguments,a.arguments)}async signTransaction(e,a){return Promise.resolve(_AptosClient.generateBCSTransaction(e,a))}async getEventsByCreationNumber(e,a,t){var c;return this.client.events.getEventsByCreationNumber(HexString.ensure(e).hex(),a.toString(),(c=t?.start)==null?void 0:c.toString(),t?.limit)}async getEventsByEventHandle(e,a,t,c){var i;return this.client.events.getEventsByEventHandle(HexString.ensure(e).hex(),a,t,(i=c?.start)==null?void 0:i.toString(),c?.limit)}async submitTransaction(e){return this.submitSignedBCSTransaction(e)}async simulateTransaction(e,a,t){let c;return e instanceof AptosAccount?c=_AptosClient.generateBCSSimulation(e,a):e instanceof MultiEd25519PublicKey?c=new TransactionBuilderMultiEd25519(()=>{const{threshold:o}=e,b=[],u=[];for(let x=0;x<o;x+=1)b.push(x),u.push(new aptos_types_exports.Ed25519Signature(new Uint8Array(64)));const l=aptos_types_exports.MultiEd25519Signature.createBitmap(b);return new aptos_types_exports.MultiEd25519Signature(u,l)},e).sign(a):c=new TransactionBuilderEd25519(()=>{const o=new Uint8Array(64);return new aptos_types_exports.Ed25519Signature(o)},e.toBytes()).sign(a),this.submitBCSSimulation(c,t)}async submitSignedBCSTransaction(e){return this.client.request.request({url:"/transactions",method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async submitBCSSimulation(e,a){var t,c,i;const o={estimate_gas_unit_price:(t=a?.estimateGasUnitPrice)!=null?t:!1,estimate_max_gas_amount:(c=a?.estimateMaxGasAmount)!=null?c:!1,estimate_prioritized_gas_unit_price:(i=a?.estimatePrioritizedGasUnitPrice)!=null?i:!1};return this.client.request.request({url:"/transactions/simulate",query:o,method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async getTransactions(e){var a;return this.client.transactions.getTransactions((a=e?.start)==null?void 0:a.toString(),e?.limit)}async getTransactionByHash(e){return this.client.transactions.getTransactionByHash(e)}async getTransactionByVersion(e){return this.client.transactions.getTransactionByVersion(e.toString())}async transactionPending(e){try{return(await this.client.transactions.getTransactionByHash(e)).type==="pending_transaction"}catch(a){if(a?.status===404)return!0;throw a}}async waitForTransactionWithResult(e,a){var t,c;const i=(t=a?.timeoutSecs)!=null?t:DEFAULT_TXN_TIMEOUT_SEC,o=(c=a?.checkSuccess)!=null?c:!1;let b=!0,u=0,l;for(;b&&!(u>=i);){try{if(l=await this.client.transactions.getTransactionByHash(e),b=l.type==="pending_transaction",!b)break}catch(x){const g=x instanceof ApiError,v=g&&x.status!==404&&x.status>=400&&x.status<500;if(!g||v)throw x}await sleep(1e3),u+=1}if(l===void 0)throw new Error(`Waiting for transaction ${e} failed`);if(b)throw new WaitForTransactionError(`Waiting for transaction ${e} timed out after ${i} seconds`,l);if(!o)return l;if(!l?.success)throw new FailedTransactionError(`Transaction ${e} committed to the blockchain but execution failed`,l);return l}async waitForTransaction(e,a){await this.waitForTransactionWithResult(e,a)}async getLedgerInfo(){return this.client.general.getLedgerInfo()}async getChainId(){return(await this.getLedgerInfo()).chain_id}async getTableItem(e,a,t){var c;return await this.client.tables.getTableItem(e,a,(c=t?.ledgerVersion)==null?void 0:c.toString())}async generateRawTransaction(e,a,t){const[{sequence_number:c},i,{gas_estimate:o}]=await Promise.all([this.getAccount(e),this.getChainId(),t?.gasUnitPrice?Promise.resolve({gas_estimate:t.gasUnitPrice}):this.estimateGasPrice()]),{maxGasAmount:b,gasUnitPrice:u,expireTimestamp:l}={maxGasAmount:BigInt(DEFAULT_MAX_GAS_AMOUNT),gasUnitPrice:BigInt(o),expireTimestamp:BigInt(Math.floor(Date.now()/1e3)+DEFAULT_TXN_EXP_SEC_FROM_NOW),...t};return new aptos_types_exports.RawTransaction(aptos_types_exports.AccountAddress.fromHex(e),BigInt(c),a,b,u,l,new aptos_types_exports.ChainId(i))}async generateSignSubmitTransaction(e,a,t){const c=await this.generateRawTransaction(e.address(),a,t),i=_AptosClient.generateBCSTransaction(e,c);return(await this.submitSignedBCSTransaction(i)).hash}async publishPackage(e,a,t,c){const i=new Serializer;serializeVector(t,i);const o=new aptos_types_exports.TransactionPayloadEntryFunction(aptos_types_exports.EntryFunction.natural("0x1::code","publish_package_txn",[],[bcsSerializeBytes(a),i.getBytes()]));return this.generateSignSubmitTransaction(e,o,c)}async generateSignSubmitWaitForTransaction(e,a,t){const c=await this.generateSignSubmitTransaction(e,a,t);return this.waitForTransactionWithResult(c,t)}async estimateGasPrice(){return this.client.transactions.estimateGasPrice()}async estimateMaxGasAmount(e){const a=`0x1::coin::CoinStore<${APTOS_COIN}>`,[{gas_estimate:t},c]=await Promise.all([this.estimateGasPrice(),this.getAccountResources(e)]),i=c.find(b=>b.type===a);return BigInt(i.data.coin.value)/BigInt(t)}async rotateAuthKeyEd25519(e,a,t){const{sequence_number:c,authentication_key:i}=await this.getAccount(e.address()),o=new AptosAccount(a),b=new aptos_types_exports.RotationProofChallenge(aptos_types_exports.AccountAddress.CORE_CODE_ADDRESS,"account","RotationProofChallenge",BigInt(c),aptos_types_exports.AccountAddress.fromHex(e.address()),new aptos_types_exports.AccountAddress(new HexString(i).toUint8Array()),o.pubKey().toUint8Array()),u=HexString.fromUint8Array(bcsToBytes(b)),l=e.signHexString(u),x=o.signHexString(u),g=new aptos_types_exports.TransactionPayloadEntryFunction(aptos_types_exports.EntryFunction.natural("0x1::account","rotate_authentication_key",[],[bcsSerializeU8(0),bcsSerializeBytes(e.pubKey().toUint8Array()),bcsSerializeU8(0),bcsSerializeBytes(o.pubKey().toUint8Array()),bcsSerializeBytes(l.toUint8Array()),bcsSerializeBytes(x.toUint8Array())])),v=await this.generateRawTransaction(e.address(),g,t),E=_AptosClient.generateBCSTransaction(e,v);return this.submitSignedBCSTransaction(E)}async lookupOriginalAddress(e){const a=await this.getAccountResource("0x1","0x1::account::OriginatingAddress"),{address_map:{handle:t}}=a.data,c=await this.getTableItem(t,{key_type:"address",value_type:"address",key:HexString.ensure(e).hex()});return new HexString(c)}async getBlockByHeight(e,a){return this.client.blocks.getBlockByHeight(e,a)}async getBlockByVersion(e,a){return this.client.blocks.getBlockByVersion(e,a)}async view(e,a){return this.client.view.view(e,a)}clearCache(e){clear(e)}},AptosClient=_AptosClient;__decorateClass([parseApiError],AptosClient.prototype,"getAccount",1);__decorateClass([parseApiError],AptosClient.prototype,"getAccountTransactions",1);__decorateClass([parseApiError],AptosClient.prototype,"getAccountModules",1);__decorateClass([parseApiError],AptosClient.prototype,"getAccountModule",1);__decorateClass([parseApiError],AptosClient.prototype,"getAccountResources",1);__decorateClass([parseApiError],AptosClient.prototype,"getAccountResource",1);__decorateClass([parseApiError],AptosClient.prototype,"getEventsByCreationNumber",1);__decorateClass([parseApiError],AptosClient.prototype,"getEventsByEventHandle",1);__decorateClass([parseApiError],AptosClient.prototype,"submitSignedBCSTransaction",1);__decorateClass([parseApiError],AptosClient.prototype,"submitBCSSimulation",1);__decorateClass([parseApiError],AptosClient.prototype,"getTransactions",1);__decorateClass([parseApiError],AptosClient.prototype,"getTransactionByHash",1);__decorateClass([parseApiError],AptosClient.prototype,"getTransactionByVersion",1);__decorateClass([parseApiError],AptosClient.prototype,"getLedgerInfo",1);__decorateClass([Memoize()],AptosClient.prototype,"getChainId",1);__decorateClass([parseApiError],AptosClient.prototype,"getTableItem",1);__decorateClass([parseApiError,Memoize({ttlMs:5*60*1e3,tags:["gas_estimates"]})],AptosClient.prototype,"estimateGasPrice",1);__decorateClass([parseApiError],AptosClient.prototype,"estimateMaxGasAmount",1);__decorateClass([parseApiError],AptosClient.prototype,"getBlockByHeight",1);__decorateClass([parseApiError],AptosClient.prototype,"getBlockByVersion",1);__decorateClass([parseApiError],AptosClient.prototype,"view",1);var ApiError2=class extends Error{constructor(e,a,t,c){super(a),this.status=e,this.message=a,this.errorCode=t,this.vmErrorCode=c}},WaitForTransactionError=class extends Error{constructor(e,a){super(e),this.lastSubmittedTransaction=a}},FailedTransactionError=class extends Error{constructor(e,a){super(e),this.transaction=a}};function parseApiError(e,a,t){const c=t.value;return t.value=async function(...o){var b,u;try{return await c.apply(this,[...o])}catch(l){throw l instanceof ApiError?new ApiError2(l.status,JSON.stringify({message:l.message,...l.body}),(b=l.body)==null?void 0:b.error_code,(u=l.body)==null?void 0:u.vm_error_code):l}},t}var Provider=class{constructor(e,a,t=!1){let c=null,i=null;if(typeof e=="object"&&isCustomEndpoints(e)?(c=e.fullnodeUrl,i=e.indexerUrl):(c=NetworkToNodeAPI[e],i=NetworkToIndexerAPI[e]),!c||!i)throw new Error("network is not provided");this.aptosClient=new AptosClient(c,a,t),this.indexerClient=new IndexerClient(i)}};function applyMixin(e,a,t){Object.getOwnPropertyNames(a.prototype).forEach(c=>{const i=Object.getOwnPropertyDescriptor(a.prototype,c);i&&(i.value=function(...o){return this[t][c](...o)},Object.defineProperty(e.prototype,c,i))})}applyMixin(Provider,AptosClient,"aptosClient");applyMixin(Provider,IndexerClient,"indexerClient");function isCustomEndpoints(e){return e.fullnodeUrl!==void 0&&typeof e.fullnodeUrl=="string"&&e.indexerUrl!==void 0&&typeof e.indexerUrl=="string"}var TOKEN_TRANSFER_OPT_IN="a11ceb0b0500000006010004020408030c0a05161d073339086c400000010100020700010307000104030100010504020007060c0508000800030503010801000405080008000304060c0801050306737472696e6705746f6b656e06537472696e6707546f6b656e4964136372656174655f746f6b656e5f69645f726177087472616e73666572000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000030000010c0b010b020b030b0411000c070b000b070b050b06110102",PropertyValue=class{constructor(e,a){this.type=e,this.value=a}},PropertyMap=class{constructor(){this.data={}}setProperty(e,a){this.data[e]=a}};function getPropertyType(e){let a;return e==="string"||e==="String"?a=new TypeTagStruct(stringStructTag):a=new TypeTagParser(e).parseTypeTag(),a}function getPropertyValueRaw(e,a){if(e.length!==a.length)throw new Error("Length of property values and types not match");const t=new Array;return a.forEach((c,i)=>{try{const o=getPropertyType(c),b=new Serializer;serializeArg(e[i],o,b),t.push(b.getBytes())}catch{t.push(new TextEncoder().encode(e[i]))}}),t}function deserializePropertyMap(e){const a=e.map.data,t=new PropertyMap;return a.forEach(c=>{const{key:i}=c,o=c.value.value,b=c.value.type,u=getPropertyType(b),l=deserializeValueBasedOnTypeTag(u,o),x=new PropertyValue(b,l);t.setProperty(i,x)}),t}function deserializeValueBasedOnTypeTag(e,a){const t=new Deserializer(new HexString(a).toUint8Array());let c="";return e instanceof TypeTagU8?c=t.deserializeU8().toString():e instanceof TypeTagU64?c=t.deserializeU64().toString():e instanceof TypeTagU128?c=t.deserializeU128().toString():e instanceof TypeTagBool?c=t.deserializeBool()?"true":"false":e instanceof TypeTagAddress?c=HexString.fromUint8Array(t.deserializeFixedBytes(32)).hex():e instanceof TypeTagStruct&&e.isStringTypeTag()?c=t.deserializeStr():c=a,c}var token_types_exports={};__export(token_types_exports,{PropertyMap:()=>PropertyMap,PropertyValue:()=>PropertyValue,Token:()=>Token,TokenData:()=>TokenData});var TokenData=class{constructor(e,a,t,c,i,o,b,u){this.collection=e,this.description=a,this.name=t,this.maximum=c,this.supply=i,this.uri=o,this.default_properties=deserializePropertyMap(b),this.mutability_config=u}},Token=class{constructor(e,a,t){this.id=e,this.amount=a,this.token_properties=deserializePropertyMap(t)}},TokenClient=class{constructor(e){this.aptosClient=e}async createCollection(e,a,t,c,i=MAX_U64_BIG_INT,o){const u=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...o}).build("0x3::token::create_collection_script",[],[a,t,c,i,[!1,!1,!1]]),l=AptosClient.generateBCSTransaction(e,u);return(await this.aptosClient.submitSignedBCSTransaction(l)).hash}async createToken(e,a,t,c,i,o,b=MAX_U64_BIG_INT,u=e.address(),l=0,x=0,g=[],v=[],E=[],S){const I=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...S}).build("0x3::token::create_token_script",[],[a,t,c,i,b,o,u,l,x,[!1,!1,!1,!1,!1],g,getPropertyValueRaw(v,E),E]),A=AptosClient.generateBCSTransaction(e,I);return(await this.aptosClient.submitSignedBCSTransaction(A)).hash}async createTokenWithMutabilityConfig(e,a,t,c,i,o,b=MAX_U64_BIG_INT,u=e.address(),l=0,x=0,g=[],v=[],E=[],S=[!1,!1,!1,!1,!1],T){const A=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...T}).build("0x3::token::create_token_script",[],[a,t,c,i,b,o,u,l,x,S,g,v,E]),C=AptosClient.generateBCSTransaction(e,A);return(await this.aptosClient.submitSignedBCSTransaction(C)).hash}async offerToken(e,a,t,c,i,o,b=0,u){const x=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...u}).build("0x3::token_transfers::offer_script",[],[a,t,c,i,b,o]),g=AptosClient.generateBCSTransaction(e,x);return(await this.aptosClient.submitSignedBCSTransaction(g)).hash}async claimToken(e,a,t,c,i,o=0,b){const l=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...b}).build("0x3::token_transfers::claim_script",[],[a,t,c,i,o]),x=AptosClient.generateBCSTransaction(e,l);return(await this.aptosClient.submitSignedBCSTransaction(x)).hash}async cancelTokenOffer(e,a,t,c,i,o=0,b){const l=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...b}).build("0x3::token_transfers::cancel_offer_script",[],[a,t,c,i,o]),x=AptosClient.generateBCSTransaction(e,l);return(await this.aptosClient.submitSignedBCSTransaction(x)).hash}async directTransferToken(e,a,t,c,i,o,b=0,u){const x=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...u}).build("0x3::token::direct_transfer_script",[],[t,c,i,b,o]),g=new aptos_types_exports.MultiAgentRawTransaction(x,[aptos_types_exports.AccountAddress.fromHex(a.address())]),v=new aptos_types_exports.Ed25519Signature(e.signBuffer(TransactionBuilder.getSigningMessage(g)).toUint8Array()),E=new aptos_types_exports.AccountAuthenticatorEd25519(new aptos_types_exports.Ed25519PublicKey(e.signingKey.publicKey),v),S=new aptos_types_exports.Ed25519Signature(a.signBuffer(TransactionBuilder.getSigningMessage(g)).toUint8Array()),T=new aptos_types_exports.AccountAuthenticatorEd25519(new aptos_types_exports.Ed25519PublicKey(a.signingKey.publicKey),S),I=new aptos_types_exports.TransactionAuthenticatorMultiAgent(E,[aptos_types_exports.AccountAddress.fromHex(a.address())],[T]),A=bcsToBytes(new aptos_types_exports.SignedTransaction(x,I));return(await this.aptosClient.submitSignedBCSTransaction(A)).hash}async optInTokenTransfer(e,a,t){const i=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...t}).build("0x3::token::opt_in_direct_transfer",[],[a]),o=AptosClient.generateBCSTransaction(e,i);return(await this.aptosClient.submitSignedBCSTransaction(o)).hash}async transferWithOptIn(e,a,t,c,i,o,b,u){const l=new TransactionPayloadScript(new Script(new HexString(TOKEN_TRANSFER_OPT_IN).toUint8Array(),[],[new TransactionArgumentAddress(aptos_types_exports.AccountAddress.fromHex(a)),new TransactionArgumentU8Vector(new TextEncoder().encode(t)),new TransactionArgumentU8Vector(new TextEncoder().encode(c)),new TransactionArgumentU64(BigInt(i)),new TransactionArgumentAddress(aptos_types_exports.AccountAddress.fromHex(o)),new TransactionArgumentU64(BigInt(b))]));return this.aptosClient.generateSignSubmitTransaction(e,l,u)}async burnByCreator(e,a,t,c,i,o,b){const l=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...b}).build("0x3::token::burn_by_creator",[],[a,t,c,i,o]),x=AptosClient.generateBCSTransaction(e,l);return(await this.aptosClient.submitSignedBCSTransaction(x)).hash}async burnByOwner(e,a,t,c,i,o,b){const l=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...b}).build("0x3::token::burn",[],[a,t,c,i,o]),x=AptosClient.generateBCSTransaction(e,l);return(await this.aptosClient.submitSignedBCSTransaction(x)).hash}async mutateTokenProperties(e,a,t,c,i,o,b,u,l,x,g){const E=await new TransactionBuilderRemoteABI(this.aptosClient,{sender:e.address(),...g}).build("0x3::token::mutate_token_properties",[],[a,t,c,i,o,b,u,l,x]),S=AptosClient.generateBCSTransaction(e,E);return(await this.aptosClient.submitSignedBCSTransaction(S)).hash}async getCollectionData(e,a){const c=(await this.aptosClient.getAccountResources(e)).find(u=>u.type==="0x3::token::Collections"),{handle:i}=c.data.collection_data,o={key_type:"0x1::string::String",value_type:"0x3::token::CollectionData",key:a};return await this.aptosClient.getTableItem(i,o)}async getTokenData(e,a,t){const c=e instanceof HexString?e.hex():e,i=await this.aptosClient.getAccountResource(c,"0x3::token::Collections"),{handle:o}=i.data.token_data,u={key_type:"0x3::token::TokenDataId",value_type:"0x3::token::TokenData",key:{creator:c,collection:a,name:t}},l=await this.aptosClient.getTableItem(o,u);return new TokenData(l.collection,l.description,l.name,l.maximum,l.supply,l.uri,l.default_properties,l.mutability_config)}async getToken(e,a,t,c="0"){const i={creator:e instanceof HexString?e.hex():e,collection:a,name:t};return this.getTokenForAccount(e,{token_data_id:i,property_version:c})}async getTokenForAccount(e,a){const t=await this.aptosClient.getAccountResource(e instanceof HexString?e.hex():e,"0x3::token::TokenStore"),{handle:c}=t.data.tokens,i={key_type:"0x3::token::TokenId",value_type:"0x3::token::Token",key:a};try{const o=await this.aptosClient.getTableItem(c,i);return new Token(o.id,o.amount,o.token_properties)}catch(o){return o?.status===404?{id:a,amount:"0",token_properties:new PropertyMap}:o}}},FaucetClient=class extends AptosClient{constructor(e,a,t){var c,i,o;if(super(e,t),!a)throw new Error("Faucet URL cannot be empty.");this.faucetRequester=new AxiosHttpRequest({BASE:a,VERSION:(c=t?.VERSION)!=null?c:"0.1.0",WITH_CREDENTIALS:(i=t?.WITH_CREDENTIALS)!=null?i:!1,CREDENTIALS:(o=t?.CREDENTIALS)!=null?o:"include",TOKEN:t?.TOKEN,USERNAME:t?.USERNAME,PASSWORD:t?.PASSWORD,HEADERS:t?.HEADERS,ENCODE_PATH:t?.ENCODE_PATH})}async fundAccount(e,a,t=DEFAULT_TXN_TIMEOUT_SEC){const c=await this.faucetRequester.request({method:"POST",url:"/mint",query:{address:HexString.ensure(e).noPrefix(),amount:a}}),i=[];for(let o=0;o<c.length;o+=1){const b=c[o];i.push(this.waitForTransaction(b,{timeoutSecs:t}))}return await Promise.all(i),c}};const wrappedCurrencyJson=[{chainId:"25",chainType:"eth",contractAddress:"0x5C7F8A570d578ED84E63fdFA7b1eE72dEae1AE23"},{chainId:"1",chainType:"eth",contractAddress:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},{chainId:"10",chainType:"eth",contractAddress:"0x4200000000000000000000000000000000000006"},{chainId:"56",chainType:"eth",contractAddress:"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"},{chainId:"100",chainType:"eth",contractAddress:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"},{chainId:"137",chainType:"eth",contractAddress:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"},{chainId:"43114",chainType:"eth",contractAddress:"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7"},{chainId:"42161",chainType:"eth",contractAddress:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"},{chainId:"250",chainType:"eth",contractAddress:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"}],chainsWithMultiToken=[{chainId:"137",chainCode:"polygon"},{chainId:"10",chainCode:"optimism"},{chainId:"8217",chainCode:"klaytn"},{chainId:"250",chainCode:"fantom"},{chainId:"1",chainCode:"eth"},{chainId:"25",chainCode:"cronos"},{chainId:"42220",chainCode:"celo"},{chainId:"56",chainCode:"bsc"},{chainId:"288",chainCode:"boba"},{chainId:"10000",chainCode:"bch"},{chainId:"43114",chainCode:"avax"},{chainId:"1313161554",chainCode:"aurora"},{chainId:"592",chainCode:"astar"},{chainId:"42161",chainCode:"arbitrum"}],ERC20=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}],SWAP=[{inputs:[{internalType:"address",name:"_factoryV2",type:"address"},{internalType:"address",name:"factoryV3",type:"address"},{internalType:"address",name:"_positionManager",type:"address"},{internalType:"address",name:"_WETH9",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"WETH9",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMax",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"approveZeroThenMaxMinusOne",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"}],name:"callPositionManager",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"paths",type:"bytes[]"},{internalType:"uint128[]",name:"amounts",type:"uint128[]"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"uint24",name:"maximumTickDivergence",type:"uint24"},{internalType:"uint32",name:"secondsAgo",type:"uint32"}],name:"checkOracleSlippage",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactInputParams",name:"params",type:"tuple"}],name:"exactInput",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMinimum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactInputSingleParams",name:"params",type:"tuple"}],name:"exactInputSingle",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes",name:"path",type:"bytes"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"}],internalType:"struct IV3SwapRouter.ExactOutputParams",name:"params",type:"tuple"}],name:"exactOutput",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"tokenIn",type:"address"},{internalType:"address",name:"tokenOut",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMaximum",type:"uint256"},{internalType:"uint160",name:"sqrtPriceLimitX96",type:"uint160"}],internalType:"struct IV3SwapRouter.ExactOutputSingleParams",name:"params",type:"tuple"}],name:"exactOutputSingle",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"factoryV2",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getApprovalType",outputs:[{internalType:"enum IApproveAndCall.ApprovalType",name:"",type:"uint8"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"}],internalType:"struct IApproveAndCall.IncreaseLiquidityParams",name:"params",type:"tuple"}],name:"increaseLiquidity",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token0",type:"address"},{internalType:"address",name:"token1",type:"address"},{internalType:"uint24",name:"fee",type:"uint24"},{internalType:"int24",name:"tickLower",type:"int24"},{internalType:"int24",name:"tickUpper",type:"int24"},{internalType:"uint256",name:"amount0Min",type:"uint256"},{internalType:"uint256",name:"amount1Min",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],internalType:"struct IApproveAndCall.MintParams",name:"params",type:"tuple"}],name:"mint",outputs:[{internalType:"bytes",name:"result",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"previousBlockhash",type:"bytes32"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"positionManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"pull",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"refundETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowed",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitAllowedIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"selfPermitIfNecessary",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"amountInMax",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"}],name:"swapTokensForExactTokens",outputs:[{internalType:"uint256",name:"amountIn",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"sweepToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"sweepTokenWithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"}],name:"unwrapWETH9",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"amountMinimum",type:"uint256"},{internalType:"uint256",name:"feeBips",type:"uint256"},{internalType:"address",name:"feeRecipient",type:"address"}],name:"unwrapWETH9WithFee",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"wrapETH",outputs:[],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}],MUTILCALL=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall2.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall2.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall2.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall2.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall2.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall2.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall2.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"nonpayable",type:"function"}],ABIJson={ERC20,SWAP,MUTILCALL},EthereumABIs={...ABIJson};var errors$9={ErrorResponse:function(e){var a=e&&e.error&&e.error.message?e.error.message:JSON.stringify(e),t=e.error&&e.error.data?e.error.data:null,c=new Error("Returned error: "+a);return c.data=t,c},InvalidNumberOfParams:function(e,a,t){return new Error('Invalid number of parameters for "'+t+'". Got '+e+" expected "+a+"!")},InvalidConnection:function(e,a){return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node "+e+".",a)},InvalidProvider:function(){return new Error("Provider not set or invalid")},InvalidResponse:function(e){var a=e&&e.error&&e.error.message?e.error.message:"Invalid JSON RPC response: "+JSON.stringify(e);return new Error(a)},ConnectionTimeout:function(e){return new Error("CONNECTION TIMEOUT: timeout of "+e+" ms achived")},ConnectionNotOpenError:function(e){return this.ConnectionError("connection not open on send()",e)},ConnectionCloseError:function(e){return typeof e=="object"&&e.code&&e.reason?this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `"+e.code+"` and the following reason string `"+e.reason+"`",e):new Error("CONNECTION ERROR: The connection closed unexpectedly")},MaxAttemptsReachedOnReconnectingError:function(){return new Error("Maximum number of reconnect attempts reached!")},PendingRequestsOnReconnectingError:function(){return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")},ConnectionError:function(e,a){const t=new Error(e);return a&&(t.code=a.code,t.reason=a.reason,a.description&&(t.description=a.description)),t},RevertInstructionError:function(e,a){var t=new Error("Your request got reverted with the following reason string: "+e);return t.reason=e,t.signature=a,t},TransactionRevertInstructionError:function(e,a,t){var c=new Error(`Transaction has been reverted by the EVM:
`+JSON.stringify(t,null,2));return c.reason=e,c.signature=a,c.receipt=t,c},TransactionError:function(e,a){var t=new Error(e);return t.receipt=a,t},NoContractAddressFoundError:function(e){return this.TransactionError("The transaction receipt didn't contain a contract address.",e)},ContractCodeNotStoredError:function(e){return this.TransactionError("The contract code couldn't be stored, please check your gas limit.",e)},TransactionRevertedWithoutReasonError:function(e){return this.TransactionError(`Transaction has been reverted by the EVM:
`+JSON.stringify(e,null,2),e)},TransactionOutOfGasError:function(e){return this.TransactionError(`Transaction ran out of gas. Please provide more gas:
`+JSON.stringify(e,null,2),e)},ResolverMethodMissingError:function(e,a){return new Error("The resolver at "+e+'does not implement requested method: "'+a+'".')},ContractMissingABIError:function(){return new Error("You must provide the json interface of the contract when instantiating a contract object.")},ContractOnceRequiresCallbackError:function(){return new Error("Once requires a callback as the second parameter.")},ContractEventDoesNotExistError:function(e){return new Error('Event "'+e+`" doesn't exist in this contract.`)},ContractReservedEventError:function(e){return new Error('The event "'+e+`" is a reserved event name, you can't use it.`)},ContractMissingDeployDataError:function(){return new Error('No "data" specified in neither the given options, nor the default options.')},ContractNoAddressDefinedError:function(){return new Error("This contract object doesn't have address set yet, please set an address first.")},ContractNoFromAddressDefinedError:function(){return new Error('No "from" address specified in neither the given options, nor the default options.')}},bnExports={},bn$1={get exports(){return bnExports},set exports(e){bnExports=e}};(function(e){(function(a,t){function c(W,P){if(!W)throw new Error(P||"Assertion failed")}function i(W,P){W.super_=P;var D=function(){};D.prototype=P.prototype,W.prototype=new D,W.prototype.constructor=W}function o(W,P,D){if(o.isBN(W))return W;this.negative=0,this.words=null,this.length=0,this.red=null,W!==null&&((P==="le"||P==="be")&&(D=P,P=10),this._init(W||0,P||10,D||"be"))}typeof a=="object"?a.exports=o:t.BN=o,o.BN=o,o.wordSize=26;var b;try{b=commonjsRequire$1("buffer").Buffer}catch{}o.isBN=function(P){return P instanceof o?!0:P!==null&&typeof P=="object"&&P.constructor.wordSize===o.wordSize&&Array.isArray(P.words)},o.max=function(P,D){return P.cmp(D)>0?P:D},o.min=function(P,D){return P.cmp(D)<0?P:D},o.prototype._init=function(P,D,q){if(typeof P=="number")return this._initNumber(P,D,q);if(typeof P=="object")return this._initArray(P,D,q);D==="hex"&&(D=16),c(D===(D|0)&&D>=2&&D<=36),P=P.toString().replace(/\s+/g,"");var Y=0;P[0]==="-"&&Y++,D===16?this._parseHex(P,Y):this._parseBase(P,D,Y),P[0]==="-"&&(this.negative=1),this.strip(),q==="le"&&this._initArray(this.toArray(),D,q)},o.prototype._initNumber=function(P,D,q){P<0&&(this.negative=1,P=-P),P<67108864?(this.words=[P&67108863],this.length=1):P<4503599627370496?(this.words=[P&67108863,P/67108864&67108863],this.length=2):(c(P<9007199254740992),this.words=[P&67108863,P/67108864&67108863,1],this.length=3),q==="le"&&this._initArray(this.toArray(),D,q)},o.prototype._initArray=function(P,D,q){if(c(typeof P.length=="number"),P.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(P.length/3),this.words=new Array(this.length);for(var Y=0;Y<this.length;Y++)this.words[Y]=0;var U,j,Q=0;if(q==="be")for(Y=P.length-1,U=0;Y>=0;Y-=3)j=P[Y]|P[Y-1]<<8|P[Y-2]<<16,this.words[U]|=j<<Q&67108863,this.words[U+1]=j>>>26-Q&67108863,Q+=24,Q>=26&&(Q-=26,U++);else if(q==="le")for(Y=0,U=0;Y<P.length;Y+=3)j=P[Y]|P[Y+1]<<8|P[Y+2]<<16,this.words[U]|=j<<Q&67108863,this.words[U+1]=j>>>26-Q&67108863,Q+=24,Q>=26&&(Q-=26,U++);return this.strip()};function u(W,P,D){for(var q=0,Y=Math.min(W.length,D),U=P;U<Y;U++){var j=W.charCodeAt(U)-48;q<<=4,j>=49&&j<=54?q|=j-49+10:j>=17&&j<=22?q|=j-17+10:q|=j&15}return q}o.prototype._parseHex=function(P,D){this.length=Math.ceil((P.length-D)/6),this.words=new Array(this.length);for(var q=0;q<this.length;q++)this.words[q]=0;var Y,U,j=0;for(q=P.length-6,Y=0;q>=D;q-=6)U=u(P,q,q+6),this.words[Y]|=U<<j&67108863,this.words[Y+1]|=U>>>26-j&4194303,j+=24,j>=26&&(j-=26,Y++);q+6!==D&&(U=u(P,D,q+6),this.words[Y]|=U<<j&67108863,this.words[Y+1]|=U>>>26-j&4194303),this.strip()};function l(W,P,D,q){for(var Y=0,U=Math.min(W.length,D),j=P;j<U;j++){var Q=W.charCodeAt(j)-48;Y*=q,Q>=49?Y+=Q-49+10:Q>=17?Y+=Q-17+10:Y+=Q}return Y}o.prototype._parseBase=function(P,D,q){this.words=[0],this.length=1;for(var Y=0,U=1;U<=67108863;U*=D)Y++;Y--,U=U/D|0;for(var j=P.length-q,Q=j%Y,X=Math.min(j,j-Q)+q,F=0,Z=q;Z<X;Z+=Y)F=l(P,Z,Z+Y,D),this.imuln(U),this.words[0]+F<67108864?this.words[0]+=F:this._iaddn(F);if(Q!==0){var J=1;for(F=l(P,Z,P.length,D),Z=0;Z<Q;Z++)J*=D;this.imuln(J),this.words[0]+F<67108864?this.words[0]+=F:this._iaddn(F)}},o.prototype.copy=function(P){P.words=new Array(this.length);for(var D=0;D<this.length;D++)P.words[D]=this.words[D];P.length=this.length,P.negative=this.negative,P.red=this.red},o.prototype.clone=function(){var P=new o(null);return this.copy(P),P},o.prototype._expand=function(P){for(;this.length<P;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},o.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var x=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],g=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],v=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];o.prototype.toString=function(P,D){P=P||10,D=D|0||1;var q;if(P===16||P==="hex"){q="";for(var Y=0,U=0,j=0;j<this.length;j++){var Q=this.words[j],X=((Q<<Y|U)&16777215).toString(16);U=Q>>>24-Y&16777215,U!==0||j!==this.length-1?q=x[6-X.length]+X+q:q=X+q,Y+=2,Y>=26&&(Y-=26,j--)}for(U!==0&&(q=U.toString(16)+q);q.length%D!==0;)q="0"+q;return this.negative!==0&&(q="-"+q),q}if(P===(P|0)&&P>=2&&P<=36){var F=g[P],Z=v[P];q="";var J=this.clone();for(J.negative=0;!J.isZero();){var ce=J.modn(Z).toString(P);J=J.idivn(Z),J.isZero()?q=ce+q:q=x[F-ce.length]+ce+q}for(this.isZero()&&(q="0"+q);q.length%D!==0;)q="0"+q;return this.negative!==0&&(q="-"+q),q}c(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var P=this.words[0];return this.length===2?P+=this.words[1]*67108864:this.length===3&&this.words[2]===1?P+=4503599627370496+this.words[1]*67108864:this.length>2&&c(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-P:P},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(P,D){return c(typeof b<"u"),this.toArrayLike(b,P,D)},o.prototype.toArray=function(P,D){return this.toArrayLike(Array,P,D)},o.prototype.toArrayLike=function(P,D,q){var Y=this.byteLength(),U=q||Math.max(1,Y);c(Y<=U,"byte array longer than desired length"),c(U>0,"Requested array length <= 0"),this.strip();var j=D==="le",Q=new P(U),X,F,Z=this.clone();if(j){for(F=0;!Z.isZero();F++)X=Z.andln(255),Z.iushrn(8),Q[F]=X;for(;F<U;F++)Q[F]=0}else{for(F=0;F<U-Y;F++)Q[F]=0;for(F=0;!Z.isZero();F++)X=Z.andln(255),Z.iushrn(8),Q[U-F-1]=X}return Q},Math.clz32?o.prototype._countBits=function(P){return 32-Math.clz32(P)}:o.prototype._countBits=function(P){var D=P,q=0;return D>=4096&&(q+=13,D>>>=13),D>=64&&(q+=7,D>>>=7),D>=8&&(q+=4,D>>>=4),D>=2&&(q+=2,D>>>=2),q+D},o.prototype._zeroBits=function(P){if(P===0)return 26;var D=P,q=0;return D&8191||(q+=13,D>>>=13),D&127||(q+=7,D>>>=7),D&15||(q+=4,D>>>=4),D&3||(q+=2,D>>>=2),D&1||q++,q},o.prototype.bitLength=function(){var P=this.words[this.length-1],D=this._countBits(P);return(this.length-1)*26+D};function E(W){for(var P=new Array(W.bitLength()),D=0;D<P.length;D++){var q=D/26|0,Y=D%26;P[D]=(W.words[q]&1<<Y)>>>Y}return P}o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var P=0,D=0;D<this.length;D++){var q=this._zeroBits(this.words[D]);if(P+=q,q!==26)break}return P},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(P){return this.negative!==0?this.abs().inotn(P).iaddn(1):this.clone()},o.prototype.fromTwos=function(P){return this.testn(P-1)?this.notn(P).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return this.negative!==0},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(P){for(;this.length<P.length;)this.words[this.length++]=0;for(var D=0;D<P.length;D++)this.words[D]=this.words[D]|P.words[D];return this.strip()},o.prototype.ior=function(P){return c((this.negative|P.negative)===0),this.iuor(P)},o.prototype.or=function(P){return this.length>P.length?this.clone().ior(P):P.clone().ior(this)},o.prototype.uor=function(P){return this.length>P.length?this.clone().iuor(P):P.clone().iuor(this)},o.prototype.iuand=function(P){var D;this.length>P.length?D=P:D=this;for(var q=0;q<D.length;q++)this.words[q]=this.words[q]&P.words[q];return this.length=D.length,this.strip()},o.prototype.iand=function(P){return c((this.negative|P.negative)===0),this.iuand(P)},o.prototype.and=function(P){return this.length>P.length?this.clone().iand(P):P.clone().iand(this)},o.prototype.uand=function(P){return this.length>P.length?this.clone().iuand(P):P.clone().iuand(this)},o.prototype.iuxor=function(P){var D,q;this.length>P.length?(D=this,q=P):(D=P,q=this);for(var Y=0;Y<q.length;Y++)this.words[Y]=D.words[Y]^q.words[Y];if(this!==D)for(;Y<D.length;Y++)this.words[Y]=D.words[Y];return this.length=D.length,this.strip()},o.prototype.ixor=function(P){return c((this.negative|P.negative)===0),this.iuxor(P)},o.prototype.xor=function(P){return this.length>P.length?this.clone().ixor(P):P.clone().ixor(this)},o.prototype.uxor=function(P){return this.length>P.length?this.clone().iuxor(P):P.clone().iuxor(this)},o.prototype.inotn=function(P){c(typeof P=="number"&&P>=0);var D=Math.ceil(P/26)|0,q=P%26;this._expand(D),q>0&&D--;for(var Y=0;Y<D;Y++)this.words[Y]=~this.words[Y]&67108863;return q>0&&(this.words[Y]=~this.words[Y]&67108863>>26-q),this.strip()},o.prototype.notn=function(P){return this.clone().inotn(P)},o.prototype.setn=function(P,D){c(typeof P=="number"&&P>=0);var q=P/26|0,Y=P%26;return this._expand(q+1),D?this.words[q]=this.words[q]|1<<Y:this.words[q]=this.words[q]&~(1<<Y),this.strip()},o.prototype.iadd=function(P){var D;if(this.negative!==0&&P.negative===0)return this.negative=0,D=this.isub(P),this.negative^=1,this._normSign();if(this.negative===0&&P.negative!==0)return P.negative=0,D=this.isub(P),P.negative=1,D._normSign();var q,Y;this.length>P.length?(q=this,Y=P):(q=P,Y=this);for(var U=0,j=0;j<Y.length;j++)D=(q.words[j]|0)+(Y.words[j]|0)+U,this.words[j]=D&67108863,U=D>>>26;for(;U!==0&&j<q.length;j++)D=(q.words[j]|0)+U,this.words[j]=D&67108863,U=D>>>26;if(this.length=q.length,U!==0)this.words[this.length]=U,this.length++;else if(q!==this)for(;j<q.length;j++)this.words[j]=q.words[j];return this},o.prototype.add=function(P){var D;return P.negative!==0&&this.negative===0?(P.negative=0,D=this.sub(P),P.negative^=1,D):P.negative===0&&this.negative!==0?(this.negative=0,D=P.sub(this),this.negative=1,D):this.length>P.length?this.clone().iadd(P):P.clone().iadd(this)},o.prototype.isub=function(P){if(P.negative!==0){P.negative=0;var D=this.iadd(P);return P.negative=1,D._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(P),this.negative=1,this._normSign();var q=this.cmp(P);if(q===0)return this.negative=0,this.length=1,this.words[0]=0,this;var Y,U;q>0?(Y=this,U=P):(Y=P,U=this);for(var j=0,Q=0;Q<U.length;Q++)D=(Y.words[Q]|0)-(U.words[Q]|0)+j,j=D>>26,this.words[Q]=D&67108863;for(;j!==0&&Q<Y.length;Q++)D=(Y.words[Q]|0)+j,j=D>>26,this.words[Q]=D&67108863;if(j===0&&Q<Y.length&&Y!==this)for(;Q<Y.length;Q++)this.words[Q]=Y.words[Q];return this.length=Math.max(this.length,Q),Y!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(P){return this.clone().isub(P)};function S(W,P,D){D.negative=P.negative^W.negative;var q=W.length+P.length|0;D.length=q,q=q-1|0;var Y=W.words[0]|0,U=P.words[0]|0,j=Y*U,Q=j&67108863,X=j/67108864|0;D.words[0]=Q;for(var F=1;F<q;F++){for(var Z=X>>>26,J=X&67108863,ce=Math.min(F,P.length-1),re=Math.max(0,F-W.length+1);re<=ce;re++){var ie=F-re|0;Y=W.words[ie]|0,U=P.words[re]|0,j=Y*U+J,Z+=j/67108864|0,J=j&67108863}D.words[F]=J|0,X=Z|0}return X!==0?D.words[F]=X|0:D.length--,D.strip()}var T=function(P,D,q){var Y=P.words,U=D.words,j=q.words,Q=0,X,F,Z,J=Y[0]|0,ce=J&8191,re=J>>>13,ie=Y[1]|0,fe=ie&8191,pe=ie>>>13,Oe=Y[2]|0,Se=Oe&8191,Pe=Oe>>>13,a0=Y[3]|0,qe=a0&8191,Ke=a0>>>13,b0=Y[4]|0,Je=b0&8191,i0=b0>>>13,N0=Y[5]|0,w0=N0&8191,_0=N0>>>13,H0=Y[6]|0,g0=H0&8191,o0=H0>>>13,M0=Y[7]|0,u0=M0&8191,S0=M0>>>13,J0=Y[8]|0,h0=J0&8191,y0=J0>>>13,Z0=Y[9]|0,I0=Z0&8191,C0=Z0>>>13,q0=U[0]|0,l0=q0&8191,p0=q0>>>13,j0=U[1]|0,m0=j0&8191,$0=j0>>>13,Y0=U[2]|0,v0=Y0&8191,E0=Y0>>>13,K0=U[3]|0,P0=K0&8191,r0=K0>>>13,z0=U[4]|0,s0=z0&8191,be=z0>>>13,se=U[5]|0,de=se&8191,le=se>>>13,ge=U[6]|0,we=ge&8191,Ee=ge>>>13,Be=U[7]|0,V=Be&8191,ae=Be>>>13,te=U[8]|0,H=te&8191,ne=te>>>13,he=U[9]|0,xe=he&8191,me=he>>>13;q.negative=P.negative^D.negative,q.length=19,X=Math.imul(ce,l0),F=Math.imul(ce,p0),F=F+Math.imul(re,l0)|0,Z=Math.imul(re,p0);var Te=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Te>>>26)|0,Te&=67108863,X=Math.imul(fe,l0),F=Math.imul(fe,p0),F=F+Math.imul(pe,l0)|0,Z=Math.imul(pe,p0),X=X+Math.imul(ce,m0)|0,F=F+Math.imul(ce,$0)|0,F=F+Math.imul(re,m0)|0,Z=Z+Math.imul(re,$0)|0;var De=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(De>>>26)|0,De&=67108863,X=Math.imul(Se,l0),F=Math.imul(Se,p0),F=F+Math.imul(Pe,l0)|0,Z=Math.imul(Pe,p0),X=X+Math.imul(fe,m0)|0,F=F+Math.imul(fe,$0)|0,F=F+Math.imul(pe,m0)|0,Z=Z+Math.imul(pe,$0)|0,X=X+Math.imul(ce,v0)|0,F=F+Math.imul(ce,E0)|0,F=F+Math.imul(re,v0)|0,Z=Z+Math.imul(re,E0)|0;var Ce=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,X=Math.imul(qe,l0),F=Math.imul(qe,p0),F=F+Math.imul(Ke,l0)|0,Z=Math.imul(Ke,p0),X=X+Math.imul(Se,m0)|0,F=F+Math.imul(Se,$0)|0,F=F+Math.imul(Pe,m0)|0,Z=Z+Math.imul(Pe,$0)|0,X=X+Math.imul(fe,v0)|0,F=F+Math.imul(fe,E0)|0,F=F+Math.imul(pe,v0)|0,Z=Z+Math.imul(pe,E0)|0,X=X+Math.imul(ce,P0)|0,F=F+Math.imul(ce,r0)|0,F=F+Math.imul(re,P0)|0,Z=Z+Math.imul(re,r0)|0;var t0=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(t0>>>26)|0,t0&=67108863,X=Math.imul(Je,l0),F=Math.imul(Je,p0),F=F+Math.imul(i0,l0)|0,Z=Math.imul(i0,p0),X=X+Math.imul(qe,m0)|0,F=F+Math.imul(qe,$0)|0,F=F+Math.imul(Ke,m0)|0,Z=Z+Math.imul(Ke,$0)|0,X=X+Math.imul(Se,v0)|0,F=F+Math.imul(Se,E0)|0,F=F+Math.imul(Pe,v0)|0,Z=Z+Math.imul(Pe,E0)|0,X=X+Math.imul(fe,P0)|0,F=F+Math.imul(fe,r0)|0,F=F+Math.imul(pe,P0)|0,Z=Z+Math.imul(pe,r0)|0,X=X+Math.imul(ce,s0)|0,F=F+Math.imul(ce,be)|0,F=F+Math.imul(re,s0)|0,Z=Z+Math.imul(re,be)|0;var Re=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Re>>>26)|0,Re&=67108863,X=Math.imul(w0,l0),F=Math.imul(w0,p0),F=F+Math.imul(_0,l0)|0,Z=Math.imul(_0,p0),X=X+Math.imul(Je,m0)|0,F=F+Math.imul(Je,$0)|0,F=F+Math.imul(i0,m0)|0,Z=Z+Math.imul(i0,$0)|0,X=X+Math.imul(qe,v0)|0,F=F+Math.imul(qe,E0)|0,F=F+Math.imul(Ke,v0)|0,Z=Z+Math.imul(Ke,E0)|0,X=X+Math.imul(Se,P0)|0,F=F+Math.imul(Se,r0)|0,F=F+Math.imul(Pe,P0)|0,Z=Z+Math.imul(Pe,r0)|0,X=X+Math.imul(fe,s0)|0,F=F+Math.imul(fe,be)|0,F=F+Math.imul(pe,s0)|0,Z=Z+Math.imul(pe,be)|0,X=X+Math.imul(ce,de)|0,F=F+Math.imul(ce,le)|0,F=F+Math.imul(re,de)|0,Z=Z+Math.imul(re,le)|0;var We=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(We>>>26)|0,We&=67108863,X=Math.imul(g0,l0),F=Math.imul(g0,p0),F=F+Math.imul(o0,l0)|0,Z=Math.imul(o0,p0),X=X+Math.imul(w0,m0)|0,F=F+Math.imul(w0,$0)|0,F=F+Math.imul(_0,m0)|0,Z=Z+Math.imul(_0,$0)|0,X=X+Math.imul(Je,v0)|0,F=F+Math.imul(Je,E0)|0,F=F+Math.imul(i0,v0)|0,Z=Z+Math.imul(i0,E0)|0,X=X+Math.imul(qe,P0)|0,F=F+Math.imul(qe,r0)|0,F=F+Math.imul(Ke,P0)|0,Z=Z+Math.imul(Ke,r0)|0,X=X+Math.imul(Se,s0)|0,F=F+Math.imul(Se,be)|0,F=F+Math.imul(Pe,s0)|0,Z=Z+Math.imul(Pe,be)|0,X=X+Math.imul(fe,de)|0,F=F+Math.imul(fe,le)|0,F=F+Math.imul(pe,de)|0,Z=Z+Math.imul(pe,le)|0,X=X+Math.imul(ce,we)|0,F=F+Math.imul(ce,Ee)|0,F=F+Math.imul(re,we)|0,Z=Z+Math.imul(re,Ee)|0;var Ge=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Ge>>>26)|0,Ge&=67108863,X=Math.imul(u0,l0),F=Math.imul(u0,p0),F=F+Math.imul(S0,l0)|0,Z=Math.imul(S0,p0),X=X+Math.imul(g0,m0)|0,F=F+Math.imul(g0,$0)|0,F=F+Math.imul(o0,m0)|0,Z=Z+Math.imul(o0,$0)|0,X=X+Math.imul(w0,v0)|0,F=F+Math.imul(w0,E0)|0,F=F+Math.imul(_0,v0)|0,Z=Z+Math.imul(_0,E0)|0,X=X+Math.imul(Je,P0)|0,F=F+Math.imul(Je,r0)|0,F=F+Math.imul(i0,P0)|0,Z=Z+Math.imul(i0,r0)|0,X=X+Math.imul(qe,s0)|0,F=F+Math.imul(qe,be)|0,F=F+Math.imul(Ke,s0)|0,Z=Z+Math.imul(Ke,be)|0,X=X+Math.imul(Se,de)|0,F=F+Math.imul(Se,le)|0,F=F+Math.imul(Pe,de)|0,Z=Z+Math.imul(Pe,le)|0,X=X+Math.imul(fe,we)|0,F=F+Math.imul(fe,Ee)|0,F=F+Math.imul(pe,we)|0,Z=Z+Math.imul(pe,Ee)|0,X=X+Math.imul(ce,V)|0,F=F+Math.imul(ce,ae)|0,F=F+Math.imul(re,V)|0,Z=Z+Math.imul(re,ae)|0;var e0=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(e0>>>26)|0,e0&=67108863,X=Math.imul(h0,l0),F=Math.imul(h0,p0),F=F+Math.imul(y0,l0)|0,Z=Math.imul(y0,p0),X=X+Math.imul(u0,m0)|0,F=F+Math.imul(u0,$0)|0,F=F+Math.imul(S0,m0)|0,Z=Z+Math.imul(S0,$0)|0,X=X+Math.imul(g0,v0)|0,F=F+Math.imul(g0,E0)|0,F=F+Math.imul(o0,v0)|0,Z=Z+Math.imul(o0,E0)|0,X=X+Math.imul(w0,P0)|0,F=F+Math.imul(w0,r0)|0,F=F+Math.imul(_0,P0)|0,Z=Z+Math.imul(_0,r0)|0,X=X+Math.imul(Je,s0)|0,F=F+Math.imul(Je,be)|0,F=F+Math.imul(i0,s0)|0,Z=Z+Math.imul(i0,be)|0,X=X+Math.imul(qe,de)|0,F=F+Math.imul(qe,le)|0,F=F+Math.imul(Ke,de)|0,Z=Z+Math.imul(Ke,le)|0,X=X+Math.imul(Se,we)|0,F=F+Math.imul(Se,Ee)|0,F=F+Math.imul(Pe,we)|0,Z=Z+Math.imul(Pe,Ee)|0,X=X+Math.imul(fe,V)|0,F=F+Math.imul(fe,ae)|0,F=F+Math.imul(pe,V)|0,Z=Z+Math.imul(pe,ae)|0,X=X+Math.imul(ce,H)|0,F=F+Math.imul(ce,ne)|0,F=F+Math.imul(re,H)|0,Z=Z+Math.imul(re,ne)|0;var Qe=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Qe>>>26)|0,Qe&=67108863,X=Math.imul(I0,l0),F=Math.imul(I0,p0),F=F+Math.imul(C0,l0)|0,Z=Math.imul(C0,p0),X=X+Math.imul(h0,m0)|0,F=F+Math.imul(h0,$0)|0,F=F+Math.imul(y0,m0)|0,Z=Z+Math.imul(y0,$0)|0,X=X+Math.imul(u0,v0)|0,F=F+Math.imul(u0,E0)|0,F=F+Math.imul(S0,v0)|0,Z=Z+Math.imul(S0,E0)|0,X=X+Math.imul(g0,P0)|0,F=F+Math.imul(g0,r0)|0,F=F+Math.imul(o0,P0)|0,Z=Z+Math.imul(o0,r0)|0,X=X+Math.imul(w0,s0)|0,F=F+Math.imul(w0,be)|0,F=F+Math.imul(_0,s0)|0,Z=Z+Math.imul(_0,be)|0,X=X+Math.imul(Je,de)|0,F=F+Math.imul(Je,le)|0,F=F+Math.imul(i0,de)|0,Z=Z+Math.imul(i0,le)|0,X=X+Math.imul(qe,we)|0,F=F+Math.imul(qe,Ee)|0,F=F+Math.imul(Ke,we)|0,Z=Z+Math.imul(Ke,Ee)|0,X=X+Math.imul(Se,V)|0,F=F+Math.imul(Se,ae)|0,F=F+Math.imul(Pe,V)|0,Z=Z+Math.imul(Pe,ae)|0,X=X+Math.imul(fe,H)|0,F=F+Math.imul(fe,ne)|0,F=F+Math.imul(pe,H)|0,Z=Z+Math.imul(pe,ne)|0,X=X+Math.imul(ce,xe)|0,F=F+Math.imul(ce,me)|0,F=F+Math.imul(re,xe)|0,Z=Z+Math.imul(re,me)|0;var Ve=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Ve>>>26)|0,Ve&=67108863,X=Math.imul(I0,m0),F=Math.imul(I0,$0),F=F+Math.imul(C0,m0)|0,Z=Math.imul(C0,$0),X=X+Math.imul(h0,v0)|0,F=F+Math.imul(h0,E0)|0,F=F+Math.imul(y0,v0)|0,Z=Z+Math.imul(y0,E0)|0,X=X+Math.imul(u0,P0)|0,F=F+Math.imul(u0,r0)|0,F=F+Math.imul(S0,P0)|0,Z=Z+Math.imul(S0,r0)|0,X=X+Math.imul(g0,s0)|0,F=F+Math.imul(g0,be)|0,F=F+Math.imul(o0,s0)|0,Z=Z+Math.imul(o0,be)|0,X=X+Math.imul(w0,de)|0,F=F+Math.imul(w0,le)|0,F=F+Math.imul(_0,de)|0,Z=Z+Math.imul(_0,le)|0,X=X+Math.imul(Je,we)|0,F=F+Math.imul(Je,Ee)|0,F=F+Math.imul(i0,we)|0,Z=Z+Math.imul(i0,Ee)|0,X=X+Math.imul(qe,V)|0,F=F+Math.imul(qe,ae)|0,F=F+Math.imul(Ke,V)|0,Z=Z+Math.imul(Ke,ae)|0,X=X+Math.imul(Se,H)|0,F=F+Math.imul(Se,ne)|0,F=F+Math.imul(Pe,H)|0,Z=Z+Math.imul(Pe,ne)|0,X=X+Math.imul(fe,xe)|0,F=F+Math.imul(fe,me)|0,F=F+Math.imul(pe,xe)|0,Z=Z+Math.imul(pe,me)|0;var Ye=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Ye>>>26)|0,Ye&=67108863,X=Math.imul(I0,v0),F=Math.imul(I0,E0),F=F+Math.imul(C0,v0)|0,Z=Math.imul(C0,E0),X=X+Math.imul(h0,P0)|0,F=F+Math.imul(h0,r0)|0,F=F+Math.imul(y0,P0)|0,Z=Z+Math.imul(y0,r0)|0,X=X+Math.imul(u0,s0)|0,F=F+Math.imul(u0,be)|0,F=F+Math.imul(S0,s0)|0,Z=Z+Math.imul(S0,be)|0,X=X+Math.imul(g0,de)|0,F=F+Math.imul(g0,le)|0,F=F+Math.imul(o0,de)|0,Z=Z+Math.imul(o0,le)|0,X=X+Math.imul(w0,we)|0,F=F+Math.imul(w0,Ee)|0,F=F+Math.imul(_0,we)|0,Z=Z+Math.imul(_0,Ee)|0,X=X+Math.imul(Je,V)|0,F=F+Math.imul(Je,ae)|0,F=F+Math.imul(i0,V)|0,Z=Z+Math.imul(i0,ae)|0,X=X+Math.imul(qe,H)|0,F=F+Math.imul(qe,ne)|0,F=F+Math.imul(Ke,H)|0,Z=Z+Math.imul(Ke,ne)|0,X=X+Math.imul(Se,xe)|0,F=F+Math.imul(Se,me)|0,F=F+Math.imul(Pe,xe)|0,Z=Z+Math.imul(Pe,me)|0;var Xe=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Xe>>>26)|0,Xe&=67108863,X=Math.imul(I0,P0),F=Math.imul(I0,r0),F=F+Math.imul(C0,P0)|0,Z=Math.imul(C0,r0),X=X+Math.imul(h0,s0)|0,F=F+Math.imul(h0,be)|0,F=F+Math.imul(y0,s0)|0,Z=Z+Math.imul(y0,be)|0,X=X+Math.imul(u0,de)|0,F=F+Math.imul(u0,le)|0,F=F+Math.imul(S0,de)|0,Z=Z+Math.imul(S0,le)|0,X=X+Math.imul(g0,we)|0,F=F+Math.imul(g0,Ee)|0,F=F+Math.imul(o0,we)|0,Z=Z+Math.imul(o0,Ee)|0,X=X+Math.imul(w0,V)|0,F=F+Math.imul(w0,ae)|0,F=F+Math.imul(_0,V)|0,Z=Z+Math.imul(_0,ae)|0,X=X+Math.imul(Je,H)|0,F=F+Math.imul(Je,ne)|0,F=F+Math.imul(i0,H)|0,Z=Z+Math.imul(i0,ne)|0,X=X+Math.imul(qe,xe)|0,F=F+Math.imul(qe,me)|0,F=F+Math.imul(Ke,xe)|0,Z=Z+Math.imul(Ke,me)|0;var Fe=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Fe>>>26)|0,Fe&=67108863,X=Math.imul(I0,s0),F=Math.imul(I0,be),F=F+Math.imul(C0,s0)|0,Z=Math.imul(C0,be),X=X+Math.imul(h0,de)|0,F=F+Math.imul(h0,le)|0,F=F+Math.imul(y0,de)|0,Z=Z+Math.imul(y0,le)|0,X=X+Math.imul(u0,we)|0,F=F+Math.imul(u0,Ee)|0,F=F+Math.imul(S0,we)|0,Z=Z+Math.imul(S0,Ee)|0,X=X+Math.imul(g0,V)|0,F=F+Math.imul(g0,ae)|0,F=F+Math.imul(o0,V)|0,Z=Z+Math.imul(o0,ae)|0,X=X+Math.imul(w0,H)|0,F=F+Math.imul(w0,ne)|0,F=F+Math.imul(_0,H)|0,Z=Z+Math.imul(_0,ne)|0,X=X+Math.imul(Je,xe)|0,F=F+Math.imul(Je,me)|0,F=F+Math.imul(i0,xe)|0,Z=Z+Math.imul(i0,me)|0;var ze=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(ze>>>26)|0,ze&=67108863,X=Math.imul(I0,de),F=Math.imul(I0,le),F=F+Math.imul(C0,de)|0,Z=Math.imul(C0,le),X=X+Math.imul(h0,we)|0,F=F+Math.imul(h0,Ee)|0,F=F+Math.imul(y0,we)|0,Z=Z+Math.imul(y0,Ee)|0,X=X+Math.imul(u0,V)|0,F=F+Math.imul(u0,ae)|0,F=F+Math.imul(S0,V)|0,Z=Z+Math.imul(S0,ae)|0,X=X+Math.imul(g0,H)|0,F=F+Math.imul(g0,ne)|0,F=F+Math.imul(o0,H)|0,Z=Z+Math.imul(o0,ne)|0,X=X+Math.imul(w0,xe)|0,F=F+Math.imul(w0,me)|0,F=F+Math.imul(_0,xe)|0,Z=Z+Math.imul(_0,me)|0;var Ne=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,X=Math.imul(I0,we),F=Math.imul(I0,Ee),F=F+Math.imul(C0,we)|0,Z=Math.imul(C0,Ee),X=X+Math.imul(h0,V)|0,F=F+Math.imul(h0,ae)|0,F=F+Math.imul(y0,V)|0,Z=Z+Math.imul(y0,ae)|0,X=X+Math.imul(u0,H)|0,F=F+Math.imul(u0,ne)|0,F=F+Math.imul(S0,H)|0,Z=Z+Math.imul(S0,ne)|0,X=X+Math.imul(g0,xe)|0,F=F+Math.imul(g0,me)|0,F=F+Math.imul(o0,xe)|0,Z=Z+Math.imul(o0,me)|0;var Le=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Le>>>26)|0,Le&=67108863,X=Math.imul(I0,V),F=Math.imul(I0,ae),F=F+Math.imul(C0,V)|0,Z=Math.imul(C0,ae),X=X+Math.imul(h0,H)|0,F=F+Math.imul(h0,ne)|0,F=F+Math.imul(y0,H)|0,Z=Z+Math.imul(y0,ne)|0,X=X+Math.imul(u0,xe)|0,F=F+Math.imul(u0,me)|0,F=F+Math.imul(S0,xe)|0,Z=Z+Math.imul(S0,me)|0;var He=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(He>>>26)|0,He&=67108863,X=Math.imul(I0,H),F=Math.imul(I0,ne),F=F+Math.imul(C0,H)|0,Z=Math.imul(C0,ne),X=X+Math.imul(h0,xe)|0,F=F+Math.imul(h0,me)|0,F=F+Math.imul(y0,xe)|0,Z=Z+Math.imul(y0,me)|0;var Me=(Q+X|0)+((F&8191)<<13)|0;Q=(Z+(F>>>13)|0)+(Me>>>26)|0,Me&=67108863,X=Math.imul(I0,xe),F=Math.imul(I0,me),F=F+Math.imul(C0,xe)|0,Z=Math.imul(C0,me);var ye=(Q+X|0)+((F&8191)<<13)|0;return Q=(Z+(F>>>13)|0)+(ye>>>26)|0,ye&=67108863,j[0]=Te,j[1]=De,j[2]=Ce,j[3]=t0,j[4]=Re,j[5]=We,j[6]=Ge,j[7]=e0,j[8]=Qe,j[9]=Ve,j[10]=Ye,j[11]=Xe,j[12]=Fe,j[13]=ze,j[14]=Ne,j[15]=Le,j[16]=He,j[17]=Me,j[18]=ye,Q!==0&&(j[19]=Q,q.length++),q};Math.imul||(T=S);function I(W,P,D){D.negative=P.negative^W.negative,D.length=W.length+P.length;for(var q=0,Y=0,U=0;U<D.length-1;U++){var j=Y;Y=0;for(var Q=q&67108863,X=Math.min(U,P.length-1),F=Math.max(0,U-W.length+1);F<=X;F++){var Z=U-F,J=W.words[Z]|0,ce=P.words[F]|0,re=J*ce,ie=re&67108863;j=j+(re/67108864|0)|0,ie=ie+Q|0,Q=ie&67108863,j=j+(ie>>>26)|0,Y+=j>>>26,j&=67108863}D.words[U]=Q,q=j,j=Y}return q!==0?D.words[U]=q:D.length--,D.strip()}function A(W,P,D){var q=new C;return q.mulp(W,P,D)}o.prototype.mulTo=function(P,D){var q,Y=this.length+P.length;return this.length===10&&P.length===10?q=T(this,P,D):Y<63?q=S(this,P,D):Y<1024?q=I(this,P,D):q=A(this,P,D),q};function C(W,P){this.x=W,this.y=P}C.prototype.makeRBT=function(P){for(var D=new Array(P),q=o.prototype._countBits(P)-1,Y=0;Y<P;Y++)D[Y]=this.revBin(Y,q,P);return D},C.prototype.revBin=function(P,D,q){if(P===0||P===q-1)return P;for(var Y=0,U=0;U<D;U++)Y|=(P&1)<<D-U-1,P>>=1;return Y},C.prototype.permute=function(P,D,q,Y,U,j){for(var Q=0;Q<j;Q++)Y[Q]=D[P[Q]],U[Q]=q[P[Q]]},C.prototype.transform=function(P,D,q,Y,U,j){this.permute(j,P,D,q,Y,U);for(var Q=1;Q<U;Q<<=1)for(var X=Q<<1,F=Math.cos(2*Math.PI/X),Z=Math.sin(2*Math.PI/X),J=0;J<U;J+=X)for(var ce=F,re=Z,ie=0;ie<Q;ie++){var fe=q[J+ie],pe=Y[J+ie],Oe=q[J+ie+Q],Se=Y[J+ie+Q],Pe=ce*Oe-re*Se;Se=ce*Se+re*Oe,Oe=Pe,q[J+ie]=fe+Oe,Y[J+ie]=pe+Se,q[J+ie+Q]=fe-Oe,Y[J+ie+Q]=pe-Se,ie!==X&&(Pe=F*ce-Z*re,re=F*re+Z*ce,ce=Pe)}},C.prototype.guessLen13b=function(P,D){var q=Math.max(D,P)|1,Y=q&1,U=0;for(q=q/2|0;q;q=q>>>1)U++;return 1<<U+1+Y},C.prototype.conjugate=function(P,D,q){if(!(q<=1))for(var Y=0;Y<q/2;Y++){var U=P[Y];P[Y]=P[q-Y-1],P[q-Y-1]=U,U=D[Y],D[Y]=-D[q-Y-1],D[q-Y-1]=-U}},C.prototype.normalize13b=function(P,D){for(var q=0,Y=0;Y<D/2;Y++){var U=Math.round(P[2*Y+1]/D)*8192+Math.round(P[2*Y]/D)+q;P[Y]=U&67108863,U<67108864?q=0:q=U/67108864|0}return P},C.prototype.convert13b=function(P,D,q,Y){for(var U=0,j=0;j<D;j++)U=U+(P[j]|0),q[2*j]=U&8191,U=U>>>13,q[2*j+1]=U&8191,U=U>>>13;for(j=2*D;j<Y;++j)q[j]=0;c(U===0),c((U&-8192)===0)},C.prototype.stub=function(P){for(var D=new Array(P),q=0;q<P;q++)D[q]=0;return D},C.prototype.mulp=function(P,D,q){var Y=2*this.guessLen13b(P.length,D.length),U=this.makeRBT(Y),j=this.stub(Y),Q=new Array(Y),X=new Array(Y),F=new Array(Y),Z=new Array(Y),J=new Array(Y),ce=new Array(Y),re=q.words;re.length=Y,this.convert13b(P.words,P.length,Q,Y),this.convert13b(D.words,D.length,Z,Y),this.transform(Q,j,X,F,Y,U),this.transform(Z,j,J,ce,Y,U);for(var ie=0;ie<Y;ie++){var fe=X[ie]*J[ie]-F[ie]*ce[ie];F[ie]=X[ie]*ce[ie]+F[ie]*J[ie],X[ie]=fe}return this.conjugate(X,F,Y),this.transform(X,F,re,j,Y,U),this.conjugate(re,j,Y),this.normalize13b(re,Y),q.negative=P.negative^D.negative,q.length=P.length+D.length,q.strip()},o.prototype.mul=function(P){var D=new o(null);return D.words=new Array(this.length+P.length),this.mulTo(P,D)},o.prototype.mulf=function(P){var D=new o(null);return D.words=new Array(this.length+P.length),A(this,P,D)},o.prototype.imul=function(P){return this.clone().mulTo(P,this)},o.prototype.imuln=function(P){c(typeof P=="number"),c(P<67108864);for(var D=0,q=0;q<this.length;q++){var Y=(this.words[q]|0)*P,U=(Y&67108863)+(D&67108863);D>>=26,D+=Y/67108864|0,D+=U>>>26,this.words[q]=U&67108863}return D!==0&&(this.words[q]=D,this.length++),this},o.prototype.muln=function(P){return this.clone().imuln(P)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(P){var D=E(P);if(D.length===0)return new o(1);for(var q=this,Y=0;Y<D.length&&D[Y]===0;Y++,q=q.sqr());if(++Y<D.length)for(var U=q.sqr();Y<D.length;Y++,U=U.sqr())D[Y]!==0&&(q=q.mul(U));return q},o.prototype.iushln=function(P){c(typeof P=="number"&&P>=0);var D=P%26,q=(P-D)/26,Y=67108863>>>26-D<<26-D,U;if(D!==0){var j=0;for(U=0;U<this.length;U++){var Q=this.words[U]&Y,X=(this.words[U]|0)-Q<<D;this.words[U]=X|j,j=Q>>>26-D}j&&(this.words[U]=j,this.length++)}if(q!==0){for(U=this.length-1;U>=0;U--)this.words[U+q]=this.words[U];for(U=0;U<q;U++)this.words[U]=0;this.length+=q}return this.strip()},o.prototype.ishln=function(P){return c(this.negative===0),this.iushln(P)},o.prototype.iushrn=function(P,D,q){c(typeof P=="number"&&P>=0);var Y;D?Y=(D-D%26)/26:Y=0;var U=P%26,j=Math.min((P-U)/26,this.length),Q=67108863^67108863>>>U<<U,X=q;if(Y-=j,Y=Math.max(0,Y),X){for(var F=0;F<j;F++)X.words[F]=this.words[F];X.length=j}if(j!==0)if(this.length>j)for(this.length-=j,F=0;F<this.length;F++)this.words[F]=this.words[F+j];else this.words[0]=0,this.length=1;var Z=0;for(F=this.length-1;F>=0&&(Z!==0||F>=Y);F--){var J=this.words[F]|0;this.words[F]=Z<<26-U|J>>>U,Z=J&Q}return X&&Z!==0&&(X.words[X.length++]=Z),this.length===0&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(P,D,q){return c(this.negative===0),this.iushrn(P,D,q)},o.prototype.shln=function(P){return this.clone().ishln(P)},o.prototype.ushln=function(P){return this.clone().iushln(P)},o.prototype.shrn=function(P){return this.clone().ishrn(P)},o.prototype.ushrn=function(P){return this.clone().iushrn(P)},o.prototype.testn=function(P){c(typeof P=="number"&&P>=0);var D=P%26,q=(P-D)/26,Y=1<<D;if(this.length<=q)return!1;var U=this.words[q];return!!(U&Y)},o.prototype.imaskn=function(P){c(typeof P=="number"&&P>=0);var D=P%26,q=(P-D)/26;if(c(this.negative===0,"imaskn works only with positive numbers"),this.length<=q)return this;if(D!==0&&q++,this.length=Math.min(q,this.length),D!==0){var Y=67108863^67108863>>>D<<D;this.words[this.length-1]&=Y}return this.strip()},o.prototype.maskn=function(P){return this.clone().imaskn(P)},o.prototype.iaddn=function(P){return c(typeof P=="number"),c(P<67108864),P<0?this.isubn(-P):this.negative!==0?this.length===1&&(this.words[0]|0)<P?(this.words[0]=P-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(P),this.negative=1,this):this._iaddn(P)},o.prototype._iaddn=function(P){this.words[0]+=P;for(var D=0;D<this.length&&this.words[D]>=67108864;D++)this.words[D]-=67108864,D===this.length-1?this.words[D+1]=1:this.words[D+1]++;return this.length=Math.max(this.length,D+1),this},o.prototype.isubn=function(P){if(c(typeof P=="number"),c(P<67108864),P<0)return this.iaddn(-P);if(this.negative!==0)return this.negative=0,this.iaddn(P),this.negative=1,this;if(this.words[0]-=P,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var D=0;D<this.length&&this.words[D]<0;D++)this.words[D]+=67108864,this.words[D+1]-=1;return this.strip()},o.prototype.addn=function(P){return this.clone().iaddn(P)},o.prototype.subn=function(P){return this.clone().isubn(P)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(P,D,q){var Y=P.length+q,U;this._expand(Y);var j,Q=0;for(U=0;U<P.length;U++){j=(this.words[U+q]|0)+Q;var X=(P.words[U]|0)*D;j-=X&67108863,Q=(j>>26)-(X/67108864|0),this.words[U+q]=j&67108863}for(;U<this.length-q;U++)j=(this.words[U+q]|0)+Q,Q=j>>26,this.words[U+q]=j&67108863;if(Q===0)return this.strip();for(c(Q===-1),Q=0,U=0;U<this.length;U++)j=-(this.words[U]|0)+Q,Q=j>>26,this.words[U]=j&67108863;return this.negative=1,this.strip()},o.prototype._wordDiv=function(P,D){var q=this.length-P.length,Y=this.clone(),U=P,j=U.words[U.length-1]|0,Q=this._countBits(j);q=26-Q,q!==0&&(U=U.ushln(q),Y.iushln(q),j=U.words[U.length-1]|0);var X=Y.length-U.length,F;if(D!=="mod"){F=new o(null),F.length=X+1,F.words=new Array(F.length);for(var Z=0;Z<F.length;Z++)F.words[Z]=0}var J=Y.clone()._ishlnsubmul(U,1,X);J.negative===0&&(Y=J,F&&(F.words[X]=1));for(var ce=X-1;ce>=0;ce--){var re=(Y.words[U.length+ce]|0)*67108864+(Y.words[U.length+ce-1]|0);for(re=Math.min(re/j|0,67108863),Y._ishlnsubmul(U,re,ce);Y.negative!==0;)re--,Y.negative=0,Y._ishlnsubmul(U,1,ce),Y.isZero()||(Y.negative^=1);F&&(F.words[ce]=re)}return F&&F.strip(),Y.strip(),D!=="div"&&q!==0&&Y.iushrn(q),{div:F||null,mod:Y}},o.prototype.divmod=function(P,D,q){if(c(!P.isZero()),this.isZero())return{div:new o(0),mod:new o(0)};var Y,U,j;return this.negative!==0&&P.negative===0?(j=this.neg().divmod(P,D),D!=="mod"&&(Y=j.div.neg()),D!=="div"&&(U=j.mod.neg(),q&&U.negative!==0&&U.iadd(P)),{div:Y,mod:U}):this.negative===0&&P.negative!==0?(j=this.divmod(P.neg(),D),D!=="mod"&&(Y=j.div.neg()),{div:Y,mod:j.mod}):this.negative&P.negative?(j=this.neg().divmod(P.neg(),D),D!=="div"&&(U=j.mod.neg(),q&&U.negative!==0&&U.isub(P)),{div:j.div,mod:U}):P.length>this.length||this.cmp(P)<0?{div:new o(0),mod:this}:P.length===1?D==="div"?{div:this.divn(P.words[0]),mod:null}:D==="mod"?{div:null,mod:new o(this.modn(P.words[0]))}:{div:this.divn(P.words[0]),mod:new o(this.modn(P.words[0]))}:this._wordDiv(P,D)},o.prototype.div=function(P){return this.divmod(P,"div",!1).div},o.prototype.mod=function(P){return this.divmod(P,"mod",!1).mod},o.prototype.umod=function(P){return this.divmod(P,"mod",!0).mod},o.prototype.divRound=function(P){var D=this.divmod(P);if(D.mod.isZero())return D.div;var q=D.div.negative!==0?D.mod.isub(P):D.mod,Y=P.ushrn(1),U=P.andln(1),j=q.cmp(Y);return j<0||U===1&&j===0?D.div:D.div.negative!==0?D.div.isubn(1):D.div.iaddn(1)},o.prototype.modn=function(P){c(P<=67108863);for(var D=(1<<26)%P,q=0,Y=this.length-1;Y>=0;Y--)q=(D*q+(this.words[Y]|0))%P;return q},o.prototype.idivn=function(P){c(P<=67108863);for(var D=0,q=this.length-1;q>=0;q--){var Y=(this.words[q]|0)+D*67108864;this.words[q]=Y/P|0,D=Y%P}return this.strip()},o.prototype.divn=function(P){return this.clone().idivn(P)},o.prototype.egcd=function(P){c(P.negative===0),c(!P.isZero());var D=this,q=P.clone();D.negative!==0?D=D.umod(P):D=D.clone();for(var Y=new o(1),U=new o(0),j=new o(0),Q=new o(1),X=0;D.isEven()&&q.isEven();)D.iushrn(1),q.iushrn(1),++X;for(var F=q.clone(),Z=D.clone();!D.isZero();){for(var J=0,ce=1;!(D.words[0]&ce)&&J<26;++J,ce<<=1);if(J>0)for(D.iushrn(J);J-- >0;)(Y.isOdd()||U.isOdd())&&(Y.iadd(F),U.isub(Z)),Y.iushrn(1),U.iushrn(1);for(var re=0,ie=1;!(q.words[0]&ie)&&re<26;++re,ie<<=1);if(re>0)for(q.iushrn(re);re-- >0;)(j.isOdd()||Q.isOdd())&&(j.iadd(F),Q.isub(Z)),j.iushrn(1),Q.iushrn(1);D.cmp(q)>=0?(D.isub(q),Y.isub(j),U.isub(Q)):(q.isub(D),j.isub(Y),Q.isub(U))}return{a:j,b:Q,gcd:q.iushln(X)}},o.prototype._invmp=function(P){c(P.negative===0),c(!P.isZero());var D=this,q=P.clone();D.negative!==0?D=D.umod(P):D=D.clone();for(var Y=new o(1),U=new o(0),j=q.clone();D.cmpn(1)>0&&q.cmpn(1)>0;){for(var Q=0,X=1;!(D.words[0]&X)&&Q<26;++Q,X<<=1);if(Q>0)for(D.iushrn(Q);Q-- >0;)Y.isOdd()&&Y.iadd(j),Y.iushrn(1);for(var F=0,Z=1;!(q.words[0]&Z)&&F<26;++F,Z<<=1);if(F>0)for(q.iushrn(F);F-- >0;)U.isOdd()&&U.iadd(j),U.iushrn(1);D.cmp(q)>=0?(D.isub(q),Y.isub(U)):(q.isub(D),U.isub(Y))}var J;return D.cmpn(1)===0?J=Y:J=U,J.cmpn(0)<0&&J.iadd(P),J},o.prototype.gcd=function(P){if(this.isZero())return P.abs();if(P.isZero())return this.abs();var D=this.clone(),q=P.clone();D.negative=0,q.negative=0;for(var Y=0;D.isEven()&&q.isEven();Y++)D.iushrn(1),q.iushrn(1);do{for(;D.isEven();)D.iushrn(1);for(;q.isEven();)q.iushrn(1);var U=D.cmp(q);if(U<0){var j=D;D=q,q=j}else if(U===0||q.cmpn(1)===0)break;D.isub(q)}while(!0);return q.iushln(Y)},o.prototype.invm=function(P){return this.egcd(P).a.umod(P)},o.prototype.isEven=function(){return(this.words[0]&1)===0},o.prototype.isOdd=function(){return(this.words[0]&1)===1},o.prototype.andln=function(P){return this.words[0]&P},o.prototype.bincn=function(P){c(typeof P=="number");var D=P%26,q=(P-D)/26,Y=1<<D;if(this.length<=q)return this._expand(q+1),this.words[q]|=Y,this;for(var U=Y,j=q;U!==0&&j<this.length;j++){var Q=this.words[j]|0;Q+=U,U=Q>>>26,Q&=67108863,this.words[j]=Q}return U!==0&&(this.words[j]=U,this.length++),this},o.prototype.isZero=function(){return this.length===1&&this.words[0]===0},o.prototype.cmpn=function(P){var D=P<0;if(this.negative!==0&&!D)return-1;if(this.negative===0&&D)return 1;this.strip();var q;if(this.length>1)q=1;else{D&&(P=-P),c(P<=67108863,"Number is too big");var Y=this.words[0]|0;q=Y===P?0:Y<P?-1:1}return this.negative!==0?-q|0:q},o.prototype.cmp=function(P){if(this.negative!==0&&P.negative===0)return-1;if(this.negative===0&&P.negative!==0)return 1;var D=this.ucmp(P);return this.negative!==0?-D|0:D},o.prototype.ucmp=function(P){if(this.length>P.length)return 1;if(this.length<P.length)return-1;for(var D=0,q=this.length-1;q>=0;q--){var Y=this.words[q]|0,U=P.words[q]|0;if(Y!==U){Y<U?D=-1:Y>U&&(D=1);break}}return D},o.prototype.gtn=function(P){return this.cmpn(P)===1},o.prototype.gt=function(P){return this.cmp(P)===1},o.prototype.gten=function(P){return this.cmpn(P)>=0},o.prototype.gte=function(P){return this.cmp(P)>=0},o.prototype.ltn=function(P){return this.cmpn(P)===-1},o.prototype.lt=function(P){return this.cmp(P)===-1},o.prototype.lten=function(P){return this.cmpn(P)<=0},o.prototype.lte=function(P){return this.cmp(P)<=0},o.prototype.eqn=function(P){return this.cmpn(P)===0},o.prototype.eq=function(P){return this.cmp(P)===0},o.red=function(P){return new z(P)},o.prototype.toRed=function(P){return c(!this.red,"Already a number in reduction context"),c(this.negative===0,"red works only with positives"),P.convertTo(this)._forceRed(P)},o.prototype.fromRed=function(){return c(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(P){return this.red=P,this},o.prototype.forceRed=function(P){return c(!this.red,"Already a number in reduction context"),this._forceRed(P)},o.prototype.redAdd=function(P){return c(this.red,"redAdd works only with red numbers"),this.red.add(this,P)},o.prototype.redIAdd=function(P){return c(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,P)},o.prototype.redSub=function(P){return c(this.red,"redSub works only with red numbers"),this.red.sub(this,P)},o.prototype.redISub=function(P){return c(this.red,"redISub works only with red numbers"),this.red.isub(this,P)},o.prototype.redShl=function(P){return c(this.red,"redShl works only with red numbers"),this.red.shl(this,P)},o.prototype.redMul=function(P){return c(this.red,"redMul works only with red numbers"),this.red._verify2(this,P),this.red.mul(this,P)},o.prototype.redIMul=function(P){return c(this.red,"redMul works only with red numbers"),this.red._verify2(this,P),this.red.imul(this,P)},o.prototype.redSqr=function(){return c(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return c(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return c(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return c(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return c(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(P){return c(this.red&&!P.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,P)};var O={k256:null,p224:null,p192:null,p25519:null};function R(W,P){this.name=W,this.p=new o(P,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}R.prototype._tmp=function(){var P=new o(null);return P.words=new Array(Math.ceil(this.n/13)),P},R.prototype.ireduce=function(P){var D=P,q;do this.split(D,this.tmp),D=this.imulK(D),D=D.iadd(this.tmp),q=D.bitLength();while(q>this.n);var Y=q<this.n?-1:D.ucmp(this.p);return Y===0?(D.words[0]=0,D.length=1):Y>0?D.isub(this.p):D.strip(),D},R.prototype.split=function(P,D){P.iushrn(this.n,0,D)},R.prototype.imulK=function(P){return P.imul(this.k)};function B(){R.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}i(B,R),B.prototype.split=function(P,D){for(var q=4194303,Y=Math.min(P.length,9),U=0;U<Y;U++)D.words[U]=P.words[U];if(D.length=Y,P.length<=9){P.words[0]=0,P.length=1;return}var j=P.words[9];for(D.words[D.length++]=j&q,U=10;U<P.length;U++){var Q=P.words[U]|0;P.words[U-10]=(Q&q)<<4|j>>>22,j=Q}j>>>=22,P.words[U-10]=j,j===0&&P.length>10?P.length-=10:P.length-=9},B.prototype.imulK=function(P){P.words[P.length]=0,P.words[P.length+1]=0,P.length+=2;for(var D=0,q=0;q<P.length;q++){var Y=P.words[q]|0;D+=Y*977,P.words[q]=D&67108863,D=Y*64+(D/67108864|0)}return P.words[P.length-1]===0&&(P.length--,P.words[P.length-1]===0&&P.length--),P};function M(){R.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}i(M,R);function L(){R.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}i(L,R);function ee(){R.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}i(ee,R),ee.prototype.imulK=function(P){for(var D=0,q=0;q<P.length;q++){var Y=(P.words[q]|0)*19+D,U=Y&67108863;Y>>>=26,P.words[q]=U,D=Y}return D!==0&&(P.words[P.length++]=D),P},o._prime=function(P){if(O[P])return O[P];var D;if(P==="k256")D=new B;else if(P==="p224")D=new M;else if(P==="p192")D=new L;else if(P==="p25519")D=new ee;else throw new Error("Unknown prime "+P);return O[P]=D,D};function z(W){if(typeof W=="string"){var P=o._prime(W);this.m=P.p,this.prime=P}else c(W.gtn(1),"modulus must be greater than 1"),this.m=W,this.prime=null}z.prototype._verify1=function(P){c(P.negative===0,"red works only with positives"),c(P.red,"red works only with red numbers")},z.prototype._verify2=function(P,D){c((P.negative|D.negative)===0,"red works only with positives"),c(P.red&&P.red===D.red,"red works only with red numbers")},z.prototype.imod=function(P){return this.prime?this.prime.ireduce(P)._forceRed(this):P.umod(this.m)._forceRed(this)},z.prototype.neg=function(P){return P.isZero()?P.clone():this.m.sub(P)._forceRed(this)},z.prototype.add=function(P,D){this._verify2(P,D);var q=P.add(D);return q.cmp(this.m)>=0&&q.isub(this.m),q._forceRed(this)},z.prototype.iadd=function(P,D){this._verify2(P,D);var q=P.iadd(D);return q.cmp(this.m)>=0&&q.isub(this.m),q},z.prototype.sub=function(P,D){this._verify2(P,D);var q=P.sub(D);return q.cmpn(0)<0&&q.iadd(this.m),q._forceRed(this)},z.prototype.isub=function(P,D){this._verify2(P,D);var q=P.isub(D);return q.cmpn(0)<0&&q.iadd(this.m),q},z.prototype.shl=function(P,D){return this._verify1(P),this.imod(P.ushln(D))},z.prototype.imul=function(P,D){return this._verify2(P,D),this.imod(P.imul(D))},z.prototype.mul=function(P,D){return this._verify2(P,D),this.imod(P.mul(D))},z.prototype.isqr=function(P){return this.imul(P,P.clone())},z.prototype.sqr=function(P){return this.mul(P,P)},z.prototype.sqrt=function(P){if(P.isZero())return P.clone();var D=this.m.andln(3);if(c(D%2===1),D===3){var q=this.m.add(new o(1)).iushrn(2);return this.pow(P,q)}for(var Y=this.m.subn(1),U=0;!Y.isZero()&&Y.andln(1)===0;)U++,Y.iushrn(1);c(!Y.isZero());var j=new o(1).toRed(this),Q=j.redNeg(),X=this.m.subn(1).iushrn(1),F=this.m.bitLength();for(F=new o(2*F*F).toRed(this);this.pow(F,X).cmp(Q)!==0;)F.redIAdd(Q);for(var Z=this.pow(F,Y),J=this.pow(P,Y.addn(1).iushrn(1)),ce=this.pow(P,Y),re=U;ce.cmp(j)!==0;){for(var ie=ce,fe=0;ie.cmp(j)!==0;fe++)ie=ie.redSqr();c(fe<re);var pe=this.pow(Z,new o(1).iushln(re-fe-1));J=J.redMul(pe),Z=pe.redSqr(),ce=ce.redMul(Z),re=fe}return J},z.prototype.invm=function(P){var D=P._invmp(this.m);return D.negative!==0?(D.negative=0,this.imod(D).redNeg()):this.imod(D)},z.prototype.pow=function(P,D){if(D.isZero())return new o(1);if(D.cmpn(1)===0)return P.clone();var q=4,Y=new Array(1<<q);Y[0]=new o(1).toRed(this),Y[1]=P;for(var U=2;U<Y.length;U++)Y[U]=this.mul(Y[U-1],P);var j=Y[0],Q=0,X=0,F=D.bitLength()%26;for(F===0&&(F=26),U=D.length-1;U>=0;U--){for(var Z=D.words[U],J=F-1;J>=0;J--){var ce=Z>>J&1;if(j!==Y[0]&&(j=this.sqr(j)),ce===0&&Q===0){X=0;continue}Q<<=1,Q|=ce,X++,!(X!==q&&(U!==0||J!==0))&&(j=this.mul(j,Y[Q]),X=0,Q=0)}F=26}return j},z.prototype.convertTo=function(P){var D=P.umod(this.m);return D===P?D.clone():D},z.prototype.convertFrom=function(P){var D=P.clone();return D.red=null,D},o.mont=function(P){return new oe(P)};function oe(W){z.call(this,W),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}i(oe,z),oe.prototype.convertTo=function(P){return this.imod(P.ushln(this.shift))},oe.prototype.convertFrom=function(P){var D=this.imod(P.mul(this.rinv));return D.red=null,D},oe.prototype.imul=function(P,D){if(P.isZero()||D.isZero())return P.words[0]=0,P.length=1,P;var q=P.imul(D),Y=q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),U=q.isub(Y).iushrn(this.shift),j=U;return U.cmp(this.m)>=0?j=U.isub(this.m):U.cmpn(0)<0&&(j=U.iadd(this.m)),j._forceRed(this)},oe.prototype.mul=function(P,D){if(P.isZero()||D.isZero())return new o(0)._forceRed(this);var q=P.mul(D),Y=q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),U=q.isub(Y).iushrn(this.shift),j=U;return U.cmp(this.m)>=0?j=U.isub(this.m):U.cmpn(0)<0&&(j=U.iadd(this.m)),j._forceRed(this)},oe.prototype.invm=function(P){var D=this.imod(P._invmp(this.m).mul(this.r2));return D._forceRed(this)}})(e,commonjsGlobal)})(bn$1);var src$7=function(a){if(typeof a!="string")throw new Error("[is-hex-prefixed] value must be type 'string', is currently type "+typeof a+", while checking isHexPrefixed.");return a.slice(0,2)==="0x"},isHexPrefixed$3=src$7,src$6=function(a){return typeof a!="string"?a:isHexPrefixed$3(a)?a.slice(2):a},BN$f=bnExports,stripHexPrefix$4=src$6,src$5=function(a){if(typeof a=="string"||typeof a=="number"){var t=new BN$f(1),c=String(a).toLowerCase().trim(),i=c.substr(0,2)==="0x"||c.substr(0,3)==="-0x",o=stripHexPrefix$4(c);if(o.substr(0,1)==="-"&&(o=stripHexPrefix$4(o.slice(1)),t=new BN$f(-1,10)),o=o===""?"0":o,!o.match(/^-?[0-9]+$/)&&o.match(/^[0-9A-Fa-f]+$/)||o.match(/^[a-fA-F]+$/)||i===!0&&o.match(/^[0-9A-Fa-f]+$/))return new BN$f(o,16).mul(t);if((o.match(/^-?[0-9]+$/)||o==="")&&i===!1)return new BN$f(o,10).mul(t)}else if(typeof a=="object"&&a.toString&&!a.pop&&!a.push&&a.toString(10).match(/^-?[0-9]+$/)&&(a.mul||a.dividedToIntegerBy))return new BN$f(a.toString(10),10);throw new Error("[number-to-bn] while converting number "+JSON.stringify(a)+" to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.")},BN$e=bnExports,numberToBN$1=src$5,zero$2=new BN$e(0),negative1=new BN$e(-1),unitMap={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};function getValueOfUnit(e){var a=e?e.toLowerCase():"ether",t=unitMap[a];if(typeof t!="string")throw new Error("[ethjs-unit] the unit provided "+e+" doesn't exists, please use the one of the following units "+JSON.stringify(unitMap,null,2));return new BN$e(t,10)}function numberToString(e){if(typeof e=="string"){if(!e.match(/^-?[0-9.]+$/))throw new Error("while converting number to string, invalid number value '"+e+"', should be a number matching (^-?[0-9.]+).");return e}else{if(typeof e=="number")return String(e);if(typeof e=="object"&&e.toString&&(e.toTwos||e.dividedToIntegerBy))return e.toPrecision?String(e.toPrecision()):e.toString(10)}throw new Error("while converting number to string, invalid number value '"+e+"' type "+typeof e+".")}function fromWei$1(e,a,t){var c=numberToBN$1(e),i=c.lt(zero$2),o=getValueOfUnit(a),b=unitMap[a].length-1||1,u=t||{};i&&(c=c.mul(negative1));for(var l=c.mod(o).toString(10);l.length<b;)l="0"+l;u.pad||(l=l.match(/^([0-9]*[1-9]|0)(0*)/)[1]);var x=c.div(o).toString(10);u.commify&&(x=x.replace(/\B(?=(\d{3})+(?!\d))/g,","));var g=""+x+(l=="0"?"":"."+l);return i&&(g="-"+g),g}function toWei$1(e,a){var t=numberToString(e),c=getValueOfUnit(a),i=unitMap[a].length-1||1,o=t.substring(0,1)==="-";if(o&&(t=t.substring(1)),t===".")throw new Error("[ethjs-unit] while converting number "+e+" to wei, invalid value");var b=t.split(".");if(b.length>2)throw new Error("[ethjs-unit] while converting number "+e+" to wei,  too many decimal points");var u=b[0],l=b[1];if(u||(u="0"),l||(l="0"),l.length>i)throw new Error("[ethjs-unit] while converting number "+e+" to wei, too many decimal places");for(;l.length<i;)l+="0";u=new BN$e(u),l=new BN$e(l);var x=u.mul(c).add(l);return o&&(x=x.mul(negative1)),new BN$e(x.toString(10),10)}var lib$9={unitMap,numberToString,getValueOfUnit,fromWei:fromWei$1,toWei:toWei$1},utf8$1={};/*! https://mths.be/utf8js v3.0.0 by @mathias */(function(e){(function(a){var t=String.fromCharCode;function c(I){for(var A=[],C=0,O=I.length,R,B;C<O;)R=I.charCodeAt(C++),R>=55296&&R<=56319&&C<O?(B=I.charCodeAt(C++),(B&64512)==56320?A.push(((R&1023)<<10)+(B&1023)+65536):(A.push(R),C--)):A.push(R);return A}function i(I){for(var A=I.length,C=-1,O,R="";++C<A;)O=I[C],O>65535&&(O-=65536,R+=t(O>>>10&1023|55296),O=56320|O&1023),R+=t(O);return R}function o(I){if(I>=55296&&I<=57343)throw Error("Lone surrogate U+"+I.toString(16).toUpperCase()+" is not a scalar value")}function b(I,A){return t(I>>A&63|128)}function u(I){if(!(I&4294967168))return t(I);var A="";return I&4294965248?I&4294901760?I&4292870144||(A=t(I>>18&7|240),A+=b(I,12),A+=b(I,6)):(o(I),A=t(I>>12&15|224),A+=b(I,6)):A=t(I>>6&31|192),A+=t(I&63|128),A}function l(I){for(var A=c(I),C=A.length,O=-1,R,B="";++O<C;)R=A[O],B+=u(R);return B}function x(){if(S>=E)throw Error("Invalid byte index");var I=v[S]&255;if(S++,(I&192)==128)return I&63;throw Error("Invalid continuation byte")}function g(){var I,A,C,O,R;if(S>E)throw Error("Invalid byte index");if(S==E)return!1;if(I=v[S]&255,S++,!(I&128))return I;if((I&224)==192){if(A=x(),R=(I&31)<<6|A,R>=128)return R;throw Error("Invalid continuation byte")}if((I&240)==224){if(A=x(),C=x(),R=(I&15)<<12|A<<6|C,R>=2048)return o(R),R;throw Error("Invalid continuation byte")}if((I&248)==240&&(A=x(),C=x(),O=x(),R=(I&7)<<18|A<<12|C<<6|O,R>=65536&&R<=1114111))return R;throw Error("Invalid UTF-8 detected")}var v,E,S;function T(I){v=c(I),E=v.length,S=0;for(var A=[],C;(C=g())!==!1;)A.push(C);return i(A)}a.version="3.0.0",a.encode=l,a.decode=T})(e)})(utf8$1);var dist_browser$3={},constants$1={},externals={},dist_browser$2={},__importDefault$5=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(dist_browser$2,"__esModule",{value:!0});dist_browser$2.getLength=dist_browser$2.decode=dist_browser$2.encode=void 0;var bn_js_1$1=__importDefault$5(bnExports$1);function encode$p(e){if(Array.isArray(e)){for(var a=[],t=0;t<e.length;t++)a.push(encode$p(e[t]));var c=buffer$2.Buffer.concat(a);return buffer$2.Buffer.concat([encodeLength(c.length,192),c])}else{var i=toBuffer$1(e);return i.length===1&&i[0]<128?i:buffer$2.Buffer.concat([encodeLength(i.length,128),i])}}dist_browser$2.encode=encode$p;function safeParseInt(e,a){if(e[0]==="0"&&e[1]==="0")throw new Error("invalid RLP: extra zeros");return parseInt(e,a)}function encodeLength(e,a){if(e<56)return buffer$2.Buffer.from([e+a]);var t=intToHex$1(e),c=t.length/2,i=intToHex$1(a+55+c);return buffer$2.Buffer.from(i+t,"hex")}function decode$o(e,a){if(a===void 0&&(a=!1),!e||e.length===0)return buffer$2.Buffer.from([]);var t=toBuffer$1(e),c=_decode(t);if(a)return c;if(c.remainder.length!==0)throw new Error("invalid remainder");return c.data}dist_browser$2.decode=decode$o;function getLength(e){if(!e||e.length===0)return buffer$2.Buffer.from([]);var a=toBuffer$1(e),t=a[0];if(t<=127)return a.length;if(t<=183)return t-127;if(t<=191)return t-182;if(t<=247)return t-191;var c=t-246,i=safeParseInt(a.slice(1,c).toString("hex"),16);return c+i}dist_browser$2.getLength=getLength;function _decode(e){var a,t,c,i,o,b=[],u=e[0];if(u<=127)return{data:e.slice(0,1),remainder:e.slice(1)};if(u<=183){if(a=u-127,u===128?c=buffer$2.Buffer.from([]):c=e.slice(1,a),a===2&&c[0]<128)throw new Error("invalid rlp encoding: byte must be less 0x80");return{data:c,remainder:e.slice(a)}}else if(u<=191){if(t=u-182,e.length-1<t)throw new Error("invalid RLP: not enough bytes for string length");if(a=safeParseInt(e.slice(1,t).toString("hex"),16),a<=55)throw new Error("invalid RLP: expected string length to be greater than 55");if(c=e.slice(t,a+t),c.length<a)throw new Error("invalid RLP: not enough bytes for string");return{data:c,remainder:e.slice(a+t)}}else if(u<=247){for(a=u-191,i=e.slice(1,a);i.length;)o=_decode(i),b.push(o.data),i=o.remainder;return{data:b,remainder:e.slice(a)}}else{t=u-246,a=safeParseInt(e.slice(1,t).toString("hex"),16);var l=t+a;if(l>e.length)throw new Error("invalid rlp: total length is larger than the data");if(i=e.slice(t,l),i.length===0)throw new Error("invalid rlp, List has a invalid length");for(;i.length;)o=_decode(i),b.push(o.data),i=o.remainder;return{data:b,remainder:e.slice(l)}}}function isHexPrefixed$2(e){return e.slice(0,2)==="0x"}function stripHexPrefix$3(e){return typeof e!="string"?e:isHexPrefixed$2(e)?e.slice(2):e}function intToHex$1(e){if(e<0)throw new Error("Invalid integer as argument, must be unsigned!");var a=e.toString(16);return a.length%2?"0"+a:a}function padToEven$2(e){return e.length%2?"0"+e:e}function intToBuffer$2(e){var a=intToHex$1(e);return buffer$2.Buffer.from(a,"hex")}function toBuffer$1(e){if(!buffer$2.Buffer.isBuffer(e)){if(typeof e=="string")return isHexPrefixed$2(e)?buffer$2.Buffer.from(padToEven$2(stripHexPrefix$3(e)),"hex"):buffer$2.Buffer.from(e);if(typeof e=="number"||typeof e=="bigint")return e?intToBuffer$2(e):buffer$2.Buffer.from([]);if(e==null)return buffer$2.Buffer.from([]);if(e instanceof Uint8Array)return buffer$2.Buffer.from(e);if(bn_js_1$1.default.isBN(e))return buffer$2.Buffer.from(e.toArray());throw new Error("invalid type")}return e}var __createBinding$5=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault$5=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar$5=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding$5(a,e,t);return __setModuleDefault$5(a,e),a},__importDefault$4=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(externals,"__esModule",{value:!0});externals.rlp=externals.BN=void 0;var bn_js_1=__importDefault$4(bnExports$1);externals.BN=bn_js_1.default;var rlp$1=__importStar$5(dist_browser$2);externals.rlp=rlp$1;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.KECCAK256_RLP=e.KECCAK256_RLP_S=e.KECCAK256_RLP_ARRAY=e.KECCAK256_RLP_ARRAY_S=e.KECCAK256_NULL=e.KECCAK256_NULL_S=e.TWO_POW256=e.MAX_INTEGER=e.MAX_UINT64=void 0;var a=buffer$2,t=externals;e.MAX_UINT64=new t.BN("ffffffffffffffff",16),e.MAX_INTEGER=new t.BN("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",16),e.TWO_POW256=new t.BN("10000000000000000000000000000000000000000000000000000000000000000",16),e.KECCAK256_NULL_S="c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",e.KECCAK256_NULL=a.Buffer.from(e.KECCAK256_NULL_S,"hex"),e.KECCAK256_RLP_ARRAY_S="1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",e.KECCAK256_RLP_ARRAY=a.Buffer.from(e.KECCAK256_RLP_ARRAY_S,"hex"),e.KECCAK256_RLP_S="56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",e.KECCAK256_RLP=a.Buffer.from(e.KECCAK256_RLP_S,"hex")})(constants$1);var account$1={},secp256k1$2={};const errors$8={IMPOSSIBLE_CASE:"Impossible case. Please create issue.",TWEAK_ADD:"The tweak was out of range or the resulted private key is invalid",TWEAK_MUL:"The tweak was out of range or equal to zero",CONTEXT_RANDOMIZE_UNKNOW:"Unknow error on context randomization",SECKEY_INVALID:"Private Key is invalid",PUBKEY_PARSE:"Public Key could not be parsed",PUBKEY_SERIALIZE:"Public Key serialization error",PUBKEY_COMBINE:"The sum of the public keys is not valid",SIG_PARSE:"Signature could not be parsed",SIGN:"The nonce generation function failed, or the private key was invalid",RECOVER:"Public key could not be recover",ECDH:"Scalar was invalid (zero or overflow)"};function assert$9(e,a){if(!e)throw new Error(a)}function isUint8Array(e,a,t){if(assert$9(a instanceof Uint8Array,`Expected ${e} to be an Uint8Array`),t!==void 0)if(Array.isArray(t)){const c=t.join(", "),i=`Expected ${e} to be an Uint8Array with length [${c}]`;assert$9(t.includes(a.length),i)}else{const c=`Expected ${e} to be an Uint8Array with length ${t}`;assert$9(a.length===t,c)}}function isCompressed(e){assert$9(toTypeString(e)==="Boolean","Expected compressed to be a Boolean")}function getAssertedOutput(e=t=>new Uint8Array(t),a){return typeof e=="function"&&(e=e(a)),isUint8Array("output",e,a),e}function toTypeString(e){return Object.prototype.toString.call(e).slice(8,-1)}var lib$8=e=>({contextRandomize(a){switch(assert$9(a===null||a instanceof Uint8Array,"Expected seed to be an Uint8Array or null"),a!==null&&isUint8Array("seed",a,32),e.contextRandomize(a)){case 1:throw new Error(errors$8.CONTEXT_RANDOMIZE_UNKNOW)}},privateKeyVerify(a){return isUint8Array("private key",a,32),e.privateKeyVerify(a)===0},privateKeyNegate(a){switch(isUint8Array("private key",a,32),e.privateKeyNegate(a)){case 0:return a;case 1:throw new Error(errors$8.IMPOSSIBLE_CASE)}},privateKeyTweakAdd(a,t){switch(isUint8Array("private key",a,32),isUint8Array("tweak",t,32),e.privateKeyTweakAdd(a,t)){case 0:return a;case 1:throw new Error(errors$8.TWEAK_ADD)}},privateKeyTweakMul(a,t){switch(isUint8Array("private key",a,32),isUint8Array("tweak",t,32),e.privateKeyTweakMul(a,t)){case 0:return a;case 1:throw new Error(errors$8.TWEAK_MUL)}},publicKeyVerify(a){return isUint8Array("public key",a,[33,65]),e.publicKeyVerify(a)===0},publicKeyCreate(a,t=!0,c){switch(isUint8Array("private key",a,32),isCompressed(t),c=getAssertedOutput(c,t?33:65),e.publicKeyCreate(c,a)){case 0:return c;case 1:throw new Error(errors$8.SECKEY_INVALID);case 2:throw new Error(errors$8.PUBKEY_SERIALIZE)}},publicKeyConvert(a,t=!0,c){switch(isUint8Array("public key",a,[33,65]),isCompressed(t),c=getAssertedOutput(c,t?33:65),e.publicKeyConvert(c,a)){case 0:return c;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.PUBKEY_SERIALIZE)}},publicKeyNegate(a,t=!0,c){switch(isUint8Array("public key",a,[33,65]),isCompressed(t),c=getAssertedOutput(c,t?33:65),e.publicKeyNegate(c,a)){case 0:return c;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.IMPOSSIBLE_CASE);case 3:throw new Error(errors$8.PUBKEY_SERIALIZE)}},publicKeyCombine(a,t=!0,c){assert$9(Array.isArray(a),"Expected public keys to be an Array"),assert$9(a.length>0,"Expected public keys array will have more than zero items");for(const i of a)isUint8Array("public key",i,[33,65]);switch(isCompressed(t),c=getAssertedOutput(c,t?33:65),e.publicKeyCombine(c,a)){case 0:return c;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.PUBKEY_COMBINE);case 3:throw new Error(errors$8.PUBKEY_SERIALIZE)}},publicKeyTweakAdd(a,t,c=!0,i){switch(isUint8Array("public key",a,[33,65]),isUint8Array("tweak",t,32),isCompressed(c),i=getAssertedOutput(i,c?33:65),e.publicKeyTweakAdd(i,a,t)){case 0:return i;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.TWEAK_ADD)}},publicKeyTweakMul(a,t,c=!0,i){switch(isUint8Array("public key",a,[33,65]),isUint8Array("tweak",t,32),isCompressed(c),i=getAssertedOutput(i,c?33:65),e.publicKeyTweakMul(i,a,t)){case 0:return i;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.TWEAK_MUL)}},signatureNormalize(a){switch(isUint8Array("signature",a,64),e.signatureNormalize(a)){case 0:return a;case 1:throw new Error(errors$8.SIG_PARSE)}},signatureExport(a,t){isUint8Array("signature",a,64),t=getAssertedOutput(t,72);const c={output:t,outputlen:72};switch(e.signatureExport(c,a)){case 0:return t.slice(0,c.outputlen);case 1:throw new Error(errors$8.SIG_PARSE);case 2:throw new Error(errors$8.IMPOSSIBLE_CASE)}},signatureImport(a,t){switch(isUint8Array("signature",a),t=getAssertedOutput(t,64),e.signatureImport(t,a)){case 0:return t;case 1:throw new Error(errors$8.SIG_PARSE);case 2:throw new Error(errors$8.IMPOSSIBLE_CASE)}},ecdsaSign(a,t,c={},i){isUint8Array("message",a,32),isUint8Array("private key",t,32),assert$9(toTypeString(c)==="Object","Expected options to be an Object"),c.data!==void 0&&isUint8Array("options.data",c.data),c.noncefn!==void 0&&assert$9(toTypeString(c.noncefn)==="Function","Expected options.noncefn to be a Function"),i=getAssertedOutput(i,64);const o={signature:i,recid:null};switch(e.ecdsaSign(o,a,t,c.data,c.noncefn)){case 0:return o;case 1:throw new Error(errors$8.SIGN);case 2:throw new Error(errors$8.IMPOSSIBLE_CASE)}},ecdsaVerify(a,t,c){switch(isUint8Array("signature",a,64),isUint8Array("message",t,32),isUint8Array("public key",c,[33,65]),e.ecdsaVerify(a,t,c)){case 0:return!0;case 3:return!1;case 1:throw new Error(errors$8.SIG_PARSE);case 2:throw new Error(errors$8.PUBKEY_PARSE)}},ecdsaRecover(a,t,c,i=!0,o){switch(isUint8Array("signature",a,64),assert$9(toTypeString(t)==="Number"&&t>=0&&t<=3,"Expected recovery id to be a Number within interval [0, 3]"),isUint8Array("message",c,32),isCompressed(i),o=getAssertedOutput(o,i?33:65),e.ecdsaRecover(o,a,t,c)){case 0:return o;case 1:throw new Error(errors$8.SIG_PARSE);case 2:throw new Error(errors$8.RECOVER);case 3:throw new Error(errors$8.IMPOSSIBLE_CASE)}},ecdh(a,t,c={},i){switch(isUint8Array("public key",a,[33,65]),isUint8Array("private key",t,32),assert$9(toTypeString(c)==="Object","Expected options to be an Object"),c.data!==void 0&&isUint8Array("options.data",c.data),c.hashfn!==void 0?(assert$9(toTypeString(c.hashfn)==="Function","Expected options.hashfn to be a Function"),c.xbuf!==void 0&&isUint8Array("options.xbuf",c.xbuf,32),c.ybuf!==void 0&&isUint8Array("options.ybuf",c.ybuf,32),isUint8Array("output",i)):i=getAssertedOutput(i,32),e.ecdh(i,a,t,c.data,c.hashfn,c.xbuf,c.ybuf)){case 0:return i;case 1:throw new Error(errors$8.PUBKEY_PARSE);case 2:throw new Error(errors$8.ECDH)}}});const EC$2=requireElliptic().ec,ec$2=new EC$2("secp256k1"),ecparams$1=ec$2.curve,BN$d=ecparams$1.n.constructor;function loadCompressedPublicKey(e,a){let t=new BN$d(a);if(t.cmp(ecparams$1.p)>=0)return null;t=t.toRed(ecparams$1.red);let c=t.redSqr().redIMul(t).redIAdd(ecparams$1.b).redSqrt();return e===3!==c.isOdd()&&(c=c.redNeg()),ec$2.keyPair({pub:{x:t,y:c}})}function loadUncompressedPublicKey(e,a,t){let c=new BN$d(a),i=new BN$d(t);if(c.cmp(ecparams$1.p)>=0||i.cmp(ecparams$1.p)>=0||(c=c.toRed(ecparams$1.red),i=i.toRed(ecparams$1.red),(e===6||e===7)&&i.isOdd()!==(e===7)))return null;const o=c.redSqr().redIMul(c);return i.redSqr().redISub(o.redIAdd(ecparams$1.b)).isZero()?ec$2.keyPair({pub:{x:c,y:i}}):null}function loadPublicKey(e){const a=e[0];switch(a){case 2:case 3:return e.length!==33?null:loadCompressedPublicKey(a,e.subarray(1,33));case 4:case 6:case 7:return e.length!==65?null:loadUncompressedPublicKey(a,e.subarray(1,33),e.subarray(33,65));default:return null}}function savePublicKey(e,a){const t=a.encode(null,e.length===33);for(let c=0;c<e.length;++c)e[c]=t[c]}var elliptic$1={contextRandomize(){return 0},privateKeyVerify(e){const a=new BN$d(e);return a.cmp(ecparams$1.n)<0&&!a.isZero()?0:1},privateKeyNegate(e){const a=new BN$d(e),t=ecparams$1.n.sub(a).umod(ecparams$1.n).toArrayLike(Uint8Array,"be",32);return e.set(t),0},privateKeyTweakAdd(e,a){const t=new BN$d(a);if(t.cmp(ecparams$1.n)>=0||(t.iadd(new BN$d(e)),t.cmp(ecparams$1.n)>=0&&t.isub(ecparams$1.n),t.isZero()))return 1;const c=t.toArrayLike(Uint8Array,"be",32);return e.set(c),0},privateKeyTweakMul(e,a){let t=new BN$d(a);if(t.cmp(ecparams$1.n)>=0||t.isZero())return 1;t.imul(new BN$d(e)),t.cmp(ecparams$1.n)>=0&&(t=t.umod(ecparams$1.n));const c=t.toArrayLike(Uint8Array,"be",32);return e.set(c),0},publicKeyVerify(e){return loadPublicKey(e)===null?1:0},publicKeyCreate(e,a){const t=new BN$d(a);if(t.cmp(ecparams$1.n)>=0||t.isZero())return 1;const c=ec$2.keyFromPrivate(a).getPublic();return savePublicKey(e,c),0},publicKeyConvert(e,a){const t=loadPublicKey(a);if(t===null)return 1;const c=t.getPublic();return savePublicKey(e,c),0},publicKeyNegate(e,a){const t=loadPublicKey(a);if(t===null)return 1;const c=t.getPublic();return c.y=c.y.redNeg(),savePublicKey(e,c),0},publicKeyCombine(e,a){const t=new Array(a.length);for(let i=0;i<a.length;++i)if(t[i]=loadPublicKey(a[i]),t[i]===null)return 1;let c=t[0].getPublic();for(let i=1;i<t.length;++i)c=c.add(t[i].pub);return c.isInfinity()?2:(savePublicKey(e,c),0)},publicKeyTweakAdd(e,a,t){const c=loadPublicKey(a);if(c===null)return 1;if(t=new BN$d(t),t.cmp(ecparams$1.n)>=0)return 2;const i=c.getPublic().add(ecparams$1.g.mul(t));return i.isInfinity()?2:(savePublicKey(e,i),0)},publicKeyTweakMul(e,a,t){const c=loadPublicKey(a);if(c===null)return 1;if(t=new BN$d(t),t.cmp(ecparams$1.n)>=0||t.isZero())return 2;const i=c.getPublic().mul(t);return savePublicKey(e,i),0},signatureNormalize(e){const a=new BN$d(e.subarray(0,32)),t=new BN$d(e.subarray(32,64));return a.cmp(ecparams$1.n)>=0||t.cmp(ecparams$1.n)>=0?1:(t.cmp(ec$2.nh)===1&&e.set(ecparams$1.n.sub(t).toArrayLike(Uint8Array,"be",32),32),0)},signatureExport(e,a){const t=a.subarray(0,32),c=a.subarray(32,64);if(new BN$d(t).cmp(ecparams$1.n)>=0||new BN$d(c).cmp(ecparams$1.n)>=0)return 1;const{output:i}=e;let o=i.subarray(4,4+33);o[0]=0,o.set(t,1);let b=33,u=0;for(;b>1&&o[u]===0&&!(o[u+1]&128);--b,++u);if(o=o.subarray(u),o[0]&128||b>1&&o[0]===0&&!(o[1]&128))return 1;let l=i.subarray(6+33,6+33+33);l[0]=0,l.set(c,1);let x=33,g=0;for(;x>1&&l[g]===0&&!(l[g+1]&128);--x,++g);return l=l.subarray(g),l[0]&128||x>1&&l[0]===0&&!(l[1]&128)?1:(e.outputlen=6+b+x,i[0]=48,i[1]=e.outputlen-2,i[2]=2,i[3]=o.length,i.set(o,4),i[4+b]=2,i[5+b]=l.length,i.set(l,6+b),0)},signatureImport(e,a){if(a.length<8||a.length>72||a[0]!==48||a[1]!==a.length-2||a[2]!==2)return 1;const t=a[3];if(t===0||5+t>=a.length||a[4+t]!==2)return 1;const c=a[5+t];if(c===0||6+t+c!==a.length||a[4]&128||t>1&&a[4]===0&&!(a[5]&128)||a[t+6]&128||c>1&&a[t+6]===0&&!(a[t+7]&128))return 1;let i=a.subarray(4,4+t);if(i.length===33&&i[0]===0&&(i=i.subarray(1)),i.length>32)return 1;let o=a.subarray(6+t);if(o.length===33&&o[0]===0&&(o=o.slice(1)),o.length>32)throw new Error("S length is too long");let b=new BN$d(i);b.cmp(ecparams$1.n)>=0&&(b=new BN$d(0));let u=new BN$d(a.subarray(6+t));return u.cmp(ecparams$1.n)>=0&&(u=new BN$d(0)),e.set(b.toArrayLike(Uint8Array,"be",32),0),e.set(u.toArrayLike(Uint8Array,"be",32),32),0},ecdsaSign(e,a,t,c,i){if(i){const u=i;i=l=>{const x=u(a,t,null,c,l);if(!(x instanceof Uint8Array&&x.length===32))throw new Error("This is the way");return new BN$d(x)}}const o=new BN$d(t);if(o.cmp(ecparams$1.n)>=0||o.isZero())return 1;let b;try{b=ec$2.sign(a,t,{canonical:!0,k:i,pers:c})}catch{return 1}return e.signature.set(b.r.toArrayLike(Uint8Array,"be",32),0),e.signature.set(b.s.toArrayLike(Uint8Array,"be",32),32),e.recid=b.recoveryParam,0},ecdsaVerify(e,a,t){const c={r:e.subarray(0,32),s:e.subarray(32,64)},i=new BN$d(c.r),o=new BN$d(c.s);if(i.cmp(ecparams$1.n)>=0||o.cmp(ecparams$1.n)>=0)return 1;if(o.cmp(ec$2.nh)===1||i.isZero()||o.isZero())return 3;const b=loadPublicKey(t);if(b===null)return 2;const u=b.getPublic();return ec$2.verify(a,c,u)?0:3},ecdsaRecover(e,a,t,c){const i={r:a.slice(0,32),s:a.slice(32,64)},o=new BN$d(i.r),b=new BN$d(i.s);if(o.cmp(ecparams$1.n)>=0||b.cmp(ecparams$1.n)>=0)return 1;if(o.isZero()||b.isZero())return 2;let u;try{u=ec$2.recoverPubKey(c,i,t)}catch{return 2}return savePublicKey(e,u),0},ecdh(e,a,t,c,i,o,b){const u=loadPublicKey(a);if(u===null)return 1;const l=new BN$d(t);if(l.cmp(ecparams$1.n)>=0||l.isZero())return 2;const x=u.getPublic().mul(l);if(i===void 0){const g=x.encode(null,!0),v=ec$2.hash().update(g).digest();for(let E=0;E<32;++E)e[E]=v[E]}else{o||(o=new Uint8Array(32));const g=x.getX().toArray("be",32);for(let T=0;T<32;++T)o[T]=g[T];b||(b=new Uint8Array(32));const v=x.getY().toArray("be",32);for(let T=0;T<32;++T)b[T]=v[T];const E=i(o,b,c);if(!(E instanceof Uint8Array&&E.length===e.length))return 2;e.set(E)}return 0}},elliptic=lib$8(elliptic$1),random$1={};Object.defineProperty(random$1,"__esModule",{value:!0});var randombytes$1=requireBrowser();function getRandomBytes(e){return new Promise(function(a,t){randombytes$1(e,function(c,i){if(c){t(c);return}a(i)})})}random$1.getRandomBytes=getRandomBytes;function getRandomBytesSync(e){return randombytes$1(e)}random$1.getRandomBytesSync=getRandomBytesSync;(function(e){var a=commonjsGlobal&&commonjsGlobal.__awaiter||function(x,g,v,E){function S(T){return T instanceof v?T:new v(function(I){I(T)})}return new(v||(v=Promise))(function(T,I){function A(R){try{O(E.next(R))}catch(B){I(B)}}function C(R){try{O(E.throw(R))}catch(B){I(B)}}function O(R){R.done?T(R.value):S(R.value).then(A,C)}O((E=E.apply(x,g||[])).next())})},t=commonjsGlobal&&commonjsGlobal.__generator||function(x,g){var v={label:0,sent:function(){if(T[0]&1)throw T[1];return T[1]},trys:[],ops:[]},E,S,T,I;return I={next:A(0),throw:A(1),return:A(2)},typeof Symbol=="function"&&(I[Symbol.iterator]=function(){return this}),I;function A(O){return function(R){return C([O,R])}}function C(O){if(E)throw new TypeError("Generator is already executing.");for(;v;)try{if(E=1,S&&(T=O[0]&2?S.return:O[0]?S.throw||((T=S.return)&&T.call(S),0):S.next)&&!(T=T.call(S,O[1])).done)return T;switch(S=0,T&&(O=[O[0]&2,T.value]),O[0]){case 0:case 1:T=O;break;case 4:return v.label++,{value:O[1],done:!1};case 5:v.label++,S=O[1],O=[0];continue;case 7:O=v.ops.pop(),v.trys.pop();continue;default:if(T=v.trys,!(T=T.length>0&&T[T.length-1])&&(O[0]===6||O[0]===2)){v=0;continue}if(O[0]===3&&(!T||O[1]>T[0]&&O[1]<T[3])){v.label=O[1];break}if(O[0]===6&&v.label<T[1]){v.label=T[1],T=O;break}if(T&&v.label<T[2]){v.label=T[2],v.ops.push(O);break}T[2]&&v.ops.pop(),v.trys.pop();continue}O=g.call(x,v)}catch(R){O=[6,R],S=0}finally{E=T=0}if(O[0]&5)throw O[1];return{value:O[0]?O[1]:void 0,done:!0}}};function c(x){for(var g in x)e.hasOwnProperty(g)||(e[g]=x[g])}Object.defineProperty(e,"__esModule",{value:!0});var i=elliptic,o=random$1,b=32;function u(){return a(this,void 0,void 0,function(){var x;return t(this,function(g){switch(g.label){case 0:return[4,o.getRandomBytes(b)];case 1:return x=g.sent(),i.privateKeyVerify(x)?[2,x]:[3,0];case 2:return[2]}})})}e.createPrivateKey=u;function l(){for(;;){var x=o.getRandomBytesSync(b);if(i.privateKeyVerify(x))return x}}e.createPrivateKeySync=l,c(elliptic)})(secp256k1$2);var internal={};Object.defineProperty(internal,"__esModule",{value:!0});internal.isHexString=internal.getKeys=internal.fromAscii=internal.fromUtf8=internal.toAscii=internal.arrayContainsArray=internal.getBinarySize=internal.padToEven=internal.stripHexPrefix=internal.isHexPrefixed=void 0;function isHexPrefixed$1(e){if(typeof e!="string")throw new Error("[isHexPrefixed] input must be type 'string', received type ".concat(typeof e));return e[0]==="0"&&e[1]==="x"}internal.isHexPrefixed=isHexPrefixed$1;var stripHexPrefix$2=function(e){if(typeof e!="string")throw new Error("[stripHexPrefix] input must be type 'string', received ".concat(typeof e));return isHexPrefixed$1(e)?e.slice(2):e};internal.stripHexPrefix=stripHexPrefix$2;function padToEven$1(e){var a=e;if(typeof a!="string")throw new Error("[padToEven] value must be type 'string', received ".concat(typeof a));return a.length%2&&(a="0".concat(a)),a}internal.padToEven=padToEven$1;function getBinarySize$1(e){if(typeof e!="string")throw new Error("[getBinarySize] method requires input type 'string', recieved ".concat(typeof e));return buffer$2.Buffer.byteLength(e,"utf8")}internal.getBinarySize=getBinarySize$1;function arrayContainsArray$1(e,a,t){if(Array.isArray(e)!==!0)throw new Error("[arrayContainsArray] method requires input 'superset' to be an array, got type '".concat(typeof e,"'"));if(Array.isArray(a)!==!0)throw new Error("[arrayContainsArray] method requires input 'subset' to be an array, got type '".concat(typeof a,"'"));return a[t?"some":"every"](function(c){return e.indexOf(c)>=0})}internal.arrayContainsArray=arrayContainsArray$1;function toAscii$1(e){var a="",t=0,c=e.length;for(e.substring(0,2)==="0x"&&(t=2);t<c;t+=2){var i=parseInt(e.substr(t,2),16);a+=String.fromCharCode(i)}return a}internal.toAscii=toAscii$1;function fromUtf8$1(e){var a=buffer$2.Buffer.from(e,"utf8");return"0x".concat(padToEven$1(a.toString("hex")).replace(/^0+|0+$/g,""))}internal.fromUtf8=fromUtf8$1;function fromAscii$1(e){for(var a="",t=0;t<e.length;t++){var c=e.charCodeAt(t),i=c.toString(16);a+=i.length<2?"0".concat(i):i}return"0x".concat(a)}internal.fromAscii=fromAscii$1;function getKeys$1(e,a,t){if(!Array.isArray(e))throw new Error("[getKeys] method expects input 'params' to be an array, got ".concat(typeof e));if(typeof a!="string")throw new Error("[getKeys] method expects input 'key' to be type 'string', got ".concat(typeof e));for(var c=[],i=0;i<e.length;i++){var o=e[i][a];if(t&&!o)o="";else if(typeof o!="string")throw new Error("invalid abi - expected type 'string', received ".concat(typeof o));c.push(o)}return c}internal.getKeys=getKeys$1;function isHexString$1(e,a){return!(typeof e!="string"||!e.match(/^0x[0-9A-Fa-f]*$/)||a&&e.length!==2+2*a)}internal.isHexString=isHexString$1;var bytes$1={},helpers$1={};Object.defineProperty(helpers$1,"__esModule",{value:!0});helpers$1.assertIsString=helpers$1.assertIsArray=helpers$1.assertIsBuffer=helpers$1.assertIsHexString=void 0;var internal_1$1=internal,assertIsHexString=function(e){if(!(0,internal_1$1.isHexString)(e)){var a="This method only supports 0x-prefixed hex strings but input was: ".concat(e);throw new Error(a)}};helpers$1.assertIsHexString=assertIsHexString;var assertIsBuffer=function(e){if(!buffer$2.Buffer.isBuffer(e)){var a="This method only supports Buffer but input was: ".concat(e);throw new Error(a)}};helpers$1.assertIsBuffer=assertIsBuffer;var assertIsArray=function(e){if(!Array.isArray(e)){var a="This method only supports number arrays but input was: ".concat(e);throw new Error(a)}};helpers$1.assertIsArray=assertIsArray;var assertIsString=function(e){if(typeof e!="string"){var a="This method only supports strings but input was: ".concat(e);throw new Error(a)}};helpers$1.assertIsString=assertIsString;(function(e){var a=commonjsGlobal&&commonjsGlobal.__values||function(P){var D=typeof Symbol=="function"&&Symbol.iterator,q=D&&P[D],Y=0;if(q)return q.call(P);if(P&&typeof P.length=="number")return{next:function(){return P&&Y>=P.length&&(P=void 0),{value:P&&P[Y++],done:!P}}};throw new TypeError(D?"Object is not iterable.":"Symbol.iterator is not defined.")},t=commonjsGlobal&&commonjsGlobal.__read||function(P,D){var q=typeof Symbol=="function"&&P[Symbol.iterator];if(!q)return P;var Y=q.call(P),U,j=[],Q;try{for(;(D===void 0||D-- >0)&&!(U=Y.next()).done;)j.push(U.value)}catch(X){Q={error:X}}finally{try{U&&!U.done&&(q=Y.return)&&q.call(Y)}finally{if(Q)throw Q.error}}return j};Object.defineProperty(e,"__esModule",{value:!0}),e.bufArrToArr=e.arrToBufArr=e.validateNoLeadingZeroes=e.baToJSON=e.toUtf8=e.addHexPrefix=e.toUnsigned=e.fromSigned=e.bufferToHex=e.bufferToInt=e.toBuffer=e.unpadHexString=e.unpadArray=e.unpadBuffer=e.setLengthRight=e.setLengthLeft=e.zeros=e.intToBuffer=e.intToHex=void 0;var c=externals,i=internal,o=helpers$1,b=function(P){if(!Number.isSafeInteger(P)||P<0)throw new Error("Received an invalid integer type: ".concat(P));return"0x".concat(P.toString(16))};e.intToHex=b;var u=function(P){var D=(0,e.intToHex)(P);return buffer$2.Buffer.from((0,i.padToEven)(D.slice(2)),"hex")};e.intToBuffer=u;var l=function(P){return buffer$2.Buffer.allocUnsafe(P).fill(0)};e.zeros=l;var x=function(P,D,q){var Y=(0,e.zeros)(D);return q?P.length<D?(P.copy(Y),Y):P.slice(0,D):P.length<D?(P.copy(Y,D-P.length),Y):P.slice(-D)},g=function(P,D){return(0,o.assertIsBuffer)(P),x(P,D,!1)};e.setLengthLeft=g;var v=function(P,D){return(0,o.assertIsBuffer)(P),x(P,D,!0)};e.setLengthRight=v;var E=function(P){for(var D=P[0];P.length>0&&D.toString()==="0";)P=P.slice(1),D=P[0];return P},S=function(P){return(0,o.assertIsBuffer)(P),E(P)};e.unpadBuffer=S;var T=function(P){return(0,o.assertIsArray)(P),E(P)};e.unpadArray=T;var I=function(P){return(0,o.assertIsHexString)(P),P=(0,i.stripHexPrefix)(P),E(P)};e.unpadHexString=I;var A=function(P){if(P==null)return buffer$2.Buffer.allocUnsafe(0);if(buffer$2.Buffer.isBuffer(P))return buffer$2.Buffer.from(P);if(Array.isArray(P)||P instanceof Uint8Array)return buffer$2.Buffer.from(P);if(typeof P=="string"){if(!(0,i.isHexString)(P))throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ".concat(P));return buffer$2.Buffer.from((0,i.padToEven)((0,i.stripHexPrefix)(P)),"hex")}if(typeof P=="number")return(0,e.intToBuffer)(P);if(c.BN.isBN(P)){if(P.isNeg())throw new Error("Cannot convert negative BN to buffer. Given: ".concat(P));return P.toArrayLike(buffer$2.Buffer)}if(P.toArray)return buffer$2.Buffer.from(P.toArray());if(P.toBuffer)return buffer$2.Buffer.from(P.toBuffer());throw new Error("invalid type")};e.toBuffer=A;var C=function(P){return new c.BN((0,e.toBuffer)(P)).toNumber()};e.bufferToInt=C;var O=function(P){return P=(0,e.toBuffer)(P),"0x"+P.toString("hex")};e.bufferToHex=O;var R=function(P){return new c.BN(P).fromTwos(256)};e.fromSigned=R;var B=function(P){return buffer$2.Buffer.from(P.toTwos(256).toArray())};e.toUnsigned=B;var M=function(P){return typeof P!="string"||(0,i.isHexPrefixed)(P)?P:"0x"+P};e.addHexPrefix=M;var L=function(P){var D=/^(00)+|(00)+$/g;if(P=(0,i.stripHexPrefix)(P),P.length%2!==0)throw new Error("Invalid non-even hex string input for toUtf8() provided");var q=buffer$2.Buffer.from(P.replace(D,""),"hex");return q.toString("utf8")};e.toUtf8=L;var ee=function(P){if(buffer$2.Buffer.isBuffer(P))return"0x".concat(P.toString("hex"));if(P instanceof Array){for(var D=[],q=0;q<P.length;q++)D.push((0,e.baToJSON)(P[q]));return D}};e.baToJSON=ee;var z=function(P){var D,q;try{for(var Y=a(Object.entries(P)),U=Y.next();!U.done;U=Y.next()){var j=t(U.value,2),Q=j[0],X=j[1];if(X!==void 0&&X.length>0&&X[0]===0)throw new Error("".concat(Q," cannot have leading zeroes, received: ").concat(X.toString("hex")))}}catch(F){D={error:F}}finally{try{U&&!U.done&&(q=Y.return)&&q.call(Y)}finally{if(D)throw D.error}}};e.validateNoLeadingZeroes=z;function oe(P){return Array.isArray(P)?P.map(function(D){return oe(D)}):buffer$2.Buffer.from(P)}e.arrToBufArr=oe;function W(P){return Array.isArray(P)?P.map(function(D){return W(D)}):Uint8Array.from(P??[])}e.bufArrToArr=W})(bytes$1);var hash$3={},keccak$2={},hashUtils={};Object.defineProperty(hashUtils,"__esModule",{value:!0});function createHashFunction(e){return function(a){var t=e();return t.update(a),buffer$2.Buffer.from(t.digest())}}hashUtils.createHashFunction=createHashFunction;const{Transform:Transform$1}=requireReadableBrowser();var keccak$1=e=>class ra extends Transform$1{constructor(t,c,i,o,b){super(b),this._rate=t,this._capacity=c,this._delimitedSuffix=i,this._hashBitLength=o,this._options=b,this._state=new e,this._state.initialize(t,c),this._finalized=!1}_transform(t,c,i){let o=null;try{this.update(t,c)}catch(b){o=b}i(o)}_flush(t){let c=null;try{this.push(this.digest())}catch(i){c=i}t(c)}update(t,c){if(!buffer$2.Buffer.isBuffer(t)&&typeof t!="string")throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Digest already called");return buffer$2.Buffer.isBuffer(t)||(t=buffer$2.Buffer.from(t,c)),this._state.absorb(t),this}digest(t){if(this._finalized)throw new Error("Digest already called");this._finalized=!0,this._delimitedSuffix&&this._state.absorbLastFewBits(this._delimitedSuffix);let c=this._state.squeeze(this._hashBitLength/8);return t!==void 0&&(c=c.toString(t)),this._resetState(),c}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const t=new ra(this._rate,this._capacity,this._delimitedSuffix,this._hashBitLength,this._options);return this._state.copy(t._state),t._finalized=this._finalized,t}};const{Transform}=requireReadableBrowser();var shake=e=>class ca extends Transform{constructor(t,c,i,o){super(o),this._rate=t,this._capacity=c,this._delimitedSuffix=i,this._options=o,this._state=new e,this._state.initialize(t,c),this._finalized=!1}_transform(t,c,i){let o=null;try{this.update(t,c)}catch(b){o=b}i(o)}_flush(){}_read(t){this.push(this.squeeze(t))}update(t,c){if(!buffer$2.Buffer.isBuffer(t)&&typeof t!="string")throw new TypeError("Data must be a string or a buffer");if(this._finalized)throw new Error("Squeeze already called");return buffer$2.Buffer.isBuffer(t)||(t=buffer$2.Buffer.from(t,c)),this._state.absorb(t),this}squeeze(t,c){this._finalized||(this._finalized=!0,this._state.absorbLastFewBits(this._delimitedSuffix));let i=this._state.squeeze(t);return c!==void 0&&(i=i.toString(c)),i}_resetState(){return this._state.initialize(this._rate,this._capacity),this}_clone(){const t=new ca(this._rate,this._capacity,this._delimitedSuffix,this._options);return this._state.copy(t._state),t._finalized=this._finalized,t}};const createKeccak=keccak$1,createShake=shake;var api$2=function(e){const a=createKeccak(e),t=createShake(e);return function(c,i){switch(typeof c=="string"?c.toLowerCase():c){case"keccak224":return new a(1152,448,null,224,i);case"keccak256":return new a(1088,512,null,256,i);case"keccak384":return new a(832,768,null,384,i);case"keccak512":return new a(576,1024,null,512,i);case"sha3-224":return new a(1152,448,6,224,i);case"sha3-256":return new a(1088,512,6,256,i);case"sha3-384":return new a(832,768,6,384,i);case"sha3-512":return new a(576,1024,6,512,i);case"shake128":return new t(1344,256,31,i);case"shake256":return new t(1088,512,31,i);default:throw new Error("Invald algorithm: "+c)}}},keccakStateUnroll={};const P1600_ROUND_CONSTANTS=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648];keccakStateUnroll.p1600=function(e){for(let a=0;a<24;++a){const t=e[0]^e[10]^e[20]^e[30]^e[40],c=e[1]^e[11]^e[21]^e[31]^e[41],i=e[2]^e[12]^e[22]^e[32]^e[42],o=e[3]^e[13]^e[23]^e[33]^e[43],b=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],l=e[6]^e[16]^e[26]^e[36]^e[46],x=e[7]^e[17]^e[27]^e[37]^e[47],g=e[8]^e[18]^e[28]^e[38]^e[48],v=e[9]^e[19]^e[29]^e[39]^e[49];let E=g^(i<<1|o>>>31),S=v^(o<<1|i>>>31);const T=e[0]^E,I=e[1]^S,A=e[10]^E,C=e[11]^S,O=e[20]^E,R=e[21]^S,B=e[30]^E,M=e[31]^S,L=e[40]^E,ee=e[41]^S;E=t^(b<<1|u>>>31),S=c^(u<<1|b>>>31);const z=e[2]^E,oe=e[3]^S,W=e[12]^E,P=e[13]^S,D=e[22]^E,q=e[23]^S,Y=e[32]^E,U=e[33]^S,j=e[42]^E,Q=e[43]^S;E=i^(l<<1|x>>>31),S=o^(x<<1|l>>>31);const X=e[4]^E,F=e[5]^S,Z=e[14]^E,J=e[15]^S,ce=e[24]^E,re=e[25]^S,ie=e[34]^E,fe=e[35]^S,pe=e[44]^E,Oe=e[45]^S;E=b^(g<<1|v>>>31),S=u^(v<<1|g>>>31);const Se=e[6]^E,Pe=e[7]^S,a0=e[16]^E,qe=e[17]^S,Ke=e[26]^E,b0=e[27]^S,Je=e[36]^E,i0=e[37]^S,N0=e[46]^E,w0=e[47]^S;E=l^(t<<1|c>>>31),S=x^(c<<1|t>>>31);const _0=e[8]^E,H0=e[9]^S,g0=e[18]^E,o0=e[19]^S,M0=e[28]^E,u0=e[29]^S,S0=e[38]^E,J0=e[39]^S,h0=e[48]^E,y0=e[49]^S,Z0=T,I0=I,C0=C<<4|A>>>28,q0=A<<4|C>>>28,l0=O<<3|R>>>29,p0=R<<3|O>>>29,j0=M<<9|B>>>23,m0=B<<9|M>>>23,$0=L<<18|ee>>>14,Y0=ee<<18|L>>>14,v0=z<<1|oe>>>31,E0=oe<<1|z>>>31,K0=P<<12|W>>>20,P0=W<<12|P>>>20,r0=D<<10|q>>>22,z0=q<<10|D>>>22,s0=U<<13|Y>>>19,be=Y<<13|U>>>19,se=j<<2|Q>>>30,de=Q<<2|j>>>30,le=F<<30|X>>>2,ge=X<<30|F>>>2,we=Z<<6|J>>>26,Ee=J<<6|Z>>>26,Be=re<<11|ce>>>21,V=ce<<11|re>>>21,ae=ie<<15|fe>>>17,te=fe<<15|ie>>>17,H=Oe<<29|pe>>>3,ne=pe<<29|Oe>>>3,he=Se<<28|Pe>>>4,xe=Pe<<28|Se>>>4,me=qe<<23|a0>>>9,Te=a0<<23|qe>>>9,De=Ke<<25|b0>>>7,Ce=b0<<25|Ke>>>7,t0=Je<<21|i0>>>11,Re=i0<<21|Je>>>11,We=w0<<24|N0>>>8,Ge=N0<<24|w0>>>8,e0=_0<<27|H0>>>5,Qe=H0<<27|_0>>>5,Ve=g0<<20|o0>>>12,Ye=o0<<20|g0>>>12,Xe=u0<<7|M0>>>25,Fe=M0<<7|u0>>>25,ze=S0<<8|J0>>>24,Ne=J0<<8|S0>>>24,Le=h0<<14|y0>>>18,He=y0<<14|h0>>>18;e[0]=Z0^~K0&Be,e[1]=I0^~P0&V,e[10]=he^~Ve&l0,e[11]=xe^~Ye&p0,e[20]=v0^~we&De,e[21]=E0^~Ee&Ce,e[30]=e0^~C0&r0,e[31]=Qe^~q0&z0,e[40]=le^~me&Xe,e[41]=ge^~Te&Fe,e[2]=K0^~Be&t0,e[3]=P0^~V&Re,e[12]=Ve^~l0&s0,e[13]=Ye^~p0&be,e[22]=we^~De&ze,e[23]=Ee^~Ce&Ne,e[32]=C0^~r0&ae,e[33]=q0^~z0&te,e[42]=me^~Xe&j0,e[43]=Te^~Fe&m0,e[4]=Be^~t0&Le,e[5]=V^~Re&He,e[14]=l0^~s0&H,e[15]=p0^~be&ne,e[24]=De^~ze&$0,e[25]=Ce^~Ne&Y0,e[34]=r0^~ae&We,e[35]=z0^~te&Ge,e[44]=Xe^~j0&se,e[45]=Fe^~m0&de,e[6]=t0^~Le&Z0,e[7]=Re^~He&I0,e[16]=s0^~H&he,e[17]=be^~ne&xe,e[26]=ze^~$0&v0,e[27]=Ne^~Y0&E0,e[36]=ae^~We&e0,e[37]=te^~Ge&Qe,e[46]=j0^~se&le,e[47]=m0^~de&ge,e[8]=Le^~Z0&K0,e[9]=He^~I0&P0,e[18]=H^~he&Ve,e[19]=ne^~xe&Ye,e[28]=$0^~v0&we,e[29]=Y0^~E0&Ee,e[38]=We^~e0&C0,e[39]=Ge^~Qe&q0,e[48]=se^~le&me,e[49]=de^~ge&Te,e[0]^=P1600_ROUND_CONSTANTS[a*2],e[1]^=P1600_ROUND_CONSTANTS[a*2+1]}};const keccakState=keccakStateUnroll;function Keccak(){this.state=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],this.blockSize=null,this.count=0,this.squeezing=!1}Keccak.prototype.initialize=function(e,a){for(let t=0;t<50;++t)this.state[t]=0;this.blockSize=e/8,this.count=0,this.squeezing=!1};Keccak.prototype.absorb=function(e){for(let a=0;a<e.length;++a)this.state[~~(this.count/4)]^=e[a]<<8*(this.count%4),this.count+=1,this.count===this.blockSize&&(keccakState.p1600(this.state),this.count=0)};Keccak.prototype.absorbLastFewBits=function(e){this.state[~~(this.count/4)]^=e<<8*(this.count%4),e&128&&this.count===this.blockSize-1&&keccakState.p1600(this.state),this.state[~~((this.blockSize-1)/4)]^=128<<8*((this.blockSize-1)%4),keccakState.p1600(this.state),this.count=0,this.squeezing=!0};Keccak.prototype.squeeze=function(e){this.squeezing||this.absorbLastFewBits(1);const a=buffer$2.Buffer.alloc(e);for(let t=0;t<e;++t)a[t]=this.state[~~(this.count/4)]>>>8*(this.count%4)&255,this.count+=1,this.count===this.blockSize&&(keccakState.p1600(this.state),this.count=0);return a};Keccak.prototype.copy=function(e){for(let a=0;a<50;++a)e.state[a]=this.state[a];e.blockSize=this.blockSize,e.count=this.count,e.squeezing=this.squeezing};var keccak=Keccak,js$1=api$2(keccak);Object.defineProperty(keccak$2,"__esModule",{value:!0});var hash_utils_1=hashUtils,createKeccakHash=js$1;keccak$2.keccak224=hash_utils_1.createHashFunction(function(){return createKeccakHash("keccak224")});keccak$2.keccak256=hash_utils_1.createHashFunction(function(){return createKeccakHash("keccak256")});keccak$2.keccak384=hash_utils_1.createHashFunction(function(){return createKeccakHash("keccak384")});keccak$2.keccak512=hash_utils_1.createHashFunction(function(){return createKeccakHash("keccak512")});(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.rlphash=e.ripemd160FromArray=e.ripemd160FromString=e.ripemd160=e.sha256FromArray=e.sha256FromString=e.sha256=e.keccakFromArray=e.keccakFromHexString=e.keccakFromString=e.keccak256=e.keccak=void 0;var a=keccak$2,t=browser$3,c=externals,i=bytes$1,o=helpers$1,b=function(B,M){switch(M===void 0&&(M=256),(0,o.assertIsBuffer)(B),M){case 224:return(0,a.keccak224)(B);case 256:return(0,a.keccak256)(B);case 384:return(0,a.keccak384)(B);case 512:return(0,a.keccak512)(B);default:throw new Error("Invald algorithm: keccak".concat(M))}};e.keccak=b;var u=function(B){return(0,e.keccak)(B)};e.keccak256=u;var l=function(B,M){M===void 0&&(M=256),(0,o.assertIsString)(B);var L=buffer$2.Buffer.from(B,"utf8");return(0,e.keccak)(L,M)};e.keccakFromString=l;var x=function(B,M){return M===void 0&&(M=256),(0,o.assertIsHexString)(B),(0,e.keccak)((0,i.toBuffer)(B),M)};e.keccakFromHexString=x;var g=function(B,M){return M===void 0&&(M=256),(0,o.assertIsArray)(B),(0,e.keccak)((0,i.toBuffer)(B),M)};e.keccakFromArray=g;var v=function(B){return B=(0,i.toBuffer)(B),t("sha256").update(B).digest()},E=function(B){return(0,o.assertIsBuffer)(B),v(B)};e.sha256=E;var S=function(B){return(0,o.assertIsString)(B),v(B)};e.sha256FromString=S;var T=function(B){return(0,o.assertIsArray)(B),v(B)};e.sha256FromArray=T;var I=function(B,M){B=(0,i.toBuffer)(B);var L=t("rmd160").update(B).digest();return M===!0?(0,i.setLengthLeft)(L,32):L},A=function(B,M){return(0,o.assertIsBuffer)(B),I(B,M)};e.ripemd160=A;var C=function(B,M){return(0,o.assertIsString)(B),I(B,M)};e.ripemd160FromString=C;var O=function(B,M){return(0,o.assertIsArray)(B),I(B,M)};e.ripemd160FromArray=O;var R=function(B){return(0,e.keccak)(c.rlp.encode(B))};e.rlphash=R})(hash$3);var types$9={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.toType=e.TypeOutput=e.bnToRlp=e.bnToUnpaddedBuffer=e.bnToHex=void 0;var a=externals,t=internal,c=bytes$1;function i(x){return"0x".concat(x.toString(16))}e.bnToHex=i;function o(x){return(0,c.unpadBuffer)(x.toArrayLike(buffer$2.Buffer))}e.bnToUnpaddedBuffer=o;function b(x){return o(x)}e.bnToRlp=b;var u;(function(x){x[x.Number=0]="Number",x[x.BN=1]="BN",x[x.Buffer=2]="Buffer",x[x.PrefixedHexString=3]="PrefixedHexString"})(u=e.TypeOutput||(e.TypeOutput={}));function l(x,g){if(x===null)return null;if(x!==void 0){if(typeof x=="string"&&!(0,t.isHexString)(x))throw new Error("A string must be provided with a 0x-prefix, given: ".concat(x));if(typeof x=="number"&&!Number.isSafeInteger(x))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");var v=(0,c.toBuffer)(x);if(g===u.Buffer)return v;if(g===u.BN)return new a.BN(v);if(g===u.Number){var E=new a.BN(v),S=new a.BN(Number.MAX_SAFE_INTEGER.toString());if(E.gt(S))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");return E.toNumber()}else return"0x".concat(v.toString("hex"))}}e.toType=l})(types$9);(function(e){var a=commonjsGlobal&&commonjsGlobal.__read||function(W,P){var D=typeof Symbol=="function"&&W[Symbol.iterator];if(!D)return W;var q=D.call(W),Y,U=[],j;try{for(;(P===void 0||P-- >0)&&!(Y=q.next()).done;)U.push(Y.value)}catch(Q){j={error:Q}}finally{try{Y&&!Y.done&&(D=q.return)&&D.call(q)}finally{if(j)throw j.error}}return U},t=commonjsGlobal&&commonjsGlobal.__importDefault||function(W){return W&&W.__esModule?W:{default:W}};Object.defineProperty(e,"__esModule",{value:!0}),e.isZeroAddress=e.zeroAddress=e.importPublic=e.privateToAddress=e.privateToPublic=e.publicToAddress=e.pubToAddress=e.isValidPublic=e.isValidPrivate=e.generateAddress2=e.generateAddress=e.isValidChecksumAddress=e.toChecksumAddress=e.isValidAddress=e.Account=void 0;var c=t(requireAssert()),i=externals,o=secp256k1$2,b=internal,u=constants$1,l=bytes$1,x=hash$3,g=helpers$1,v=types$9,E=function(){function W(P,D,q,Y){P===void 0&&(P=new i.BN(0)),D===void 0&&(D=new i.BN(0)),q===void 0&&(q=u.KECCAK256_RLP),Y===void 0&&(Y=u.KECCAK256_NULL),this.nonce=P,this.balance=D,this.stateRoot=q,this.codeHash=Y,this._validate()}return W.fromAccountData=function(P){var D=P.nonce,q=P.balance,Y=P.stateRoot,U=P.codeHash;return new W(D?new i.BN((0,l.toBuffer)(D)):void 0,q?new i.BN((0,l.toBuffer)(q)):void 0,Y?(0,l.toBuffer)(Y):void 0,U?(0,l.toBuffer)(U):void 0)},W.fromRlpSerializedAccount=function(P){var D=i.rlp.decode(P);if(!Array.isArray(D))throw new Error("Invalid serialized account input. Must be array");return this.fromValuesArray(D)},W.fromValuesArray=function(P){var D=a(P,4),q=D[0],Y=D[1],U=D[2],j=D[3];return new W(new i.BN(q),new i.BN(Y),U,j)},W.prototype._validate=function(){if(this.nonce.lt(new i.BN(0)))throw new Error("nonce must be greater than zero");if(this.balance.lt(new i.BN(0)))throw new Error("balance must be greater than zero");if(this.stateRoot.length!==32)throw new Error("stateRoot must have a length of 32");if(this.codeHash.length!==32)throw new Error("codeHash must have a length of 32")},W.prototype.raw=function(){return[(0,v.bnToUnpaddedBuffer)(this.nonce),(0,v.bnToUnpaddedBuffer)(this.balance),this.stateRoot,this.codeHash]},W.prototype.serialize=function(){return i.rlp.encode(this.raw())},W.prototype.isContract=function(){return!this.codeHash.equals(u.KECCAK256_NULL)},W.prototype.isEmpty=function(){return this.balance.isZero()&&this.nonce.isZero()&&this.codeHash.equals(u.KECCAK256_NULL)},W}();e.Account=E;var S=function(W){try{(0,g.assertIsString)(W)}catch{return!1}return/^0x[0-9a-fA-F]{40}$/.test(W)};e.isValidAddress=S;var T=function(W,P){(0,g.assertIsHexString)(W);var D=(0,b.stripHexPrefix)(W).toLowerCase(),q="";if(P){var Y=(0,v.toType)(P,v.TypeOutput.BN);q=Y.toString()+"0x"}for(var U=(0,x.keccakFromString)(q+D).toString("hex"),j="0x",Q=0;Q<D.length;Q++)parseInt(U[Q],16)>=8?j+=D[Q].toUpperCase():j+=D[Q];return j};e.toChecksumAddress=T;var I=function(W,P){return(0,e.isValidAddress)(W)&&(0,e.toChecksumAddress)(W,P)===W};e.isValidChecksumAddress=I;var A=function(W,P){(0,g.assertIsBuffer)(W),(0,g.assertIsBuffer)(P);var D=new i.BN(P);return D.isZero()?(0,x.rlphash)([W,null]).slice(-20):(0,x.rlphash)([W,buffer$2.Buffer.from(D.toArray())]).slice(-20)};e.generateAddress=A;var C=function(W,P,D){(0,g.assertIsBuffer)(W),(0,g.assertIsBuffer)(P),(0,g.assertIsBuffer)(D),(0,c.default)(W.length===20),(0,c.default)(P.length===32);var q=(0,x.keccak256)(buffer$2.Buffer.concat([buffer$2.Buffer.from("ff","hex"),W,P,(0,x.keccak256)(D)]));return q.slice(-20)};e.generateAddress2=C;var O=function(W){return(0,o.privateKeyVerify)(W)};e.isValidPrivate=O;var R=function(W,P){return P===void 0&&(P=!1),(0,g.assertIsBuffer)(W),W.length===64?(0,o.publicKeyVerify)(buffer$2.Buffer.concat([buffer$2.Buffer.from([4]),W])):P?(0,o.publicKeyVerify)(W):!1};e.isValidPublic=R;var B=function(W,P){return P===void 0&&(P=!1),(0,g.assertIsBuffer)(W),P&&W.length!==64&&(W=buffer$2.Buffer.from((0,o.publicKeyConvert)(W,!1).slice(1))),(0,c.default)(W.length===64),(0,x.keccak)(W).slice(-20)};e.pubToAddress=B,e.publicToAddress=e.pubToAddress;var M=function(W){return(0,g.assertIsBuffer)(W),buffer$2.Buffer.from((0,o.publicKeyCreate)(W,!1)).slice(1)};e.privateToPublic=M;var L=function(W){return(0,e.publicToAddress)((0,e.privateToPublic)(W))};e.privateToAddress=L;var ee=function(W){return(0,g.assertIsBuffer)(W),W.length!==64&&(W=buffer$2.Buffer.from((0,o.publicKeyConvert)(W,!1).slice(1))),W};e.importPublic=ee;var z=function(){var W=20,P=(0,l.zeros)(W);return(0,l.bufferToHex)(P)};e.zeroAddress=z;var oe=function(W){try{(0,g.assertIsString)(W)}catch{return!1}var P=(0,e.zeroAddress)();return P===W};e.isZeroAddress=oe})(account$1);var address$2={},__importDefault$3=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(address$2,"__esModule",{value:!0});address$2.Address=void 0;var assert_1$1=__importDefault$3(requireAssert()),externals_1$2=externals,bytes_1$4=bytes$1,account_1=account$1,Address$2=function(){function e(a){(0,assert_1$1.default)(a.length===20,"Invalid address length"),this.buf=a}return e.zero=function(){return new e((0,bytes_1$4.zeros)(20))},e.fromString=function(a){return(0,assert_1$1.default)((0,account_1.isValidAddress)(a),"Invalid address"),new e((0,bytes_1$4.toBuffer)(a))},e.fromPublicKey=function(a){(0,assert_1$1.default)(buffer$2.Buffer.isBuffer(a),"Public key should be Buffer");var t=(0,account_1.pubToAddress)(a);return new e(t)},e.fromPrivateKey=function(a){(0,assert_1$1.default)(buffer$2.Buffer.isBuffer(a),"Private key should be Buffer");var t=(0,account_1.privateToAddress)(a);return new e(t)},e.generate=function(a,t){return(0,assert_1$1.default)(externals_1$2.BN.isBN(t)),new e((0,account_1.generateAddress)(a.buf,t.toArrayLike(buffer$2.Buffer)))},e.generate2=function(a,t,c){return(0,assert_1$1.default)(buffer$2.Buffer.isBuffer(t)),(0,assert_1$1.default)(buffer$2.Buffer.isBuffer(c)),new e((0,account_1.generateAddress2)(a.buf,t,c))},e.prototype.equals=function(a){return this.buf.equals(a.buf)},e.prototype.isZero=function(){return this.equals(e.zero())},e.prototype.isPrecompileOrSystemAddress=function(){var a=new externals_1$2.BN(this.buf),t=new externals_1$2.BN(0),c=new externals_1$2.BN("ffff","hex");return a.gte(t)&&a.lte(c)},e.prototype.toString=function(){return"0x"+this.buf.toString("hex")},e.prototype.toBuffer=function(){return buffer$2.Buffer.from(this.buf)},e}();address$2.Address=Address$2;var signature$3={};Object.defineProperty(signature$3,"__esModule",{value:!0});signature$3.hashPersonalMessage=signature$3.isValidSignature=signature$3.fromRpcSig=signature$3.toCompactSig=signature$3.toRpcSig=signature$3.ecrecover=signature$3.ecsign=void 0;var secp256k1_1=secp256k1$2,externals_1$1=externals,bytes_1$3=bytes$1,hash_1$1=hash$3,helpers_1$3=helpers$1,types_1$f=types$9;function ecsign(e,a,t){var c=(0,secp256k1_1.ecdsaSign)(e,a),i=c.signature,o=c.recid,b=buffer$2.Buffer.from(i.slice(0,32)),u=buffer$2.Buffer.from(i.slice(32,64));if(!t||typeof t=="number"){if(t&&!Number.isSafeInteger(t))throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");var l=t?o+(t*2+35):o+27;return{r:b,s:u,v:l}}var x=(0,types_1$f.toType)(t,types_1$f.TypeOutput.BN),g=x.muln(2).addn(35).addn(o).toArrayLike(buffer$2.Buffer);return{r:b,s:u,v:g}}signature$3.ecsign=ecsign;function calculateSigRecovery$1(e,a){var t=(0,types_1$f.toType)(e,types_1$f.TypeOutput.BN);if(t.eqn(0)||t.eqn(1))return(0,types_1$f.toType)(e,types_1$f.TypeOutput.BN);if(!a)return t.subn(27);var c=(0,types_1$f.toType)(a,types_1$f.TypeOutput.BN);return t.sub(c.muln(2).addn(35))}function isValidSigRecovery$1(e){var a=new externals_1$1.BN(e);return a.eqn(0)||a.eqn(1)}var ecrecover=function(e,a,t,c,i){var o=buffer$2.Buffer.concat([(0,bytes_1$3.setLengthLeft)(t,32),(0,bytes_1$3.setLengthLeft)(c,32)],64),b=calculateSigRecovery$1(a,i);if(!isValidSigRecovery$1(b))throw new Error("Invalid signature v value");var u=(0,secp256k1_1.ecdsaRecover)(o,b.toNumber(),e);return buffer$2.Buffer.from((0,secp256k1_1.publicKeyConvert)(u,!1).slice(1))};signature$3.ecrecover=ecrecover;var toRpcSig=function(e,a,t,c){var i=calculateSigRecovery$1(e,c);if(!isValidSigRecovery$1(i))throw new Error("Invalid signature v value");return(0,bytes_1$3.bufferToHex)(buffer$2.Buffer.concat([(0,bytes_1$3.setLengthLeft)(a,32),(0,bytes_1$3.setLengthLeft)(t,32),(0,bytes_1$3.toBuffer)(e)]))};signature$3.toRpcSig=toRpcSig;var toCompactSig=function(e,a,t,c){var i=calculateSigRecovery$1(e,c);if(!isValidSigRecovery$1(i))throw new Error("Invalid signature v value");var o=(0,types_1$f.toType)(e,types_1$f.TypeOutput.Number),b=t;return(o>28&&o%2===1||o===1||o===28)&&(b=buffer$2.Buffer.from(t),b[0]|=128),(0,bytes_1$3.bufferToHex)(buffer$2.Buffer.concat([(0,bytes_1$3.setLengthLeft)(a,32),(0,bytes_1$3.setLengthLeft)(b,32)]))};signature$3.toCompactSig=toCompactSig;var fromRpcSig=function(e){var a=(0,bytes_1$3.toBuffer)(e),t,c,i;if(a.length>=65)t=a.slice(0,32),c=a.slice(32,64),i=(0,bytes_1$3.bufferToInt)(a.slice(64));else if(a.length===64)t=a.slice(0,32),c=a.slice(32,64),i=(0,bytes_1$3.bufferToInt)(a.slice(32,33))>>7,c[0]&=127;else throw new Error("Invalid signature length");return i<27&&(i+=27),{v:i,r:t,s:c}};signature$3.fromRpcSig=fromRpcSig;var isValidSignature=function(e,a,t,c,i){c===void 0&&(c=!0);var o=new externals_1$1.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),b=new externals_1$1.BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);if(a.length!==32||t.length!==32||!isValidSigRecovery$1(calculateSigRecovery$1(e,i)))return!1;var u=new externals_1$1.BN(a),l=new externals_1$1.BN(t);return!(u.isZero()||u.gt(b)||l.isZero()||l.gt(b)||c&&l.cmp(o)===1)};signature$3.isValidSignature=isValidSignature;var hashPersonalMessage=function(e){(0,helpers_1$3.assertIsBuffer)(e);var a=buffer$2.Buffer.from(`Ethereum Signed Message:
`.concat(e.length),"utf-8");return(0,hash_1$1.keccak)(buffer$2.Buffer.concat([a,e]))};signature$3.hashPersonalMessage=hashPersonalMessage;var object$1={},__importDefault$2=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(object$1,"__esModule",{value:!0});object$1.defineProperties=void 0;var assert_1=__importDefault$2(requireAssert()),internal_1=internal,externals_1=externals,bytes_1$2=bytes$1,defineProperties=function(e,a,t){if(e.raw=[],e._fields=[],e.toJSON=function(i){if(i===void 0&&(i=!1),i){var o={};return e._fields.forEach(function(b){o[b]="0x".concat(e[b].toString("hex"))}),o}return(0,bytes_1$2.baToJSON)(e.raw)},e.serialize=function(){return externals_1.rlp.encode(e.raw)},a.forEach(function(i,o){e._fields.push(i.name);function b(){return e.raw[o]}function u(l){l=(0,bytes_1$2.toBuffer)(l),l.toString("hex")==="00"&&!i.allowZero&&(l=buffer$2.Buffer.allocUnsafe(0)),i.allowLess&&i.length?(l=(0,bytes_1$2.unpadBuffer)(l),(0,assert_1.default)(i.length>=l.length,"The field ".concat(i.name," must not have more ").concat(i.length," bytes"))):!(i.allowZero&&l.length===0)&&i.length&&(0,assert_1.default)(i.length===l.length,"The field ".concat(i.name," must have byte length of ").concat(i.length)),e.raw[o]=l}Object.defineProperty(e,i.name,{enumerable:!0,configurable:!0,get:b,set:u}),i.default&&(e[i.name]=i.default),i.alias&&Object.defineProperty(e,i.alias,{enumerable:!1,configurable:!0,set:u,get:b})}),t)if(typeof t=="string"&&(t=buffer$2.Buffer.from((0,internal_1.stripHexPrefix)(t),"hex")),buffer$2.Buffer.isBuffer(t)&&(t=externals_1.rlp.decode(t)),Array.isArray(t)){if(t.length>e._fields.length)throw new Error("wrong number of fields in data");t.forEach(function(i,o){e[e._fields[o]]=(0,bytes_1$2.toBuffer)(i)})}else if(typeof t=="object"){var c=Object.keys(t);a.forEach(function(i){c.indexOf(i.name)!==-1&&(e[i.name]=t[i.name]),c.indexOf(i.alias)!==-1&&(e[i.alias]=t[i.alias])})}else throw new Error("invalid data")};object$1.defineProperties=defineProperties;(function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(i,o,b,u){u===void 0&&(u=b);var l=Object.getOwnPropertyDescriptor(o,b);(!l||("get"in l?!o.__esModule:l.writable||l.configurable))&&(l={enumerable:!0,get:function(){return o[b]}}),Object.defineProperty(i,u,l)}:function(i,o,b,u){u===void 0&&(u=b),i[u]=o[b]}),t=commonjsGlobal&&commonjsGlobal.__exportStar||function(i,o){for(var b in i)b!=="default"&&!Object.prototype.hasOwnProperty.call(o,b)&&a(o,i,b)};Object.defineProperty(e,"__esModule",{value:!0}),e.isHexString=e.getKeys=e.fromAscii=e.fromUtf8=e.toAscii=e.arrayContainsArray=e.getBinarySize=e.padToEven=e.stripHexPrefix=e.isHexPrefixed=void 0,t(constants$1,e),t(account$1,e),t(address$2,e),t(hash$3,e),t(signature$3,e),t(bytes$1,e),t(object$1,e),t(externals,e),t(types$9,e);var c=internal;Object.defineProperty(e,"isHexPrefixed",{enumerable:!0,get:function(){return c.isHexPrefixed}}),Object.defineProperty(e,"stripHexPrefix",{enumerable:!0,get:function(){return c.stripHexPrefix}}),Object.defineProperty(e,"padToEven",{enumerable:!0,get:function(){return c.padToEven}}),Object.defineProperty(e,"getBinarySize",{enumerable:!0,get:function(){return c.getBinarySize}}),Object.defineProperty(e,"arrayContainsArray",{enumerable:!0,get:function(){return c.arrayContainsArray}}),Object.defineProperty(e,"toAscii",{enumerable:!0,get:function(){return c.toAscii}}),Object.defineProperty(e,"fromUtf8",{enumerable:!0,get:function(){return c.fromUtf8}}),Object.defineProperty(e,"fromAscii",{enumerable:!0,get:function(){return c.fromAscii}}),Object.defineProperty(e,"getKeys",{enumerable:!0,get:function(){return c.getKeys}}),Object.defineProperty(e,"isHexString",{enumerable:!0,get:function(){return c.isHexString}})})(dist_browser$3);var dist$4={},utils$7={};Object.defineProperty(utils$7,"__esModule",{value:!0});const sha3$1=sha3Exports$1;function keccak256(e){return"0x"+sha3$1.keccak_256(toByteArray(e))}utils$7.keccak256=keccak256;utils$7.padLeft=(e,a)=>{const t=/^0x/i.test(e)||typeof e=="number";e=e.toString().replace(/^0x/i,"");const c=a-e.length+1>=0?a-e.length+1:0;return(t?"0x":"")+new Array(c).join("0")+e};function bytesToHex$1(e){const a=[];for(let t=0;t<e.length;t++)a.push((e[t]>>>4).toString(16)),a.push((e[t]&15).toString(16));return`0x${a.join("").replace(/^0+/,"")}`}utils$7.bytesToHex=bytesToHex$1;function toByteArray(e){if(e==null)throw new Error("cannot convert null value to array");if(typeof e=="string"){const a=e.match(/^(0x)?[0-9a-fA-F]*$/);if(!a)throw new Error("invalid hexidecimal string");if(a[1]!=="0x")throw new Error("hex string must have 0x prefix");e=e.substring(2),e.length%2&&(e="0"+e);const t=[];for(let c=0;c<e.length;c+=2)t.push(parseInt(e.substr(c,2),16));return addSlice(new Uint8Array(t))}if(isByteArray(e))return addSlice(new Uint8Array(e));throw new Error("invalid arrayify value")}utils$7.toByteArray=toByteArray;function isByteArray(e){if(!e||parseInt(String(e.length))!=e.length||typeof e=="string")return!1;for(let a=0;a<e.length;a++){const t=e[a];if(t<0||t>=256||parseInt(String(t))!=t)return!1}return!0}function addSlice(e){return e.slice!==void 0||(e.slice=()=>{const a=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(e,a)))}),e}Object.defineProperty(dist$4,"__esModule",{value:!0});const utils_1$3=utils$7;function isBloom$1(e){return typeof e!="string"||!/^(0x)?[0-9a-f]{512}$/i.test(e)?!1:!!(/^(0x)?[0-9a-f]{512}$/.test(e)||/^(0x)?[0-9A-F]{512}$/.test(e))}dist$4.isBloom=isBloom$1;function isInBloom$1(e,a){typeof a=="object"&&a.constructor===Uint8Array&&(a=utils_1$3.bytesToHex(a));const t=utils_1$3.keccak256(a).replace("0x","");for(let c=0;c<12;c+=4){const i=(parseInt(t.substr(c,2),16)<<8)+parseInt(t.substr(c+2,2),16)&2047,o=codePointToInt(e.charCodeAt(e.length-1-Math.floor(i/4))),b=1<<i%4;if((o&b)!==b)return!1}return!0}dist$4.isInBloom=isInBloom$1;function codePointToInt(e){if(e>=48&&e<=57)return e-48;if(e>=65&&e<=70)return e-55;if(e>=97&&e<=102)return e-87;throw new Error("invalid bloom")}function isUserEthereumAddressInBloom$1(e,a){if(!isBloom$1(e))throw new Error("Invalid bloom given");if(!isAddress$1(a))throw new Error(`Invalid ethereum address given: "${a}"`);const t=utils_1$3.padLeft(a,64);return isInBloom$1(e,t)}dist$4.isUserEthereumAddressInBloom=isUserEthereumAddressInBloom$1;function isContractAddressInBloom$1(e,a){if(!isBloom$1(e))throw new Error("Invalid bloom given");if(!isAddress$1(a))throw new Error(`Invalid contract address given: "${a}"`);return isInBloom$1(e,a)}dist$4.isContractAddressInBloom=isContractAddressInBloom$1;function isTopicInBloom$1(e,a){if(!isBloom$1(e))throw new Error("Invalid bloom given");if(!isTopic$1(a))throw new Error("Invalid topic");return isInBloom$1(e,a)}dist$4.isTopicInBloom=isTopicInBloom$1;function isTopic$1(e){if(typeof e!="string")return!1;if(/^(0x)?[0-9a-f]{64}$/i.test(e)){if(/^(0x)?[0-9a-f]{64}$/.test(e)||/^(0x)?[0-9A-F]{64}$/.test(e))return!0}else return!1;return!1}dist$4.isTopic=isTopic$1;function isAddress$1(e){return typeof e!="string"?!1:!!(e.match(/^(0x)?[0-9a-fA-F]{40}$/)||e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/))}dist$4.isAddress=isAddress$1;var BN$c=bnExports$1,numberToBN=src$5,utf8=utf8$1,ethereumjsUtil=dist_browser$3,ethereumBloomFilters=dist$4,isBN=function(e){return BN$c.isBN(e)},isBigNumber=function(e){return e&&e.constructor&&e.constructor.name==="BigNumber"},toBN=function(e){try{return numberToBN.apply(null,arguments)}catch(a){throw new Error(a+' Given value: "'+e+'"')}},toTwosComplement=function(e){return"0x"+toBN(e).toTwos(256).toString(16,64)},isAddress=function(e){return/^(0x)?[0-9a-f]{40}$/i.test(e)?/^(0x|0X)?[0-9a-f]{40}$/.test(e)||/^(0x|0X)?[0-9A-F]{40}$/.test(e)?!0:checkAddressChecksum(e):!1},checkAddressChecksum=function(e){e=e.replace(/^0x/i,"");for(var a=sha3(e.toLowerCase()).replace(/^0x/i,""),t=0;t<40;t++)if(parseInt(a[t],16)>7&&e[t].toUpperCase()!==e[t]||parseInt(a[t],16)<=7&&e[t].toLowerCase()!==e[t])return!1;return!0},leftPad$1=function(e,a,t){var c=/^0x/i.test(e)||typeof e=="number";e=e.toString(16).replace(/^0x/i,"");var i=a-e.length+1>=0?a-e.length+1:0;return(c?"0x":"")+new Array(i).join(t||"0")+e},rightPad=function(e,a,t){var c=/^0x/i.test(e)||typeof e=="number";e=e.toString(16).replace(/^0x/i,"");var i=a-e.length+1>=0?a-e.length+1:0;return(c?"0x":"")+e+new Array(i).join(t||"0")},utf8ToHex=function(e){e=utf8.encode(e);var a="";e=e.replace(/^(?:\u0000)*/,""),e=e.split("").reverse().join(""),e=e.replace(/^(?:\u0000)*/,""),e=e.split("").reverse().join("");for(var t=0;t<e.length;t++){var c=e.charCodeAt(t),i=c.toString(16);a+=i.length<2?"0"+i:i}return"0x"+a},hexToUtf8=function(e){if(!isHexStrict(e))throw new Error('The parameter "'+e+'" must be a valid HEX string.');var a="",t=0;e=e.replace(/^0x/i,""),e=e.replace(/^(?:00)*/,""),e=e.split("").reverse().join(""),e=e.replace(/^(?:00)*/,""),e=e.split("").reverse().join("");for(var c=e.length,i=0;i<c;i+=2)t=parseInt(e.slice(i,i+2),16),a+=String.fromCharCode(t);return utf8.decode(a)},hexToNumber$1=function(e,a=!1){if(!e)return e;if(typeof e=="string"&&!isHexStrict(e))throw new Error('Given value "'+e+'" is not a valid hex string.');const t=toBN(e);return a&&(t>Number.MAX_SAFE_INTEGER||t<Number.MIN_SAFE_INTEGER)?BigInt(t):t.toNumber()},hexToNumberString=function(e){if(!e)return e;if(typeof e=="string"&&!isHexStrict(e))throw new Error('Given value "'+e+'" is not a valid hex string.');return toBN(e).toString(10)},numberToHex=function(e){if(e==null)return e;if(!isFinite(e)&&!isHexStrict(e))throw new Error('Given input "'+e+'" is not a number.');var a=toBN(e),t=a.toString(16);return a.lt(new BN$c(0))?"-0x"+t.slice(1):"0x"+t},bytesToHex=function(e){for(var a=[],t=0;t<e.length;t++)a.push((e[t]>>>4).toString(16)),a.push((e[t]&15).toString(16));return"0x"+a.join("")},hexToBytes=function(e){if(e=e.toString(16),!isHexStrict(e))throw new Error('Given value "'+e+'" is not a valid hex string.');e=e.replace(/^0x/i,"");for(var a=[],t=0;t<e.length;t+=2)a.push(parseInt(e.slice(t,t+2),16));return a},toHex=function(e,a){if(isAddress(e))return a?"address":"0x"+e.toLowerCase().replace(/^0x/i,"");if(typeof e=="boolean")return a?"bool":e?"0x01":"0x00";if(buffer$2.Buffer.isBuffer(e))return"0x"+e.toString("hex");if(typeof e=="object"&&e&&!isBigNumber(e)&&!isBN(e))return a?"string":utf8ToHex(JSON.stringify(e));if(typeof e=="string"){if(e.indexOf("-0x")===0||e.indexOf("-0X")===0)return a?"int256":numberToHex(e);if(e.indexOf("0x")===0||e.indexOf("0X")===0)return a?"bytes":e;if(!isFinite(e))return a?"string":utf8ToHex(e)}return a?e<0?"int256":"uint256":numberToHex(e)},isHexStrict=function(e){return(typeof e=="string"||typeof e=="number")&&/^(-)?0x[0-9a-f]*$/i.test(e)},isHex=function(e){return(typeof e=="string"||typeof e=="number")&&/^(-0x|0x)?[0-9a-f]*$/i.test(e)},stripHexPrefix$1=function(e){return e!==0&&isHex(e)?e.replace(/^(-)?0x/i,"$1"):e},isBloom=function(e){return ethereumBloomFilters.isBloom(e)},isUserEthereumAddressInBloom=function(e,a){return ethereumBloomFilters.isUserEthereumAddressInBloom(e,a)},isContractAddressInBloom=function(e,a){return ethereumBloomFilters.isContractAddressInBloom(e,a)},isTopic=function(e){return ethereumBloomFilters.isTopic(e)},isTopicInBloom=function(e,a){return ethereumBloomFilters.isTopicInBloom(e,a)},isInBloom=function(e,a){return ethereumBloomFilters.isInBloom(e,a)},SHA3_NULL_S="0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",sha3=function(e){isBN(e)&&(e=e.toString()),isHexStrict(e)&&/^0x/i.test(e.toString())?e=ethereumjsUtil.toBuffer(e):typeof e=="string"&&(e=buffer$2.Buffer.from(e,"utf-8"));var a=ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(e));return a===SHA3_NULL_S?null:a};sha3._Hash=ethereumjsUtil.keccak256;var sha3Raw=function(e){return e=sha3(e),e===null?SHA3_NULL_S:e},toNumber=function(e,a=!1){return typeof e=="number"?e:hexToNumber$1(toHex(e),a)},BNwrapped=function(e){if(typeof e=="string"&&e.includes("0x")){const[a,t]=e.toLocaleLowerCase().startsWith("-")?["-",e.slice(3)]:["",e.slice(2)];return new BN$c(a+t,16)}else return new BN$c(e)};Object.setPrototypeOf(BNwrapped,BN$c);Object.setPrototypeOf(BNwrapped.prototype,BN$c.prototype);var utils$6={BN:BNwrapped,isBN,isBigNumber,toBN,isAddress,isBloom,isUserEthereumAddressInBloom,isContractAddressInBloom,isTopic,isTopicInBloom,isInBloom,checkAddressChecksum,utf8ToHex,hexToUtf8,hexToNumber:hexToNumber$1,hexToNumberString,numberToHex,toHex,hexToBytes,bytesToHex,isHex,isHexStrict,stripHexPrefix:stripHexPrefix$1,leftPad:leftPad$1,rightPad,toTwosComplement,sha3,sha3Raw,toNumber},BN$b=bnExports$1,utils$5=utils$6,_elementaryName=function(e){return e.startsWith("int[")?"int256"+e.slice(3):e==="int"?"int256":e.startsWith("uint[")?"uint256"+e.slice(4):e==="uint"?"uint256":e.startsWith("fixed[")?"fixed128x128"+e.slice(5):e==="fixed"?"fixed128x128":e.startsWith("ufixed[")?"ufixed128x128"+e.slice(6):e==="ufixed"?"ufixed128x128":e},_parseTypeN=function(e){var a=/^\D+(\d+).*$/.exec(e);return a?parseInt(a[1],10):null},_parseTypeNArray=function(e){var a=/^\D+\d*\[(\d+)\]$/.exec(e);return a?parseInt(a[1],10):null},_parseNumber=function(e){var a=typeof e;if(a==="string")return utils$5.isHexStrict(e)?new BN$b(e.replace(/0x/i,""),16):new BN$b(e,10);if(a==="number")return new BN$b(e);if(utils$5.isBigNumber(e))return new BN$b(e.toString(10));if(utils$5.isBN(e))return e;throw new Error(e+" is not a number")},_solidityPack=function(e,a,t){var c,i;if(e=_elementaryName(e),e==="bytes"){if(a.replace(/^0x/i,"").length%2!==0)throw new Error("Invalid bytes characters "+a.length);return a}else{if(e==="string")return utils$5.utf8ToHex(a);if(e==="bool")return a?"01":"00";if(e.startsWith("address")){if(t?c=64:c=40,!utils$5.isAddress(a))throw new Error(a+" is not a valid address, or the checksum is invalid.");return utils$5.leftPad(a.toLowerCase(),c)}}if(c=_parseTypeN(e),e.startsWith("bytes")){if(!c)throw new Error("bytes[] not yet supported in solidity");if(t&&(c=32),c<1||c>32||c<a.replace(/^0x/i,"").length/2)throw new Error("Invalid bytes"+c+" for "+a);return utils$5.rightPad(a,c*2)}else if(e.startsWith("uint")){if(c%8||c<8||c>256)throw new Error("Invalid uint"+c+" size");if(i=_parseNumber(a),i.bitLength()>c)throw new Error("Supplied uint exceeds width: "+c+" vs "+i.bitLength());if(i.lt(new BN$b(0)))throw new Error("Supplied uint "+i.toString()+" is negative");return c?utils$5.leftPad(i.toString("hex"),c/8*2):i}else if(e.startsWith("int")){if(c%8||c<8||c>256)throw new Error("Invalid int"+c+" size");if(i=_parseNumber(a),i.bitLength()>c)throw new Error("Supplied int exceeds width: "+c+" vs "+i.bitLength());return i.lt(new BN$b(0))?i.toTwos(c).toString("hex"):c?utils$5.leftPad(i.toString("hex"),c/8*2):i}else throw new Error("Unsupported or invalid type: "+e)},_processSolidityEncodePackedArgs=function(e){if(Array.isArray(e))throw new Error("Autodetection of array types is not supported.");var a,t="",c,i;if(e&&typeof e=="object"&&(e.hasOwnProperty("v")||e.hasOwnProperty("t")||e.hasOwnProperty("value")||e.hasOwnProperty("type"))?(a=e.hasOwnProperty("t")?e.t:e.type,t=e.hasOwnProperty("v")?e.v:e.value):(a=utils$5.toHex(e,!0),t=utils$5.toHex(e),!a.startsWith("int")&&!a.startsWith("uint")&&(a="bytes")),(a.startsWith("int")||a.startsWith("uint"))&&typeof t=="string"&&!/^(-)?0x/i.test(t)&&(t=new BN$b(t)),Array.isArray(t)){if(i=_parseTypeNArray(a),i&&t.length!==i)throw new Error(a+" is not matching the given array "+JSON.stringify(t));i=t.length}return Array.isArray(t)?(c=t.map(function(o){return _solidityPack(a,o,i).toString("hex").replace("0x","")}),c.join("")):(c=_solidityPack(a,t,i),c.toString("hex").replace("0x",""))},soliditySha3$1=function(){var e=Array.prototype.slice.call(arguments),a=e.map(_processSolidityEncodePackedArgs);return utils$5.sha3("0x"+a.join(""))},soliditySha3Raw=function(){return utils$5.sha3Raw("0x"+Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))},encodePacked=function(){var e=Array.prototype.slice.call(arguments),a=e.map(_processSolidityEncodePackedArgs);return"0x"+a.join("").toLowerCase()},soliditySha3_1={soliditySha3:soliditySha3$1,soliditySha3Raw,encodePacked},ethjsUnit=lib$9,utils$4=utils$6,soliditySha3=soliditySha3_1,randombytes=requireBrowser(),BN$a=bnExports$1,_fireError=function(e,a,t,c,i){return e&&typeof e=="object"&&!(e instanceof Error)&&e.data&&((e.data&&typeof e.data=="object"||Array.isArray(e.data))&&(e.data=JSON.stringify(e.data,null,2)),e=e.message+`
`+e.data),typeof e=="string"&&(e=new Error(e)),typeof c=="function"&&c(e,i),typeof t=="function"&&((a&&typeof a.listeners=="function"&&a.listeners("error").length||typeof c=="function")&&a.catch(function(){}),setTimeout(function(){t(e)},1)),a&&typeof a.emit=="function"&&setTimeout(function(){a.emit("error",e,i),a.removeAllListeners()},1),a},_jsonInterfaceMethodToString=function(e){return e&&typeof e=="object"&&e.name&&e.name.indexOf("(")!==-1?e.name:e.name+"("+_flattenTypes(!1,e.inputs).join(",")+")"},_flattenTypes=function(e,a){var t=[];return a.forEach(function(c){if(typeof c.components=="object"){if(c.type.substring(0,5)!=="tuple")throw new Error("components found but type is not tuple; report on GitHub");var i="",o=c.type.indexOf("[");o>=0&&(i=c.type.substring(o));var b=_flattenTypes(e,c.components);Array.isArray(b)&&e?t.push("tuple("+b.join(",")+")"+i):e?t.push("("+b+")"):t.push("("+b.join(",")+")"+i)}else t.push(c.type)}),t},randomHex=function(e){return"0x"+randombytes(e).toString("hex")},hexToAscii=function(e){if(!utils$4.isHexStrict(e))throw new Error("The parameter must be a valid HEX string.");var a="",t=0,c=e.length;for(e.substring(0,2)==="0x"&&(t=2);t<c;t+=2){var i=parseInt(e.slice(t,t+2),16);a+=String.fromCharCode(i)}return a},asciiToHex=function(e){if(!e)return"0x00";for(var a="",t=0;t<e.length;t++){var c=e.charCodeAt(t),i=c.toString(16);a+=i.length<2?"0"+i:i}return"0x"+a},getUnitValue=function(e){if(e=e?e.toLowerCase():"ether",!ethjsUnit.unitMap[e])throw new Error('This unit "'+e+`" doesn't exist, please use the one of the following units`+JSON.stringify(ethjsUnit.unitMap,null,2));return e},fromWei=function(e,a){if(a=getUnitValue(a),!utils$4.isBN(e)&&typeof e!="string")throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return utils$4.isBN(e)?ethjsUnit.fromWei(e,a):ethjsUnit.fromWei(e,a).toString(10)},toWei=function(e,a){if(a=getUnitValue(a),!utils$4.isBN(e)&&typeof e!="string")throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");return utils$4.isBN(e)?ethjsUnit.toWei(e,a):ethjsUnit.toWei(e,a).toString(10)},toChecksumAddress=function(e){if(typeof e>"u")return"";if(!/^(0x)?[0-9a-f]{40}$/i.test(e))throw new Error('Given address "'+e+'" is not a valid Ethereum address.');e=e.toLowerCase().replace(/^0x/i,"");for(var a=utils$4.sha3(e).replace(/^0x/i,""),t="0x",c=0;c<e.length;c++)parseInt(a[c],16)>7?t+=e[c].toUpperCase():t+=e[c];return t},compareBlockNumbers=function(e,a){if(e===a)return 0;if((e==="genesis"||e==="earliest"||e===0)&&(a==="genesis"||a==="earliest"||a===0))return 0;if(e==="genesis"||e==="earliest"||e===0)return-1;if(a==="genesis"||a==="earliest"||a===0)return 1;if(e==="latest"||e==="finalized")return a==="pending"?-1:1;if(a==="latest"||a==="finalized")return e==="pending"?1:-1;if(e==="pending")return 1;if(a==="pending")return-1;if(e==="safe"||a==="safe")return;{let t=new BN$a(e),c=new BN$a(a);return t.lt(c)?-1:t.eq(c)?0:1}},lib$7={_fireError,_jsonInterfaceMethodToString,_flattenTypes,randomHex,BN:utils$4.BN,isBN:utils$4.isBN,isBigNumber:utils$4.isBigNumber,isHex:utils$4.isHex,isHexStrict:utils$4.isHexStrict,sha3:utils$4.sha3,sha3Raw:utils$4.sha3Raw,keccak256:utils$4.sha3,soliditySha3:soliditySha3.soliditySha3,soliditySha3Raw:soliditySha3.soliditySha3Raw,encodePacked:soliditySha3.encodePacked,isAddress:utils$4.isAddress,checkAddressChecksum:utils$4.checkAddressChecksum,toChecksumAddress,toHex:utils$4.toHex,toBN:utils$4.toBN,bytesToHex:utils$4.bytesToHex,hexToBytes:utils$4.hexToBytes,hexToNumberString:utils$4.hexToNumberString,hexToNumber:utils$4.hexToNumber,toDecimal:utils$4.hexToNumber,numberToHex:utils$4.numberToHex,fromDecimal:utils$4.numberToHex,hexToUtf8:utils$4.hexToUtf8,hexToString:utils$4.hexToUtf8,toUtf8:utils$4.hexToUtf8,stripHexPrefix:utils$4.stripHexPrefix,utf8ToHex:utils$4.utf8ToHex,stringToHex:utils$4.utf8ToHex,fromUtf8:utils$4.utf8ToHex,hexToAscii,toAscii:hexToAscii,asciiToHex,fromAscii:asciiToHex,unitMap:ethjsUnit.unitMap,toWei,fromWei,padLeft:utils$4.leftPad,leftPad:utils$4.leftPad,padRight:utils$4.rightPad,rightPad:utils$4.rightPad,toTwosComplement:utils$4.toTwosComplement,isBloom:utils$4.isBloom,isUserEthereumAddressInBloom:utils$4.isUserEthereumAddressInBloom,isContractAddressInBloom:utils$4.isContractAddressInBloom,isTopic:utils$4.isTopic,isTopicInBloom:utils$4.isTopicInBloom,isInBloom:utils$4.isInBloom,compareBlockNumbers,toNumber:utils$4.toNumber};const utils$3=lib$7,BigNumber=bnExports$1,leftPad=function(e,a){let t=e;for(;t.length<a*2;)t="0"+t;return t},iso13616Prepare=function(e){const a="A".charCodeAt(0),t="Z".charCodeAt(0);return e=e.toUpperCase(),e=e.slice(4)+e.slice(0,4),e.split("").map(function(c){const i=c.charCodeAt(0);return i>=a&&i<=t?i-a+10:c}).join("")},mod9710=function(e){let a=e,t;for(;a.length>2;)t=a.slice(0,9),a=parseInt(t,10)%97+a.slice(t.length);return parseInt(a,10)%97};let Iban$1=class Q0{constructor(a){this._iban=a}static toAddress(a){if(a=new Q0(a),!a.isDirect())throw new Error("IBAN is indirect and can't be converted");return a.toAddress()}static toIban(a){return Q0.fromAddress(a).toString()}static fromAddress(a){if(!utils$3.isAddress(a))throw new Error("Provided address is not a valid address: "+a);a=a.replace("0x","").replace("0X","");const c=new BigNumber(a,16).toString(36),i=leftPad(c,15);return Q0.fromBban(i.toUpperCase())}static fromBban(a){const t="XE",i=("0"+(98-mod9710(iso13616Prepare(t+"00"+a)))).slice(-2);return new Q0(t+i+a)}static createIndirect(a){return Q0.fromBban("ETH"+a.institution+a.identifier)}static isValid(a){return new Q0(a).isValid()}isValid(){return/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban)&&mod9710(iso13616Prepare(this._iban))===1}isDirect(){return this._iban.length===34||this._iban.length===35}isIndirect(){return this._iban.length===20}checksum(){return this._iban.slice(2,4)}institution(){return this.isIndirect()?this._iban.slice(7,11):""}client(){return this.isIndirect()?this._iban.slice(11):""}toAddress(){if(this.isDirect()){const a=this._iban.slice(4),t=new BigNumber(a,36);return utils$3.toChecksumAddress(t.toString(16,20))}return""}toString(){return this._iban}};var lib$6=Iban$1,utils$2=lib$7,Iban=lib$6,inputStorageKeysFormatter=function(e){return e.map(utils$2.numberToHex)},outputProofFormatter=function(e){return e.address=utils$2.toChecksumAddress(e.address),e.nonce=utils$2.hexToNumberString(e.nonce),e.balance=utils$2.hexToNumberString(e.balance),e},outputBigNumberFormatter=function(e){return utils$2.toBN(e).toString(10)},isPredefinedBlockNumber=function(e){return["latest","pending","earliest","finalized","safe"].includes(e)},inputDefaultBlockNumberFormatter=function(e){return this&&e==null?inputBlockNumberFormatter(this.defaultBlock):inputBlockNumberFormatter(e)},inputBlockNumberFormatter=function(e){if(e!==void 0)return isPredefinedBlockNumber(e)?e:e==="genesis"?"0x0":utils$2.isHexStrict(e)?typeof e=="string"?e.toLowerCase():e:utils$2.numberToHex(e)},_txInputFormatter=function(e){if(e.to&&(e.to=inputAddressFormatter(e.to)),e.data&&e.input)throw new Error(`You can't have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.`);if(!e.data&&e.input&&(e.data=e.input,delete e.input),e.data&&!e.data.startsWith("0x")&&(e.data="0x"+e.data),e.data&&!utils$2.isHex(e.data))throw new Error("The data field must be HEX encoded data.");return(e.gas||e.gasLimit)&&(e.gas=e.gas||e.gasLimit),(e.maxPriorityFeePerGas||e.maxFeePerGas)&&delete e.gasPrice,["gasPrice","gas","value","maxPriorityFeePerGas","maxFeePerGas","nonce"].filter(function(a){return e[a]!==void 0}).forEach(function(a){e[a]=utils$2.numberToHex(e[a])}),e},inputCallFormatter=function(e){e=_txInputFormatter(e);var a=e.from||(this?this.defaultAccount:null);return a&&(e.from=inputAddressFormatter(a)),e},inputTransactionFormatter=function(e){if(e=_txInputFormatter(e),typeof e.from!="number"&&!(e.from&&typeof e.from=="object")){if(e.from=e.from||(this?this.defaultAccount:null),!e.from&&typeof e.from!="number")throw new Error('The send transactions "from" field must be defined!');e.from=inputAddressFormatter(e.from)}return e},inputSignFormatter=function(e){return utils$2.isHexStrict(e)?e:utils$2.utf8ToHex(e)},outputTransactionFormatter=function(e,a){return a||(e.blockNumber!==null&&(e.blockNumber=utils$2.hexToNumber(e.blockNumber)),e.transactionIndex!==null&&(e.transactionIndex=utils$2.hexToNumber(e.transactionIndex)),e.nonce=utils$2.hexToNumber(e.nonce),e.gas=utils$2.hexToNumber(e.gas),e.type&&(e.type=utils$2.hexToNumber(e.type))),e.gasPrice&&(e.gasPrice=outputBigNumberFormatter(e.gasPrice)),e.maxFeePerGas&&(e.maxFeePerGas=outputBigNumberFormatter(e.maxFeePerGas)),e.maxPriorityFeePerGas&&(e.maxPriorityFeePerGas=outputBigNumberFormatter(e.maxPriorityFeePerGas)),e.value=outputBigNumberFormatter(e.value),e.to&&utils$2.isAddress(e.to)?e.to=utils$2.toChecksumAddress(e.to):e.to=null,e.from&&(e.from=utils$2.toChecksumAddress(e.from)),e},outputTransactionReceiptFormatter=function(e){if(typeof e!="object")throw new Error("Received receipt is invalid: "+e);return this.hexFormat||(e.blockNumber!==null&&(e.blockNumber=utils$2.hexToNumber(e.blockNumber)),e.transactionIndex!==null&&(e.transactionIndex=utils$2.hexToNumber(e.transactionIndex)),e.cumulativeGasUsed=utils$2.hexToNumber(e.cumulativeGasUsed),e.gasUsed=utils$2.hexToNumber(e.gasUsed),e.effectiveGasPrice&&(e.effectiveGasPrice=utils$2.hexToNumber(e.effectiveGasPrice))),Array.isArray(e.logs)&&(e.logs=e.logs.map(outputLogFormatter)),e.contractAddress&&(e.contractAddress=utils$2.toChecksumAddress(e.contractAddress)),typeof e.status<"u"&&e.status!==null&&(e.status=!!parseInt(e.status)),e},outputBlockFormatter=function(e,a){return a||(e.gasLimit=utils$2.hexToNumber(e.gasLimit),e.gasUsed=utils$2.hexToNumber(e.gasUsed),e.size=utils$2.hexToNumber(e.size),e.timestamp=utils$2.hexToNumber(e.timestamp),e.number!==null&&(e.number=utils$2.hexToNumber(e.number))),e.difficulty&&(e.difficulty=outputBigNumberFormatter(e.difficulty)),e.totalDifficulty&&(e.totalDifficulty=outputBigNumberFormatter(e.totalDifficulty)),Array.isArray(e.transactions)&&e.transactions.forEach(function(t){if(typeof t!="string")return outputTransactionFormatter(t,a)}),e.miner&&(e.miner=utils$2.toChecksumAddress(e.miner)),e.baseFeePerGas&&(e.baseFeePerGas=utils$2.hexToNumber(e.baseFeePerGas)),e},inputLogFormatter=function(e){var a=function(t){return t===null||typeof t>"u"?null:(t=String(t),t.indexOf("0x")===0?t:utils$2.fromUtf8(t))};return e===void 0&&(e={}),e.fromBlock===void 0&&(e={...e,fromBlock:"latest"}),(e.fromBlock||e.fromBlock===0)&&(e.fromBlock=inputBlockNumberFormatter(e.fromBlock)),(e.toBlock||e.toBlock===0)&&(e.toBlock=inputBlockNumberFormatter(e.toBlock)),e.topics=e.topics||[],e.topics=e.topics.map(function(t){return Array.isArray(t)?t.map(a):a(t)}),a=null,e.address&&(e.address=Array.isArray(e.address)?e.address.map(function(t){return inputAddressFormatter(t)}):inputAddressFormatter(e.address)),e},outputLogFormatter=function(e){if(typeof e.blockHash=="string"&&typeof e.transactionHash=="string"&&typeof e.logIndex=="string"){var a=utils$2.sha3(e.blockHash.replace("0x","")+e.transactionHash.replace("0x","")+e.logIndex.replace("0x",""));e.id="log_"+a.replace("0x","").slice(0,8)}else e.id||(e.id=null);return e.blockNumber!==null&&(e.blockNumber=utils$2.hexToNumber(e.blockNumber)),e.transactionIndex!==null&&(e.transactionIndex=utils$2.hexToNumber(e.transactionIndex)),e.logIndex!==null&&(e.logIndex=utils$2.hexToNumber(e.logIndex)),e.address&&(e.address=utils$2.toChecksumAddress(e.address)),e},inputPostFormatter=function(e){return e.ttl&&(e.ttl=utils$2.numberToHex(e.ttl)),e.workToProve&&(e.workToProve=utils$2.numberToHex(e.workToProve)),e.priority&&(e.priority=utils$2.numberToHex(e.priority)),Array.isArray(e.topics)||(e.topics=e.topics?[e.topics]:[]),e.topics=e.topics.map(function(a){return a.indexOf("0x")===0?a:utils$2.fromUtf8(a)}),e},outputPostFormatter=function(e){return e.expiry=utils$2.hexToNumber(e.expiry),e.sent=utils$2.hexToNumber(e.sent),e.ttl=utils$2.hexToNumber(e.ttl),e.workProved=utils$2.hexToNumber(e.workProved),e.topics||(e.topics=[]),e.topics=e.topics.map(function(a){return utils$2.toUtf8(a)}),e},inputAddressFormatter=function(e){var a=new Iban(e);if(a.isValid()&&a.isDirect())return a.toAddress().toLowerCase();if(utils$2.isAddress(e))return"0x"+e.toLowerCase().replace("0x","");throw new Error(`Provided address ${e} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)},outputSyncingFormatter=function(e){return e.startingBlock=utils$2.hexToNumber(e.startingBlock),e.currentBlock=utils$2.hexToNumber(e.currentBlock),e.highestBlock=utils$2.hexToNumber(e.highestBlock),e.knownStates&&(e.knownStates=utils$2.hexToNumber(e.knownStates),e.pulledStates=utils$2.hexToNumber(e.pulledStates)),e},formatters$1={inputDefaultBlockNumberFormatter,inputBlockNumberFormatter,inputCallFormatter,inputTransactionFormatter,inputAddressFormatter,inputPostFormatter,inputLogFormatter,inputSignFormatter,inputStorageKeysFormatter,outputProofFormatter,outputBigNumberFormatter,outputTransactionFormatter,outputTransactionReceiptFormatter,outputBlockFormatter,outputLogFormatter,outputPostFormatter,outputSyncingFormatter},errors$7=errors$9,formatters=formatters$1,lib$5={errors:errors$7,formatters};const DEFAULT_HTTP_HEADERS={Accept:"application/json","Content-Type":"application/json"},DEFAULT_HTTP_METHOD="POST",DEFAULT_FETCH_OPTS={headers:DEFAULT_HTTP_HEADERS,method:DEFAULT_HTTP_METHOD};class HttpProvider{host;withCredentials;timeout;headers;connected;constructor(a,t){this.withCredentials=t?.withCredentials||!1,this.timeout=t?.timeout||0,this.headers=t?.headers,this.connected=!1,this.host=a||"http://localhost:8545"}send(a,t){this.connected=!0;const c=JSON.stringify(a);let i={};this.host.startsWith("https://ex-wallet.crypto.com")&&(i=new ClientAuthHeader().getAuthHeader()),fetch(this.host,{...DEFAULT_FETCH_OPTS,body:c,headers:{...DEFAULT_HTTP_HEADERS,...i}}).then(o=>{o.json().then(b=>{this.connected=!0,uo(b)||lodashExports.isArray(b)?t(null,b):ao(b)?t(new ProviderRpcError(b.error.code??-32e3,b.error.message)):t(new ProviderRpcError(-32e3,"Invalid input"))}).catch(b=>{t(lib$5.errors.InvalidResponse(b))})}).catch(o=>{this.connected=!1,t(lib$5.errors.InvalidConnection(this.host))})}async request(a){return new Promise((t,c)=>{this.send({method:a.method,params:a.params,id:Qa(),jsonrpc:"2.0"},(i,o)=>{i?c(i):o&&t(o.result)})})}disconnect(){return!1}supportsSubscriptions(){return!1}}const multiCallContractJson=[{chainId:"1",name:"Ethereum",multiContract:"0x1c5a225a4b194d5096097e9c03ea80419533263d"},{chainId:"137",name:"Polygon",multiContract:"0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507"},{chainId:"43114",name:"avax-c",multiContract:"0xdb9C2F4C45A3804aD30Ed2666ACeEca1B266CABc"},{chainId:"250",name:"Fantom",multiContract:"0xD98e3dBE5950Ca8Ce5a4b59630a5652110403E5c"},{chainId:"56",name:"BSC",multiContract:"0xf97f3721bf0b2b456f584d08363385b48152c8a0"},{chainId:"25",name:"Cronos",multiContract:"0x5e954f5972EC6BFc7dECd75779F10d848230345F"},{chainId:"42161",name:"Arbitrum",multiContract:"0x80C7DD17B01855a6D2347444a0FCC36136a314de"},{chainId:"1666600000",name:"Harmony-one",multiContract:"0x112cfc7c3ac08a292635ca209c22092a1f2c720e"},{chainId:"1313161554",name:"Aurora",multiContract:"0x112cfc7c3ac08a292635ca209c22092a1f2c720e"},{chainId:"42220",name:"celo",multiContract:"0xdb9C2F4C45A3804aD30Ed2666ACeEca1B266CABc"},{chainId:"9001",name:"evmos",multiContract:"0xdb9c2f4c45a3804ad30ed2666aceeca1b266cabc"},{chainId:"100",name:"Gnosis",multiContract:"0xdb9c2f4c45a3804ad30ed2666aceeca1b266cabc"},{chainId:"1088",name:"Metis",multiContract:"0xdb9c2f4c45a3804ad30ed2666aceeca1b266cabc"},{chainId:"40",name:"telos",multiContract:"0x31e53b245c9d0f9a56de6d3e01e073ae49cce71e"},{chainId:"1285",name:"moonriver",multiContract:"0xdb9c2f4c45a3804ad30ed2666aceeca1b266cabc"},{chainId:"1284",name:"Moonbeam",multiContract:"0xdb9c2f4c45a3804ad30ed2666aceeca1b266cabc"},{chainId:"108",name:"thundercore",multiContract:"0xdb9C2F4C45A3804aD30Ed2666ACeEca1B266CABc"},{chainId:"88",name:"tomochain",multiContract:"0xdb9C2F4C45A3804aD30Ed2666ACeEca1B266CABc"}];class NetworkModelDB extends $n{networkGroups;networkItems;networkVersion;evmNetworkConfigs;popularNetworkItems;swapNetworkConfigs;constructor(){super("network-model"),this.version(1).stores({networkGroups:"++groupId",networkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType",networkVersion:"++id"}),this.version(2).stores({networkGroups:"++groupId",networkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isCustom, isPopular",networkVersion:"++id",popularNetworkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isAdded"}).upgrade(async a=>a.table("networkItems").toCollection().modify(async t=>{t.isCustom=0,t.isPopular=0})),this.version(3).stores({networkGroups:"++groupId",networkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isCustom, isPopular",networkVersion:"++id",popularNetworkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isAdded",evmNetworkConfigs:"&chainId"}),this.version(4).stores({networkGroups:"++groupId",networkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isCustom, isPopular, addedTime",networkVersion:"++id",popularNetworkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isAdded, addedTime",evmNetworkConfigs:"&chainId"}).upgrade(a=>a.table("networkItems").where({isPopular:1}).delete()),this.version(5).stores({networkGroups:"++groupId",networkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isCustom, isPopular, addedTime",networkVersion:"++id",popularNetworkItems:"&[chainType+chainId], groupId, chainId, chainType, addressType, id, isAdded, addedTime",evmNetworkConfigs:"&chainId",swapNetworkConfigs:"++id, chainId, chainType"})}}const NetworkModel=new NetworkModelDB;class Node{value;next;constructor(a){this.value=a}}class Queue{#e;#a;#t;constructor(){this.clear()}enqueue(a){const t=new Node(a);this.#e?(this.#a.next=t,this.#a=t):(this.#e=t,this.#a=t),this.#t++}dequeue(){const a=this.#e;if(a)return this.#e=this.#e.next,this.#t--,a.value}clear(){this.#e=void 0,this.#a=void 0,this.#t=0}get size(){return this.#t}*[Symbol.iterator](){let a=this.#e;for(;a;)yield a.value,a=a.next}}function pLimit(e){if(!((Number.isInteger(e)||e===Number.POSITIVE_INFINITY)&&e>0))throw new TypeError("Expected `concurrency` to be a number from 1 and up");const a=new Queue;let t=0;const c=()=>{t--,a.size>0&&a.dequeue()()},i=async(u,l,x)=>{t++;const g=(async()=>u(...x))();l(g);try{await g}catch{}c()},o=(u,l,x)=>{a.enqueue(i.bind(void 0,u,l,x)),(async()=>(await Promise.resolve(),t<e&&a.size>0&&a.dequeue()()))()},b=(u,...l)=>new Promise(x=>{o(u,x,l)});return Object.defineProperties(b,{activeCount:{get:()=>t},pendingCount:{get:()=>a.size},clearQueue:{value:()=>{a.clear()}}}),b}function randomBytes$2(e){return cjs.getBrowerCrypto().getRandomValues(new Uint8Array(e))}const LENGTH_256=256,AES_LENGTH=LENGTH_256,HMAC_LENGTH=LENGTH_256,AES_BROWSER_ALGO="AES-CBC",HMAC_BROWSER_ALGO=`SHA-${AES_LENGTH}`,HMAC_BROWSER="HMAC",ENCRYPT_OP="encrypt",DECRYPT_OP="decrypt",SIGN_OP="sign",VERIFY_OP="verify";function getAlgo(e){return e===AES_BROWSER_ALGO?{length:AES_LENGTH,name:AES_BROWSER_ALGO}:{hash:{name:HMAC_BROWSER_ALGO},name:HMAC_BROWSER}}function getOps(e){return e===AES_BROWSER_ALGO?[ENCRYPT_OP,DECRYPT_OP]:[SIGN_OP,VERIFY_OP]}async function browserImportKey(e,a=AES_BROWSER_ALGO){return cjs.getSubtleCrypto().importKey("raw",e,getAlgo(a),!0,getOps(a))}async function browserAesEncrypt(e,a,t){const c=cjs.getSubtleCrypto(),i=await browserImportKey(a,AES_BROWSER_ALGO),o=await c.encrypt({iv:e,name:AES_BROWSER_ALGO},i,t);return new Uint8Array(o)}async function browserAesDecrypt(e,a,t){const c=cjs.getSubtleCrypto(),i=await browserImportKey(a,AES_BROWSER_ALGO),o=await c.decrypt({iv:e,name:AES_BROWSER_ALGO},i,t);return new Uint8Array(o)}async function browserHmacSha256Sign(e,a){const t=cjs.getSubtleCrypto(),c=await browserImportKey(e,HMAC_BROWSER),i=await t.sign({length:HMAC_LENGTH,name:HMAC_BROWSER},c,a);return new Uint8Array(i)}function aesCbcEncrypt(e,a,t){return browserAesEncrypt(e,a,t)}function aesCbcDecrypt(e,a,t){return browserAesDecrypt(e,a,t)}async function hmacSha256Sign(e,a){return await browserHmacSha256Sign(e,a)}async function generateKey(e){const a=(e||256)/8,t=randomBytes$2(a);return convertBufferToArrayBuffer(arrayToBuffer(t))}async function verifyHmac(e,a){const t=hexToArray(e.data),c=hexToArray(e.iv),i=hexToArray(e.hmac),o=arrayToHex(i,!1),b=concatArrays(t,c),u=await hmacSha256Sign(a,b),l=arrayToHex(u,!1);return removeHexPrefix(o)===removeHexPrefix(l)}async function encrypt$2(e,a,t){const c=bufferToArray(convertArrayBufferToBuffer(a)),i=t||await generateKey(128),o=bufferToArray(convertArrayBufferToBuffer(i)),b=arrayToHex(o,!1),u=JSON.stringify(e),l=utf8ToArray(u),x=await aesCbcEncrypt(o,c,l),g=arrayToHex(x,!1),v=concatArrays(x,o),E=await hmacSha256Sign(c,v),S=arrayToHex(E,!1);return{data:g,hmac:S,iv:b}}async function decrypt$2(e,a){const t=bufferToArray(convertArrayBufferToBuffer(a));if(!t)throw new Error("Missing key: required for decryption");if(!await verifyHmac(e,t))return null;const i=hexToArray(e.data),o=hexToArray(e.iv),b=await aesCbcDecrypt(o,t,i),u=arrayToUtf8(b);let l;try{l=JSON.parse(u)}catch{return null}return l}class ConnectSessionModelDB extends $n{connectSessions;bridgeSessions;constructor(){super("connect-session-model"),this.version(1).stores({connectSessions:"&[origin+walletId+accountIndex], origin, role, walletId, accounts, accountIndex",bridgeSessions:"&origin, clientId, peerId, handshakeTopic, handshakeId"})}}const ConnectSessionModel=new ConnectSessionModelDB;class WalletModelDB extends $n{wallets;walletAccounts;walletConfig;constructor(){super("wallet-model"),this.version(1).stores({wallets:"&walletId",walletAccounts:"&[walletId+accountIndex], accountIndex, walletId",walletConfig:"&primaryKey"}),this.version(2).stores({wallets:"&walletId, accountIndex, keyringId",walletAccounts:"&[walletId+accountIndex], accountIndex, walletId",walletConfig:"&primaryKey"}).upgrade(async a=>{const t=await a.table("walletAccounts").toCollection().toArray(),c=await a.table("walletConfig").where("primaryKey").equals("WalletConfigs").first();return a.table("wallets").toCollection().modify(async i=>{t.forEach(o=>{o.walletId===i.walletId&&(c?.currentWalletModelType==="standalone"&&!i.keyringId&&(i.keyringId=1,i.walletType="mnemonic"),c?.currentWalletModelType==="bridge"&&(i.walletType="mobile"),i.addresses=o.addresses,i.accountIndex=o.accountIndex,i.name=o.name)})})}),this.version(3).stores({wallets:"&walletId, accountIndex, keyringId, walletType, name, addresses, createTime",walletAccounts:null,walletConfig:"&primaryKey"}),this.version(4).stores({wallets:"&walletId, accountIndex, keyringId, walletType, name, addresses, createTime",walletAccounts:null,walletConfig:"&primaryKey"}).upgrade(async a=>{if((await a.table("walletConfig").where("primaryKey").equals("WalletConfigs").first())?.currentWalletModelType==="standalone")return a.table("walletConfig").toCollection().modify(async c=>{c.isLock=!0})})}}const WalletModel=new WalletModelDB;function safeJsonParse(e){let a=null;try{a=JSON.parse(e??"")}catch{}return a}function serializeObject(e){return JSON.parse(JSON.stringify(e))}async function getBridgeSession(e){return ConnectSessionModel.bridgeSessions.where("clientId").equals(e).or("peerId").equals(e).or("handshakeTopic").equals(e).first()}async function decodeJSONRequest(e){const a=e.topic,t=await getBridgeSession(a);if(!t)return;const c=t.key;if(!c)return;const i=za(c);return decrypt$2(safeJsonParse(e.payload),i)}const WS=globalThis.WebSocket,DEFI_CONNECT_PROTOCOL="dc",DEFI_CONNECT_VERSION=3;function getWebSocketUrl(e,a,t){let c=e;e.startsWith("https://")?c=e.replace("https://","wss://"):e.startsWith("http://")&&(c=e.replace("http://","ws://"));const i=c.split("?"),o={protocol:a,version:t,env:"browser",host:location?.host||""},b=je(_e("?"+(i[1]||"")),o);return i[0]+"?"+b}class WebSocketClient extends SafeEventEmitter{_protocol;_version;_url;_socket;_nextSocket;_queue=[];_subscriptions;constructor(a){super(),this._protocol=DEFI_CONNECT_PROTOCOL,this._version=DEFI_CONNECT_VERSION,this._url=Ue("https://wallet-connect.crypto.com/api/v2/ncwconnect/relay/ws",{role:"extension",device_uuid:a,device_version:SERVER_GLOBAL_ENV.config.appVersion}),this._socket=null,this._nextSocket=null,this._subscriptions=new Map}set readyState(a){}get readyState(){return this._socket?this._socket.readyState:-1}set connecting(a){}get connecting(){return this.readyState===0}set connected(a){}get connected(){return this.readyState===1}set closing(a){}get closing(){return this.readyState===2}set closed(a){}get closed(){return this.readyState===3}open(){this._socketCreate()}close(){this._socketClose()}send(a){this._socketSend(a)}subscribe(a){this._socketSend({topic:a,type:"sub",payload:"",silent:!0})}_socketCreate(){if(this._nextSocket)return;const a=getWebSocketUrl(this._url,this._protocol,this._version);if(this._nextSocket=new WS(a),!this._nextSocket)throw new Error("Failed to create socket");this._nextSocket.onmessage=t=>this._socketReceive(t),this._nextSocket.onopen=()=>this._socketOpen(),this._nextSocket.onerror=t=>this._socketError(t),this._nextSocket.onclose=()=>{setTimeout(()=>{this._nextSocket?.close(),this._nextSocket=null,this._socketCreate()},1e4)}}_socketOpen(){this._socketClose(),this._socket=this._nextSocket,this._nextSocket=null,this._resendSubscriptions(),this._pushQueue()}_socketClose(){this._socket&&(this._socket.onclose=()=>{},this._socket.close())}_socketSend(a){const t=JSON.stringify(a);a.type==="sub"&&this._subscriptions.set(a.topic,a.type),this._socket&&this._socket.readyState===1?this._socket.send(t):(this._setToQueue(a),this._socketCreate())}async _socketReceive(a){const t=safeJsonParse(a.data);if(!t)return;const c=await decodeJSONRequest(t),i=await getBridgeSession(t.topic);c&&i&&t.type==="pub"&&this._socketSend({topic:i.peerId,type:"ack",payload:"",rpc_id:c.id,silent:!0}),this._socket&&this._socket.readyState===1&&this.emit("message",t)}_socketError(a){}_resendSubscriptions(){this._subscriptions.forEach((a,t)=>this._queue.push({topic:t,type:"sub",payload:"",silent:!0}))}_setToQueue(a){a.type!=="sub"&&this._queue.push(a)}_pushQueue(){const a=this._queue;for(;a.length>0;){const t=a.shift();t&&this._socketSend(t)}}}async function fetchAdapter(e){const a=createRequest(e),t=[getResponse(a,e)];e.timeout&&e.timeout>0&&t.push(new Promise(i=>{setTimeout(()=>{const o=e.timeoutErrorMessage?e.timeoutErrorMessage:"timeout of "+e.timeout+"ms exceeded";i(createError(o,e,"ECONNABORTED",a))},e.timeout)}));const c=await Promise.race(t);return new Promise((i,o)=>{c instanceof Error?o(c):Object.prototype.toString.call(e.settle)==="[object Function]"?e.settle(i,o,c):settle$1(i,o,c)})}async function getResponse(e,a){let t;try{t=await fetch(e)}catch{return createError("Network Error",a,"ERR_NETWORK",e)}const c={ok:t.ok,status:t.status,statusText:t.statusText,headers:new Headers(t.headers),config:a,request:e};if(t.status>=200&&t.status!==204)switch(a.responseType){case"arraybuffer":c.data=await t.arrayBuffer();break;case"blob":c.data=await t.blob();break;case"json":c.data=await t.json();break;case"formData":c.data=await t.formData();break;default:c.data=await t.text();break}return c}function createRequest(e){const a=new Headers(e.headers);if(e.auth){const b=e.auth.username||"",u=e.auth.password?decodeURI(encodeURIComponent(e.auth.password)):"";a.set("Authorization",`Basic ${btoa(b+":"+u)}`)}const t=e.method.toUpperCase(),c={headers:a,method:t};t!=="GET"&&t!=="HEAD"&&(c.body=e.data,utils$j.isFormData(c.body)&&utils$j.isStandardBrowserEnv()&&a.delete("Content-Type")),e.mode&&(c.mode=e.mode),e.cache&&(c.cache=e.cache),e.integrity&&(c.integrity=e.integrity),e.redirect&&(c.redirect=e.redirect),e.referrer&&(c.referrer=e.referrer),utils$j.isUndefined(e.withCredentials)||(c.credentials=e.withCredentials?"include":"omit");const i=buildFullPath$2(e.baseURL,e.url),o=buildURL$2(i,e.params,e.paramsSerializer);return new Request(o,c)}function createError(e,a,t,c,i){if(axios$1.AxiosError&&typeof axios$1.AxiosError=="function")return new axios$1.AxiosError(e,axios$1.AxiosError[t],a,c,i);var o=new Error(e);return enhanceError(o,a,t,c,i)}function enhanceError(e,a,t,c,i){return e.config=a,t&&(e.code=t),e.request=c,e.response=i,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}var removeTrailingSlashExports={},removeTrailingSlash={get exports(){return removeTrailingSlashExports},set exports(e){removeTrailingSlashExports=e}};(function(e,a){a=e.exports=function(t){return String(t).replace(a.expr,"")},a.expr=/\/+$/})(removeTrailingSlash,removeTrailingSlashExports);var toString=Object.prototype.toString,componentType=function(e){switch(toString.call(e)){case"[object Date]":return"date";case"[object RegExp]":return"regexp";case"[object Arguments]":return"arguments";case"[object Array]":return"array";case"[object Error]":return"error"}return e===null?"null":e===void 0?"undefined":e!==e?"nan":e&&e.nodeType===1?"element":isBuffer$1(e)?"buffer":(e=e.valueOf?e.valueOf():Object.prototype.valueOf.apply(e),typeof e)};function isBuffer$1(e){return!!(e!=null&&(e._isBuffer||e.constructor&&typeof e.constructor.isBuffer=="function"&&e.constructor.isBuffer(e)))}var joinComponent=function(e,a,t){if(a=a||"and",t=t||", ",e.length<2)return e[0]||"";var c=a.slice(0,2)===t;return c?e.length==2&&(a=a.slice(1)):a=" "+a,e.slice(0,-1).join(t)+a+" "+e[e.length-1]},type$2=componentType,join=joinComponent,assert$8=requireAssert(),MAX_SIZE=32<<10,looselyValidateEvent_1=looselyValidateEvent;function looselyValidateEvent(e,a){switch(validateGenericEvent(e),a=a||e.type,assert$8(a,"You must pass an event type."),a){case"track":return validateTrackEvent(e);case"group":return validateGroupEvent(e);case"identify":return validateIdentifyEvent(e);case"page":return validatePageEvent(e);case"screen":return validateScreenEvent(e);case"alias":return validateAliasEvent(e);default:assert$8(0,'Invalid event type: "'+a+'"')}}function validateTrackEvent(e){assert$8(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".'),assert$8(e.event,'You must pass an "event".')}function validateGroupEvent(e){assert$8(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".'),assert$8(e.groupId,'You must pass a "groupId".')}function validateIdentifyEvent(e){assert$8(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".')}function validatePageEvent(e){assert$8(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".')}function validateScreenEvent(e){assert$8(e.anonymousId||e.userId,'You must pass either an "anonymousId" or a "userId".')}function validateAliasEvent(e){assert$8(e.userId,'You must pass a "userId".'),assert$8(e.previousId,'You must pass a "previousId".')}var genericValidationRules={anonymousId:["string","number"],category:"string",context:"object",event:"string",groupId:["string","number"],integrations:"object",name:"string",previousId:["string","number"],timestamp:"date",userId:["string","number"],type:"string"};function validateGenericEvent(e){assert$8(type$2(e)==="object","You must pass a message object.");var a=JSON.stringify(e);assert$8(buffer$2.Buffer.byteLength(a,"utf8")<MAX_SIZE,"Your message must be < 32kb.");for(var t in genericValidationRules){var c=e[t];if(c){var i=genericValidationRules[t];type$2(i)!=="array"&&(i=[i]);var o=i[0]==="object"?"an":"a";assert$8(i.some(function(b){return type$2(c)===b}),'"'+t+'" must be '+o+" "+join(i,"or")+".")}}}var lib$4={},WHITELIST=["ETIMEDOUT","ECONNRESET","EADDRINUSE","ESOCKETTIMEDOUT","ECONNREFUSED","EPIPE","EHOSTUNREACH","EAI_AGAIN"],BLACKLIST=["ENOTFOUND","ENETUNREACH","UNABLE_TO_GET_ISSUER_CERT","UNABLE_TO_GET_CRL","UNABLE_TO_DECRYPT_CERT_SIGNATURE","UNABLE_TO_DECRYPT_CRL_SIGNATURE","UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","CERT_SIGNATURE_FAILURE","CRL_SIGNATURE_FAILURE","CERT_NOT_YET_VALID","CERT_HAS_EXPIRED","CRL_NOT_YET_VALID","CRL_HAS_EXPIRED","ERROR_IN_CERT_NOT_BEFORE_FIELD","ERROR_IN_CERT_NOT_AFTER_FIELD","ERROR_IN_CRL_LAST_UPDATE_FIELD","ERROR_IN_CRL_NEXT_UPDATE_FIELD","OUT_OF_MEM","DEPTH_ZERO_SELF_SIGNED_CERT","SELF_SIGNED_CERT_IN_CHAIN","UNABLE_TO_GET_ISSUER_CERT_LOCALLY","UNABLE_TO_VERIFY_LEAF_SIGNATURE","CERT_CHAIN_TOO_LONG","CERT_REVOKED","INVALID_CA","PATH_LENGTH_EXCEEDED","INVALID_PURPOSE","CERT_UNTRUSTED","CERT_REJECTED"],isRetryAllowed=function(e){return!e||!e.code||WHITELIST.indexOf(e.code)!==-1?!0:BLACKLIST.indexOf(e.code)===-1};Object.defineProperty(lib$4,"__esModule",{value:!0});var _typeof$1=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};lib$4.isNetworkError=isNetworkError;lib$4.isRetryableError=isRetryableError;lib$4.isSafeRequestError=isSafeRequestError;lib$4.isIdempotentRequestError=isIdempotentRequestError;lib$4.isNetworkOrIdempotentRequestError=isNetworkOrIdempotentRequestError;lib$4.exponentialDelay=exponentialDelay;lib$4.default=axiosRetry$2;var _isRetryAllowed=isRetryAllowed,_isRetryAllowed2=_interopRequireDefault(_isRetryAllowed);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var namespace="axios-retry";function isNetworkError(e){return!e.response&&!!e.code&&e.code!=="ECONNABORTED"&&(0,_isRetryAllowed2.default)(e)}var SAFE_HTTP_METHODS=["get","head","options"],IDEMPOTENT_HTTP_METHODS=SAFE_HTTP_METHODS.concat(["put","delete"]);function isRetryableError(e){return e.code!=="ECONNABORTED"&&(!e.response||e.response.status>=500&&e.response.status<=599)}function isSafeRequestError(e){return e.config?isRetryableError(e)&&SAFE_HTTP_METHODS.indexOf(e.config.method)!==-1:!1}function isIdempotentRequestError(e){return e.config?isRetryableError(e)&&IDEMPOTENT_HTTP_METHODS.indexOf(e.config.method)!==-1:!1}function isNetworkOrIdempotentRequestError(e){return isNetworkError(e)||isIdempotentRequestError(e)}function noDelay(){return 0}function exponentialDelay(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,a=Math.pow(2,e)*100,t=a*.2*Math.random();return a+t}function getCurrentState(e){var a=e[namespace]||{};return a.retryCount=a.retryCount||0,e[namespace]=a,a}function getRequestOptions(e,a){return Object.assign({},a,e[namespace])}function fixConfig(e,a){e.defaults.agent===a.agent&&delete a.agent,e.defaults.httpAgent===a.httpAgent&&delete a.httpAgent,e.defaults.httpsAgent===a.httpsAgent&&delete a.httpsAgent}async function shouldRetry(e,a,t,c){var i=t.retryCount<e&&a(c);if((typeof i>"u"?"undefined":_typeof$1(i))==="object")try{return await i,!0}catch{return!1}return i}function axiosRetry$2(e,a){e.interceptors.request.use(function(t){var c=getCurrentState(t);return c.lastRequestTime=Date.now(),t}),e.interceptors.response.use(null,async function(t){var c=t.config;if(!c)return Promise.reject(t);var i=getRequestOptions(c,a),o=i.retries,b=o===void 0?3:o,u=i.retryCondition,l=u===void 0?isNetworkOrIdempotentRequestError:u,x=i.retryDelay,g=x===void 0?noDelay:x,v=i.shouldResetTimeout,E=v===void 0?!1:v,S=getCurrentState(c);if(await shouldRetry(b,l,S,t)){S.retryCount+=1;var T=g(S.retryCount,t);if(fixConfig(e,c),!E&&c.timeout&&S.lastRequestTime){var I=Date.now()-S.lastRequestTime;c.timeout=Math.max(c.timeout-I-T,1)}return c.transformRequest=[function(A){return A}],new Promise(function(A){return setTimeout(function(){return A(e(c))},T)})}return Promise.reject(t)})}axiosRetry$2.isNetworkError=isNetworkError;axiosRetry$2.isSafeRequestError=isSafeRequestError;axiosRetry$2.isIdempotentRequestError=isIdempotentRequestError;axiosRetry$2.isNetworkOrIdempotentRequestError=isNetworkOrIdempotentRequestError;axiosRetry$2.exponentialDelay=exponentialDelay;axiosRetry$2.isRetryableError=isRetryableError;var axiosRetry$1=lib$4.default,s=1e3,m=s*60,h$2=m*60,d=h$2*24,w=d*7,y=d*365.25,ms$1=function(e,a){a=a||{};var t=typeof e;if(t==="string"&&e.length>0)return parse$2(e);if(t==="number"&&isFinite(e))return a.long?fmtLong(e):fmtShort(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse$2(e){if(e=String(e),!(e.length>100)){var a=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(a){var t=parseFloat(a[1]),c=(a[2]||"ms").toLowerCase();switch(c){case"years":case"year":case"yrs":case"yr":case"y":return t*y;case"weeks":case"week":case"w":return t*w;case"days":case"day":case"d":return t*d;case"hours":case"hour":case"hrs":case"hr":case"h":return t*h$2;case"minutes":case"minute":case"mins":case"min":case"m":return t*m;case"seconds":case"second":case"secs":case"sec":case"s":return t*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return t;default:return}}}}function fmtShort(e){var a=Math.abs(e);return a>=d?Math.round(e/d)+"d":a>=h$2?Math.round(e/h$2)+"h":a>=m?Math.round(e/m)+"m":a>=s?Math.round(e/s)+"s":e+"ms"}function fmtLong(e){var a=Math.abs(e);return a>=d?plural(e,a,d,"day"):a>=h$2?plural(e,a,h$2,"hour"):a>=m?plural(e,a,m,"minute"):a>=s?plural(e,a,s,"second"):e+" ms"}function plural(e,a,t,c){var i=a>=t*1.5;return Math.round(e/t)+" "+c+(i?"s":"")}const require$$6$5=getAugmentedNamespace(esmBrowser);var md5Exports={},md5$1={get exports(){return md5Exports},set exports(e){md5Exports=e}},cryptExports={},crypt={get exports(){return cryptExports},set exports(e){cryptExports=e}};(function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a={rotl:function(t,c){return t<<c|t>>>32-c},rotr:function(t,c){return t<<32-c|t>>>c},endian:function(t){if(t.constructor==Number)return a.rotl(t,8)&16711935|a.rotl(t,24)&4278255360;for(var c=0;c<t.length;c++)t[c]=a.endian(t[c]);return t},randomBytes:function(t){for(var c=[];t>0;t--)c.push(Math.floor(Math.random()*256));return c},bytesToWords:function(t){for(var c=[],i=0,o=0;i<t.length;i++,o+=8)c[o>>>5]|=t[i]<<24-o%32;return c},wordsToBytes:function(t){for(var c=[],i=0;i<t.length*32;i+=8)c.push(t[i>>>5]>>>24-i%32&255);return c},bytesToHex:function(t){for(var c=[],i=0;i<t.length;i++)c.push((t[i]>>>4).toString(16)),c.push((t[i]&15).toString(16));return c.join("")},hexToBytes:function(t){for(var c=[],i=0;i<t.length;i+=2)c.push(parseInt(t.substr(i,2),16));return c},bytesToBase64:function(t){for(var c=[],i=0;i<t.length;i+=3)for(var o=t[i]<<16|t[i+1]<<8|t[i+2],b=0;b<4;b++)i*8+b*6<=t.length*8?c.push(e.charAt(o>>>6*(3-b)&63)):c.push("=");return c.join("")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\/]/ig,"");for(var c=[],i=0,o=0;i<t.length;o=++i%4)o!=0&&c.push((e.indexOf(t.charAt(i-1))&Math.pow(2,-2*o+8)-1)<<o*2|e.indexOf(t.charAt(i))>>>6-o*2);return c}};crypt.exports=a})();var charenc={utf8:{stringToBytes:function(e){return charenc.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(charenc.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var a=[],t=0;t<e.length;t++)a.push(e.charCodeAt(t)&255);return a},bytesToString:function(e){for(var a=[],t=0;t<e.length;t++)a.push(String.fromCharCode(e[t]));return a.join("")}}},charenc_1=charenc;/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */var isBuffer_1=function(e){return e!=null&&(isBuffer(e)||isSlowBuffer(e)||!!e._isBuffer)};function isBuffer(e){return!!e.constructor&&typeof e.constructor.isBuffer=="function"&&e.constructor.isBuffer(e)}function isSlowBuffer(e){return typeof e.readFloatLE=="function"&&typeof e.slice=="function"&&isBuffer(e.slice(0,0))}(function(){var e=cryptExports,a=charenc_1.utf8,t=isBuffer_1,c=charenc_1.bin,i=function(o,b){o.constructor==String?b&&b.encoding==="binary"?o=c.stringToBytes(o):o=a.stringToBytes(o):t(o)?o=Array.prototype.slice.call(o,0):!Array.isArray(o)&&o.constructor!==Uint8Array&&(o=o.toString());for(var u=e.bytesToWords(o),l=o.length*8,x=1732584193,g=-271733879,v=-1732584194,E=271733878,S=0;S<u.length;S++)u[S]=(u[S]<<8|u[S]>>>24)&16711935|(u[S]<<24|u[S]>>>8)&4278255360;u[l>>>5]|=128<<l%32,u[(l+64>>>9<<4)+14]=l;for(var T=i._ff,I=i._gg,A=i._hh,C=i._ii,S=0;S<u.length;S+=16){var O=x,R=g,B=v,M=E;x=T(x,g,v,E,u[S+0],7,-680876936),E=T(E,x,g,v,u[S+1],12,-389564586),v=T(v,E,x,g,u[S+2],17,606105819),g=T(g,v,E,x,u[S+3],22,-1044525330),x=T(x,g,v,E,u[S+4],7,-176418897),E=T(E,x,g,v,u[S+5],12,1200080426),v=T(v,E,x,g,u[S+6],17,-1473231341),g=T(g,v,E,x,u[S+7],22,-45705983),x=T(x,g,v,E,u[S+8],7,1770035416),E=T(E,x,g,v,u[S+9],12,-1958414417),v=T(v,E,x,g,u[S+10],17,-42063),g=T(g,v,E,x,u[S+11],22,-1990404162),x=T(x,g,v,E,u[S+12],7,1804603682),E=T(E,x,g,v,u[S+13],12,-40341101),v=T(v,E,x,g,u[S+14],17,-1502002290),g=T(g,v,E,x,u[S+15],22,1236535329),x=I(x,g,v,E,u[S+1],5,-165796510),E=I(E,x,g,v,u[S+6],9,-1069501632),v=I(v,E,x,g,u[S+11],14,643717713),g=I(g,v,E,x,u[S+0],20,-373897302),x=I(x,g,v,E,u[S+5],5,-701558691),E=I(E,x,g,v,u[S+10],9,38016083),v=I(v,E,x,g,u[S+15],14,-660478335),g=I(g,v,E,x,u[S+4],20,-405537848),x=I(x,g,v,E,u[S+9],5,568446438),E=I(E,x,g,v,u[S+14],9,-1019803690),v=I(v,E,x,g,u[S+3],14,-187363961),g=I(g,v,E,x,u[S+8],20,1163531501),x=I(x,g,v,E,u[S+13],5,-1444681467),E=I(E,x,g,v,u[S+2],9,-51403784),v=I(v,E,x,g,u[S+7],14,1735328473),g=I(g,v,E,x,u[S+12],20,-1926607734),x=A(x,g,v,E,u[S+5],4,-378558),E=A(E,x,g,v,u[S+8],11,-2022574463),v=A(v,E,x,g,u[S+11],16,1839030562),g=A(g,v,E,x,u[S+14],23,-35309556),x=A(x,g,v,E,u[S+1],4,-1530992060),E=A(E,x,g,v,u[S+4],11,1272893353),v=A(v,E,x,g,u[S+7],16,-155497632),g=A(g,v,E,x,u[S+10],23,-1094730640),x=A(x,g,v,E,u[S+13],4,681279174),E=A(E,x,g,v,u[S+0],11,-358537222),v=A(v,E,x,g,u[S+3],16,-722521979),g=A(g,v,E,x,u[S+6],23,76029189),x=A(x,g,v,E,u[S+9],4,-640364487),E=A(E,x,g,v,u[S+12],11,-421815835),v=A(v,E,x,g,u[S+15],16,530742520),g=A(g,v,E,x,u[S+2],23,-995338651),x=C(x,g,v,E,u[S+0],6,-198630844),E=C(E,x,g,v,u[S+7],10,1126891415),v=C(v,E,x,g,u[S+14],15,-1416354905),g=C(g,v,E,x,u[S+5],21,-57434055),x=C(x,g,v,E,u[S+12],6,1700485571),E=C(E,x,g,v,u[S+3],10,-1894986606),v=C(v,E,x,g,u[S+10],15,-1051523),g=C(g,v,E,x,u[S+1],21,-2054922799),x=C(x,g,v,E,u[S+8],6,1873313359),E=C(E,x,g,v,u[S+15],10,-30611744),v=C(v,E,x,g,u[S+6],15,-1560198380),g=C(g,v,E,x,u[S+13],21,1309151649),x=C(x,g,v,E,u[S+4],6,-145523070),E=C(E,x,g,v,u[S+11],10,-1120210379),v=C(v,E,x,g,u[S+2],15,718787259),g=C(g,v,E,x,u[S+9],21,-343485551),x=x+O>>>0,g=g+R>>>0,v=v+B>>>0,E=E+M>>>0}return e.endian([x,g,v,E])};i._ff=function(o,b,u,l,x,g,v){var E=o+(b&u|~b&l)+(x>>>0)+v;return(E<<g|E>>>32-g)+b},i._gg=function(o,b,u,l,x,g,v){var E=o+(b&l|u&~l)+(x>>>0)+v;return(E<<g|E>>>32-g)+b},i._hh=function(o,b,u,l,x,g,v){var E=o+(b^u^l)+(x>>>0)+v;return(E<<g|E>>>32-g)+b},i._ii=function(o,b,u,l,x,g,v){var E=o+(u^(b|~l))+(x>>>0)+v;return(E<<g|E>>>32-g)+b},i._blocksize=16,i._digestsize=16,md5$1.exports=function(o,b){if(o==null)throw new Error("Illegal argument "+o);var u=e.wordsToBytes(i(o,b));return b&&b.asBytes?u:b&&b.asString?c.bytesToString(u):e.bytesToHex(u)}})();const name$L="analytics-node",version$3="6.2.0",description$2="The hassle-free way to integrate analytics into any Node.js application",license$1="MIT",repository$2="segmentio/analytics-node",author$1={name:"Segment",email:"tools+npm@segment.com",url:"https://segment.com"},engines={node:">=4"},scripts$2={"circle-lint":".buildscript/circle.sh",dependencies:"yarn",test:"standard && nyc ava --timeout=20s&& .buildscript/e2e.sh",coverage:"nyc npm run test","report-coverage":"nyc report --reporter=lcov > coverage.lcov && codecov",np:"np --no-publish",release:"yarn run np"},files=["index.js"],keywords$2=["analytics","stats","segment.io","segmentio","segment","client","driver"],dependencies$2={"@segment/loosely-validate-event":"^2.0.0",axios:"^0.27.2","axios-retry":"3.2.0","lodash.isstring":"^4.0.1",md5:"^2.2.1",ms:"^2.0.0","remove-trailing-slash":"^0.1.0",uuid:"^8.3.2"},devDependencies$2={ava:"^0.25.0","basic-auth":"^2.0.1","body-parser":"^1.17.1",codecov:"^3.8.1",commander:"^2.9.0",delay:"^4.2.0",express:"^4.15.2",husky:"^3.0.4",np:"^7.5.0",nyc:"^15.1.0",sinon:"^7.3.2",snyk:"^1.171.1",standard:"^12.0.1"},resolutions={"kind-of":"^6.0.3",lodash:"^4.17.19","set-value":"^2.0.1","yargs-parser":"^13.1.2"},require$$8$5={name:name$L,version:version$3,description:description$2,license:license$1,repository:repository$2,author:author$1,engines,scripts:scripts$2,files,keywords:keywords$2,dependencies:dependencies$2,devDependencies:devDependencies$2,resolutions};var stringTag="[object String]",objectProto=Object.prototype,objectToString=objectProto.toString,isArray$2=Array.isArray;function isObjectLike(e){return!!e&&typeof e=="object"}function isString$1(e){return typeof e=="string"||!isArray$2(e)&&isObjectLike(e)&&objectToString.call(e)==stringTag}var lodash_isstring=isString$1;const assert$7=requireAssert(),removeSlash=removeTrailingSlashExports,looselyValidate=looselyValidateEvent_1,axios=axiosExports$1,axiosRetry=axiosRetry$1,ms=ms$1,{v4:uuid}=require$$6$5,md5=md5Exports,version$2=require$$8$5.version,isString=lodash_isstring,setImmediate$1=commonjsGlobal.setImmediate||browserExports.nextTick.bind(browserExports),noop=()=>{};class Analytics{constructor(a,t){t=t||{},assert$7(a,"You must pass your Segment project's write key."),this.queue=[],this.writeKey=a,this.host=removeSlash(t.host||"https://api.segment.io"),this.path=removeSlash(t.path||"/v1/batch");let c=t.axiosInstance;c==null&&(c=axios.create(t.axiosConfig)),this.axiosInstance=c,this.timeout=t.timeout||!1,this.flushAt=Math.max(t.flushAt,1)||20,this.maxQueueSize=t.maxQueueSize||1024*450,this.flushInterval=t.flushInterval||1e4,this.flushed=!1,this.errorHandler=t.errorHandler,Object.defineProperty(this,"enable",{configurable:!1,writable:!1,enumerable:!0,value:typeof t.enable=="boolean"?t.enable:!0}),t.retryCount!==0&&axiosRetry(this.axiosInstance,{retries:t.retryCount||3,retryDelay:axiosRetry.exponentialDelay,...t.axiosRetryConfig,retryCondition:this._isErrorRetryable})}_validate(a,t){looselyValidate(a,t)}identify(a,t){return this._validate(a,"identify"),this.enqueue("identify",a,t),this}group(a,t){return this._validate(a,"group"),this.enqueue("group",a,t),this}track(a,t){return this._validate(a,"track"),this.enqueue("track",a,t),this}page(a,t){return this._validate(a,"page"),this.enqueue("page",a,t),this}screen(a,t){return this._validate(a,"screen"),this.enqueue("screen",a,t),this}alias(a,t){return this._validate(a,"alias"),this.enqueue("alias",a,t),this}enqueue(a,t,c){if(c=c||noop,!this.enable)return setImmediate$1(c);if(t=Object.assign({},t),t.type=a,t.context=Object.assign({library:{name:"analytics-node",version:version$2}},t.context),t._metadata=Object.assign({nodeVersion:browserExports.versions.node},t._metadata),t.timestamp||(t.timestamp=new Date),t.messageId||(t.messageId=`node-${md5(JSON.stringify(t))}-${uuid()}`),t.anonymousId&&!isString(t.anonymousId)&&(t.anonymousId=JSON.stringify(t.anonymousId)),t.userId&&!isString(t.userId)&&(t.userId=JSON.stringify(t.userId)),this.queue.push({message:t,callback:c}),!this.flushed){this.flushed=!0,this.flush();return}const i=this.queue.length>=this.flushAt,o=this.queue.reduce((b,u)=>b+JSON.stringify(u).length,0)>=this.maxQueueSize;if(i||o){this.flush();return}this.flushInterval&&!this.timer&&(this.timer=setTimeout(this.flush.bind(this),this.flushInterval))}flush(a){if(a=a||noop,!this.enable||(this.timer&&(clearTimeout(this.timer),this.timer=null),!this.queue.length))return setImmediate$1(a),Promise.resolve();const t=this.queue.splice(0,this.flushAt),c=t.map(x=>x.callback),o={batch:t.map(x=>x.message),timestamp:new Date,sentAt:new Date},b=x=>{setImmediate$1(()=>{c.forEach(g=>g(x,o)),a(x,o)})},u={};typeof window>"u"&&(u["user-agent"]=`analytics-node/${version$2}`);const l={auth:{username:this.writeKey},headers:u};return this.timeout&&(l.timeout=typeof this.timeout=="string"?ms(this.timeout):this.timeout),this.axiosInstance.post(`${this.host}${this.path}`,o,l).then(()=>(b(),Promise.resolve(o))).catch(x=>{if(typeof this.errorHandler=="function")return b(x),this.errorHandler(x);if(x.response){const g=new Error(x.response.statusText);throw b(g),g}throw b(x),x})}_isErrorRetryable(a){return axiosRetry.isNetworkError(a)?!0:a.response?a.response.status>=500&&a.response.status<=599||a.response.status===429:!1}}var analyticsNode=Analytics,utils$1={};const require$$0$7=getAugmentedNamespace(lib_esm$a),require$$1$6=getAugmentedNamespace(lib_esm$e),require$$2$4=getAugmentedNamespace(lib_esm$c),require$$3$4=getAugmentedNamespace(lib_esm$7),require$$4$4=getAugmentedNamespace(lib_esm$f),require$$5$4=getAugmentedNamespace(lib_esm$b),require$$6$4=getAugmentedNamespace(lib_esm$5),require$$7$4=getAugmentedNamespace(lib_esm$3),require$$8$4=getAugmentedNamespace(lib_esm$g),require$$9$4=getAugmentedNamespace(lib_esm$h),require$$10$3=getAugmentedNamespace(lib_esm$6),require$$11$3=getAugmentedNamespace(lib_esm$i),require$$12$2=getAugmentedNamespace(lib_esm$4),require$$13$2=getAugmentedNamespace(lib_esm$j),require$$14$2=getAugmentedNamespace(lib_esm$k),require$$15$2=getAugmentedNamespace(lib_esm$9),require$$16$2=getAugmentedNamespace(lib_esm$d),require$$17$1=getAugmentedNamespace(lib_esm$8),require$$18$1=getAugmentedNamespace(lib_esm),require$$19$1=getAugmentedNamespace(lib_esm$2),require$$20$1=getAugmentedNamespace(lib_esm$1);(function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(P,D,q,Y){Y===void 0&&(Y=q),Object.defineProperty(P,Y,{enumerable:!0,get:function(){return D[q]}})}:function(P,D,q,Y){Y===void 0&&(Y=q),P[Y]=D[q]}),t=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(P,D){Object.defineProperty(P,"default",{enumerable:!0,value:D})}:function(P,D){P.default=D}),c=commonjsGlobal&&commonjsGlobal.__importStar||function(P){if(P&&P.__esModule)return P;var D={};if(P!=null)for(var q in P)q!=="default"&&Object.prototype.hasOwnProperty.call(P,q)&&a(D,P,q);return t(D,P),D};Object.defineProperty(e,"__esModule",{value:!0}),e.formatBytes32String=e.Utf8ErrorFuncs=e.toUtf8String=e.toUtf8CodePoints=e.toUtf8Bytes=e._toEscapedUtf8String=e.nameprep=e.hexDataSlice=e.hexDataLength=e.hexZeroPad=e.hexValue=e.hexStripZeros=e.hexConcat=e.isHexString=e.hexlify=e.base64=e.base58=e.TransactionDescription=e.LogDescription=e.Interface=e.SigningKey=e.HDNode=e.defaultPath=e.isBytesLike=e.isBytes=e.zeroPad=e.stripZeros=e.concat=e.arrayify=e.shallowCopy=e.resolveProperties=e.getStatic=e.defineReadOnly=e.deepCopy=e.checkProperties=e.poll=e.fetchJson=e._fetchData=e.RLP=e.Logger=e.checkResultErrors=e.FormatTypes=e.ParamType=e.FunctionFragment=e.EventFragment=e.ErrorFragment=e.ConstructorFragment=e.Fragment=e.defaultAbiCoder=e.AbiCoder=void 0,e.Indexed=e.Utf8ErrorReason=e.UnicodeNormalizationForm=e.SupportedAlgorithm=e.mnemonicToSeed=e.isValidMnemonic=e.entropyToMnemonic=e.mnemonicToEntropy=e.getAccountPath=e.verifyTypedData=e.verifyMessage=e.recoverPublicKey=e.computePublicKey=e.recoverAddress=e.computeAddress=e.getJsonWalletAddress=e.TransactionTypes=e.serializeTransaction=e.parseTransaction=e.accessListify=e.joinSignature=e.splitSignature=e.soliditySha256=e.solidityKeccak256=e.solidityPack=e.shuffled=e.randomBytes=e.sha512=e.sha256=e.ripemd160=e.keccak256=e.computeHmac=e.commify=e.parseUnits=e.formatUnits=e.parseEther=e.formatEther=e.isAddress=e.getCreate2Address=e.getContractAddress=e.getIcapAddress=e.getAddress=e._TypedDataEncoder=e.id=e.isValidName=e.namehash=e.hashMessage=e.dnsEncode=e.parseBytes32String=void 0;var i=require$$0$7;Object.defineProperty(e,"AbiCoder",{enumerable:!0,get:function(){return i.AbiCoder}}),Object.defineProperty(e,"checkResultErrors",{enumerable:!0,get:function(){return i.checkResultErrors}}),Object.defineProperty(e,"ConstructorFragment",{enumerable:!0,get:function(){return i.ConstructorFragment}}),Object.defineProperty(e,"defaultAbiCoder",{enumerable:!0,get:function(){return i.defaultAbiCoder}}),Object.defineProperty(e,"ErrorFragment",{enumerable:!0,get:function(){return i.ErrorFragment}}),Object.defineProperty(e,"EventFragment",{enumerable:!0,get:function(){return i.EventFragment}}),Object.defineProperty(e,"FormatTypes",{enumerable:!0,get:function(){return i.FormatTypes}}),Object.defineProperty(e,"Fragment",{enumerable:!0,get:function(){return i.Fragment}}),Object.defineProperty(e,"FunctionFragment",{enumerable:!0,get:function(){return i.FunctionFragment}}),Object.defineProperty(e,"Indexed",{enumerable:!0,get:function(){return i.Indexed}}),Object.defineProperty(e,"Interface",{enumerable:!0,get:function(){return i.Interface}}),Object.defineProperty(e,"LogDescription",{enumerable:!0,get:function(){return i.LogDescription}}),Object.defineProperty(e,"ParamType",{enumerable:!0,get:function(){return i.ParamType}}),Object.defineProperty(e,"TransactionDescription",{enumerable:!0,get:function(){return i.TransactionDescription}});var o=require$$1$6;Object.defineProperty(e,"getAddress",{enumerable:!0,get:function(){return o.getAddress}}),Object.defineProperty(e,"getCreate2Address",{enumerable:!0,get:function(){return o.getCreate2Address}}),Object.defineProperty(e,"getContractAddress",{enumerable:!0,get:function(){return o.getContractAddress}}),Object.defineProperty(e,"getIcapAddress",{enumerable:!0,get:function(){return o.getIcapAddress}}),Object.defineProperty(e,"isAddress",{enumerable:!0,get:function(){return o.isAddress}});var b=c(require$$2$4);e.base64=b;var u=require$$3$4;Object.defineProperty(e,"base58",{enumerable:!0,get:function(){return u.Base58}});var l=require$$4$4;Object.defineProperty(e,"arrayify",{enumerable:!0,get:function(){return l.arrayify}}),Object.defineProperty(e,"concat",{enumerable:!0,get:function(){return l.concat}}),Object.defineProperty(e,"hexConcat",{enumerable:!0,get:function(){return l.hexConcat}}),Object.defineProperty(e,"hexDataSlice",{enumerable:!0,get:function(){return l.hexDataSlice}}),Object.defineProperty(e,"hexDataLength",{enumerable:!0,get:function(){return l.hexDataLength}}),Object.defineProperty(e,"hexlify",{enumerable:!0,get:function(){return l.hexlify}}),Object.defineProperty(e,"hexStripZeros",{enumerable:!0,get:function(){return l.hexStripZeros}}),Object.defineProperty(e,"hexValue",{enumerable:!0,get:function(){return l.hexValue}}),Object.defineProperty(e,"hexZeroPad",{enumerable:!0,get:function(){return l.hexZeroPad}}),Object.defineProperty(e,"isBytes",{enumerable:!0,get:function(){return l.isBytes}}),Object.defineProperty(e,"isBytesLike",{enumerable:!0,get:function(){return l.isBytesLike}}),Object.defineProperty(e,"isHexString",{enumerable:!0,get:function(){return l.isHexString}}),Object.defineProperty(e,"joinSignature",{enumerable:!0,get:function(){return l.joinSignature}}),Object.defineProperty(e,"zeroPad",{enumerable:!0,get:function(){return l.zeroPad}}),Object.defineProperty(e,"splitSignature",{enumerable:!0,get:function(){return l.splitSignature}}),Object.defineProperty(e,"stripZeros",{enumerable:!0,get:function(){return l.stripZeros}});var x=require$$5$4;Object.defineProperty(e,"_TypedDataEncoder",{enumerable:!0,get:function(){return x._TypedDataEncoder}}),Object.defineProperty(e,"dnsEncode",{enumerable:!0,get:function(){return x.dnsEncode}}),Object.defineProperty(e,"hashMessage",{enumerable:!0,get:function(){return x.hashMessage}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return x.id}}),Object.defineProperty(e,"isValidName",{enumerable:!0,get:function(){return x.isValidName}}),Object.defineProperty(e,"namehash",{enumerable:!0,get:function(){return x.namehash}});var g=require$$6$4;Object.defineProperty(e,"defaultPath",{enumerable:!0,get:function(){return g.defaultPath}}),Object.defineProperty(e,"entropyToMnemonic",{enumerable:!0,get:function(){return g.entropyToMnemonic}}),Object.defineProperty(e,"getAccountPath",{enumerable:!0,get:function(){return g.getAccountPath}}),Object.defineProperty(e,"HDNode",{enumerable:!0,get:function(){return g.HDNode}}),Object.defineProperty(e,"isValidMnemonic",{enumerable:!0,get:function(){return g.isValidMnemonic}}),Object.defineProperty(e,"mnemonicToEntropy",{enumerable:!0,get:function(){return g.mnemonicToEntropy}}),Object.defineProperty(e,"mnemonicToSeed",{enumerable:!0,get:function(){return g.mnemonicToSeed}});var v=require$$7$4;Object.defineProperty(e,"getJsonWalletAddress",{enumerable:!0,get:function(){return v.getJsonWalletAddress}});var E=require$$8$4;Object.defineProperty(e,"keccak256",{enumerable:!0,get:function(){return E.keccak256}});var S=require$$9$4;Object.defineProperty(e,"Logger",{enumerable:!0,get:function(){return S.Logger}});var T=require$$10$3;Object.defineProperty(e,"computeHmac",{enumerable:!0,get:function(){return T.computeHmac}}),Object.defineProperty(e,"ripemd160",{enumerable:!0,get:function(){return T.ripemd160}}),Object.defineProperty(e,"sha256",{enumerable:!0,get:function(){return T.sha256}}),Object.defineProperty(e,"sha512",{enumerable:!0,get:function(){return T.sha512}});var I=require$$11$3;Object.defineProperty(e,"solidityKeccak256",{enumerable:!0,get:function(){return I.keccak256}}),Object.defineProperty(e,"solidityPack",{enumerable:!0,get:function(){return I.pack}}),Object.defineProperty(e,"soliditySha256",{enumerable:!0,get:function(){return I.sha256}});var A=require$$12$2;Object.defineProperty(e,"randomBytes",{enumerable:!0,get:function(){return A.randomBytes}}),Object.defineProperty(e,"shuffled",{enumerable:!0,get:function(){return A.shuffled}});var C=require$$13$2;Object.defineProperty(e,"checkProperties",{enumerable:!0,get:function(){return C.checkProperties}}),Object.defineProperty(e,"deepCopy",{enumerable:!0,get:function(){return C.deepCopy}}),Object.defineProperty(e,"defineReadOnly",{enumerable:!0,get:function(){return C.defineReadOnly}}),Object.defineProperty(e,"getStatic",{enumerable:!0,get:function(){return C.getStatic}}),Object.defineProperty(e,"resolveProperties",{enumerable:!0,get:function(){return C.resolveProperties}}),Object.defineProperty(e,"shallowCopy",{enumerable:!0,get:function(){return C.shallowCopy}});var O=c(require$$14$2);e.RLP=O;var R=require$$15$2;Object.defineProperty(e,"computePublicKey",{enumerable:!0,get:function(){return R.computePublicKey}}),Object.defineProperty(e,"recoverPublicKey",{enumerable:!0,get:function(){return R.recoverPublicKey}}),Object.defineProperty(e,"SigningKey",{enumerable:!0,get:function(){return R.SigningKey}});var B=require$$16$2;Object.defineProperty(e,"formatBytes32String",{enumerable:!0,get:function(){return B.formatBytes32String}}),Object.defineProperty(e,"nameprep",{enumerable:!0,get:function(){return B.nameprep}}),Object.defineProperty(e,"parseBytes32String",{enumerable:!0,get:function(){return B.parseBytes32String}}),Object.defineProperty(e,"_toEscapedUtf8String",{enumerable:!0,get:function(){return B._toEscapedUtf8String}}),Object.defineProperty(e,"toUtf8Bytes",{enumerable:!0,get:function(){return B.toUtf8Bytes}}),Object.defineProperty(e,"toUtf8CodePoints",{enumerable:!0,get:function(){return B.toUtf8CodePoints}}),Object.defineProperty(e,"toUtf8String",{enumerable:!0,get:function(){return B.toUtf8String}}),Object.defineProperty(e,"Utf8ErrorFuncs",{enumerable:!0,get:function(){return B.Utf8ErrorFuncs}});var M=require$$17$1;Object.defineProperty(e,"accessListify",{enumerable:!0,get:function(){return M.accessListify}}),Object.defineProperty(e,"computeAddress",{enumerable:!0,get:function(){return M.computeAddress}}),Object.defineProperty(e,"parseTransaction",{enumerable:!0,get:function(){return M.parse}}),Object.defineProperty(e,"recoverAddress",{enumerable:!0,get:function(){return M.recoverAddress}}),Object.defineProperty(e,"serializeTransaction",{enumerable:!0,get:function(){return M.serialize}}),Object.defineProperty(e,"TransactionTypes",{enumerable:!0,get:function(){return M.TransactionTypes}});var L=require$$18$1;Object.defineProperty(e,"commify",{enumerable:!0,get:function(){return L.commify}}),Object.defineProperty(e,"formatEther",{enumerable:!0,get:function(){return L.formatEther}}),Object.defineProperty(e,"parseEther",{enumerable:!0,get:function(){return L.parseEther}}),Object.defineProperty(e,"formatUnits",{enumerable:!0,get:function(){return L.formatUnits}}),Object.defineProperty(e,"parseUnits",{enumerable:!0,get:function(){return L.parseUnits}});var ee=require$$19$1;Object.defineProperty(e,"verifyMessage",{enumerable:!0,get:function(){return ee.verifyMessage}}),Object.defineProperty(e,"verifyTypedData",{enumerable:!0,get:function(){return ee.verifyTypedData}});var z=require$$20$1;Object.defineProperty(e,"_fetchData",{enumerable:!0,get:function(){return z._fetchData}}),Object.defineProperty(e,"fetchJson",{enumerable:!0,get:function(){return z.fetchJson}}),Object.defineProperty(e,"poll",{enumerable:!0,get:function(){return z.poll}});var oe=require$$10$3;Object.defineProperty(e,"SupportedAlgorithm",{enumerable:!0,get:function(){return oe.SupportedAlgorithm}});var W=require$$16$2;Object.defineProperty(e,"UnicodeNormalizationForm",{enumerable:!0,get:function(){return W.UnicodeNormalizationForm}}),Object.defineProperty(e,"Utf8ErrorReason",{enumerable:!0,get:function(){return W.Utf8ErrorReason}})})(utils$1);const fromHexStringToUnit8Array=e=>{let a=e;return e.startsWith("0x")&&(a=a.slice(2)),Uint8Array.from(a?.match(/.{1,2}/g)?.map(t=>parseInt(t,16))??[])};function parseAptosTransactionEvents(e){const{events:a=[],changes:t=[]}=e,c=[];for(const o of t){const b=o?.data?.data?.deposit_events?.guid,u=o?.data?.data?.withdraw_events?.guid,l=o?.data?.type;b&&c.push({...b.id,type:l}),u&&c.push({...u.id,type:l})}const i=[];for(const o of a)if(o.type===APTOS_INFO.withdrawEvent||o.type===APTOS_INFO.depositEvent){const b=c.find(v=>v.creation_num===o.guid.creation_number)?.type,u={[APTOS_INFO.withdrawEvent]:"-",[APTOS_INFO.depositEvent]:""},l=Number(u[o.type]+o.data.amount),x=o.guid.account_address,g=i.find(v=>v.tokenType===b&&v.address===x);g?g.amount+=l:i.push({amount:l,type:o.type,tokenType:b,address:x})}return i}function parseAptosTransaction(e,a){const t=parseAptosTransactionEvents(a);return{timestamp:a.timestamp,sender:a.sender,rawData:serializeObject(a),txHash:a.hash,function:a.payload.function,version:a.version,walletId:e.walletId,transferResourceTypes:t.map(i=>i.tokenType),events:t,networkFee:Number(a.gas_used)*Number(a.gas_unit_price),sequence_number:a.sequence_number}}function deserializeAptosTransaction(e){const a=new bcs_exports.Deserializer(e);return aptos_types_exports.RawTransaction.deserialize(a)}const AptosService={verifyAddress(e){return e?.length<66?!1:!!aptos_types_exports.AccountAddress.fromHex(e)},async getGasPrice(e){const a=new AptosClient(e),{gas_estimate:t}=await a.client.transactions.estimateGasPrice();return t},getAccountResource({rpcUrl:e,address:a,coinType:t}){const c=new AptosClient(e),i=`0x1::coin::CoinStore<${t}>`;return c.getAccountResource(a,i)},async simulateTransaction({payload:e,rpcUrl:a,address:t,privatekey:c,options:i}){const o=new AptosClient(a),b=new AptosAccount(c);let u;if(typeof e=="string"){const x=e.split(",").map(g=>Number(g));u=deserializeAptosTransaction(new Uint8Array(x))}else u=await o.generateTransaction(t,e,i);const[l]=await o.simulateTransaction(b,u);return l},async sendRawTransaction({payload:e,rpcUrl:a,address:t,privatekey:c,options:i}){const o=new AptosClient(a),b=await o.generateTransaction(t,e,i),u=new AptosAccount(c),l=await o.signTransaction(u,b),x=await o.submitTransaction(l).catch(g=>{throw g instanceof generated_exports.ApiError?new Error(g.body.message):g});return await o.waitForTransactionWithResult(x.hash,{checkSuccess:!0,timeoutSecs:3}).catch(g=>{if(g instanceof FailedTransactionError){const{vm_status:v}=g.transaction;throw new Error(v)}return g}),x},async fetchAPTAirdrop(e){const{address:a,nodeUrl:t,faucetUrl:c,amount:i=5e4}=e,o=new FaucetClient(t,c),[b]=await o.fundAccount(a,i);return b},async fetchAccountTransactions(e,a,t=0,c=10){return new AptosClient(a).getAccountTransactions(e,{start:t,limit:c})},async fetchTransactionByHash(e,a){return new AptosClient(a).getTransactionByHash(e)},async signTransaction({payload:e,rpcUrl:a,address:t,privatekey:c,options:i}){const o=new AptosClient(a),b=await o.generateTransaction(t,e,i),u=new AptosAccount(c);return o.signTransaction(u,b)},signMessage(e,a){const{address:t,application:c,chainId:i,privatekey:o}=e,{message:b,nonce:u}=a;let l="APTOS";a.address&&(l+=`
address: ${t}`),a.application&&(l+=`
application: ${c}`),a.chainId&&(l+=`
chainId: ${i}`),l+=`
message: ${b}
nonce: ${u}`;const x=new AptosAccount(o),g=buffer$2.Buffer.from(l),v=x.signBuffer(g).noPrefix();return{address:t,fullMessage:l,application:c,chainId:Number(i),message:b,nonce:u,prefix:"APTOS",signature:v}},async generateTransaction({payload:e,options:a,sender:t,rpcUrl:c}){const i=new AptosClient(c),o=new AptosAccount(void 0,t),b=await i.generateTransaction(t,e,a);return AptosClient.generateBCSTransaction(o,b).toString()},async signTransactionMartian({transaction:e,privatekey:a,rpcUrl:t}){const c=new AptosClient(t),i=new AptosAccount(a),o=e.split(",").map(u=>Number(u)),b=deserializeAptosTransaction(new Uint8Array(o));return(await c.signTransaction(i,b)).toString()},async submitTransactionMartian({transaction:e,rpcUrl:a}){const t=e.split(",").map(o=>Number(o)),c=new AptosClient(a),i=await c.submitTransaction(new Uint8Array(t)).catch(o=>{throw o instanceof generated_exports.ApiError?new Error(o.body.message):o});return await c.waitForTransactionWithResult(i.hash,{checkSuccess:!0,timeoutSecs:3}).catch(o=>{if(o instanceof FailedTransactionError){const{vm_status:b}=o.transaction;throw new Error(b)}return o}),i},getTargetAddress(e){return e.function.split("::")[0]},async getAccount({rpcUrl:e,address:a}){return new AptosClient(e).getAccount(a)},async getChainId({rpcUrl:e}){return new AptosClient(e).getChainId()},async getLedgerInfo({rpcUrl:e}){return new AptosClient(e).getLedgerInfo()},async getTransactions({rpcUrl:e,query:a}){return new AptosClient(e).getTransactions(a)},async getTransactionByHash({rpcUrl:e,txnHash:a}){return new AptosClient(e).getTransactionByHash(a)},async getAccountTransactions({rpcUrl:e,query:a,address:t}){return new AptosClient(e).getAccountTransactions(t,a)},async getAccountResources({rpcUrl:e,query:a,address:t}){return new AptosClient(e).getAccountResources(t,a)},async createCollection({name:e,description:a,url:t,rpcUrl:c,privatekey:i,maxAmount:o,extraArgs:b}){const u=new AptosAccount(i),l=new AptosClient(c),g=await new TokenClient(l).createCollection(u,e,a,t,o,b),v=await l.waitForTransactionWithResult(g,{checkSuccess:!0,timeoutSecs:3}).catch(E=>{if(E instanceof FailedTransactionError){const{vm_status:S}=E.transaction;throw new Error(S)}return E});return{txnHash:g,txn:v}},async createToken({rpcUrl:e,privatekey:a,collectionName:t,name:c,description:i,supply:o,url:b,max:u,royalty_payee_address:l,royalty_points_denominator:x,royalty_points_numerator:g,property_keys:v,property_types:E,property_values:S,extraArgs:T}){const I=new AptosAccount(a),A=new AptosClient(e),O=await new TokenClient(A).createToken(I,t,c,i,o,b,u,l,x,g,v,S,E,T),R=await A.waitForTransactionWithResult(O,{checkSuccess:!0,timeoutSecs:3}).catch(B=>{if(B instanceof FailedTransactionError){const{vm_status:M}=B.transaction;throw new Error(M)}return B});return{txnHash:O,txn:R}},async verifyPrivateKey(e){const a={address:"",publicKey:"",algo:""};if(!utils$1.isHexString(e,32))return a;const t=new AptosAccount(fromHexStringToUnit8Array(e));return a.address=t.address().hex(),a.publicKey=buffer$2.Buffer.from(fromHexStringToUnit8Array(t.pubKey().hex())).toString("base64"),a.algo="secp256k1",a},async verifyMnemonic({mnemonic:e,addressType:a,accountIndex:t}){const c=AptosAccount.fromDerivePath(`m/44'/637'/0'/0'/${t}'`,e),i=c.toPrivateKeyObject();return assert$d.ok(i.address,"address is required"),{address:i.address,addressType:a,pubkey:buffer$2.Buffer.from(fromHexStringToUnit8Array(c.pubKey().hex())).toString("base64"),algo:"secp256k1",privkey:i.privateKeyHex,privkeyBuffer:buffer$2.Buffer.from(fromHexStringToUnit8Array(i.privateKeyHex)),pubkeyBuffer:buffer$2.Buffer.from(fromHexStringToUnit8Array(c.pubKey().hex()))}}};var dist$3={},lib$3={};(function(e){/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */Object.defineProperty(e,"__esModule",{value:!0}),e.utils=e.schnorr=e.verify=e.signSync=e.sign=e.getSharedSecret=e.recoverPublicKey=e.getPublicKey=e.Signature=e.Point=e.CURVE=void 0;const a=requireCryptoBrowserify(),t=BigInt(0),c=BigInt(1),i=BigInt(2),o=BigInt(3),b=BigInt(8),u=Object.freeze({a:t,b:BigInt(7),P:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:c,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")});e.CURVE=u;const l=(be,se)=>(be+se/i)/se,x={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar(be){const{n:se}=u,de=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),le=-c*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),ge=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),we=de,Ee=BigInt("0x100000000000000000000000000000000"),Be=l(we*be,se),V=l(-le*be,se);let ae=re(be-Be*de-V*ge,se),te=re(-Be*le-V*we,se);const H=ae>Ee,ne=te>Ee;if(H&&(ae=se-ae),ne&&(te=se-te),ae>Ee||te>Ee)throw new Error("splitScalarEndo: Endomorphism failed, k="+be);return{k1neg:H,k1:ae,k2neg:ne,k2:te}}},g=32,v=32,E=32,S=g+1,T=2*g+1;function I(be){const{a:se,b:de}=u,le=re(be*be),ge=re(le*be);return re(ge+se*be+de)}const A=u.a===t;class C extends Error{constructor(se){super(se)}}function O(be){if(!(be instanceof R))throw new TypeError("JacobianPoint expected")}class R{constructor(se,de,le){this.x=se,this.y=de,this.z=le}static fromAffine(se){if(!(se instanceof L))throw new TypeError("JacobianPoint#fromAffine: expected Point");return se.equals(L.ZERO)?R.ZERO:new R(se.x,se.y,c)}static toAffineBatch(se){const de=Oe(se.map(le=>le.z));return se.map((le,ge)=>le.toAffine(de[ge]))}static normalizeZ(se){return R.toAffineBatch(se).map(R.fromAffine)}equals(se){O(se);const{x:de,y:le,z:ge}=this,{x:we,y:Ee,z:Be}=se,V=re(ge*ge),ae=re(Be*Be),te=re(de*ae),H=re(we*V),ne=re(re(le*Be)*ae),he=re(re(Ee*ge)*V);return te===H&&ne===he}negate(){return new R(this.x,re(-this.y),this.z)}double(){const{x:se,y:de,z:le}=this,ge=re(se*se),we=re(de*de),Ee=re(we*we),Be=se+we,V=re(i*(re(Be*Be)-ge-Ee)),ae=re(o*ge),te=re(ae*ae),H=re(te-i*V),ne=re(ae*(V-H)-b*Ee),he=re(i*de*le);return new R(H,ne,he)}add(se){O(se);const{x:de,y:le,z:ge}=this,{x:we,y:Ee,z:Be}=se;if(we===t||Ee===t)return this;if(de===t||le===t)return se;const V=re(ge*ge),ae=re(Be*Be),te=re(de*ae),H=re(we*V),ne=re(re(le*Be)*ae),he=re(re(Ee*ge)*V),xe=re(H-te),me=re(he-ne);if(xe===t)return me===t?this.double():R.ZERO;const Te=re(xe*xe),De=re(xe*Te),Ce=re(te*Te),t0=re(me*me-De-i*Ce),Re=re(me*(Ce-t0)-ne*De),We=re(ge*Be*xe);return new R(t0,Re,We)}subtract(se){return this.add(se.negate())}multiplyUnsafe(se){const de=R.ZERO;if(typeof se=="bigint"&&se===t)return de;let le=ce(se);if(le===c)return this;if(!A){let H=de,ne=this;for(;le>t;)le&c&&(H=H.add(ne)),ne=ne.double(),le>>=c;return H}let{k1neg:ge,k1:we,k2neg:Ee,k2:Be}=x.splitScalar(le),V=de,ae=de,te=this;for(;we>t||Be>t;)we&c&&(V=V.add(te)),Be&c&&(ae=ae.add(te)),te=te.double(),we>>=c,Be>>=c;return ge&&(V=V.negate()),Ee&&(ae=ae.negate()),ae=new R(re(ae.x*x.beta),ae.y,ae.z),V.add(ae)}precomputeWindow(se){const de=A?128/se+1:256/se+1,le=[];let ge=this,we=ge;for(let Ee=0;Ee<de;Ee++){we=ge,le.push(we);for(let Be=1;Be<2**(se-1);Be++)we=we.add(ge),le.push(we);ge=we.double()}return le}wNAF(se,de){!de&&this.equals(R.BASE)&&(de=L.BASE);const le=de&&de._WINDOW_SIZE||1;if(256%le)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let ge=de&&M.get(de);ge||(ge=this.precomputeWindow(le),de&&le!==1&&(ge=R.normalizeZ(ge),M.set(de,ge)));let we=R.ZERO,Ee=R.BASE;const Be=1+(A?128/le:256/le),V=2**(le-1),ae=BigInt(2**le-1),te=2**le,H=BigInt(le);for(let ne=0;ne<Be;ne++){const he=ne*V;let xe=Number(se&ae);se>>=H,xe>V&&(xe-=te,se+=c);const me=he,Te=he+Math.abs(xe)-1,De=ne%2!==0,Ce=xe<0;xe===0?Ee=Ee.add(B(De,ge[me])):we=we.add(B(Ce,ge[Te]))}return{p:we,f:Ee}}multiply(se,de){let le=ce(se),ge,we;if(A){const{k1neg:Ee,k1:Be,k2neg:V,k2:ae}=x.splitScalar(le);let{p:te,f:H}=this.wNAF(Be,de),{p:ne,f:he}=this.wNAF(ae,de);te=B(Ee,te),ne=B(V,ne),ne=new R(re(ne.x*x.beta),ne.y,ne.z),ge=te.add(ne),we=H.add(he)}else{const{p:Ee,f:Be}=this.wNAF(le,de);ge=Ee,we=Be}return R.normalizeZ([ge,we])[0]}toAffine(se){const{x:de,y:le,z:ge}=this,we=this.equals(R.ZERO);se==null&&(se=we?b:pe(ge));const Ee=se,Be=re(Ee*Ee),V=re(Be*Ee),ae=re(de*Be),te=re(le*V),H=re(ge*Ee);if(we)return L.ZERO;if(H!==c)throw new Error("invZ was invalid");return new L(ae,te)}}R.BASE=new R(u.Gx,u.Gy,c),R.ZERO=new R(t,c,t);function B(be,se){const de=se.negate();return be?de:se}const M=new WeakMap;class L{constructor(se,de){this.x=se,this.y=de}_setWindowSize(se){this._WINDOW_SIZE=se,M.delete(this)}hasEvenY(){return this.y%i===t}static fromCompressedHex(se){const de=se.length===32,le=Z(de?se:se.subarray(1));if(!Je(le))throw new Error("Point is not on curve");const ge=I(le);let we=fe(ge);const Ee=(we&c)===c;de?Ee&&(we=re(-we)):(se[0]&1)===1!==Ee&&(we=re(-we));const Be=new L(le,we);return Be.assertValidity(),Be}static fromUncompressedHex(se){const de=Z(se.subarray(1,g+1)),le=Z(se.subarray(g+1,g*2+1)),ge=new L(de,le);return ge.assertValidity(),ge}static fromHex(se){const de=J(se),le=de.length,ge=de[0];if(le===g)return this.fromCompressedHex(de);if(le===S&&(ge===2||ge===3))return this.fromCompressedHex(de);if(le===T&&ge===4)return this.fromUncompressedHex(de);throw new Error(`Point.fromHex: received invalid point. Expected 32-${S} compressed bytes or ${T} uncompressed bytes, not ${le}`)}static fromPrivateKey(se){return L.BASE.multiply(N0(se))}static fromSignature(se,de,le){const{r:ge,s:we}=_0(de);if(![0,1,2,3].includes(le))throw new Error("Cannot recover: invalid recovery bit");const Ee=Pe(J(se)),{n:Be}=u,V=le===2||le===3?ge+Be:ge,ae=pe(V,Be),te=re(-Ee*ae,Be),H=re(we*ae,Be),ne=le&1?"03":"02",he=L.fromHex(ne+U(V)),xe=L.BASE.multiplyAndAddUnsafe(he,te,H);if(!xe)throw new Error("Cannot recover signature: point at infinify");return xe.assertValidity(),xe}toRawBytes(se=!1){return F(this.toHex(se))}toHex(se=!1){const de=U(this.x);return se?`${this.hasEvenY()?"02":"03"}${de}`:`04${de}${U(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const se="Point is not on elliptic curve",{x:de,y:le}=this;if(!Je(de)||!Je(le))throw new Error(se);const ge=re(le*le),we=I(de);if(re(ge-we)!==t)throw new Error(se)}equals(se){return this.x===se.x&&this.y===se.y}negate(){return new L(this.x,re(-this.y))}double(){return R.fromAffine(this).double().toAffine()}add(se){return R.fromAffine(this).add(R.fromAffine(se)).toAffine()}subtract(se){return this.add(se.negate())}multiply(se){return R.fromAffine(this).multiply(se,this).toAffine()}multiplyAndAddUnsafe(se,de,le){const ge=R.fromAffine(this),we=de===t||de===c||this!==L.BASE?ge.multiplyUnsafe(de):ge.multiply(de),Ee=R.fromAffine(se).multiplyUnsafe(le),Be=we.add(Ee);return Be.equals(R.ZERO)?void 0:Be.toAffine()}}e.Point=L,L.BASE=new L(u.Gx,u.Gy),L.ZERO=new L(t,t);function ee(be){return Number.parseInt(be[0],16)>=8?"00"+be:be}function z(be){if(be.length<2||be[0]!==2)throw new Error(`Invalid signature integer tag: ${q(be)}`);const se=be[1],de=be.subarray(2,se+2);if(!se||de.length!==se)throw new Error("Invalid signature integer: wrong length");if(de[0]===0&&de[1]<=127)throw new Error("Invalid signature integer: trailing length");return{data:Z(de),left:be.subarray(se+2)}}function oe(be){if(be.length<2||be[0]!=48)throw new Error(`Invalid signature tag: ${q(be)}`);if(be[1]!==be.length-2)throw new Error("Invalid signature: incorrect length");const{data:se,left:de}=z(be.subarray(2)),{data:le,left:ge}=z(de);if(ge.length)throw new Error(`Invalid signature: left bytes after parsing: ${q(ge)}`);return{r:se,s:le}}class W{constructor(se,de){this.r=se,this.s=de,this.assertValidity()}static fromCompact(se){const de=se instanceof Uint8Array,le="Signature.fromCompact";if(typeof se!="string"&&!de)throw new TypeError(`${le}: Expected string or Uint8Array`);const ge=de?q(se):se;if(ge.length!==128)throw new Error(`${le}: Expected 64-byte hex`);return new W(X(ge.slice(0,64)),X(ge.slice(64,128)))}static fromDER(se){const de=se instanceof Uint8Array;if(typeof se!="string"&&!de)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:le,s:ge}=oe(de?se:F(se));return new W(le,ge)}static fromHex(se){return this.fromDER(se)}assertValidity(){const{r:se,s:de}=this;if(!b0(se))throw new Error("Invalid Signature: r must be 0 < r < n");if(!b0(de))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const se=u.n>>c;return this.s>se}normalizeS(){return this.hasHighS()?new W(this.r,re(-this.s,u.n)):this}toDERRawBytes(){return F(this.toDERHex())}toDERHex(){const se=ee(Q(this.s)),de=ee(Q(this.r)),le=se.length/2,ge=de.length/2,we=Q(le),Ee=Q(ge);return`30${Q(ge+le+4)}02${Ee}${de}02${we}${se}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return F(this.toCompactHex())}toCompactHex(){return U(this.r)+U(this.s)}}e.Signature=W;function P(...be){if(!be.every(le=>le instanceof Uint8Array))throw new Error("Uint8Array list expected");if(be.length===1)return be[0];const se=be.reduce((le,ge)=>le+ge.length,0),de=new Uint8Array(se);for(let le=0,ge=0;le<be.length;le++){const we=be[le];de.set(we,ge),ge+=we.length}return de}const D=Array.from({length:256},(be,se)=>se.toString(16).padStart(2,"0"));function q(be){if(!(be instanceof Uint8Array))throw new Error("Expected Uint8Array");let se="";for(let de=0;de<be.length;de++)se+=D[be[de]];return se}const Y=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");function U(be){if(typeof be!="bigint")throw new Error("Expected bigint");if(!(t<=be&&be<Y))throw new Error("Expected number 0 <= n < 2^256");return be.toString(16).padStart(64,"0")}function j(be){const se=F(U(be));if(se.length!==32)throw new Error("Error: expected 32 bytes");return se}function Q(be){const se=be.toString(16);return se.length&1?`0${se}`:se}function X(be){if(typeof be!="string")throw new TypeError("hexToNumber: expected string, got "+typeof be);return BigInt(`0x${be}`)}function F(be){if(typeof be!="string")throw new TypeError("hexToBytes: expected string, got "+typeof be);if(be.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+be.length);const se=new Uint8Array(be.length/2);for(let de=0;de<se.length;de++){const le=de*2,ge=be.slice(le,le+2),we=Number.parseInt(ge,16);if(Number.isNaN(we)||we<0)throw new Error("Invalid byte sequence");se[de]=we}return se}function Z(be){return X(q(be))}function J(be){return be instanceof Uint8Array?Uint8Array.from(be):F(be)}function ce(be){if(typeof be=="number"&&Number.isSafeInteger(be)&&be>0)return BigInt(be);if(typeof be=="bigint"&&b0(be))return be;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function re(be,se=u.P){const de=be%se;return de>=t?de:se+de}function ie(be,se){const{P:de}=u;let le=be;for(;se-- >t;)le*=le,le%=de;return le}function fe(be){const{P:se}=u,de=BigInt(6),le=BigInt(11),ge=BigInt(22),we=BigInt(23),Ee=BigInt(44),Be=BigInt(88),V=be*be*be%se,ae=V*V*be%se,te=ie(ae,o)*ae%se,H=ie(te,o)*ae%se,ne=ie(H,i)*V%se,he=ie(ne,le)*ne%se,xe=ie(he,ge)*he%se,me=ie(xe,Ee)*xe%se,Te=ie(me,Be)*me%se,De=ie(Te,Ee)*xe%se,Ce=ie(De,o)*ae%se,t0=ie(Ce,we)*he%se,Re=ie(t0,de)*V%se,We=ie(Re,i);if(We*We%se!==be)throw new Error("Cannot find square root");return We}function pe(be,se=u.P){if(be===t||se<=t)throw new Error(`invert: expected positive integers, got n=${be} mod=${se}`);let de=re(be,se),le=se,ge=t,we=c;for(;de!==t;){const Be=le/de,V=le%de,ae=ge-we*Be;le=de,de=V,ge=we,we=ae}if(le!==c)throw new Error("invert: does not exist");return re(ge,se)}function Oe(be,se=u.P){const de=new Array(be.length),le=be.reduce((we,Ee,Be)=>Ee===t?we:(de[Be]=we,re(we*Ee,se)),c),ge=pe(le,se);return be.reduceRight((we,Ee,Be)=>Ee===t?we:(de[Be]=re(we*de[Be],se),re(we*Ee,se)),ge),de}function Se(be){const se=be.length*8-v*8,de=Z(be);return se>0?de>>BigInt(se):de}function Pe(be,se=!1){const de=Se(be);if(se)return de;const{n:le}=u;return de>=le?de-le:de}let a0,qe;class Ke{constructor(se,de){if(this.hashLen=se,this.qByteLen=de,typeof se!="number"||se<2)throw new Error("hashLen must be a number");if(typeof de!="number"||de<2)throw new Error("qByteLen must be a number");this.v=new Uint8Array(se).fill(1),this.k=new Uint8Array(se).fill(0),this.counter=0}hmac(...se){return e.utils.hmacSha256(this.k,...se)}hmacSync(...se){return qe(this.k,...se)}checkSync(){if(typeof qe!="function")throw new C("hmacSha256Sync needs to be set")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1}async reseed(se=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),se),this.v=await this.hmac(this.v),se.length!==0&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),se),this.v=await this.hmac(this.v))}reseedSync(se=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),se),this.v=this.hmacSync(this.v),se.length!==0&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),se),this.v=this.hmacSync(this.v))}async generate(){this.incr();let se=0;const de=[];for(;se<this.qByteLen;){this.v=await this.hmac(this.v);const le=this.v.slice();de.push(le),se+=this.v.length}return P(...de)}generateSync(){this.checkSync(),this.incr();let se=0;const de=[];for(;se<this.qByteLen;){this.v=this.hmacSync(this.v);const le=this.v.slice();de.push(le),se+=this.v.length}return P(...de)}}function b0(be){return t<be&&be<u.n}function Je(be){return t<be&&be<u.P}function i0(be,se,de,le=!0){const{n:ge}=u,we=Pe(be,!0);if(!b0(we))return;const Ee=pe(we,ge),Be=L.BASE.multiply(we),V=re(Be.x,ge);if(V===t)return;const ae=re(Ee*re(se+de*V,ge),ge);if(ae===t)return;let te=new W(V,ae),H=(Be.x===te.r?0:2)|Number(Be.y&c);return le&&te.hasHighS()&&(te=te.normalizeS(),H^=1),{sig:te,recovery:H}}function N0(be){let se;if(typeof be=="bigint")se=be;else if(typeof be=="number"&&Number.isSafeInteger(be)&&be>0)se=BigInt(be);else if(typeof be=="string"){if(be.length!==2*v)throw new Error("Expected 32 bytes of private key");se=X(be)}else if(be instanceof Uint8Array){if(be.length!==v)throw new Error("Expected 32 bytes of private key");se=Z(be)}else throw new TypeError("Expected valid private key");if(!b0(se))throw new Error("Expected private key: 0 < key < n");return se}function w0(be){return be instanceof L?(be.assertValidity(),be):L.fromHex(be)}function _0(be){if(be instanceof W)return be.assertValidity(),be;try{return W.fromDER(be)}catch{return W.fromCompact(be)}}function H0(be,se=!1){return L.fromPrivateKey(be).toRawBytes(se)}e.getPublicKey=H0;function g0(be,se,de,le=!1){return L.fromSignature(be,se,de).toRawBytes(le)}e.recoverPublicKey=g0;function o0(be){const se=be instanceof Uint8Array,de=typeof be=="string",le=(se||de)&&be.length;return se?le===S||le===T:de?le===S*2||le===T*2:be instanceof L}function M0(be,se,de=!1){if(o0(be))throw new TypeError("getSharedSecret: first arg must be private key");if(!o0(se))throw new TypeError("getSharedSecret: second arg must be public key");const le=w0(se);return le.assertValidity(),le.multiply(N0(be)).toRawBytes(de)}e.getSharedSecret=M0;function u0(be){const se=be.length>g?be.slice(0,g):be;return Z(se)}function S0(be){const se=u0(be),de=re(se,u.n);return J0(de<t?se:de)}function J0(be){return j(be)}function h0(be,se,de){if(be==null)throw new Error(`sign: expected valid message hash, not "${be}"`);const le=J(be),ge=N0(se),we=[J0(ge),S0(le)];if(de!=null){de===!0&&(de=e.utils.randomBytes(g));const V=J(de);if(V.length!==g)throw new Error(`sign: Expected ${g} bytes of extra data`);we.push(V)}const Ee=P(...we),Be=u0(le);return{seed:Ee,m:Be,d:ge}}function y0(be,se){const{sig:de,recovery:le}=be,{der:ge,recovered:we}=Object.assign({canonical:!0,der:!0},se),Ee=ge?de.toDERRawBytes():de.toCompactRawBytes();return we?[Ee,le]:Ee}async function Z0(be,se,de={}){const{seed:le,m:ge,d:we}=h0(be,se,de.extraEntropy),Ee=new Ke(E,v);await Ee.reseed(le);let Be;for(;!(Be=i0(await Ee.generate(),ge,we,de.canonical));)await Ee.reseed();return y0(Be,de)}e.sign=Z0;function I0(be,se,de={}){const{seed:le,m:ge,d:we}=h0(be,se,de.extraEntropy),Ee=new Ke(E,v);Ee.reseedSync(le);let Be;for(;!(Be=i0(Ee.generateSync(),ge,we,de.canonical));)Ee.reseedSync();return y0(Be,de)}e.signSync=I0;const C0={strict:!0};function q0(be,se,de,le=C0){let ge;try{ge=_0(be),se=J(se)}catch{return!1}const{r:we,s:Ee}=ge;if(le.strict&&ge.hasHighS())return!1;const Be=Pe(se);let V;try{V=w0(de)}catch{return!1}const{n:ae}=u,te=pe(Ee,ae),H=re(Be*te,ae),ne=re(we*te,ae),he=L.BASE.multiplyAndAddUnsafe(V,H,ne);return he?re(he.x,ae)===we:!1}e.verify=q0;function l0(be){return re(Z(be),u.n)}class p0{constructor(se,de){this.r=se,this.s=de,this.assertValidity()}static fromHex(se){const de=J(se);if(de.length!==64)throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${de.length}`);const le=Z(de.subarray(0,32)),ge=Z(de.subarray(32,64));return new p0(le,ge)}assertValidity(){const{r:se,s:de}=this;if(!Je(se)||!b0(de))throw new Error("Invalid signature")}toHex(){return U(this.r)+U(this.s)}toRawBytes(){return F(this.toHex())}}function j0(be){return L.fromPrivateKey(be).toRawX()}class m0{constructor(se,de,le=e.utils.randomBytes()){if(se==null)throw new TypeError(`sign: Expected valid message, not "${se}"`);this.m=J(se);const{x:ge,scalar:we}=this.getScalar(N0(de));if(this.px=ge,this.d=we,this.rand=J(le),this.rand.length!==32)throw new TypeError("sign: Expected 32 bytes of aux randomness")}getScalar(se){const de=L.fromPrivateKey(se),le=de.hasEvenY()?se:u.n-se;return{point:de,scalar:le,x:de.toRawX()}}initNonce(se,de){return j(se^Z(de))}finalizeNonce(se){const de=re(Z(se),u.n);if(de===t)throw new Error("sign: Creation of signature failed. k is zero");const{point:le,x:ge,scalar:we}=this.getScalar(de);return{R:le,rx:ge,k:we}}finalizeSig(se,de,le,ge){return new p0(se.x,re(de+le*ge,u.n)).toRawBytes()}error(){throw new Error("sign: Invalid signature produced")}async calc(){const{m:se,d:de,px:le,rand:ge}=this,we=e.utils.taggedHash,Ee=this.initNonce(de,await we(z0.aux,ge)),{R:Be,rx:V,k:ae}=this.finalizeNonce(await we(z0.nonce,Ee,le,se)),te=l0(await we(z0.challenge,V,le,se)),H=this.finalizeSig(Be,ae,te,de);return await K0(H,se,le)||this.error(),H}calcSync(){const{m:se,d:de,px:le,rand:ge}=this,we=e.utils.taggedHashSync,Ee=this.initNonce(de,we(z0.aux,ge)),{R:Be,rx:V,k:ae}=this.finalizeNonce(we(z0.nonce,Ee,le,se)),te=l0(we(z0.challenge,V,le,se)),H=this.finalizeSig(Be,ae,te,de);return P0(H,se,le)||this.error(),H}}async function $0(be,se,de){return new m0(be,se,de).calc()}function Y0(be,se,de){return new m0(be,se,de).calcSync()}function v0(be,se,de){const le=be instanceof p0,ge=le?be:p0.fromHex(be);return le&&ge.assertValidity(),{...ge,m:J(se),P:w0(de)}}function E0(be,se,de,le){const ge=L.BASE.multiplyAndAddUnsafe(se,N0(de),re(-le,u.n));return!(!ge||!ge.hasEvenY()||ge.x!==be)}async function K0(be,se,de){try{const{r:le,s:ge,m:we,P:Ee}=v0(be,se,de),Be=l0(await e.utils.taggedHash(z0.challenge,j(le),Ee.toRawX(),we));return E0(le,Ee,ge,Be)}catch{return!1}}function P0(be,se,de){try{const{r:le,s:ge,m:we,P:Ee}=v0(be,se,de),Be=l0(e.utils.taggedHashSync(z0.challenge,j(le),Ee.toRawX(),we));return E0(le,Ee,ge,Be)}catch(le){if(le instanceof C)throw le;return!1}}e.schnorr={Signature:p0,getPublicKey:j0,sign:$0,verify:K0,signSync:Y0,verifySync:P0},L.BASE._setWindowSize(8);const r0={node:a,web:typeof self=="object"&&"crypto"in self?self.crypto:void 0},z0={challenge:"BIP0340/challenge",aux:"BIP0340/aux",nonce:"BIP0340/nonce"},s0={};e.utils={bytesToHex:q,hexToBytes:F,concatBytes:P,mod:re,invert:pe,isValidPrivateKey(be){try{return N0(be),!0}catch{return!1}},_bigintTo32Bytes:j,_normalizePrivateKey:N0,hashToPrivateKey:be=>{be=J(be);const se=v+8;if(be.length<se||be.length>1024)throw new Error("Expected valid bytes of private key as per FIPS 186");const de=re(Z(be),u.n-c)+c;return j(de)},randomBytes:(be=32)=>{if(r0.web)return r0.web.getRandomValues(new Uint8Array(be));if(r0.node){const{randomBytes:se}=r0.node;return Uint8Array.from(se(be))}else throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>e.utils.hashToPrivateKey(e.utils.randomBytes(v+8)),precompute(be=8,se=L.BASE){const de=se===L.BASE?se:new L(se.x,se.y);return de._setWindowSize(be),de.multiply(o),de},sha256:async(...be)=>{if(r0.web){const se=await r0.web.subtle.digest("SHA-256",P(...be));return new Uint8Array(se)}else if(r0.node){const{createHash:se}=r0.node,de=se("sha256");return be.forEach(le=>de.update(le)),Uint8Array.from(de.digest())}else throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(be,...se)=>{if(r0.web){const de=await r0.web.subtle.importKey("raw",be,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),le=P(...se),ge=await r0.web.subtle.sign("HMAC",de,le);return new Uint8Array(ge)}else if(r0.node){const{createHmac:de}=r0.node,le=de("sha256",be);return se.forEach(ge=>le.update(ge)),Uint8Array.from(le.digest())}else throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(be,...se)=>{let de=s0[be];if(de===void 0){const le=await e.utils.sha256(Uint8Array.from(be,ge=>ge.charCodeAt(0)));de=P(le,le),s0[be]=de}return e.utils.sha256(de,...se)},taggedHashSync:(be,...se)=>{if(typeof a0!="function")throw new C("sha256Sync is undefined, you need to set it");let de=s0[be];if(de===void 0){const le=a0(Uint8Array.from(be,ge=>ge.charCodeAt(0)));de=P(le,le),s0[be]=de}return a0(de,...se)},_JacobianPoint:R},Object.defineProperties(e.utils,{sha256Sync:{configurable:!1,get(){return a0},set(be){a0||(a0=be)}},hmacSha256Sync:{configurable:!1,get(){return qe},set(be){qe||(qe=be)}}})})(lib$3);var necc=lib$3,hmac=hmac$4,sha256$3=sha256$6;function _interopNamespaceDefault(e){var a=Object.create(null);return e&&Object.keys(e).forEach(function(t){if(t!=="default"){var c=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(a,t,c.get?c:{enumerable:!0,get:function(){return e[t]}})}}),a.default=e,Object.freeze(a)}var necc__namespace=_interopNamespaceDefault(necc);necc__namespace.utils.hmacSha256Sync=(e,...a)=>hmac.hmac(sha256$3.sha256,e,necc__namespace.utils.concatBytes(...a));necc__namespace.utils.sha256Sync=(...e)=>sha256$3.sha256(necc__namespace.utils.concatBytes(...e));const normalizePrivateKey=necc__namespace.utils._normalizePrivateKey,HASH_SIZE=32,TWEAK_SIZE=32,BN32_N=new Uint8Array([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65]),EXTRA_DATA_SIZE=32;function cmpBN32(e,a){for(let t=0;t<32;++t)if(e[t]!==a[t])return e[t]<a[t]?-1:1;return 0}function isTweak(e){return!(!(e instanceof Uint8Array)||e.length!==TWEAK_SIZE||cmpBN32(e,BN32_N)>=0)}function isSignature(e){return e instanceof Uint8Array&&e.length===64&&cmpBN32(e.subarray(0,32),BN32_N)<0&&cmpBN32(e.subarray(32,64),BN32_N)<0}function isHash(e){return e instanceof Uint8Array&&e.length===HASH_SIZE}function isExtraData(e){return e===void 0||e instanceof Uint8Array&&e.length===EXTRA_DATA_SIZE}function hexToNumber(e){if(typeof e!="string")throw new TypeError("hexToNumber: expected string, got "+typeof e);return BigInt(`0x${e}`)}function bytesToNumber(e){return hexToNumber(necc__namespace.utils.bytesToHex(e))}function normalizeScalar(e){let a;if(typeof e=="bigint")a=e;else if(typeof e=="number"&&Number.isSafeInteger(e)&&e>=0)a=BigInt(e);else if(typeof e=="string"){if(e.length!==64)throw new Error("Expected 32 bytes of private scalar");a=hexToNumber(e)}else if(e instanceof Uint8Array){if(e.length!==32)throw new Error("Expected 32 bytes of private scalar");a=bytesToNumber(e)}else throw new TypeError("Expected valid private scalar");if(a<0)throw new Error("Expected private scalar >= 0");return a}const _privateAdd=(e,a)=>{const t=normalizePrivateKey(e),c=normalizeScalar(a),i=necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(t+c,necc__namespace.CURVE.n));return necc__namespace.utils.isValidPrivateKey(i)?i:null},_privateSub=(e,a)=>{const t=normalizePrivateKey(e),c=normalizeScalar(a),i=necc__namespace.utils._bigintTo32Bytes(necc__namespace.utils.mod(t-c,necc__namespace.CURVE.n));return necc__namespace.utils.isValidPrivateKey(i)?i:null},_privateNegate=e=>{const a=normalizePrivateKey(e),t=necc__namespace.utils._bigintTo32Bytes(necc__namespace.CURVE.n-a);return necc__namespace.utils.isValidPrivateKey(t)?t:null},_pointAddScalar=(e,a,t)=>{const c=necc__namespace.Point.fromHex(e),i=normalizeScalar(a),o=necc__namespace.Point.BASE.multiplyAndAddUnsafe(c,i,1n);if(!o)throw new Error("Tweaked point at infinity");return o.toRawBytes(t)},_pointMultiply=(e,a,t)=>{const c=necc__namespace.Point.fromHex(e),i=typeof a=="string"?a:necc__namespace.utils.bytesToHex(a),o=BigInt(`0x${i}`);return c.multiply(o).toRawBytes(t)};function assumeCompression(e,a){return e===void 0?a!==void 0?isPointCompressed(a):!0:!!e}function throwToNull(e){try{return e()}catch{return null}}function _isPoint(e,a){if(e.length===32!==a)return!1;try{return!!necc__namespace.Point.fromHex(e)}catch{return!1}}function isPoint(e){return _isPoint(e,!1)}function isPointCompressed(e){return _isPoint(e,!1)&&e.length===33}function isPrivate(e){return necc__namespace.utils.isValidPrivateKey(e)}function isXOnlyPoint(e){return _isPoint(e,!0)}function xOnlyPointAddTweak(e,a){if(!isXOnlyPoint(e))throw new Error("Expected Point");if(!isTweak(a))throw new Error("Expected Tweak");return throwToNull(()=>{const t=_pointAddScalar(e,a,!0);return{parity:t[0]%2===1?1:0,xOnlyPubkey:t.slice(1)}})}function xOnlyPointFromPoint(e){if(!isPoint(e))throw new Error("Expected Point");return e.slice(1,33)}function pointFromScalar(e,a){if(!isPrivate(e))throw new Error("Expected Private");return throwToNull(()=>necc__namespace.getPublicKey(e,assumeCompression(a)))}function xOnlyPointFromScalar(e){if(!isPrivate(e))throw new Error("Expected Private");return xOnlyPointFromPoint(pointFromScalar(e))}function pointCompress(e,a){if(!isPoint(e))throw new Error("Expected Point");return necc__namespace.Point.fromHex(e).toRawBytes(assumeCompression(a,e))}function pointMultiply(e,a,t){if(!isPoint(e))throw new Error("Expected Point");if(!isTweak(a))throw new Error("Expected Tweak");return throwToNull(()=>_pointMultiply(e,a,assumeCompression(t,e)))}function pointAdd(e,a,t){if(!isPoint(e)||!isPoint(a))throw new Error("Expected Point");return throwToNull(()=>{const c=necc__namespace.Point.fromHex(e),i=necc__namespace.Point.fromHex(a);return c.equals(i.negate())?null:c.add(i).toRawBytes(assumeCompression(t,e))})}function pointAddScalar(e,a,t){if(!isPoint(e))throw new Error("Expected Point");if(!isTweak(a))throw new Error("Expected Tweak");return throwToNull(()=>_pointAddScalar(e,a,assumeCompression(t,e)))}function privateAdd(e,a){if(isPrivate(e)===!1)throw new Error("Expected Private");if(isTweak(a)===!1)throw new Error("Expected Tweak");return throwToNull(()=>_privateAdd(e,a))}function privateSub(e,a){if(isPrivate(e)===!1)throw new Error("Expected Private");if(isTweak(a)===!1)throw new Error("Expected Tweak");return throwToNull(()=>_privateSub(e,a))}function privateNegate(e){if(isPrivate(e)===!1)throw new Error("Expected Private");return _privateNegate(e)}function sign$1(e,a,t){if(!isPrivate(a))throw new Error("Expected Private");if(!isHash(e))throw new Error("Expected Scalar");if(!isExtraData(t))throw new Error("Expected Extra Data (32 bytes)");return necc__namespace.signSync(e,a,{der:!1,extraEntropy:t})}function signSchnorr(e,a,t=buffer$2.Buffer.alloc(32,0)){if(!isPrivate(a))throw new Error("Expected Private");if(!isHash(e))throw new Error("Expected Scalar");if(!isExtraData(t))throw new Error("Expected Extra Data (32 bytes)");return necc__namespace.schnorr.signSync(e,a,t)}function verify$1(e,a,t,c){if(!isPoint(a))throw new Error("Expected Point");if(!isSignature(t))throw new Error("Expected Signature");if(!isHash(e))throw new Error("Expected Scalar");return necc__namespace.verify(t,e,a,{strict:c})}function verifySchnorr(e,a,t){if(!isXOnlyPoint(a))throw new Error("Expected Point");if(!isSignature(t))throw new Error("Expected Signature");if(!isHash(e))throw new Error("Expected Scalar");return necc__namespace.schnorr.verifySync(t,e,a)}var isPoint_1=dist$3.isPoint=isPoint,isPointCompressed_1=dist$3.isPointCompressed=isPointCompressed,isPrivate_1=dist$3.isPrivate=isPrivate,isXOnlyPoint_1=dist$3.isXOnlyPoint=isXOnlyPoint,pointAdd_1=dist$3.pointAdd=pointAdd,pointAddScalar_1=dist$3.pointAddScalar=pointAddScalar,pointCompress_1=dist$3.pointCompress=pointCompress,pointFromScalar_1=dist$3.pointFromScalar=pointFromScalar,pointMultiply_1=dist$3.pointMultiply=pointMultiply,privateAdd_1=dist$3.privateAdd=privateAdd,privateNegate_1=dist$3.privateNegate=privateNegate,privateSub_1=dist$3.privateSub=privateSub,sign_1=dist$3.sign=sign$1,signSchnorr_1=dist$3.signSchnorr=signSchnorr,verify_1=dist$3.verify=verify$1,verifySchnorr_1=dist$3.verifySchnorr=verifySchnorr,xOnlyPointAddTweak_1=dist$3.xOnlyPointAddTweak=xOnlyPointAddTweak,xOnlyPointFromPoint_1=dist$3.xOnlyPointFromPoint=xOnlyPointFromPoint,xOnlyPointFromScalar_1=dist$3.xOnlyPointFromScalar=xOnlyPointFromScalar;const ecc=_mergeNamespaces({__proto__:null,default:dist$3,isPoint:isPoint_1,isPointCompressed:isPointCompressed_1,isPrivate:isPrivate_1,isXOnlyPoint:isXOnlyPoint_1,pointAdd:pointAdd_1,pointAddScalar:pointAddScalar_1,pointCompress:pointCompress_1,pointFromScalar:pointFromScalar_1,pointMultiply:pointMultiply_1,privateAdd:privateAdd_1,privateNegate:privateNegate_1,privateSub:privateSub_1,sign:sign_1,signSchnorr:signSchnorr_1,verify:verify_1,verifySchnorr:verifySchnorr_1,xOnlyPointAddTweak:xOnlyPointAddTweak_1,xOnlyPointFromPoint:xOnlyPointFromPoint_1,xOnlyPointFromScalar:xOnlyPointFromScalar_1},[dist$3]);function _inheritsLoose(e,a){e.prototype=Object.create(a.prototype),e.prototype.constructor=e,_setPrototypeOf$1(e,a)}var regeneratorRuntimeExports={},regeneratorRuntime$1={get exports(){return regeneratorRuntimeExports},set exports(e){regeneratorRuntimeExports=e}},_typeofExports={},_typeof={get exports(){return _typeofExports},set exports(e){_typeofExports=e}};(function(e){function a(t){return e.exports=a=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(c){return typeof c}:function(c){return c&&typeof Symbol=="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c},e.exports.__esModule=!0,e.exports.default=e.exports,a(t)}e.exports=a,e.exports.__esModule=!0,e.exports.default=e.exports})(_typeof);(function(e){var a=_typeofExports.default;function t(){e.exports=t=function(){return c},e.exports.__esModule=!0,e.exports.default=e.exports;var c={},i=Object.prototype,o=i.hasOwnProperty,b=Object.defineProperty||function(U,j,Q){U[j]=Q.value},u=typeof Symbol=="function"?Symbol:{},l=u.iterator||"@@iterator",x=u.asyncIterator||"@@asyncIterator",g=u.toStringTag||"@@toStringTag";function v(U,j,Q){return Object.defineProperty(U,j,{value:Q,enumerable:!0,configurable:!0,writable:!0}),U[j]}try{v({},"")}catch{v=function(Q,X,F){return Q[X]=F}}function E(U,j,Q,X){var F=j&&j.prototype instanceof I?j:I,Z=Object.create(F.prototype),J=new D(X||[]);return b(Z,"_invoke",{value:z(U,Q,J)}),Z}function S(U,j,Q){try{return{type:"normal",arg:U.call(j,Q)}}catch(X){return{type:"throw",arg:X}}}c.wrap=E;var T={};function I(){}function A(){}function C(){}var O={};v(O,l,function(){return this});var R=Object.getPrototypeOf,B=R&&R(R(q([])));B&&B!==i&&o.call(B,l)&&(O=B);var M=C.prototype=I.prototype=Object.create(O);function L(U){["next","throw","return"].forEach(function(j){v(U,j,function(Q){return this._invoke(j,Q)})})}function ee(U,j){function Q(F,Z,J,ce){var re=S(U[F],U,Z);if(re.type!=="throw"){var ie=re.arg,fe=ie.value;return fe&&a(fe)=="object"&&o.call(fe,"__await")?j.resolve(fe.__await).then(function(pe){Q("next",pe,J,ce)},function(pe){Q("throw",pe,J,ce)}):j.resolve(fe).then(function(pe){ie.value=pe,J(ie)},function(pe){return Q("throw",pe,J,ce)})}ce(re.arg)}var X;b(this,"_invoke",{value:function(Z,J){function ce(){return new j(function(re,ie){Q(Z,J,re,ie)})}return X=X?X.then(ce,ce):ce()}})}function z(U,j,Q){var X="suspendedStart";return function(F,Z){if(X==="executing")throw new Error("Generator is already running");if(X==="completed"){if(F==="throw")throw Z;return Y()}for(Q.method=F,Q.arg=Z;;){var J=Q.delegate;if(J){var ce=oe(J,Q);if(ce){if(ce===T)continue;return ce}}if(Q.method==="next")Q.sent=Q._sent=Q.arg;else if(Q.method==="throw"){if(X==="suspendedStart")throw X="completed",Q.arg;Q.dispatchException(Q.arg)}else Q.method==="return"&&Q.abrupt("return",Q.arg);X="executing";var re=S(U,j,Q);if(re.type==="normal"){if(X=Q.done?"completed":"suspendedYield",re.arg===T)continue;return{value:re.arg,done:Q.done}}re.type==="throw"&&(X="completed",Q.method="throw",Q.arg=re.arg)}}}function oe(U,j){var Q=j.method,X=U.iterator[Q];if(X===void 0)return j.delegate=null,Q==="throw"&&U.iterator.return&&(j.method="return",j.arg=void 0,oe(U,j),j.method==="throw")||Q!=="return"&&(j.method="throw",j.arg=new TypeError("The iterator does not provide a '"+Q+"' method")),T;var F=S(X,U.iterator,j.arg);if(F.type==="throw")return j.method="throw",j.arg=F.arg,j.delegate=null,T;var Z=F.arg;return Z?Z.done?(j[U.resultName]=Z.value,j.next=U.nextLoc,j.method!=="return"&&(j.method="next",j.arg=void 0),j.delegate=null,T):Z:(j.method="throw",j.arg=new TypeError("iterator result is not an object"),j.delegate=null,T)}function W(U){var j={tryLoc:U[0]};1 in U&&(j.catchLoc=U[1]),2 in U&&(j.finallyLoc=U[2],j.afterLoc=U[3]),this.tryEntries.push(j)}function P(U){var j=U.completion||{};j.type="normal",delete j.arg,U.completion=j}function D(U){this.tryEntries=[{tryLoc:"root"}],U.forEach(W,this),this.reset(!0)}function q(U){if(U){var j=U[l];if(j)return j.call(U);if(typeof U.next=="function")return U;if(!isNaN(U.length)){var Q=-1,X=function F(){for(;++Q<U.length;)if(o.call(U,Q))return F.value=U[Q],F.done=!1,F;return F.value=void 0,F.done=!0,F};return X.next=X}}return{next:Y}}function Y(){return{value:void 0,done:!0}}return A.prototype=C,b(M,"constructor",{value:C,configurable:!0}),b(C,"constructor",{value:A,configurable:!0}),A.displayName=v(C,g,"GeneratorFunction"),c.isGeneratorFunction=function(U){var j=typeof U=="function"&&U.constructor;return!!j&&(j===A||(j.displayName||j.name)==="GeneratorFunction")},c.mark=function(U){return Object.setPrototypeOf?Object.setPrototypeOf(U,C):(U.__proto__=C,v(U,g,"GeneratorFunction")),U.prototype=Object.create(M),U},c.awrap=function(U){return{__await:U}},L(ee.prototype),v(ee.prototype,x,function(){return this}),c.AsyncIterator=ee,c.async=function(U,j,Q,X,F){F===void 0&&(F=Promise);var Z=new ee(E(U,j,Q,X),F);return c.isGeneratorFunction(j)?Z:Z.next().then(function(J){return J.done?J.value:Z.next()})},L(M),v(M,g,"Generator"),v(M,l,function(){return this}),v(M,"toString",function(){return"[object Generator]"}),c.keys=function(U){var j=Object(U),Q=[];for(var X in j)Q.push(X);return Q.reverse(),function F(){for(;Q.length;){var Z=Q.pop();if(Z in j)return F.value=Z,F.done=!1,F}return F.done=!0,F}},c.values=q,D.prototype={constructor:D,reset:function(j){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!j)for(var Q in this)Q.charAt(0)==="t"&&o.call(this,Q)&&!isNaN(+Q.slice(1))&&(this[Q]=void 0)},stop:function(){this.done=!0;var j=this.tryEntries[0].completion;if(j.type==="throw")throw j.arg;return this.rval},dispatchException:function(j){if(this.done)throw j;var Q=this;function X(ie,fe){return J.type="throw",J.arg=j,Q.next=ie,fe&&(Q.method="next",Q.arg=void 0),!!fe}for(var F=this.tryEntries.length-1;F>=0;--F){var Z=this.tryEntries[F],J=Z.completion;if(Z.tryLoc==="root")return X("end");if(Z.tryLoc<=this.prev){var ce=o.call(Z,"catchLoc"),re=o.call(Z,"finallyLoc");if(ce&&re){if(this.prev<Z.catchLoc)return X(Z.catchLoc,!0);if(this.prev<Z.finallyLoc)return X(Z.finallyLoc)}else if(ce){if(this.prev<Z.catchLoc)return X(Z.catchLoc,!0)}else{if(!re)throw new Error("try statement without catch or finally");if(this.prev<Z.finallyLoc)return X(Z.finallyLoc)}}}},abrupt:function(j,Q){for(var X=this.tryEntries.length-1;X>=0;--X){var F=this.tryEntries[X];if(F.tryLoc<=this.prev&&o.call(F,"finallyLoc")&&this.prev<F.finallyLoc){var Z=F;break}}Z&&(j==="break"||j==="continue")&&Z.tryLoc<=Q&&Q<=Z.finallyLoc&&(Z=null);var J=Z?Z.completion:{};return J.type=j,J.arg=Q,Z?(this.method="next",this.next=Z.finallyLoc,T):this.complete(J)},complete:function(j,Q){if(j.type==="throw")throw j.arg;return j.type==="break"||j.type==="continue"?this.next=j.arg:j.type==="return"?(this.rval=this.arg=j.arg,this.method="return",this.next="end"):j.type==="normal"&&Q&&(this.next=Q),T},finish:function(j){for(var Q=this.tryEntries.length-1;Q>=0;--Q){var X=this.tryEntries[Q];if(X.finallyLoc===j)return this.complete(X.completion,X.afterLoc),P(X),T}},catch:function(j){for(var Q=this.tryEntries.length-1;Q>=0;--Q){var X=this.tryEntries[Q];if(X.tryLoc===j){var F=X.completion;if(F.type==="throw"){var Z=F.arg;P(X)}return Z}}throw new Error("illegal catch attempt")},delegateYield:function(j,Q,X){return this.delegate={iterator:q(j),resultName:Q,nextLoc:X},this.method==="next"&&(this.arg=void 0),T}},c}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports})(regeneratorRuntime$1);var runtime=regeneratorRuntimeExports(),regenerator=runtime;try{regeneratorRuntime=runtime}catch{typeof globalThis=="object"?globalThis.regeneratorRuntime=runtime:Function("r","regeneratorRuntime = r")(runtime)}var src$4={},address$1={},networks$4={};Object.defineProperty(networks$4,"__esModule",{value:!0});networks$4.testnet=networks$4.regtest=networks$4.bitcoin=void 0;networks$4.bitcoin={messagePrefix:`Bitcoin Signed Message:
`,bech32:"bc",bip32:{public:76067358,private:76066276},pubKeyHash:0,scriptHash:5,wif:128};networks$4.regtest={messagePrefix:`Bitcoin Signed Message:
`,bech32:"bcrt",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239};networks$4.testnet={messagePrefix:`Bitcoin Signed Message:
`,bech32:"tb",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239};var payments$3={},embed={},script$2={},bip66$1={};Object.defineProperty(bip66$1,"__esModule",{value:!0});bip66$1.encode=bip66$1.decode=bip66$1.check=void 0;function check$h(e){if(e.length<8||e.length>72||e[0]!==48||e[1]!==e.length-2||e[2]!==2)return!1;const a=e[3];if(a===0||5+a>=e.length||e[4+a]!==2)return!1;const t=e[5+a];return!(t===0||6+a+t!==e.length||e[4]&128||a>1&&e[4]===0&&!(e[5]&128)||e[a+6]&128||t>1&&e[a+6]===0&&!(e[a+7]&128))}bip66$1.check=check$h;function decode$n(e){if(e.length<8)throw new Error("DER sequence length is too short");if(e.length>72)throw new Error("DER sequence length is too long");if(e[0]!==48)throw new Error("Expected DER sequence");if(e[1]!==e.length-2)throw new Error("DER sequence length is invalid");if(e[2]!==2)throw new Error("Expected DER integer");const a=e[3];if(a===0)throw new Error("R length is zero");if(5+a>=e.length)throw new Error("R length is too long");if(e[4+a]!==2)throw new Error("Expected DER integer (2)");const t=e[5+a];if(t===0)throw new Error("S length is zero");if(6+a+t!==e.length)throw new Error("S length is invalid");if(e[4]&128)throw new Error("R value is negative");if(a>1&&e[4]===0&&!(e[5]&128))throw new Error("R value excessively padded");if(e[a+6]&128)throw new Error("S value is negative");if(t>1&&e[a+6]===0&&!(e[a+7]&128))throw new Error("S value excessively padded");return{r:e.slice(4,4+a),s:e.slice(6+a)}}bip66$1.decode=decode$n;function encode$o(e,a){const t=e.length,c=a.length;if(t===0)throw new Error("R length is zero");if(c===0)throw new Error("S length is zero");if(t>33)throw new Error("R length is too long");if(c>33)throw new Error("S length is too long");if(e[0]&128)throw new Error("R value is negative");if(a[0]&128)throw new Error("S value is negative");if(t>1&&e[0]===0&&!(e[1]&128))throw new Error("R value excessively padded");if(c>1&&a[0]===0&&!(a[1]&128))throw new Error("S value excessively padded");const i=buffer$2.Buffer.allocUnsafe(6+t+c);return i[0]=48,i[1]=i.length-2,i[2]=2,i[3]=e.length,e.copy(i,4),i[4+t]=2,i[5+t]=a.length,a.copy(i,6+t),i}bip66$1.encode=encode$o;var ops={};Object.defineProperty(ops,"__esModule",{value:!0});ops.REVERSE_OPS=ops.OPS=void 0;const OPS$8={OP_FALSE:0,OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_TRUE:81,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_NOP1:176,OP_NOP2:177,OP_CHECKLOCKTIMEVERIFY:177,OP_NOP3:178,OP_CHECKSEQUENCEVERIFY:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_CHECKSIGADD:186,OP_PUBKEYHASH:253,OP_PUBKEY:254,OP_INVALIDOPCODE:255};ops.OPS=OPS$8;const REVERSE_OPS={};ops.REVERSE_OPS=REVERSE_OPS;for(const e of Object.keys(OPS$8)){const a=OPS$8[e];REVERSE_OPS[a]=e}var push_data={};Object.defineProperty(push_data,"__esModule",{value:!0});push_data.decode=push_data.encode=push_data.encodingLength=void 0;const ops_1=ops;function encodingLength$2(e){return e<ops_1.OPS.OP_PUSHDATA1?1:e<=255?2:e<=65535?3:5}push_data.encodingLength=encodingLength$2;function encode$n(e,a,t){const c=encodingLength$2(a);return c===1?e.writeUInt8(a,t):c===2?(e.writeUInt8(ops_1.OPS.OP_PUSHDATA1,t),e.writeUInt8(a,t+1)):c===3?(e.writeUInt8(ops_1.OPS.OP_PUSHDATA2,t),e.writeUInt16LE(a,t+1)):(e.writeUInt8(ops_1.OPS.OP_PUSHDATA4,t),e.writeUInt32LE(a,t+1)),c}push_data.encode=encode$n;function decode$m(e,a){const t=e.readUInt8(a);let c,i;if(t<ops_1.OPS.OP_PUSHDATA1)c=t,i=1;else if(t===ops_1.OPS.OP_PUSHDATA1){if(a+2>e.length)return null;c=e.readUInt8(a+1),i=2}else if(t===ops_1.OPS.OP_PUSHDATA2){if(a+3>e.length)return null;c=e.readUInt16LE(a+1),i=3}else{if(a+5>e.length)return null;if(t!==ops_1.OPS.OP_PUSHDATA4)throw new Error("Unexpected opcode");c=e.readUInt32LE(a+1),i=5}return{opcode:t,number:c,size:i}}push_data.decode=decode$m;var script_number={};Object.defineProperty(script_number,"__esModule",{value:!0});script_number.encode=script_number.decode=void 0;function decode$l(e,a,t){a=a||4,t=t===void 0?!0:t;const c=e.length;if(c===0)return 0;if(c>a)throw new TypeError("Script number overflow");if(t&&!(e[c-1]&127)&&(c<=1||!(e[c-2]&128)))throw new Error("Non-minimally encoded script number");if(c===5){const o=e.readUInt32LE(0),b=e.readUInt8(4);return b&128?-((b&-129)*4294967296+o):b*4294967296+o}let i=0;for(let o=0;o<c;++o)i|=e[o]<<8*o;return e[c-1]&128?-(i&~(128<<8*(c-1))):i}script_number.decode=decode$l;function scriptNumSize(e){return e>2147483647?5:e>8388607?4:e>32767?3:e>127?2:e>0?1:0}function encode$m(e){let a=Math.abs(e);const t=scriptNumSize(a),c=buffer$2.Buffer.allocUnsafe(t),i=e<0;for(let o=0;o<t;++o)c.writeUInt8(a&255,o),a>>=8;return c[t-1]&128?c.writeUInt8(i?128:0,t-1):i&&(c[t-1]|=128),c}script_number.encode=encode$m;var script_signature={},types$8={},types$7={Array:function(e){return e!=null&&e.constructor===Array},Boolean:function(e){return typeof e=="boolean"},Function:function(e){return typeof e=="function"},Nil:function(e){return e==null},Number:function(e){return typeof e=="number"},Object:function(e){return typeof e=="object"},String:function(e){return typeof e=="string"},"":function(){return!0}};types$7.Null=types$7.Nil;for(var typeName$1 in types$7)types$7[typeName$1].toJSON=function(e){return e}.bind(null,typeName$1);var native$1=types$7,native=native$1;function getTypeName(e){return e.name||e.toString().match(/function (.*?)\s*\(/)[1]}function getValueTypeName$1(e){return native.Nil(e)?"":getTypeName(e.constructor)}function getValue(e){return native.Function(e)?"":native.String(e)?JSON.stringify(e):e&&native.Object(e)?"":e}function captureStackTrace(e,a){Error.captureStackTrace&&Error.captureStackTrace(e,a)}function tfJSON$1(e){return native.Function(e)?e.toJSON?e.toJSON():getTypeName(e):native.Array(e)?"Array":e&&native.Object(e)?"Object":e!==void 0?e:""}function tfErrorString(e,a,t){var c=getValue(a);return"Expected "+tfJSON$1(e)+", got"+(t!==""?" "+t:"")+(c!==""?" "+c:"")}function TfTypeError$1(e,a,t){t=t||getValueTypeName$1(a),this.message=tfErrorString(e,a,t),captureStackTrace(this,TfTypeError$1),this.__type=e,this.__value=a,this.__valueTypeName=t}TfTypeError$1.prototype=Object.create(Error.prototype);TfTypeError$1.prototype.constructor=TfTypeError$1;function tfPropertyErrorString(e,a,t,c,i){var o='" of type ';return a==="key"&&(o='" with key type '),tfErrorString('property "'+tfJSON$1(t)+o+tfJSON$1(e),c,i)}function TfPropertyTypeError$1(e,a,t,c,i){e?(i=i||getValueTypeName$1(c),this.message=tfPropertyErrorString(e,t,a,c,i)):this.message='Unexpected property "'+a+'"',captureStackTrace(this,TfTypeError$1),this.__label=t,this.__property=a,this.__type=e,this.__value=c,this.__valueTypeName=i}TfPropertyTypeError$1.prototype=Object.create(Error.prototype);TfPropertyTypeError$1.prototype.constructor=TfTypeError$1;function tfCustomError(e,a){return new TfTypeError$1(e,{},a)}function tfSubError$1(e,a,t){return e instanceof TfPropertyTypeError$1?(a=a+"."+e.__property,e=new TfPropertyTypeError$1(e.__type,a,e.__label,e.__value,e.__valueTypeName)):e instanceof TfTypeError$1&&(e=new TfPropertyTypeError$1(e.__type,a,t,e.__value,e.__valueTypeName)),captureStackTrace(e),e}var errors$6={TfTypeError:TfTypeError$1,TfPropertyTypeError:TfPropertyTypeError$1,tfCustomError,tfSubError:tfSubError$1,tfJSON:tfJSON$1,getValueTypeName:getValueTypeName$1},extra,hasRequiredExtra;function requireExtra(){if(hasRequiredExtra)return extra;hasRequiredExtra=1;var e=native$1,a=errors$6;function t(L){return buffer$2.Buffer.isBuffer(L)}function c(L){return typeof L=="string"&&/^([0-9a-f]{2})+$/i.test(L)}function i(L,ee){var z=L.toJSON();function oe(W){if(!L(W))return!1;if(W.length===ee)return!0;throw a.tfCustomError(z+"(Length: "+ee+")",z+"(Length: "+W.length+")")}return oe.toJSON=function(){return z},oe}var o=i.bind(null,e.Array),b=i.bind(null,t),u=i.bind(null,c),l=i.bind(null,e.String);function x(L,ee,z){z=z||e.Number;function oe(W,P){return z(W,P)&&W>L&&W<ee}return oe.toJSON=function(){return`${z.toJSON()} between [${L}, ${ee}]`},oe}var g=Math.pow(2,53)-1;function v(L){return typeof L=="number"&&isFinite(L)}function E(L){return L<<24>>24===L}function S(L){return L<<16>>16===L}function T(L){return(L|0)===L}function I(L){return typeof L=="number"&&L>=-g&&L<=g&&Math.floor(L)===L}function A(L){return(L&255)===L}function C(L){return(L&65535)===L}function O(L){return L>>>0===L}function R(L){return typeof L=="number"&&L>=0&&L<=g&&Math.floor(L)===L}var B={ArrayN:o,Buffer:t,BufferN:b,Finite:v,Hex:c,HexN:u,Int8:E,Int16:S,Int32:T,Int53:I,Range:x,StringN:l,UInt8:A,UInt16:C,UInt32:O,UInt53:R};for(var M in B)B[M].toJSON=function(L){return L}.bind(null,M);return extra=B,extra}var ERRORS=errors$6,NATIVE=native$1,tfJSON=ERRORS.tfJSON,TfTypeError=ERRORS.TfTypeError,TfPropertyTypeError=ERRORS.TfPropertyTypeError,tfSubError=ERRORS.tfSubError,getValueTypeName=ERRORS.getValueTypeName,TYPES={arrayOf:function(a,t){a=compile(a),t=t||{};function c(i,o){return!NATIVE.Array(i)||NATIVE.Nil(i)||t.minLength!==void 0&&i.length<t.minLength||t.maxLength!==void 0&&i.length>t.maxLength||t.length!==void 0&&i.length!==t.length?!1:i.every(function(b,u){try{return typeforce$4(a,b,o)}catch(l){throw tfSubError(l,u)}})}return c.toJSON=function(){var i="["+tfJSON(a)+"]";return t.length!==void 0?i+="{"+t.length+"}":(t.minLength!==void 0||t.maxLength!==void 0)&&(i+="{"+(t.minLength===void 0?0:t.minLength)+","+(t.maxLength===void 0?1/0:t.maxLength)+"}"),i},c},maybe:function e(a){a=compile(a);function t(c,i){return NATIVE.Nil(c)||a(c,i,e)}return t.toJSON=function(){return"?"+tfJSON(a)},t},map:function(a,t){a=compile(a),t&&(t=compile(t));function c(i,o){if(!NATIVE.Object(i)||NATIVE.Nil(i))return!1;for(var b in i){try{t&&typeforce$4(t,b,o)}catch(l){throw tfSubError(l,b,"key")}try{var u=i[b];typeforce$4(a,u,o)}catch(l){throw tfSubError(l,b)}}return!0}return t?c.toJSON=function(){return"{"+tfJSON(t)+": "+tfJSON(a)+"}"}:c.toJSON=function(){return"{"+tfJSON(a)+"}"},c},object:function(a){var t={};for(var c in a)t[c]=compile(a[c]);function i(o,b){if(!NATIVE.Object(o)||NATIVE.Nil(o))return!1;var u;try{for(u in t){var l=t[u],x=o[u];typeforce$4(l,x,b)}}catch(g){throw tfSubError(g,u)}if(b){for(u in o)if(!t[u])throw new TfPropertyTypeError(void 0,u)}return!0}return i.toJSON=function(){return tfJSON(t)},i},anyOf:function(){var a=[].slice.call(arguments).map(compile);function t(c,i){return a.some(function(o){try{return typeforce$4(o,c,i)}catch{return!1}})}return t.toJSON=function(){return a.map(tfJSON).join("|")},t},allOf:function(){var a=[].slice.call(arguments).map(compile);function t(c,i){return a.every(function(o){try{return typeforce$4(o,c,i)}catch{return!1}})}return t.toJSON=function(){return a.map(tfJSON).join(" & ")},t},quacksLike:function(a){function t(c){return a===getValueTypeName(c)}return t.toJSON=function(){return a},t},tuple:function(){var a=[].slice.call(arguments).map(compile);function t(c,i){return NATIVE.Nil(c)||NATIVE.Nil(c.length)||i&&c.length!==a.length?!1:a.every(function(o,b){try{return typeforce$4(o,c[b],i)}catch(u){throw tfSubError(u,b)}})}return t.toJSON=function(){return"("+a.map(tfJSON).join(", ")+")"},t},value:function(a){function t(c){return c===a}return t.toJSON=function(){return a},t}};TYPES.oneOf=TYPES.anyOf;function compile(e){if(NATIVE.String(e))return e[0]==="?"?TYPES.maybe(e.slice(1)):NATIVE[e]||TYPES.quacksLike(e);if(e&&NATIVE.Object(e)){if(NATIVE.Array(e)){if(e.length!==1)throw new TypeError("Expected compile() parameter of type Array of length 1");return TYPES.arrayOf(e[0])}return TYPES.object(e)}else if(NATIVE.Function(e))return e;return TYPES.value(e)}function typeforce$4(e,a,t,c){if(NATIVE.Function(e)){if(e(a,t))return!0;throw new TfTypeError(c||e,a)}return typeforce$4(compile(e),a,t)}for(var typeName in NATIVE)typeforce$4[typeName]=NATIVE[typeName];for(typeName in TYPES)typeforce$4[typeName]=TYPES[typeName];var EXTRA=requireExtra();for(typeName in EXTRA)typeforce$4[typeName]=EXTRA[typeName];typeforce$4.compile=compile;typeforce$4.TfTypeError=TfTypeError;typeforce$4.TfPropertyTypeError=TfPropertyTypeError;var typeforce_1=typeforce$4;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.oneOf=e.Null=e.BufferN=e.Function=e.UInt32=e.UInt8=e.tuple=e.maybe=e.Hex=e.Buffer=e.String=e.Boolean=e.Array=e.Number=e.Hash256bit=e.Hash160bit=e.Buffer256bit=e.isTaptree=e.isTapleaf=e.TAPLEAF_VERSION_MASK=e.Network=e.ECPoint=e.Satoshi=e.Signer=e.BIP32Path=e.UInt31=e.isPoint=e.typeforce=void 0;const a=buffer$2;e.typeforce=typeforce_1;const t=a.Buffer.alloc(32,0),c=a.Buffer.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f","hex");function i(S){if(!a.Buffer.isBuffer(S)||S.length<33)return!1;const T=S[0],I=S.slice(1,33);if(I.compare(t)===0||I.compare(c)>=0)return!1;if((T===2||T===3)&&S.length===33)return!0;const A=S.slice(33);return A.compare(t)===0||A.compare(c)>=0?!1:T===4&&S.length===65}e.isPoint=i;const o=Math.pow(2,31)-1;function b(S){return e.typeforce.UInt32(S)&&S<=o}e.UInt31=b;function u(S){return e.typeforce.String(S)&&!!S.match(/^(m\/)?(\d+'?\/)*\d+'?$/)}e.BIP32Path=u,u.toJSON=()=>"BIP32 derivation path";function l(S){return(e.typeforce.Buffer(S.publicKey)||typeof S.getPublicKey=="function")&&typeof S.sign=="function"}e.Signer=l;const x=21*1e14;function g(S){return e.typeforce.UInt53(S)&&S<=x}e.Satoshi=g,e.ECPoint=e.typeforce.quacksLike("Point"),e.Network=e.typeforce.compile({messagePrefix:e.typeforce.oneOf(e.typeforce.Buffer,e.typeforce.String),bip32:{public:e.typeforce.UInt32,private:e.typeforce.UInt32},pubKeyHash:e.typeforce.UInt8,scriptHash:e.typeforce.UInt8,wif:e.typeforce.UInt8}),e.TAPLEAF_VERSION_MASK=254;function v(S){return!S||!("output"in S)||!a.Buffer.isBuffer(S.output)?!1:S.version!==void 0?(S.version&e.TAPLEAF_VERSION_MASK)===S.version:!0}e.isTapleaf=v;function E(S){return(0,e.Array)(S)?S.length!==2?!1:S.every(T=>E(T)):v(S)}e.isTaptree=E,e.Buffer256bit=e.typeforce.BufferN(32),e.Hash160bit=e.typeforce.BufferN(20),e.Hash256bit=e.typeforce.BufferN(32),e.Number=e.typeforce.Number,e.Array=e.typeforce.Array,e.Boolean=e.typeforce.Boolean,e.String=e.typeforce.String,e.Buffer=e.typeforce.Buffer,e.Hex=e.typeforce.Hex,e.maybe=e.typeforce.maybe,e.tuple=e.typeforce.tuple,e.UInt8=e.typeforce.UInt8,e.UInt32=e.typeforce.UInt32,e.Function=e.typeforce.Function,e.BufferN=e.typeforce.BufferN,e.Null=e.typeforce.Null,e.oneOf=e.typeforce.oneOf})(types$8);Object.defineProperty(script_signature,"__esModule",{value:!0});script_signature.encode=script_signature.decode=void 0;const bip66=bip66$1,types$6=types$8,{typeforce:typeforce$3}=types$6,ZERO$2=buffer$2.Buffer.alloc(1,0);function toDER(e){let a=0;for(;e[a]===0;)++a;return a===e.length?ZERO$2:(e=e.slice(a),e[0]&128?buffer$2.Buffer.concat([ZERO$2,e],1+e.length):e)}function fromDER(e){e[0]===0&&(e=e.slice(1));const a=buffer$2.Buffer.alloc(32,0),t=Math.max(0,32-e.length);return e.copy(a,t),a}function decode$k(e){const a=e.readUInt8(e.length-1),t=a&-129;if(t<=0||t>=4)throw new Error("Invalid hashType "+a);const c=bip66.decode(e.slice(0,-1)),i=fromDER(c.r),o=fromDER(c.s);return{signature:buffer$2.Buffer.concat([i,o],64),hashType:a}}script_signature.decode=decode$k;function encode$l(e,a){typeforce$3({signature:types$6.BufferN(64),hashType:types$6.UInt8},{signature:e,hashType:a});const t=a&-129;if(t<=0||t>=4)throw new Error("Invalid hashType "+a);const c=buffer$2.Buffer.allocUnsafe(1);c.writeUInt8(a,0);const i=toDER(e.slice(0,32)),o=toDER(e.slice(32,64));return buffer$2.Buffer.concat([bip66.encode(i,o),c])}script_signature.encode=encode$l;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.signature=e.number=e.isCanonicalScriptSignature=e.isDefinedHashType=e.isCanonicalPubKey=e.toStack=e.fromASM=e.toASM=e.decompile=e.compile=e.isPushOnly=e.OPS=void 0;const a=bip66$1,t=ops;Object.defineProperty(e,"OPS",{enumerable:!0,get:function(){return t.OPS}});const c=push_data,i=script_number,o=script_signature,b=types$8,{typeforce:u}=b,l=t.OPS.OP_RESERVED;function x(z){return b.Number(z)&&(z===t.OPS.OP_0||z>=t.OPS.OP_1&&z<=t.OPS.OP_16||z===t.OPS.OP_1NEGATE)}function g(z){return b.Buffer(z)||x(z)}function v(z){return b.Array(z)&&z.every(g)}e.isPushOnly=v;function E(z){if(z.length===0)return t.OPS.OP_0;if(z.length===1){if(z[0]>=1&&z[0]<=16)return l+z[0];if(z[0]===129)return t.OPS.OP_1NEGATE}}function S(z){return buffer$2.Buffer.isBuffer(z)}function T(z){return b.Array(z)}function I(z){return buffer$2.Buffer.isBuffer(z)}function A(z){if(S(z))return z;u(b.Array,z);const oe=z.reduce((D,q)=>I(q)?q.length===1&&E(q)!==void 0?D+1:D+c.encodingLength(q.length)+q.length:D+1,0),W=buffer$2.Buffer.allocUnsafe(oe);let P=0;if(z.forEach(D=>{if(I(D)){const q=E(D);if(q!==void 0){W.writeUInt8(q,P),P+=1;return}P+=c.encode(W,D.length,P),D.copy(W,P),P+=D.length}else W.writeUInt8(D,P),P+=1}),P!==W.length)throw new Error("Could not decode chunks");return W}e.compile=A;function C(z){if(T(z))return z;u(b.Buffer,z);const oe=[];let W=0;for(;W<z.length;){const P=z[W];if(P>t.OPS.OP_0&&P<=t.OPS.OP_PUSHDATA4){const D=c.decode(z,W);if(D===null||(W+=D.size,W+D.number>z.length))return null;const q=z.slice(W,W+D.number);W+=D.number;const Y=E(q);Y!==void 0?oe.push(Y):oe.push(q)}else oe.push(P),W+=1}return oe}e.decompile=C;function O(z){return S(z)&&(z=C(z)),z.map(oe=>{if(I(oe)){const W=E(oe);if(W===void 0)return oe.toString("hex");oe=W}return t.REVERSE_OPS[oe]}).join(" ")}e.toASM=O;function R(z){return u(b.String,z),A(z.split(" ").map(oe=>t.OPS[oe]!==void 0?t.OPS[oe]:(u(b.Hex,oe),buffer$2.Buffer.from(oe,"hex"))))}e.fromASM=R;function B(z){return z=C(z),u(v,z),z.map(oe=>I(oe)?oe:oe===t.OPS.OP_0?buffer$2.Buffer.allocUnsafe(0):i.encode(oe-l))}e.toStack=B;function M(z){return b.isPoint(z)}e.isCanonicalPubKey=M;function L(z){const oe=z&-129;return oe>0&&oe<4}e.isDefinedHashType=L;function ee(z){return!buffer$2.Buffer.isBuffer(z)||!L(z[z.length-1])?!1:a.check(z.slice(0,-1))}e.isCanonicalScriptSignature=ee,e.number=i,e.signature=o})(script$2);var lazy$8={};Object.defineProperty(lazy$8,"__esModule",{value:!0});lazy$8.value=lazy$8.prop=void 0;function prop(e,a,t){Object.defineProperty(e,a,{configurable:!0,enumerable:!0,get(){const c=t.call(this);return this[a]=c,c},set(c){Object.defineProperty(this,a,{configurable:!0,enumerable:!0,value:c,writable:!0})}})}lazy$8.prop=prop;function value(e){let a;return()=>(a!==void 0||(a=e()),a)}lazy$8.value=value;Object.defineProperty(embed,"__esModule",{value:!0});embed.p2data=void 0;const networks_1$9=networks$4,bscript$b=script$2,types_1$e=types$8,lazy$7=lazy$8,OPS$7=bscript$b.OPS;function stacksEqual$4(e,a){return e.length!==a.length?!1:e.every((t,c)=>t.equals(a[c]))}function p2data(e,a){if(!e.data&&!e.output)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$e.typeforce)({network:types_1$e.typeforce.maybe(types_1$e.typeforce.Object),output:types_1$e.typeforce.maybe(types_1$e.typeforce.Buffer),data:types_1$e.typeforce.maybe(types_1$e.typeforce.arrayOf(types_1$e.typeforce.Buffer))},e);const c={name:"embed",network:e.network||networks_1$9.bitcoin};if(lazy$7.prop(c,"output",()=>{if(e.data)return bscript$b.compile([OPS$7.OP_RETURN].concat(e.data))}),lazy$7.prop(c,"data",()=>{if(e.output)return bscript$b.decompile(e.output).slice(1)}),a.validate&&e.output){const i=bscript$b.decompile(e.output);if(i[0]!==OPS$7.OP_RETURN)throw new TypeError("Output is invalid");if(!i.slice(1).every(types_1$e.typeforce.Buffer))throw new TypeError("Output is invalid");if(e.data&&!stacksEqual$4(e.data,c.data))throw new TypeError("Data mismatch")}return Object.assign(c,e)}embed.p2data=p2data;var p2ms$1={};Object.defineProperty(p2ms$1,"__esModule",{value:!0});p2ms$1.p2ms=void 0;const networks_1$8=networks$4,bscript$a=script$2,types_1$d=types$8,lazy$6=lazy$8,OPS$6=bscript$a.OPS,OP_INT_BASE=OPS$6.OP_RESERVED;function stacksEqual$3(e,a){return e.length!==a.length?!1:e.every((t,c)=>t.equals(a[c]))}function p2ms(e,a){if(!e.input&&!e.output&&!(e.pubkeys&&e.m!==void 0)&&!e.signatures)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{});function t(l){return bscript$a.isCanonicalScriptSignature(l)||(a.allowIncomplete&&l===OPS$6.OP_0)!==void 0}(0,types_1$d.typeforce)({network:types_1$d.typeforce.maybe(types_1$d.typeforce.Object),m:types_1$d.typeforce.maybe(types_1$d.typeforce.Number),n:types_1$d.typeforce.maybe(types_1$d.typeforce.Number),output:types_1$d.typeforce.maybe(types_1$d.typeforce.Buffer),pubkeys:types_1$d.typeforce.maybe(types_1$d.typeforce.arrayOf(types_1$d.isPoint)),signatures:types_1$d.typeforce.maybe(types_1$d.typeforce.arrayOf(t)),input:types_1$d.typeforce.maybe(types_1$d.typeforce.Buffer)},e);const i={network:e.network||networks_1$8.bitcoin};let o=[],b=!1;function u(l){b||(b=!0,o=bscript$a.decompile(l),i.m=o[0]-OP_INT_BASE,i.n=o[o.length-2]-OP_INT_BASE,i.pubkeys=o.slice(1,-2))}if(lazy$6.prop(i,"output",()=>{if(e.m&&i.n&&e.pubkeys)return bscript$a.compile([].concat(OP_INT_BASE+e.m,e.pubkeys,OP_INT_BASE+i.n,OPS$6.OP_CHECKMULTISIG))}),lazy$6.prop(i,"m",()=>{if(i.output)return u(i.output),i.m}),lazy$6.prop(i,"n",()=>{if(i.pubkeys)return i.pubkeys.length}),lazy$6.prop(i,"pubkeys",()=>{if(e.output)return u(e.output),i.pubkeys}),lazy$6.prop(i,"signatures",()=>{if(e.input)return bscript$a.decompile(e.input).slice(1)}),lazy$6.prop(i,"input",()=>{if(e.signatures)return bscript$a.compile([OPS$6.OP_0].concat(e.signatures))}),lazy$6.prop(i,"witness",()=>{if(i.input)return[]}),lazy$6.prop(i,"name",()=>{if(!(!i.m||!i.n))return`p2ms(${i.m} of ${i.n})`}),a.validate){if(e.output){if(u(e.output),!types_1$d.typeforce.Number(o[0]))throw new TypeError("Output is invalid");if(!types_1$d.typeforce.Number(o[o.length-2]))throw new TypeError("Output is invalid");if(o[o.length-1]!==OPS$6.OP_CHECKMULTISIG)throw new TypeError("Output is invalid");if(i.m<=0||i.n>16||i.m>i.n||i.n!==o.length-3)throw new TypeError("Output is invalid");if(!i.pubkeys.every(l=>(0,types_1$d.isPoint)(l)))throw new TypeError("Output is invalid");if(e.m!==void 0&&e.m!==i.m)throw new TypeError("m mismatch");if(e.n!==void 0&&e.n!==i.n)throw new TypeError("n mismatch");if(e.pubkeys&&!stacksEqual$3(e.pubkeys,i.pubkeys))throw new TypeError("Pubkeys mismatch")}if(e.pubkeys){if(e.n!==void 0&&e.n!==e.pubkeys.length)throw new TypeError("Pubkey count mismatch");if(i.n=e.pubkeys.length,i.n<i.m)throw new TypeError("Pubkey count cannot be less than m")}if(e.signatures){if(e.signatures.length<i.m)throw new TypeError("Not enough signatures provided");if(e.signatures.length>i.m)throw new TypeError("Too many signatures provided")}if(e.input){if(e.input[0]!==OPS$6.OP_0)throw new TypeError("Input is invalid");if(i.signatures.length===0||!i.signatures.every(t))throw new TypeError("Input has invalid signature(s)");if(e.signatures&&!stacksEqual$3(e.signatures,i.signatures))throw new TypeError("Signature mismatch");if(e.m!==void 0&&e.m!==e.signatures.length)throw new TypeError("Signature count mismatch")}}return Object.assign(i,e)}p2ms$1.p2ms=p2ms;var p2pk$1={};Object.defineProperty(p2pk$1,"__esModule",{value:!0});p2pk$1.p2pk=void 0;const networks_1$7=networks$4,bscript$9=script$2,types_1$c=types$8,lazy$5=lazy$8,OPS$5=bscript$9.OPS;function p2pk(e,a){if(!e.input&&!e.output&&!e.pubkey&&!e.input&&!e.signature)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$c.typeforce)({network:types_1$c.typeforce.maybe(types_1$c.typeforce.Object),output:types_1$c.typeforce.maybe(types_1$c.typeforce.Buffer),pubkey:types_1$c.typeforce.maybe(types_1$c.isPoint),signature:types_1$c.typeforce.maybe(bscript$9.isCanonicalScriptSignature),input:types_1$c.typeforce.maybe(types_1$c.typeforce.Buffer)},e);const t=lazy$5.value(()=>bscript$9.decompile(e.input)),i={name:"p2pk",network:e.network||networks_1$7.bitcoin};if(lazy$5.prop(i,"output",()=>{if(e.pubkey)return bscript$9.compile([e.pubkey,OPS$5.OP_CHECKSIG])}),lazy$5.prop(i,"pubkey",()=>{if(e.output)return e.output.slice(1,-1)}),lazy$5.prop(i,"signature",()=>{if(e.input)return t()[0]}),lazy$5.prop(i,"input",()=>{if(e.signature)return bscript$9.compile([e.signature])}),lazy$5.prop(i,"witness",()=>{if(i.input)return[]}),a.validate){if(e.output){if(e.output[e.output.length-1]!==OPS$5.OP_CHECKSIG)throw new TypeError("Output is invalid");if(!(0,types_1$c.isPoint)(i.pubkey))throw new TypeError("Output pubkey is invalid");if(e.pubkey&&!e.pubkey.equals(i.pubkey))throw new TypeError("Pubkey mismatch")}if(e.signature&&e.input&&!e.input.equals(i.input))throw new TypeError("Signature mismatch");if(e.input){if(t().length!==1)throw new TypeError("Input is invalid");if(!bscript$9.isCanonicalScriptSignature(i.signature))throw new TypeError("Input has invalid signature")}}return Object.assign(i,e)}p2pk$1.p2pk=p2pk;var p2pkh$1={},crypto$2={};Object.defineProperty(crypto$2,"__esModule",{value:!0});crypto$2.taggedHash=crypto$2.hash256=crypto$2.hash160=crypto$2.sha256=crypto$2.sha1=crypto$2.ripemd160=void 0;const createHash$1=browser$3,RipeMd160=ripemd160$3;function ripemd160(e){try{return createHash$1("rmd160").update(e).digest()}catch{try{return createHash$1("ripemd160").update(e).digest()}catch{return new RipeMd160().update(e).digest()}}}crypto$2.ripemd160=ripemd160;function sha1(e){return createHash$1("sha1").update(e).digest()}crypto$2.sha1=sha1;function sha256$2(e){return createHash$1("sha256").update(e).digest()}crypto$2.sha256=sha256$2;function hash160(e){return ripemd160(sha256$2(e))}crypto$2.hash160=hash160;function hash256(e){return sha256$2(sha256$2(e))}crypto$2.hash256=hash256;const TAGS=["BIP0340/challenge","BIP0340/aux","BIP0340/nonce","TapLeaf","TapBranch","TapSighash","TapTweak","KeyAgg list","KeyAgg coefficient"],TAGGED_HASH_PREFIXES=Object.fromEntries(TAGS.map(e=>{const a=sha256$2(buffer$2.Buffer.from(e));return[e,buffer$2.Buffer.concat([a,a])]}));function taggedHash$1(e,a){return sha256$2(buffer$2.Buffer.concat([TAGGED_HASH_PREFIXES[e],a]))}crypto$2.taggedHash=taggedHash$1;var _Buffer=requireSafeBuffer().Buffer;function base$1(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var a=new Uint8Array(256),t=0;t<a.length;t++)a[t]=255;for(var c=0;c<e.length;c++){var i=e.charAt(c),o=i.charCodeAt(0);if(a[o]!==255)throw new TypeError(i+" is ambiguous");a[o]=c}var b=e.length,u=e.charAt(0),l=Math.log(b)/Math.log(256),x=Math.log(256)/Math.log(b);function g(S){if((Array.isArray(S)||S instanceof Uint8Array)&&(S=_Buffer.from(S)),!_Buffer.isBuffer(S))throw new TypeError("Expected Buffer");if(S.length===0)return"";for(var T=0,I=0,A=0,C=S.length;A!==C&&S[A]===0;)A++,T++;for(var O=(C-A)*x+1>>>0,R=new Uint8Array(O);A!==C;){for(var B=S[A],M=0,L=O-1;(B!==0||M<I)&&L!==-1;L--,M++)B+=256*R[L]>>>0,R[L]=B%b>>>0,B=B/b>>>0;if(B!==0)throw new Error("Non-zero carry");I=M,A++}for(var ee=O-I;ee!==O&&R[ee]===0;)ee++;for(var z=u.repeat(T);ee<O;++ee)z+=e.charAt(R[ee]);return z}function v(S){if(typeof S!="string")throw new TypeError("Expected String");if(S.length===0)return _Buffer.alloc(0);for(var T=0,I=0,A=0;S[T]===u;)I++,T++;for(var C=(S.length-T)*l+1>>>0,O=new Uint8Array(C);S[T];){var R=a[S.charCodeAt(T)];if(R===255)return;for(var B=0,M=C-1;(R!==0||B<A)&&M!==-1;M--,B++)R+=b*O[M]>>>0,O[M]=R%256>>>0,R=R/256>>>0;if(R!==0)throw new Error("Non-zero carry");A=B,T++}for(var L=C-A;L!==C&&O[L]===0;)L++;var ee=_Buffer.allocUnsafe(I+(C-L));ee.fill(0,0,I);for(var z=I;L!==C;)ee[z++]=O[L++];return ee}function E(S){var T=v(S);if(T)return T;throw new Error("Non-base"+b+" character")}return{encode:g,decodeUnsafe:v,decode:E}}var src$3=base$1,basex=src$3,ALPHABET$2="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",bs58$1=basex(ALPHABET$2),base58$1=bs58$1,Buffer$8=requireSafeBuffer().Buffer,base=function(e){function a(o){var b=e(o);return base58$1.encode(Buffer$8.concat([o,b],o.length+4))}function t(o){var b=o.slice(0,-4),u=o.slice(-4),l=e(b);if(!(u[0]^l[0]|u[1]^l[1]|u[2]^l[2]|u[3]^l[3]))return b}function c(o){var b=base58$1.decodeUnsafe(o);if(b)return t(b)}function i(o){var b=base58$1.decode(o),u=t(b);if(!u)throw new Error("Invalid checksum");return u}return{encode:a,decode:i,decodeUnsafe:c}},createHash=browser$3,bs58checkBase=base;function sha256x2(e){var a=createHash("sha256").update(e).digest();return createHash("sha256").update(a).digest()}var bs58check$4=bs58checkBase(sha256x2);Object.defineProperty(p2pkh$1,"__esModule",{value:!0});p2pkh$1.p2pkh=void 0;const bcrypto$5=crypto$2,networks_1$6=networks$4,bscript$8=script$2,types_1$b=types$8,lazy$4=lazy$8,bs58check$3=bs58check$4,OPS$4=bscript$8.OPS;function p2pkh(e,a){if(!e.address&&!e.hash&&!e.output&&!e.pubkey&&!e.input)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$b.typeforce)({network:types_1$b.typeforce.maybe(types_1$b.typeforce.Object),address:types_1$b.typeforce.maybe(types_1$b.typeforce.String),hash:types_1$b.typeforce.maybe(types_1$b.typeforce.BufferN(20)),output:types_1$b.typeforce.maybe(types_1$b.typeforce.BufferN(25)),pubkey:types_1$b.typeforce.maybe(types_1$b.isPoint),signature:types_1$b.typeforce.maybe(bscript$8.isCanonicalScriptSignature),input:types_1$b.typeforce.maybe(types_1$b.typeforce.Buffer)},e);const t=lazy$4.value(()=>{const b=bs58check$3.decode(e.address),u=b.readUInt8(0),l=b.slice(1);return{version:u,hash:l}}),c=lazy$4.value(()=>bscript$8.decompile(e.input)),i=e.network||networks_1$6.bitcoin,o={name:"p2pkh",network:i};if(lazy$4.prop(o,"address",()=>{if(!o.hash)return;const b=buffer$2.Buffer.allocUnsafe(21);return b.writeUInt8(i.pubKeyHash,0),o.hash.copy(b,1),bs58check$3.encode(b)}),lazy$4.prop(o,"hash",()=>{if(e.output)return e.output.slice(3,23);if(e.address)return t().hash;if(e.pubkey||o.pubkey)return bcrypto$5.hash160(e.pubkey||o.pubkey)}),lazy$4.prop(o,"output",()=>{if(o.hash)return bscript$8.compile([OPS$4.OP_DUP,OPS$4.OP_HASH160,o.hash,OPS$4.OP_EQUALVERIFY,OPS$4.OP_CHECKSIG])}),lazy$4.prop(o,"pubkey",()=>{if(e.input)return c()[1]}),lazy$4.prop(o,"signature",()=>{if(e.input)return c()[0]}),lazy$4.prop(o,"input",()=>{if(e.pubkey&&e.signature)return bscript$8.compile([e.signature,e.pubkey])}),lazy$4.prop(o,"witness",()=>{if(o.input)return[]}),a.validate){let b=buffer$2.Buffer.from([]);if(e.address){if(t().version!==i.pubKeyHash)throw new TypeError("Invalid version or Network mismatch");if(t().hash.length!==20)throw new TypeError("Invalid address");b=t().hash}if(e.hash){if(b.length>0&&!b.equals(e.hash))throw new TypeError("Hash mismatch");b=e.hash}if(e.output){if(e.output.length!==25||e.output[0]!==OPS$4.OP_DUP||e.output[1]!==OPS$4.OP_HASH160||e.output[2]!==20||e.output[23]!==OPS$4.OP_EQUALVERIFY||e.output[24]!==OPS$4.OP_CHECKSIG)throw new TypeError("Output is invalid");const u=e.output.slice(3,23);if(b.length>0&&!b.equals(u))throw new TypeError("Hash mismatch");b=u}if(e.pubkey){const u=bcrypto$5.hash160(e.pubkey);if(b.length>0&&!b.equals(u))throw new TypeError("Hash mismatch");b=u}if(e.input){const u=c();if(u.length!==2)throw new TypeError("Input is invalid");if(!bscript$8.isCanonicalScriptSignature(u[0]))throw new TypeError("Input has invalid signature");if(!(0,types_1$b.isPoint)(u[1]))throw new TypeError("Input has invalid pubkey");if(e.signature&&!e.signature.equals(u[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(u[1]))throw new TypeError("Pubkey mismatch");const l=bcrypto$5.hash160(u[1]);if(b.length>0&&!b.equals(l))throw new TypeError("Hash mismatch")}}return Object.assign(o,e)}p2pkh$1.p2pkh=p2pkh;var p2sh$1={};Object.defineProperty(p2sh$1,"__esModule",{value:!0});p2sh$1.p2sh=void 0;const bcrypto$4=crypto$2,networks_1$5=networks$4,bscript$7=script$2,types_1$a=types$8,lazy$3=lazy$8,bs58check$2=bs58check$4,OPS$3=bscript$7.OPS;function stacksEqual$2(e,a){return e.length!==a.length?!1:e.every((t,c)=>t.equals(a[c]))}function p2sh(e,a){if(!e.address&&!e.hash&&!e.output&&!e.redeem&&!e.input)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$a.typeforce)({network:types_1$a.typeforce.maybe(types_1$a.typeforce.Object),address:types_1$a.typeforce.maybe(types_1$a.typeforce.String),hash:types_1$a.typeforce.maybe(types_1$a.typeforce.BufferN(20)),output:types_1$a.typeforce.maybe(types_1$a.typeforce.BufferN(23)),redeem:types_1$a.typeforce.maybe({network:types_1$a.typeforce.maybe(types_1$a.typeforce.Object),output:types_1$a.typeforce.maybe(types_1$a.typeforce.Buffer),input:types_1$a.typeforce.maybe(types_1$a.typeforce.Buffer),witness:types_1$a.typeforce.maybe(types_1$a.typeforce.arrayOf(types_1$a.typeforce.Buffer))}),input:types_1$a.typeforce.maybe(types_1$a.typeforce.Buffer),witness:types_1$a.typeforce.maybe(types_1$a.typeforce.arrayOf(types_1$a.typeforce.Buffer))},e);let t=e.network;t||(t=e.redeem&&e.redeem.network||networks_1$5.bitcoin);const c={network:t},i=lazy$3.value(()=>{const u=bs58check$2.decode(e.address),l=u.readUInt8(0),x=u.slice(1);return{version:l,hash:x}}),o=lazy$3.value(()=>bscript$7.decompile(e.input)),b=lazy$3.value(()=>{const u=o(),l=u[u.length-1];return{network:t,output:l===OPS$3.OP_FALSE?buffer$2.Buffer.from([]):l,input:bscript$7.compile(u.slice(0,-1)),witness:e.witness||[]}});if(lazy$3.prop(c,"address",()=>{if(!c.hash)return;const u=buffer$2.Buffer.allocUnsafe(21);return u.writeUInt8(c.network.scriptHash,0),c.hash.copy(u,1),bs58check$2.encode(u)}),lazy$3.prop(c,"hash",()=>{if(e.output)return e.output.slice(2,22);if(e.address)return i().hash;if(c.redeem&&c.redeem.output)return bcrypto$4.hash160(c.redeem.output)}),lazy$3.prop(c,"output",()=>{if(c.hash)return bscript$7.compile([OPS$3.OP_HASH160,c.hash,OPS$3.OP_EQUAL])}),lazy$3.prop(c,"redeem",()=>{if(e.input)return b()}),lazy$3.prop(c,"input",()=>{if(!(!e.redeem||!e.redeem.input||!e.redeem.output))return bscript$7.compile([].concat(bscript$7.decompile(e.redeem.input),e.redeem.output))}),lazy$3.prop(c,"witness",()=>{if(c.redeem&&c.redeem.witness)return c.redeem.witness;if(c.input)return[]}),lazy$3.prop(c,"name",()=>{const u=["p2sh"];return c.redeem!==void 0&&c.redeem.name!==void 0&&u.push(c.redeem.name),u.join("-")}),a.validate){let u=buffer$2.Buffer.from([]);if(e.address){if(i().version!==t.scriptHash)throw new TypeError("Invalid version or Network mismatch");if(i().hash.length!==20)throw new TypeError("Invalid address");u=i().hash}if(e.hash){if(u.length>0&&!u.equals(e.hash))throw new TypeError("Hash mismatch");u=e.hash}if(e.output){if(e.output.length!==23||e.output[0]!==OPS$3.OP_HASH160||e.output[1]!==20||e.output[22]!==OPS$3.OP_EQUAL)throw new TypeError("Output is invalid");const x=e.output.slice(2,22);if(u.length>0&&!u.equals(x))throw new TypeError("Hash mismatch");u=x}const l=x=>{if(x.output){const g=bscript$7.decompile(x.output);if(!g||g.length<1)throw new TypeError("Redeem.output too short");const v=bcrypto$4.hash160(x.output);if(u.length>0&&!u.equals(v))throw new TypeError("Hash mismatch");u=v}if(x.input){const g=x.input.length>0,v=x.witness&&x.witness.length>0;if(!g&&!v)throw new TypeError("Empty input");if(g&&v)throw new TypeError("Input and witness provided");if(g){const E=bscript$7.decompile(x.input);if(!bscript$7.isPushOnly(E))throw new TypeError("Non push-only scriptSig")}}};if(e.input){const x=o();if(!x||x.length<1)throw new TypeError("Input too short");if(!buffer$2.Buffer.isBuffer(b().output))throw new TypeError("Input is invalid");l(b())}if(e.redeem){if(e.redeem.network&&e.redeem.network!==t)throw new TypeError("Network mismatch");if(e.input){const x=b();if(e.redeem.output&&!e.redeem.output.equals(x.output))throw new TypeError("Redeem.output mismatch");if(e.redeem.input&&!e.redeem.input.equals(x.input))throw new TypeError("Redeem.input mismatch")}l(e.redeem)}if(e.witness&&e.redeem&&e.redeem.witness&&!stacksEqual$2(e.redeem.witness,e.witness))throw new TypeError("Witness and redeem.witness mismatch")}return Object.assign(c,e)}p2sh$1.p2sh=p2sh;var p2wpkh$1={},dist$2={};Object.defineProperty(dist$2,"__esModule",{value:!0});dist$2.bech32m=dist$2.bech32=void 0;const ALPHABET$1="qpzry9x8gf2tvdw0s3jn54khce6mua7l",ALPHABET_MAP={};for(let e=0;e<ALPHABET$1.length;e++){const a=ALPHABET$1.charAt(e);ALPHABET_MAP[a]=e}function polymodStep(e){const a=e>>25;return(e&33554431)<<5^-(a>>0&1)&996825010^-(a>>1&1)&642813549^-(a>>2&1)&513874426^-(a>>3&1)&1027748829^-(a>>4&1)&705979059}function prefixChk(e){let a=1;for(let t=0;t<e.length;++t){const c=e.charCodeAt(t);if(c<33||c>126)return"Invalid prefix ("+e+")";a=polymodStep(a)^c>>5}a=polymodStep(a);for(let t=0;t<e.length;++t){const c=e.charCodeAt(t);a=polymodStep(a)^c&31}return a}function convert$7(e,a,t,c){let i=0,o=0;const b=(1<<t)-1,u=[];for(let l=0;l<e.length;++l)for(i=i<<a|e[l],o+=a;o>=t;)o-=t,u.push(i>>o&b);if(c)o>0&&u.push(i<<t-o&b);else{if(o>=a)return"Excess padding";if(i<<t-o&b)return"Non-zero padding"}return u}function toWords(e){return convert$7(e,8,5,!0)}function fromWordsUnsafe(e){const a=convert$7(e,5,8,!1);if(Array.isArray(a))return a}function fromWords(e){const a=convert$7(e,5,8,!1);if(Array.isArray(a))return a;throw new Error(a)}function getLibraryFromEncoding(e){let a;e==="bech32"?a=1:a=734539939;function t(b,u,l){if(l=l||90,b.length+7+u.length>l)throw new TypeError("Exceeds length limit");b=b.toLowerCase();let x=prefixChk(b);if(typeof x=="string")throw new Error(x);let g=b+"1";for(let v=0;v<u.length;++v){const E=u[v];if(E>>5)throw new Error("Non 5-bit word");x=polymodStep(x)^E,g+=ALPHABET$1.charAt(E)}for(let v=0;v<6;++v)x=polymodStep(x);x^=a;for(let v=0;v<6;++v){const E=x>>(5-v)*5&31;g+=ALPHABET$1.charAt(E)}return g}function c(b,u){if(u=u||90,b.length<8)return b+" too short";if(b.length>u)return"Exceeds length limit";const l=b.toLowerCase(),x=b.toUpperCase();if(b!==l&&b!==x)return"Mixed-case string "+b;b=l;const g=b.lastIndexOf("1");if(g===-1)return"No separator character for "+b;if(g===0)return"Missing prefix for "+b;const v=b.slice(0,g),E=b.slice(g+1);if(E.length<6)return"Data too short";let S=prefixChk(v);if(typeof S=="string")return S;const T=[];for(let I=0;I<E.length;++I){const A=E.charAt(I),C=ALPHABET_MAP[A];if(C===void 0)return"Unknown character "+A;S=polymodStep(S)^C,!(I+6>=E.length)&&T.push(C)}return S!==a?"Invalid checksum for "+b:{prefix:v,words:T}}function i(b,u){const l=c(b,u);if(typeof l=="object")return l}function o(b,u){const l=c(b,u);if(typeof l=="object")return l;throw new Error(l)}return{decodeUnsafe:i,decode:o,encode:t,toWords,fromWordsUnsafe,fromWords}}dist$2.bech32=getLibraryFromEncoding("bech32");dist$2.bech32m=getLibraryFromEncoding("bech32m");Object.defineProperty(p2wpkh$1,"__esModule",{value:!0});p2wpkh$1.p2wpkh=void 0;const bcrypto$3=crypto$2,networks_1$4=networks$4,bscript$6=script$2,types_1$9=types$8,lazy$2=lazy$8,bech32_1$4=dist$2,OPS$2=bscript$6.OPS,EMPTY_BUFFER$2=buffer$2.Buffer.alloc(0);function p2wpkh(e,a){if(!e.address&&!e.hash&&!e.output&&!e.pubkey&&!e.witness)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$9.typeforce)({address:types_1$9.typeforce.maybe(types_1$9.typeforce.String),hash:types_1$9.typeforce.maybe(types_1$9.typeforce.BufferN(20)),input:types_1$9.typeforce.maybe(types_1$9.typeforce.BufferN(0)),network:types_1$9.typeforce.maybe(types_1$9.typeforce.Object),output:types_1$9.typeforce.maybe(types_1$9.typeforce.BufferN(22)),pubkey:types_1$9.typeforce.maybe(types_1$9.isPoint),signature:types_1$9.typeforce.maybe(bscript$6.isCanonicalScriptSignature),witness:types_1$9.typeforce.maybe(types_1$9.typeforce.arrayOf(types_1$9.typeforce.Buffer))},e);const t=lazy$2.value(()=>{const o=bech32_1$4.bech32.decode(e.address),b=o.words.shift(),u=bech32_1$4.bech32.fromWords(o.words);return{version:b,prefix:o.prefix,data:buffer$2.Buffer.from(u)}}),c=e.network||networks_1$4.bitcoin,i={name:"p2wpkh",network:c};if(lazy$2.prop(i,"address",()=>{if(!i.hash)return;const o=bech32_1$4.bech32.toWords(i.hash);return o.unshift(0),bech32_1$4.bech32.encode(c.bech32,o)}),lazy$2.prop(i,"hash",()=>{if(e.output)return e.output.slice(2,22);if(e.address)return t().data;if(e.pubkey||i.pubkey)return bcrypto$3.hash160(e.pubkey||i.pubkey)}),lazy$2.prop(i,"output",()=>{if(i.hash)return bscript$6.compile([OPS$2.OP_0,i.hash])}),lazy$2.prop(i,"pubkey",()=>{if(e.pubkey)return e.pubkey;if(e.witness)return e.witness[1]}),lazy$2.prop(i,"signature",()=>{if(e.witness)return e.witness[0]}),lazy$2.prop(i,"input",()=>{if(i.witness)return EMPTY_BUFFER$2}),lazy$2.prop(i,"witness",()=>{if(e.pubkey&&e.signature)return[e.signature,e.pubkey]}),a.validate){let o=buffer$2.Buffer.from([]);if(e.address){if(c&&c.bech32!==t().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(t().version!==0)throw new TypeError("Invalid address version");if(t().data.length!==20)throw new TypeError("Invalid address data");o=t().data}if(e.hash){if(o.length>0&&!o.equals(e.hash))throw new TypeError("Hash mismatch");o=e.hash}if(e.output){if(e.output.length!==22||e.output[0]!==OPS$2.OP_0||e.output[1]!==20)throw new TypeError("Output is invalid");if(o.length>0&&!o.equals(e.output.slice(2)))throw new TypeError("Hash mismatch");o=e.output.slice(2)}if(e.pubkey){const b=bcrypto$3.hash160(e.pubkey);if(o.length>0&&!o.equals(b))throw new TypeError("Hash mismatch");if(o=b,!(0,types_1$9.isPoint)(e.pubkey)||e.pubkey.length!==33)throw new TypeError("Invalid pubkey for p2wpkh")}if(e.witness){if(e.witness.length!==2)throw new TypeError("Witness is invalid");if(!bscript$6.isCanonicalScriptSignature(e.witness[0]))throw new TypeError("Witness has invalid signature");if(!(0,types_1$9.isPoint)(e.witness[1])||e.witness[1].length!==33)throw new TypeError("Witness has invalid pubkey");if(e.signature&&!e.signature.equals(e.witness[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(e.witness[1]))throw new TypeError("Pubkey mismatch");const b=bcrypto$3.hash160(e.witness[1]);if(o.length>0&&!o.equals(b))throw new TypeError("Hash mismatch")}}return Object.assign(i,e)}p2wpkh$1.p2wpkh=p2wpkh;var p2wsh$1={};Object.defineProperty(p2wsh$1,"__esModule",{value:!0});p2wsh$1.p2wsh=void 0;const bcrypto$2=crypto$2,networks_1$3=networks$4,bscript$5=script$2,types_1$8=types$8,lazy$1=lazy$8,bech32_1$3=dist$2,OPS$1=bscript$5.OPS,EMPTY_BUFFER$1=buffer$2.Buffer.alloc(0);function stacksEqual$1(e,a){return e.length!==a.length?!1:e.every((t,c)=>t.equals(a[c]))}function chunkHasUncompressedPubkey(e){return!!(buffer$2.Buffer.isBuffer(e)&&e.length===65&&e[0]===4&&(0,types_1$8.isPoint)(e))}function p2wsh(e,a){if(!e.address&&!e.hash&&!e.output&&!e.redeem&&!e.witness)throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$8.typeforce)({network:types_1$8.typeforce.maybe(types_1$8.typeforce.Object),address:types_1$8.typeforce.maybe(types_1$8.typeforce.String),hash:types_1$8.typeforce.maybe(types_1$8.typeforce.BufferN(32)),output:types_1$8.typeforce.maybe(types_1$8.typeforce.BufferN(34)),redeem:types_1$8.typeforce.maybe({input:types_1$8.typeforce.maybe(types_1$8.typeforce.Buffer),network:types_1$8.typeforce.maybe(types_1$8.typeforce.Object),output:types_1$8.typeforce.maybe(types_1$8.typeforce.Buffer),witness:types_1$8.typeforce.maybe(types_1$8.typeforce.arrayOf(types_1$8.typeforce.Buffer))}),input:types_1$8.typeforce.maybe(types_1$8.typeforce.BufferN(0)),witness:types_1$8.typeforce.maybe(types_1$8.typeforce.arrayOf(types_1$8.typeforce.Buffer))},e);const t=lazy$1.value(()=>{const b=bech32_1$3.bech32.decode(e.address),u=b.words.shift(),l=bech32_1$3.bech32.fromWords(b.words);return{version:u,prefix:b.prefix,data:buffer$2.Buffer.from(l)}}),c=lazy$1.value(()=>bscript$5.decompile(e.redeem.input));let i=e.network;i||(i=e.redeem&&e.redeem.network||networks_1$3.bitcoin);const o={network:i};if(lazy$1.prop(o,"address",()=>{if(!o.hash)return;const b=bech32_1$3.bech32.toWords(o.hash);return b.unshift(0),bech32_1$3.bech32.encode(i.bech32,b)}),lazy$1.prop(o,"hash",()=>{if(e.output)return e.output.slice(2);if(e.address)return t().data;if(o.redeem&&o.redeem.output)return bcrypto$2.sha256(o.redeem.output)}),lazy$1.prop(o,"output",()=>{if(o.hash)return bscript$5.compile([OPS$1.OP_0,o.hash])}),lazy$1.prop(o,"redeem",()=>{if(e.witness)return{output:e.witness[e.witness.length-1],input:EMPTY_BUFFER$1,witness:e.witness.slice(0,-1)}}),lazy$1.prop(o,"input",()=>{if(o.witness)return EMPTY_BUFFER$1}),lazy$1.prop(o,"witness",()=>{if(e.redeem&&e.redeem.input&&e.redeem.input.length>0&&e.redeem.output&&e.redeem.output.length>0){const b=bscript$5.toStack(c());return o.redeem=Object.assign({witness:b},e.redeem),o.redeem.input=EMPTY_BUFFER$1,[].concat(b,e.redeem.output)}if(e.redeem&&e.redeem.output&&e.redeem.witness)return[].concat(e.redeem.witness,e.redeem.output)}),lazy$1.prop(o,"name",()=>{const b=["p2wsh"];return o.redeem!==void 0&&o.redeem.name!==void 0&&b.push(o.redeem.name),b.join("-")}),a.validate){let b=buffer$2.Buffer.from([]);if(e.address){if(t().prefix!==i.bech32)throw new TypeError("Invalid prefix or Network mismatch");if(t().version!==0)throw new TypeError("Invalid address version");if(t().data.length!==32)throw new TypeError("Invalid address data");b=t().data}if(e.hash){if(b.length>0&&!b.equals(e.hash))throw new TypeError("Hash mismatch");b=e.hash}if(e.output){if(e.output.length!==34||e.output[0]!==OPS$1.OP_0||e.output[1]!==32)throw new TypeError("Output is invalid");const u=e.output.slice(2);if(b.length>0&&!b.equals(u))throw new TypeError("Hash mismatch");b=u}if(e.redeem){if(e.redeem.network&&e.redeem.network!==i)throw new TypeError("Network mismatch");if(e.redeem.input&&e.redeem.input.length>0&&e.redeem.witness&&e.redeem.witness.length>0)throw new TypeError("Ambiguous witness source");if(e.redeem.output){if(bscript$5.decompile(e.redeem.output).length===0)throw new TypeError("Redeem.output is invalid");const u=bcrypto$2.sha256(e.redeem.output);if(b.length>0&&!b.equals(u))throw new TypeError("Hash mismatch");b=u}if(e.redeem.input&&!bscript$5.isPushOnly(c()))throw new TypeError("Non push-only scriptSig");if(e.witness&&e.redeem.witness&&!stacksEqual$1(e.witness,e.redeem.witness))throw new TypeError("Witness and redeem.witness mismatch");if(e.redeem.input&&c().some(chunkHasUncompressedPubkey)||e.redeem.output&&(bscript$5.decompile(e.redeem.output)||[]).some(chunkHasUncompressedPubkey))throw new TypeError("redeem.input or redeem.output contains uncompressed pubkey")}if(e.witness&&e.witness.length>0){const u=e.witness[e.witness.length-1];if(e.redeem&&e.redeem.output&&!e.redeem.output.equals(u))throw new TypeError("Witness and redeem.output mismatch");if(e.witness.some(chunkHasUncompressedPubkey)||(bscript$5.decompile(u)||[]).some(chunkHasUncompressedPubkey))throw new TypeError("Witness contains uncompressed pubkey")}}return Object.assign(o,e)}p2wsh$1.p2wsh=p2wsh;var p2tr$1={},ecc_lib={};Object.defineProperty(ecc_lib,"__esModule",{value:!0});ecc_lib.getEccLib=ecc_lib.initEccLib=void 0;const _ECCLIB_CACHE={};function initEccLib(e){e?e!==_ECCLIB_CACHE.eccLib&&(verifyEcc(e),_ECCLIB_CACHE.eccLib=e):_ECCLIB_CACHE.eccLib=e}ecc_lib.initEccLib=initEccLib;function getEccLib(){if(!_ECCLIB_CACHE.eccLib)throw new Error("No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance");return _ECCLIB_CACHE.eccLib}ecc_lib.getEccLib=getEccLib;const h$1=e=>buffer$2.Buffer.from(e,"hex");function verifyEcc(e){assert$6(typeof e.isXOnlyPoint=="function"),assert$6(e.isXOnlyPoint(h$1("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),assert$6(e.isXOnlyPoint(h$1("fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e"))),assert$6(e.isXOnlyPoint(h$1("f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9"))),assert$6(e.isXOnlyPoint(h$1("0000000000000000000000000000000000000000000000000000000000000001"))),assert$6(!e.isXOnlyPoint(h$1("0000000000000000000000000000000000000000000000000000000000000000"))),assert$6(!e.isXOnlyPoint(h$1("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"))),assert$6(typeof e.xOnlyPointAddTweak=="function"),tweakAddVectors.forEach(a=>{const t=e.xOnlyPointAddTweak(h$1(a.pubkey),h$1(a.tweak));a.result===null?assert$6(t===null):(assert$6(t!==null),assert$6(t.parity===a.parity),assert$6(buffer$2.Buffer.from(t.xOnlyPubkey).equals(h$1(a.result))))})}function assert$6(e){if(!e)throw new Error("ecc library invalid")}const tweakAddVectors=[{pubkey:"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",tweak:"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140",parity:-1,result:null},{pubkey:"1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b",tweak:"a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac",parity:1,result:"e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf"},{pubkey:"2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991",tweak:"823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47",parity:0,result:"9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c"}];var bip341={},bufferutils={},Buffer$7=requireSafeBuffer().Buffer,MAX_SAFE_INTEGER$1=9007199254740991;function checkUInt53$1(e){if(e<0||e>MAX_SAFE_INTEGER$1||e%1!==0)throw new RangeError("value out of range")}function encode$k(e,a,t){if(checkUInt53$1(e),a||(a=Buffer$7.allocUnsafe(encodingLength$1(e))),!Buffer$7.isBuffer(a))throw new TypeError("buffer must be a Buffer instance");return t||(t=0),e<253?(a.writeUInt8(e,t),encode$k.bytes=1):e<=65535?(a.writeUInt8(253,t),a.writeUInt16LE(e,t+1),encode$k.bytes=3):e<=4294967295?(a.writeUInt8(254,t),a.writeUInt32LE(e,t+1),encode$k.bytes=5):(a.writeUInt8(255,t),a.writeUInt32LE(e>>>0,t+1),a.writeUInt32LE(e/4294967296|0,t+5),encode$k.bytes=9),a}function decode$j(e,a){if(!Buffer$7.isBuffer(e))throw new TypeError("buffer must be a Buffer instance");a||(a=0);var t=e.readUInt8(a);if(t<253)return decode$j.bytes=1,t;if(t===253)return decode$j.bytes=3,e.readUInt16LE(a+1);if(t===254)return decode$j.bytes=5,e.readUInt32LE(a+1);decode$j.bytes=9;var c=e.readUInt32LE(a+1),i=e.readUInt32LE(a+5),o=i*4294967296+c;return checkUInt53$1(o),o}function encodingLength$1(e){return checkUInt53$1(e),e<253?1:e<=65535?3:e<=4294967295?5:9}var varuintBitcoin={encode:encode$k,decode:decode$j,encodingLength:encodingLength$1};Object.defineProperty(bufferutils,"__esModule",{value:!0});bufferutils.BufferReader=bufferutils.BufferWriter=bufferutils.cloneBuffer=bufferutils.reverseBuffer=bufferutils.writeUInt64LE=bufferutils.readUInt64LE=bufferutils.varuint=void 0;const types$5=types$8,{typeforce:typeforce$2}=types$5,varuint$7=varuintBitcoin;bufferutils.varuint=varuint$7;function verifuint$1(e,a){if(typeof e!="number")throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>a)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}function readUInt64LE$1(e,a){const t=e.readUInt32LE(a);let c=e.readUInt32LE(a+4);return c*=4294967296,verifuint$1(c+t,9007199254740991),c+t}bufferutils.readUInt64LE=readUInt64LE$1;function writeUInt64LE$1(e,a,t){return verifuint$1(a,9007199254740991),e.writeInt32LE(a&-1,t),e.writeUInt32LE(Math.floor(a/4294967296),t+4),t+8}bufferutils.writeUInt64LE=writeUInt64LE$1;function reverseBuffer$1(e){if(e.length<1)return e;let a=e.length-1,t=0;for(let c=0;c<e.length/2;c++)t=e[c],e[c]=e[a],e[a]=t,a--;return e}bufferutils.reverseBuffer=reverseBuffer$1;function cloneBuffer(e){const a=buffer$2.Buffer.allocUnsafe(e.length);return e.copy(a),a}bufferutils.cloneBuffer=cloneBuffer;let BufferWriter$6=class na{static withCapacity(a){return new na(buffer$2.Buffer.alloc(a))}constructor(a,t=0){this.buffer=a,this.offset=t,typeforce$2(types$5.tuple(types$5.Buffer,types$5.UInt32),[a,t])}writeUInt8(a){this.offset=this.buffer.writeUInt8(a,this.offset)}writeInt32(a){this.offset=this.buffer.writeInt32LE(a,this.offset)}writeUInt32(a){this.offset=this.buffer.writeUInt32LE(a,this.offset)}writeUInt64(a){this.offset=writeUInt64LE$1(this.buffer,a,this.offset)}writeVarInt(a){varuint$7.encode(a,this.buffer,this.offset),this.offset+=varuint$7.encode.bytes}writeSlice(a){if(this.buffer.length<this.offset+a.length)throw new Error("Cannot write slice out of bounds");this.offset+=a.copy(this.buffer,this.offset)}writeVarSlice(a){this.writeVarInt(a.length),this.writeSlice(a)}writeVector(a){this.writeVarInt(a.length),a.forEach(t=>this.writeVarSlice(t))}end(){if(this.buffer.length===this.offset)return this.buffer;throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`)}};bufferutils.BufferWriter=BufferWriter$6;let BufferReader$5=class{constructor(a,t=0){this.buffer=a,this.offset=t,typeforce$2(types$5.tuple(types$5.Buffer,types$5.UInt32),[a,t])}readUInt8(){const a=this.buffer.readUInt8(this.offset);return this.offset++,a}readInt32(){const a=this.buffer.readInt32LE(this.offset);return this.offset+=4,a}readUInt32(){const a=this.buffer.readUInt32LE(this.offset);return this.offset+=4,a}readUInt64(){const a=readUInt64LE$1(this.buffer,this.offset);return this.offset+=8,a}readVarInt(){const a=varuint$7.decode(this.buffer,this.offset);return this.offset+=varuint$7.decode.bytes,a}readSlice(a){if(this.buffer.length<this.offset+a)throw new Error("Cannot read slice out of bounds");const t=this.buffer.slice(this.offset,this.offset+a);return this.offset+=a,t}readVarSlice(){return this.readSlice(this.readVarInt())}readVector(){const a=this.readVarInt(),t=[];for(let c=0;c<a;c++)t.push(this.readVarSlice());return t}};bufferutils.BufferReader=BufferReader$5;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.tweakKey=e.tapTweakHash=e.tapleafHash=e.findScriptPath=e.toHashTree=e.rootHashFromPath=e.MAX_TAPTREE_DEPTH=e.LEAF_VERSION_TAPSCRIPT=void 0;const a=buffer$2,t=ecc_lib,c=crypto$2,i=bufferutils,o=types$8;e.LEAF_VERSION_TAPSCRIPT=192,e.MAX_TAPTREE_DEPTH=128;const b=I=>"left"in I&&"right"in I;function u(I,A){if(I.length<33)throw new TypeError(`The control-block length is too small. Got ${I.length}, expected min 33.`);const C=(I.length-33)/32;let O=A;for(let R=0;R<C;R++){const B=I.slice(33+32*R,65+32*R);O.compare(B)<0?O=S(O,B):O=S(B,O)}return O}e.rootHashFromPath=u;function l(I){if((0,o.isTapleaf)(I))return{hash:g(I)};const A=[l(I[0]),l(I[1])];A.sort((R,B)=>R.hash.compare(B.hash));const[C,O]=A;return{hash:S(C.hash,O.hash),left:C,right:O}}e.toHashTree=l;function x(I,A){if(b(I)){const C=x(I.left,A);if(C!==void 0)return[...C,I.right.hash];const O=x(I.right,A);if(O!==void 0)return[...O,I.left.hash]}else if(I.hash.equals(A))return[]}e.findScriptPath=x;function g(I){const A=I.version||e.LEAF_VERSION_TAPSCRIPT;return c.taggedHash("TapLeaf",a.Buffer.concat([a.Buffer.from([A]),T(I.output)]))}e.tapleafHash=g;function v(I,A){return c.taggedHash("TapTweak",a.Buffer.concat(A?[I,A]:[I]))}e.tapTweakHash=v;function E(I,A){if(!a.Buffer.isBuffer(I)||I.length!==32||A&&A.length!==32)return null;const C=v(I,A),O=(0,t.getEccLib)().xOnlyPointAddTweak(I,C);return!O||O.xOnlyPubkey===null?null:{parity:O.parity,x:a.Buffer.from(O.xOnlyPubkey)}}e.tweakKey=E;function S(I,A){return c.taggedHash("TapBranch",a.Buffer.concat([I,A]))}function T(I){const A=i.varuint.encodingLength(I.length),C=a.Buffer.allocUnsafe(A);return i.varuint.encode(I.length,C),a.Buffer.concat([C,I])}})(bip341);Object.defineProperty(p2tr$1,"__esModule",{value:!0});p2tr$1.p2tr=void 0;const buffer_1=buffer$2,networks_1$2=networks$4,bscript$4=script$2,types_1$7=types$8,ecc_lib_1=ecc_lib,bip341_1$2=bip341,lazy=lazy$8,bech32_1$2=dist$2,OPS=bscript$4.OPS,TAPROOT_WITNESS_VERSION=1,ANNEX_PREFIX=80;function p2tr(e,a){if(!e.address&&!e.output&&!e.pubkey&&!e.internalPubkey&&!(e.witness&&e.witness.length>1))throw new TypeError("Not enough data");a=Object.assign({validate:!0},a||{}),(0,types_1$7.typeforce)({address:types_1$7.typeforce.maybe(types_1$7.typeforce.String),input:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(0)),network:types_1$7.typeforce.maybe(types_1$7.typeforce.Object),output:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(34)),internalPubkey:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(32)),hash:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(32)),pubkey:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(32)),signature:types_1$7.typeforce.maybe(types_1$7.typeforce.BufferN(64)),witness:types_1$7.typeforce.maybe(types_1$7.typeforce.arrayOf(types_1$7.typeforce.Buffer)),scriptTree:types_1$7.typeforce.maybe(types_1$7.isTaptree),redeem:types_1$7.typeforce.maybe({output:types_1$7.typeforce.maybe(types_1$7.typeforce.Buffer),redeemVersion:types_1$7.typeforce.maybe(types_1$7.typeforce.Number),witness:types_1$7.typeforce.maybe(types_1$7.typeforce.arrayOf(types_1$7.typeforce.Buffer))}),redeemVersion:types_1$7.typeforce.maybe(types_1$7.typeforce.Number)},e);const t=lazy.value(()=>{const u=bech32_1$2.bech32m.decode(e.address),l=u.words.shift(),x=bech32_1$2.bech32m.fromWords(u.words);return{version:l,prefix:u.prefix,data:buffer_1.Buffer.from(x)}}),c=lazy.value(()=>{if(!(!e.witness||!e.witness.length))return e.witness.length>=2&&e.witness[e.witness.length-1][0]===ANNEX_PREFIX?e.witness.slice(0,-1):e.witness.slice()}),i=lazy.value(()=>{if(e.scriptTree)return(0,bip341_1$2.toHashTree)(e.scriptTree);if(e.hash)return{hash:e.hash}}),o=e.network||networks_1$2.bitcoin,b={name:"p2tr",network:o};if(lazy.prop(b,"address",()=>{if(!b.pubkey)return;const u=bech32_1$2.bech32m.toWords(b.pubkey);return u.unshift(TAPROOT_WITNESS_VERSION),bech32_1$2.bech32m.encode(o.bech32,u)}),lazy.prop(b,"hash",()=>{const u=i();if(u)return u.hash;const l=c();if(l&&l.length>1){const x=l[l.length-1],g=x[0]&types_1$7.TAPLEAF_VERSION_MASK,v=l[l.length-2],E=(0,bip341_1$2.tapleafHash)({output:v,version:g});return(0,bip341_1$2.rootHashFromPath)(x,E)}return null}),lazy.prop(b,"output",()=>{if(b.pubkey)return bscript$4.compile([OPS.OP_1,b.pubkey])}),lazy.prop(b,"redeemVersion",()=>e.redeemVersion?e.redeemVersion:e.redeem&&e.redeem.redeemVersion!==void 0&&e.redeem.redeemVersion!==null?e.redeem.redeemVersion:bip341_1$2.LEAF_VERSION_TAPSCRIPT),lazy.prop(b,"redeem",()=>{const u=c();if(!(!u||u.length<2))return{output:u[u.length-2],witness:u.slice(0,-2),redeemVersion:u[u.length-1][0]&types_1$7.TAPLEAF_VERSION_MASK}}),lazy.prop(b,"pubkey",()=>{if(e.pubkey)return e.pubkey;if(e.output)return e.output.slice(2);if(e.address)return t().data;if(b.internalPubkey){const u=(0,bip341_1$2.tweakKey)(b.internalPubkey,b.hash);if(u)return u.x}}),lazy.prop(b,"internalPubkey",()=>{if(e.internalPubkey)return e.internalPubkey;const u=c();if(u&&u.length>1)return u[u.length-1].slice(1,33)}),lazy.prop(b,"signature",()=>{if(e.signature)return e.signature;const u=c();if(!(!u||u.length!==1))return u[0]}),lazy.prop(b,"witness",()=>{if(e.witness)return e.witness;const u=i();if(u&&e.redeem&&e.redeem.output&&e.internalPubkey){const l=(0,bip341_1$2.tapleafHash)({output:e.redeem.output,version:b.redeemVersion}),x=(0,bip341_1$2.findScriptPath)(u,l);if(!x)return;const g=(0,bip341_1$2.tweakKey)(e.internalPubkey,u.hash);if(!g)return;const v=buffer_1.Buffer.concat([buffer_1.Buffer.from([b.redeemVersion|g.parity]),e.internalPubkey].concat(x));return[e.redeem.output,v]}if(e.signature)return[e.signature]}),a.validate){let u=buffer_1.Buffer.from([]);if(e.address){if(o&&o.bech32!==t().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(t().version!==TAPROOT_WITNESS_VERSION)throw new TypeError("Invalid address version");if(t().data.length!==32)throw new TypeError("Invalid address data");u=t().data}if(e.pubkey){if(u.length>0&&!u.equals(e.pubkey))throw new TypeError("Pubkey mismatch");u=e.pubkey}if(e.output){if(e.output.length!==34||e.output[0]!==OPS.OP_1||e.output[1]!==32)throw new TypeError("Output is invalid");if(u.length>0&&!u.equals(e.output.slice(2)))throw new TypeError("Pubkey mismatch");u=e.output.slice(2)}if(e.internalPubkey){const g=(0,bip341_1$2.tweakKey)(e.internalPubkey,b.hash);if(u.length>0&&!u.equals(g.x))throw new TypeError("Pubkey mismatch");u=g.x}if(u&&u.length&&!(0,ecc_lib_1.getEccLib)().isXOnlyPoint(u))throw new TypeError("Invalid pubkey for p2tr");const l=i();if(e.hash&&l&&!e.hash.equals(l.hash))throw new TypeError("Hash mismatch");if(e.redeem&&e.redeem.output&&l){const g=(0,bip341_1$2.tapleafHash)({output:e.redeem.output,version:b.redeemVersion});if(!(0,bip341_1$2.findScriptPath)(l,g))throw new TypeError("Redeem script not in tree")}const x=c();if(e.redeem&&b.redeem){if(e.redeem.redeemVersion&&e.redeem.redeemVersion!==b.redeem.redeemVersion)throw new TypeError("Redeem.redeemVersion and witness mismatch");if(e.redeem.output){if(bscript$4.decompile(e.redeem.output).length===0)throw new TypeError("Redeem.output is invalid");if(b.redeem.output&&!e.redeem.output.equals(b.redeem.output))throw new TypeError("Redeem.output and witness mismatch")}if(e.redeem.witness&&b.redeem.witness&&!stacksEqual(e.redeem.witness,b.redeem.witness))throw new TypeError("Redeem.witness and witness mismatch")}if(x&&x.length)if(x.length===1){if(e.signature&&!e.signature.equals(x[0]))throw new TypeError("Signature mismatch")}else{const g=x[x.length-1];if(g.length<33)throw new TypeError(`The control-block length is too small. Got ${g.length}, expected min 33.`);if((g.length-33)%32!==0)throw new TypeError(`The control-block length of ${g.length} is incorrect!`);const v=(g.length-33)/32;if(v>128)throw new TypeError(`The script path is too long. Got ${v}, expected max 128.`);const E=g.slice(1,33);if(e.internalPubkey&&!e.internalPubkey.equals(E))throw new TypeError("Internal pubkey mismatch");if(!(0,ecc_lib_1.getEccLib)().isXOnlyPoint(E))throw new TypeError("Invalid internalPubkey for p2tr witness");const S=g[0]&types_1$7.TAPLEAF_VERSION_MASK,T=x[x.length-2],I=(0,bip341_1$2.tapleafHash)({output:T,version:S}),A=(0,bip341_1$2.rootHashFromPath)(g,I),C=(0,bip341_1$2.tweakKey)(E,A);if(!C)throw new TypeError("Invalid outputKey for p2tr witness");if(u.length&&!u.equals(C.x))throw new TypeError("Pubkey mismatch for p2tr witness");if(C.parity!==(g[0]&1))throw new Error("Incorrect parity")}}return Object.assign(b,e)}p2tr$1.p2tr=p2tr;function stacksEqual(e,a){return e.length!==a.length?!1:e.every((t,c)=>t.equals(a[c]))}(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.p2tr=e.p2wsh=e.p2wpkh=e.p2sh=e.p2pkh=e.p2pk=e.p2ms=e.embed=void 0;const a=embed;Object.defineProperty(e,"embed",{enumerable:!0,get:function(){return a.p2data}});const t=p2ms$1;Object.defineProperty(e,"p2ms",{enumerable:!0,get:function(){return t.p2ms}});const c=p2pk$1;Object.defineProperty(e,"p2pk",{enumerable:!0,get:function(){return c.p2pk}});const i=p2pkh$1;Object.defineProperty(e,"p2pkh",{enumerable:!0,get:function(){return i.p2pkh}});const o=p2sh$1;Object.defineProperty(e,"p2sh",{enumerable:!0,get:function(){return o.p2sh}});const b=p2wpkh$1;Object.defineProperty(e,"p2wpkh",{enumerable:!0,get:function(){return b.p2wpkh}});const u=p2wsh$1;Object.defineProperty(e,"p2wsh",{enumerable:!0,get:function(){return u.p2wsh}});const l=p2tr$1;Object.defineProperty(e,"p2tr",{enumerable:!0,get:function(){return l.p2tr}})})(payments$3);Object.defineProperty(address$1,"__esModule",{value:!0});address$1.toOutputScript=address$1.fromOutputScript=address$1.toBech32=address$1.toBase58Check=address$1.fromBech32=address$1.fromBase58Check=void 0;const networks$3=networks$4,payments$2=payments$3,bscript$3=script$2,types_1$6=types$8,bech32_1$1=dist$2,bs58check$1=bs58check$4,FUTURE_SEGWIT_MAX_SIZE=40,FUTURE_SEGWIT_MIN_SIZE=2,FUTURE_SEGWIT_MAX_VERSION=16,FUTURE_SEGWIT_MIN_VERSION=2,FUTURE_SEGWIT_VERSION_DIFF=80,FUTURE_SEGWIT_VERSION_WARNING="WARNING: Sending to a future segwit version address can lead to loss of funds. End users MUST be warned carefully in the GUI and asked if they wish to proceed with caution. Wallets should verify the segwit version from the output of fromBech32, then decide when it is safe to use which version of segwit.";function _toFutureSegwitAddress(e,a){const t=e.slice(2);if(t.length<FUTURE_SEGWIT_MIN_SIZE||t.length>FUTURE_SEGWIT_MAX_SIZE)throw new TypeError("Invalid program length for segwit address");const c=e[0]-FUTURE_SEGWIT_VERSION_DIFF;if(c<FUTURE_SEGWIT_MIN_VERSION||c>FUTURE_SEGWIT_MAX_VERSION)throw new TypeError("Invalid version for segwit address");if(e[1]!==t.length)throw new TypeError("Invalid script for segwit address");return toBech32(t,c,a.bech32)}function fromBase58Check(e){const a=bs58check$1.decode(e);if(a.length<21)throw new TypeError(e+" is too short");if(a.length>21)throw new TypeError(e+" is too long");const t=a.readUInt8(0),c=a.slice(1);return{version:t,hash:c}}address$1.fromBase58Check=fromBase58Check;function fromBech32(e){let a,t;try{a=bech32_1$1.bech32.decode(e)}catch{}if(a){if(t=a.words[0],t!==0)throw new TypeError(e+" uses wrong encoding")}else if(a=bech32_1$1.bech32m.decode(e),t=a.words[0],t===0)throw new TypeError(e+" uses wrong encoding");const c=bech32_1$1.bech32.fromWords(a.words.slice(1));return{version:t,prefix:a.prefix,data:buffer$2.Buffer.from(c)}}address$1.fromBech32=fromBech32;function toBase58Check(e,a){(0,types_1$6.typeforce)((0,types_1$6.tuple)(types_1$6.Hash160bit,types_1$6.UInt8),arguments);const t=buffer$2.Buffer.allocUnsafe(21);return t.writeUInt8(a,0),e.copy(t,1),bs58check$1.encode(t)}address$1.toBase58Check=toBase58Check;function toBech32(e,a,t){const c=bech32_1$1.bech32.toWords(e);return c.unshift(a),a===0?bech32_1$1.bech32.encode(t,c):bech32_1$1.bech32m.encode(t,c)}address$1.toBech32=toBech32;function fromOutputScript(e,a){a=a||networks$3.bitcoin;try{return payments$2.p2pkh({output:e,network:a}).address}catch{}try{return payments$2.p2sh({output:e,network:a}).address}catch{}try{return payments$2.p2wpkh({output:e,network:a}).address}catch{}try{return payments$2.p2wsh({output:e,network:a}).address}catch{}try{return payments$2.p2tr({output:e,network:a}).address}catch{}try{return _toFutureSegwitAddress(e,a)}catch{}throw new Error(bscript$3.toASM(e)+" has no matching Address")}address$1.fromOutputScript=fromOutputScript;function toOutputScript(e,a){a=a||networks$3.bitcoin;let t,c;try{t=fromBase58Check(e)}catch{}if(t){if(t.version===a.pubKeyHash)return payments$2.p2pkh({hash:t.hash}).output;if(t.version===a.scriptHash)return payments$2.p2sh({hash:t.hash}).output}else{try{c=fromBech32(e)}catch{}if(c){if(c.prefix!==a.bech32)throw new Error(e+" has an invalid prefix");if(c.version===0){if(c.data.length===20)return payments$2.p2wpkh({hash:c.data}).output;if(c.data.length===32)return payments$2.p2wsh({hash:c.data}).output}else if(c.version===1){if(c.data.length===32)return payments$2.p2tr({pubkey:c.data}).output}else if(c.version>=FUTURE_SEGWIT_MIN_VERSION&&c.version<=FUTURE_SEGWIT_MAX_VERSION&&c.data.length>=FUTURE_SEGWIT_MIN_SIZE&&c.data.length<=FUTURE_SEGWIT_MAX_SIZE)return bscript$3.compile([c.version+FUTURE_SEGWIT_VERSION_DIFF,c.data])}}throw new Error(e+" has no matching Script")}address$1.toOutputScript=toOutputScript;var block$2={},merkle={};Object.defineProperty(merkle,"__esModule",{value:!0});merkle.fastMerkleRoot=void 0;function fastMerkleRoot(e,a){if(!Array.isArray(e))throw TypeError("Expected values Array");if(typeof a!="function")throw TypeError("Expected digest Function");let t=e.length;const c=e.concat();for(;t>1;){let i=0;for(let o=0;o<t;o+=2,++i){const b=c[o],u=o+1===t?b:c[o+1],l=buffer$2.Buffer.concat([b,u]);c[i]=a(l)}t=i}return c[0]}merkle.fastMerkleRoot=fastMerkleRoot;var transaction$2={};Object.defineProperty(transaction$2,"__esModule",{value:!0});transaction$2.Transaction=void 0;const bufferutils_1$2=bufferutils,bcrypto$1=crypto$2,bscript$2=script$2,script_1=script$2,types$4=types$8,{typeforce:typeforce$1}=types$4;function varSliceSize(e){const a=e.length;return bufferutils_1$2.varuint.encodingLength(a)+a}function vectorSize(e){const a=e.length;return bufferutils_1$2.varuint.encodingLength(a)+e.reduce((t,c)=>t+varSliceSize(c),0)}const EMPTY_BUFFER=buffer$2.Buffer.allocUnsafe(0),EMPTY_WITNESS=[],ZERO$1=buffer$2.Buffer.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),ONE$1=buffer$2.Buffer.from("0000000000000000000000000000000000000000000000000000000000000001","hex"),VALUE_UINT64_MAX=buffer$2.Buffer.from("ffffffffffffffff","hex"),BLANK_OUTPUT={script:EMPTY_BUFFER,valueBuffer:VALUE_UINT64_MAX};function isOutput(e){return e.value!==void 0}let Transaction$3=class O0{constructor(){this.version=1,this.locktime=0,this.ins=[],this.outs=[]}static fromBuffer(a,t){const c=new bufferutils_1$2.BufferReader(a),i=new O0;i.version=c.readInt32();const o=c.readUInt8(),b=c.readUInt8();let u=!1;o===O0.ADVANCED_TRANSACTION_MARKER&&b===O0.ADVANCED_TRANSACTION_FLAG?u=!0:c.offset-=2;const l=c.readVarInt();for(let g=0;g<l;++g)i.ins.push({hash:c.readSlice(32),index:c.readUInt32(),script:c.readVarSlice(),sequence:c.readUInt32(),witness:EMPTY_WITNESS});const x=c.readVarInt();for(let g=0;g<x;++g)i.outs.push({value:c.readUInt64(),script:c.readVarSlice()});if(u){for(let g=0;g<l;++g)i.ins[g].witness=c.readVector();if(!i.hasWitnesses())throw new Error("Transaction has superfluous witness data")}if(i.locktime=c.readUInt32(),t)return i;if(c.offset!==a.length)throw new Error("Transaction has unexpected data");return i}static fromHex(a){return O0.fromBuffer(buffer$2.Buffer.from(a,"hex"),!1)}static isCoinbaseHash(a){typeforce$1(types$4.Hash256bit,a);for(let t=0;t<32;++t)if(a[t]!==0)return!1;return!0}isCoinbase(){return this.ins.length===1&&O0.isCoinbaseHash(this.ins[0].hash)}addInput(a,t,c,i){return typeforce$1(types$4.tuple(types$4.Hash256bit,types$4.UInt32,types$4.maybe(types$4.UInt32),types$4.maybe(types$4.Buffer)),arguments),types$4.Null(c)&&(c=O0.DEFAULT_SEQUENCE),this.ins.push({hash:a,index:t,script:i||EMPTY_BUFFER,sequence:c,witness:EMPTY_WITNESS})-1}addOutput(a,t){return typeforce$1(types$4.tuple(types$4.Buffer,types$4.Satoshi),arguments),this.outs.push({script:a,value:t})-1}hasWitnesses(){return this.ins.some(a=>a.witness.length!==0)}weight(){const a=this.byteLength(!1),t=this.byteLength(!0);return a*3+t}virtualSize(){return Math.ceil(this.weight()/4)}byteLength(a=!0){const t=a&&this.hasWitnesses();return(t?10:8)+bufferutils_1$2.varuint.encodingLength(this.ins.length)+bufferutils_1$2.varuint.encodingLength(this.outs.length)+this.ins.reduce((c,i)=>c+40+varSliceSize(i.script),0)+this.outs.reduce((c,i)=>c+8+varSliceSize(i.script),0)+(t?this.ins.reduce((c,i)=>c+vectorSize(i.witness),0):0)}clone(){const a=new O0;return a.version=this.version,a.locktime=this.locktime,a.ins=this.ins.map(t=>({hash:t.hash,index:t.index,script:t.script,sequence:t.sequence,witness:t.witness})),a.outs=this.outs.map(t=>({script:t.script,value:t.value})),a}hashForSignature(a,t,c){if(typeforce$1(types$4.tuple(types$4.UInt32,types$4.Buffer,types$4.Number),arguments),a>=this.ins.length)return ONE$1;const i=bscript$2.compile(bscript$2.decompile(t).filter(u=>u!==script_1.OPS.OP_CODESEPARATOR)),o=this.clone();if((c&31)===O0.SIGHASH_NONE)o.outs=[],o.ins.forEach((u,l)=>{l!==a&&(u.sequence=0)});else if((c&31)===O0.SIGHASH_SINGLE){if(a>=this.outs.length)return ONE$1;o.outs.length=a+1;for(let u=0;u<a;u++)o.outs[u]=BLANK_OUTPUT;o.ins.forEach((u,l)=>{l!==a&&(u.sequence=0)})}c&O0.SIGHASH_ANYONECANPAY?(o.ins=[o.ins[a]],o.ins[0].script=i):(o.ins.forEach(u=>{u.script=EMPTY_BUFFER}),o.ins[a].script=i);const b=buffer$2.Buffer.allocUnsafe(o.byteLength(!1)+4);return b.writeInt32LE(c,b.length-4),o.__toBuffer(b,0,!1),bcrypto$1.hash256(b)}hashForWitnessV1(a,t,c,i,o,b){if(typeforce$1(types$4.tuple(types$4.UInt32,typeforce$1.arrayOf(types$4.Buffer),typeforce$1.arrayOf(types$4.Satoshi),types$4.UInt32),arguments),c.length!==this.ins.length||t.length!==this.ins.length)throw new Error("Must supply prevout script and value for all inputs");const u=i===O0.SIGHASH_DEFAULT?O0.SIGHASH_ALL:i&O0.SIGHASH_OUTPUT_MASK,x=(i&O0.SIGHASH_INPUT_MASK)===O0.SIGHASH_ANYONECANPAY,g=u===O0.SIGHASH_NONE,v=u===O0.SIGHASH_SINGLE;let E=EMPTY_BUFFER,S=EMPTY_BUFFER,T=EMPTY_BUFFER,I=EMPTY_BUFFER,A=EMPTY_BUFFER;if(!x){let B=bufferutils_1$2.BufferWriter.withCapacity(36*this.ins.length);this.ins.forEach(M=>{B.writeSlice(M.hash),B.writeUInt32(M.index)}),E=bcrypto$1.sha256(B.end()),B=bufferutils_1$2.BufferWriter.withCapacity(8*this.ins.length),c.forEach(M=>B.writeUInt64(M)),S=bcrypto$1.sha256(B.end()),B=bufferutils_1$2.BufferWriter.withCapacity(t.map(varSliceSize).reduce((M,L)=>M+L)),t.forEach(M=>B.writeVarSlice(M)),T=bcrypto$1.sha256(B.end()),B=bufferutils_1$2.BufferWriter.withCapacity(4*this.ins.length),this.ins.forEach(M=>B.writeUInt32(M.sequence)),I=bcrypto$1.sha256(B.end())}if(g||v){if(v&&a<this.outs.length){const B=this.outs[a],M=bufferutils_1$2.BufferWriter.withCapacity(8+varSliceSize(B.script));M.writeUInt64(B.value),M.writeVarSlice(B.script),A=bcrypto$1.sha256(M.end())}}else{const B=this.outs.map(L=>8+varSliceSize(L.script)).reduce((L,ee)=>L+ee),M=bufferutils_1$2.BufferWriter.withCapacity(B);this.outs.forEach(L=>{M.writeUInt64(L.value),M.writeVarSlice(L.script)}),A=bcrypto$1.sha256(M.end())}const C=(o?2:0)+(b?1:0),O=174-(x?49:0)-(g?32:0)+(b?32:0)+(o?37:0),R=bufferutils_1$2.BufferWriter.withCapacity(O);if(R.writeUInt8(i),R.writeInt32(this.version),R.writeUInt32(this.locktime),R.writeSlice(E),R.writeSlice(S),R.writeSlice(T),R.writeSlice(I),g||v||R.writeSlice(A),R.writeUInt8(C),x){const B=this.ins[a];R.writeSlice(B.hash),R.writeUInt32(B.index),R.writeUInt64(c[a]),R.writeVarSlice(t[a]),R.writeUInt32(B.sequence)}else R.writeUInt32(a);if(b){const B=bufferutils_1$2.BufferWriter.withCapacity(varSliceSize(b));B.writeVarSlice(b),R.writeSlice(bcrypto$1.sha256(B.end()))}return v&&R.writeSlice(A),o&&(R.writeSlice(o),R.writeUInt8(0),R.writeUInt32(4294967295)),bcrypto$1.taggedHash("TapSighash",buffer$2.Buffer.concat([buffer$2.Buffer.of(0),R.end()]))}hashForWitnessV0(a,t,c,i){typeforce$1(types$4.tuple(types$4.UInt32,types$4.Buffer,types$4.Satoshi,types$4.UInt32),arguments);let o=buffer$2.Buffer.from([]),b,u=ZERO$1,l=ZERO$1,x=ZERO$1;if(i&O0.SIGHASH_ANYONECANPAY||(o=buffer$2.Buffer.allocUnsafe(36*this.ins.length),b=new bufferutils_1$2.BufferWriter(o,0),this.ins.forEach(v=>{b.writeSlice(v.hash),b.writeUInt32(v.index)}),l=bcrypto$1.hash256(o)),!(i&O0.SIGHASH_ANYONECANPAY)&&(i&31)!==O0.SIGHASH_SINGLE&&(i&31)!==O0.SIGHASH_NONE&&(o=buffer$2.Buffer.allocUnsafe(4*this.ins.length),b=new bufferutils_1$2.BufferWriter(o,0),this.ins.forEach(v=>{b.writeUInt32(v.sequence)}),x=bcrypto$1.hash256(o)),(i&31)!==O0.SIGHASH_SINGLE&&(i&31)!==O0.SIGHASH_NONE){const v=this.outs.reduce((E,S)=>E+8+varSliceSize(S.script),0);o=buffer$2.Buffer.allocUnsafe(v),b=new bufferutils_1$2.BufferWriter(o,0),this.outs.forEach(E=>{b.writeUInt64(E.value),b.writeVarSlice(E.script)}),u=bcrypto$1.hash256(o)}else if((i&31)===O0.SIGHASH_SINGLE&&a<this.outs.length){const v=this.outs[a];o=buffer$2.Buffer.allocUnsafe(8+varSliceSize(v.script)),b=new bufferutils_1$2.BufferWriter(o,0),b.writeUInt64(v.value),b.writeVarSlice(v.script),u=bcrypto$1.hash256(o)}o=buffer$2.Buffer.allocUnsafe(156+varSliceSize(t)),b=new bufferutils_1$2.BufferWriter(o,0);const g=this.ins[a];return b.writeInt32(this.version),b.writeSlice(l),b.writeSlice(x),b.writeSlice(g.hash),b.writeUInt32(g.index),b.writeVarSlice(t),b.writeUInt64(c),b.writeUInt32(g.sequence),b.writeSlice(u),b.writeUInt32(this.locktime),b.writeUInt32(i),bcrypto$1.hash256(o)}getHash(a){return a&&this.isCoinbase()?buffer$2.Buffer.alloc(32,0):bcrypto$1.hash256(this.__toBuffer(void 0,void 0,a))}getId(){return(0,bufferutils_1$2.reverseBuffer)(this.getHash(!1)).toString("hex")}toBuffer(a,t){return this.__toBuffer(a,t,!0)}toHex(){return this.toBuffer(void 0,void 0).toString("hex")}setInputScript(a,t){typeforce$1(types$4.tuple(types$4.Number,types$4.Buffer),arguments),this.ins[a].script=t}setWitness(a,t){typeforce$1(types$4.tuple(types$4.Number,[types$4.Buffer]),arguments),this.ins[a].witness=t}__toBuffer(a,t,c=!1){a||(a=buffer$2.Buffer.allocUnsafe(this.byteLength(c)));const i=new bufferutils_1$2.BufferWriter(a,t||0);i.writeInt32(this.version);const o=c&&this.hasWitnesses();return o&&(i.writeUInt8(O0.ADVANCED_TRANSACTION_MARKER),i.writeUInt8(O0.ADVANCED_TRANSACTION_FLAG)),i.writeVarInt(this.ins.length),this.ins.forEach(b=>{i.writeSlice(b.hash),i.writeUInt32(b.index),i.writeVarSlice(b.script),i.writeUInt32(b.sequence)}),i.writeVarInt(this.outs.length),this.outs.forEach(b=>{isOutput(b)?i.writeUInt64(b.value):i.writeSlice(b.valueBuffer),i.writeVarSlice(b.script)}),o&&this.ins.forEach(b=>{i.writeVector(b.witness)}),i.writeUInt32(this.locktime),t!==void 0?a.slice(t,i.offset):a}};transaction$2.Transaction=Transaction$3;Transaction$3.DEFAULT_SEQUENCE=4294967295;Transaction$3.SIGHASH_DEFAULT=0;Transaction$3.SIGHASH_ALL=1;Transaction$3.SIGHASH_NONE=2;Transaction$3.SIGHASH_SINGLE=3;Transaction$3.SIGHASH_ANYONECANPAY=128;Transaction$3.SIGHASH_OUTPUT_MASK=3;Transaction$3.SIGHASH_INPUT_MASK=128;Transaction$3.ADVANCED_TRANSACTION_MARKER=0;Transaction$3.ADVANCED_TRANSACTION_FLAG=1;Object.defineProperty(block$2,"__esModule",{value:!0});block$2.Block=void 0;const bufferutils_1$1=bufferutils,bcrypto=crypto$2,merkle_1=merkle,transaction_1$3=transaction$2,types$3=types$8,{typeforce}=types$3,errorMerkleNoTxes=new TypeError("Cannot compute merkle root for zero transactions"),errorWitnessNotSegwit=new TypeError("Cannot compute witness commit for non-segwit block");let Block$1=class ea{constructor(){this.version=1,this.prevHash=void 0,this.merkleRoot=void 0,this.timestamp=0,this.witnessCommit=void 0,this.bits=0,this.nonce=0,this.transactions=void 0}static fromBuffer(a){if(a.length<80)throw new Error("Buffer too small (< 80 bytes)");const t=new bufferutils_1$1.BufferReader(a),c=new ea;if(c.version=t.readInt32(),c.prevHash=t.readSlice(32),c.merkleRoot=t.readSlice(32),c.timestamp=t.readUInt32(),c.bits=t.readUInt32(),c.nonce=t.readUInt32(),a.length===80)return c;const i=()=>{const u=transaction_1$3.Transaction.fromBuffer(t.buffer.slice(t.offset),!0);return t.offset+=u.byteLength(),u},o=t.readVarInt();c.transactions=[];for(let u=0;u<o;++u){const l=i();c.transactions.push(l)}const b=c.getWitnessCommit();return b&&(c.witnessCommit=b),c}static fromHex(a){return ea.fromBuffer(buffer$2.Buffer.from(a,"hex"))}static calculateTarget(a){const t=((a&4278190080)>>24)-3,c=a&8388607,i=buffer$2.Buffer.alloc(32,0);return i.writeUIntBE(c,29-t,3),i}static calculateMerkleRoot(a,t){if(typeforce([{getHash:types$3.Function}],a),a.length===0)throw errorMerkleNoTxes;if(t&&!txesHaveWitnessCommit(a))throw errorWitnessNotSegwit;const c=a.map(o=>o.getHash(t)),i=(0,merkle_1.fastMerkleRoot)(c,bcrypto.hash256);return t?bcrypto.hash256(buffer$2.Buffer.concat([i,a[0].ins[0].witness[0]])):i}getWitnessCommit(){if(!txesHaveWitnessCommit(this.transactions))return null;const a=this.transactions[0].outs.filter(c=>c.script.slice(0,6).equals(buffer$2.Buffer.from("6a24aa21a9ed","hex"))).map(c=>c.script.slice(6,38));if(a.length===0)return null;const t=a[a.length-1];return t instanceof buffer$2.Buffer&&t.length===32?t:null}hasWitnessCommit(){return this.witnessCommit instanceof buffer$2.Buffer&&this.witnessCommit.length===32||this.getWitnessCommit()!==null}hasWitness(){return anyTxHasWitness(this.transactions)}weight(){const a=this.byteLength(!1,!1),t=this.byteLength(!1,!0);return a*3+t}byteLength(a,t=!0){return a||!this.transactions?80:80+bufferutils_1$1.varuint.encodingLength(this.transactions.length)+this.transactions.reduce((c,i)=>c+i.byteLength(t),0)}getHash(){return bcrypto.hash256(this.toBuffer(!0))}getId(){return(0,bufferutils_1$1.reverseBuffer)(this.getHash()).toString("hex")}getUTCDate(){const a=new Date(0);return a.setUTCSeconds(this.timestamp),a}toBuffer(a){const t=buffer$2.Buffer.allocUnsafe(this.byteLength(a)),c=new bufferutils_1$1.BufferWriter(t);return c.writeInt32(this.version),c.writeSlice(this.prevHash),c.writeSlice(this.merkleRoot),c.writeUInt32(this.timestamp),c.writeUInt32(this.bits),c.writeUInt32(this.nonce),a||!this.transactions||(bufferutils_1$1.varuint.encode(this.transactions.length,t,c.offset),c.offset+=bufferutils_1$1.varuint.encode.bytes,this.transactions.forEach(i=>{const o=i.byteLength();i.toBuffer(t,c.offset),c.offset+=o})),t}toHex(a){return this.toBuffer(a).toString("hex")}checkTxRoots(){const a=this.hasWitnessCommit();return!a&&this.hasWitness()?!1:this.__checkMerkleRoot()&&(a?this.__checkWitnessCommit():!0)}checkProofOfWork(){const a=(0,bufferutils_1$1.reverseBuffer)(this.getHash()),t=ea.calculateTarget(this.bits);return a.compare(t)<=0}__checkMerkleRoot(){if(!this.transactions)throw errorMerkleNoTxes;const a=ea.calculateMerkleRoot(this.transactions);return this.merkleRoot.compare(a)===0}__checkWitnessCommit(){if(!this.transactions)throw errorMerkleNoTxes;if(!this.hasWitnessCommit())throw errorWitnessNotSegwit;const a=ea.calculateMerkleRoot(this.transactions,!0);return this.witnessCommit.compare(a)===0}};block$2.Block=Block$1;function txesHaveWitnessCommit(e){return e instanceof Array&&e[0]&&e[0].ins&&e[0].ins instanceof Array&&e[0].ins[0]&&e[0].ins[0].witness&&e[0].ins[0].witness instanceof Array&&e[0].ins[0].witness.length>0}function anyTxHasWitness(e){return e instanceof Array&&e.some(a=>typeof a=="object"&&a.ins instanceof Array&&a.ins.some(t=>typeof t=="object"&&t.witness instanceof Array&&t.witness.length>0))}var psbt$1={},psbt={},combiner={},parser={},fromBuffer={},converter={},typeFields={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),function(a){a[a.UNSIGNED_TX=0]="UNSIGNED_TX",a[a.GLOBAL_XPUB=1]="GLOBAL_XPUB"}(e.GlobalTypes||(e.GlobalTypes={})),e.GLOBAL_TYPE_NAMES=["unsignedTx","globalXpub"],function(a){a[a.NON_WITNESS_UTXO=0]="NON_WITNESS_UTXO",a[a.WITNESS_UTXO=1]="WITNESS_UTXO",a[a.PARTIAL_SIG=2]="PARTIAL_SIG",a[a.SIGHASH_TYPE=3]="SIGHASH_TYPE",a[a.REDEEM_SCRIPT=4]="REDEEM_SCRIPT",a[a.WITNESS_SCRIPT=5]="WITNESS_SCRIPT",a[a.BIP32_DERIVATION=6]="BIP32_DERIVATION",a[a.FINAL_SCRIPTSIG=7]="FINAL_SCRIPTSIG",a[a.FINAL_SCRIPTWITNESS=8]="FINAL_SCRIPTWITNESS",a[a.POR_COMMITMENT=9]="POR_COMMITMENT",a[a.TAP_KEY_SIG=19]="TAP_KEY_SIG",a[a.TAP_SCRIPT_SIG=20]="TAP_SCRIPT_SIG",a[a.TAP_LEAF_SCRIPT=21]="TAP_LEAF_SCRIPT",a[a.TAP_BIP32_DERIVATION=22]="TAP_BIP32_DERIVATION",a[a.TAP_INTERNAL_KEY=23]="TAP_INTERNAL_KEY",a[a.TAP_MERKLE_ROOT=24]="TAP_MERKLE_ROOT"}(e.InputTypes||(e.InputTypes={})),e.INPUT_TYPE_NAMES=["nonWitnessUtxo","witnessUtxo","partialSig","sighashType","redeemScript","witnessScript","bip32Derivation","finalScriptSig","finalScriptWitness","porCommitment","tapKeySig","tapScriptSig","tapLeafScript","tapBip32Derivation","tapInternalKey","tapMerkleRoot"],function(a){a[a.REDEEM_SCRIPT=0]="REDEEM_SCRIPT",a[a.WITNESS_SCRIPT=1]="WITNESS_SCRIPT",a[a.BIP32_DERIVATION=2]="BIP32_DERIVATION",a[a.TAP_INTERNAL_KEY=5]="TAP_INTERNAL_KEY",a[a.TAP_TREE=6]="TAP_TREE",a[a.TAP_BIP32_DERIVATION=7]="TAP_BIP32_DERIVATION"}(e.OutputTypes||(e.OutputTypes={})),e.OUTPUT_TYPE_NAMES=["redeemScript","witnessScript","bip32Derivation","tapInternalKey","tapTree","tapBip32Derivation"]})(typeFields);var globalXpub$1={};Object.defineProperty(globalXpub$1,"__esModule",{value:!0});const typeFields_1$g=typeFields,range$2=e=>[...Array(e).keys()];function decode$i(e){if(e.key[0]!==typeFields_1$g.GlobalTypes.GLOBAL_XPUB)throw new Error("Decode Error: could not decode globalXpub with key 0x"+e.key.toString("hex"));if(e.key.length!==79||![2,3].includes(e.key[46]))throw new Error("Decode Error: globalXpub has invalid extended pubkey in key 0x"+e.key.toString("hex"));if(e.value.length/4%1!==0)throw new Error("Decode Error: Global GLOBAL_XPUB value length should be multiple of 4");const a=e.key.slice(1),t={masterFingerprint:e.value.slice(0,4),extendedPubkey:a,path:"m"};for(const c of range$2(e.value.length/4-1)){const i=e.value.readUInt32LE(c*4+4),o=!!(i&2147483648),b=i&2147483647;t.path+="/"+b.toString(10)+(o?"'":"")}return t}globalXpub$1.decode=decode$i;function encode$j(e){const a=buffer$2.Buffer.from([typeFields_1$g.GlobalTypes.GLOBAL_XPUB]),t=buffer$2.Buffer.concat([a,e.extendedPubkey]),c=e.path.split("/"),i=buffer$2.Buffer.allocUnsafe(c.length*4);e.masterFingerprint.copy(i,0);let o=4;return c.slice(1).forEach(b=>{const u=b.slice(-1)==="'";let l=2147483647&parseInt(u?b.slice(0,-1):b,10);u&&(l+=2147483648),i.writeUInt32LE(l,o),o+=4}),{key:t,value:i}}globalXpub$1.encode=encode$j;globalXpub$1.expected="{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }";function check$g(e){const a=e.extendedPubkey,t=e.masterFingerprint,c=e.path;return buffer$2.Buffer.isBuffer(a)&&a.length===78&&[2,3].indexOf(a[45])>-1&&buffer$2.Buffer.isBuffer(t)&&t.length===4&&typeof c=="string"&&!!c.match(/^m(\/\d+'?)*$/)}globalXpub$1.check=check$g;function canAddToArray$3(e,a,t){const c=a.extendedPubkey.toString("hex");return t.has(c)?!1:(t.add(c),e.filter(i=>i.extendedPubkey.equals(a.extendedPubkey)).length===0)}globalXpub$1.canAddToArray=canAddToArray$3;var unsignedTx$1={};Object.defineProperty(unsignedTx$1,"__esModule",{value:!0});const typeFields_1$f=typeFields;function encode$i(e){return{key:buffer$2.Buffer.from([typeFields_1$f.GlobalTypes.UNSIGNED_TX]),value:e.toBuffer()}}unsignedTx$1.encode=encode$i;var finalScriptSig$1={};Object.defineProperty(finalScriptSig$1,"__esModule",{value:!0});const typeFields_1$e=typeFields;function decode$h(e){if(e.key[0]!==typeFields_1$e.InputTypes.FINAL_SCRIPTSIG)throw new Error("Decode Error: could not decode finalScriptSig with key 0x"+e.key.toString("hex"));return e.value}finalScriptSig$1.decode=decode$h;function encode$h(e){return{key:buffer$2.Buffer.from([typeFields_1$e.InputTypes.FINAL_SCRIPTSIG]),value:e}}finalScriptSig$1.encode=encode$h;finalScriptSig$1.expected="Buffer";function check$f(e){return buffer$2.Buffer.isBuffer(e)}finalScriptSig$1.check=check$f;function canAdd$8(e,a){return!!e&&!!a&&e.finalScriptSig===void 0}finalScriptSig$1.canAdd=canAdd$8;var finalScriptWitness$1={};Object.defineProperty(finalScriptWitness$1,"__esModule",{value:!0});const typeFields_1$d=typeFields;function decode$g(e){if(e.key[0]!==typeFields_1$d.InputTypes.FINAL_SCRIPTWITNESS)throw new Error("Decode Error: could not decode finalScriptWitness with key 0x"+e.key.toString("hex"));return e.value}finalScriptWitness$1.decode=decode$g;function encode$g(e){return{key:buffer$2.Buffer.from([typeFields_1$d.InputTypes.FINAL_SCRIPTWITNESS]),value:e}}finalScriptWitness$1.encode=encode$g;finalScriptWitness$1.expected="Buffer";function check$e(e){return buffer$2.Buffer.isBuffer(e)}finalScriptWitness$1.check=check$e;function canAdd$7(e,a){return!!e&&!!a&&e.finalScriptWitness===void 0}finalScriptWitness$1.canAdd=canAdd$7;var nonWitnessUtxo$1={};Object.defineProperty(nonWitnessUtxo$1,"__esModule",{value:!0});const typeFields_1$c=typeFields;function decode$f(e){if(e.key[0]!==typeFields_1$c.InputTypes.NON_WITNESS_UTXO)throw new Error("Decode Error: could not decode nonWitnessUtxo with key 0x"+e.key.toString("hex"));return e.value}nonWitnessUtxo$1.decode=decode$f;function encode$f(e){return{key:buffer$2.Buffer.from([typeFields_1$c.InputTypes.NON_WITNESS_UTXO]),value:e}}nonWitnessUtxo$1.encode=encode$f;nonWitnessUtxo$1.expected="Buffer";function check$d(e){return buffer$2.Buffer.isBuffer(e)}nonWitnessUtxo$1.check=check$d;function canAdd$6(e,a){return!!e&&!!a&&e.nonWitnessUtxo===void 0}nonWitnessUtxo$1.canAdd=canAdd$6;var partialSig$1={};Object.defineProperty(partialSig$1,"__esModule",{value:!0});const typeFields_1$b=typeFields;function decode$e(e){if(e.key[0]!==typeFields_1$b.InputTypes.PARTIAL_SIG)throw new Error("Decode Error: could not decode partialSig with key 0x"+e.key.toString("hex"));if(!(e.key.length===34||e.key.length===66)||![2,3,4].includes(e.key[1]))throw new Error("Decode Error: partialSig has invalid pubkey in key 0x"+e.key.toString("hex"));return{pubkey:e.key.slice(1),signature:e.value}}partialSig$1.decode=decode$e;function encode$e(e){const a=buffer$2.Buffer.from([typeFields_1$b.InputTypes.PARTIAL_SIG]);return{key:buffer$2.Buffer.concat([a,e.pubkey]),value:e.signature}}partialSig$1.encode=encode$e;partialSig$1.expected="{ pubkey: Buffer; signature: Buffer; }";function check$c(e){return buffer$2.Buffer.isBuffer(e.pubkey)&&buffer$2.Buffer.isBuffer(e.signature)&&[33,65].includes(e.pubkey.length)&&[2,3,4].includes(e.pubkey[0])&&isDerSigWithSighash(e.signature)}partialSig$1.check=check$c;function isDerSigWithSighash(e){if(!buffer$2.Buffer.isBuffer(e)||e.length<9||e[0]!==48||e.length!==e[1]+3||e[2]!==2)return!1;const a=e[3];if(a>33||a<1||e[3+a+1]!==2)return!1;const t=e[3+a+2];return!(t>33||t<1||e.length!==3+a+2+t+2)}function canAddToArray$2(e,a,t){const c=a.pubkey.toString("hex");return t.has(c)?!1:(t.add(c),e.filter(i=>i.pubkey.equals(a.pubkey)).length===0)}partialSig$1.canAddToArray=canAddToArray$2;var porCommitment$1={};Object.defineProperty(porCommitment$1,"__esModule",{value:!0});const typeFields_1$a=typeFields;function decode$d(e){if(e.key[0]!==typeFields_1$a.InputTypes.POR_COMMITMENT)throw new Error("Decode Error: could not decode porCommitment with key 0x"+e.key.toString("hex"));return e.value.toString("utf8")}porCommitment$1.decode=decode$d;function encode$d(e){return{key:buffer$2.Buffer.from([typeFields_1$a.InputTypes.POR_COMMITMENT]),value:buffer$2.Buffer.from(e,"utf8")}}porCommitment$1.encode=encode$d;porCommitment$1.expected="string";function check$b(e){return typeof e=="string"}porCommitment$1.check=check$b;function canAdd$5(e,a){return!!e&&!!a&&e.porCommitment===void 0}porCommitment$1.canAdd=canAdd$5;var sighashType$1={};Object.defineProperty(sighashType$1,"__esModule",{value:!0});const typeFields_1$9=typeFields;function decode$c(e){if(e.key[0]!==typeFields_1$9.InputTypes.SIGHASH_TYPE)throw new Error("Decode Error: could not decode sighashType with key 0x"+e.key.toString("hex"));return e.value.readUInt32LE(0)}sighashType$1.decode=decode$c;function encode$c(e){const a=buffer$2.Buffer.from([typeFields_1$9.InputTypes.SIGHASH_TYPE]),t=buffer$2.Buffer.allocUnsafe(4);return t.writeUInt32LE(e,0),{key:a,value:t}}sighashType$1.encode=encode$c;sighashType$1.expected="number";function check$a(e){return typeof e=="number"}sighashType$1.check=check$a;function canAdd$4(e,a){return!!e&&!!a&&e.sighashType===void 0}sighashType$1.canAdd=canAdd$4;var tapKeySig$1={};Object.defineProperty(tapKeySig$1,"__esModule",{value:!0});const typeFields_1$8=typeFields;function decode$b(e){if(e.key[0]!==typeFields_1$8.InputTypes.TAP_KEY_SIG||e.key.length!==1)throw new Error("Decode Error: could not decode tapKeySig with key 0x"+e.key.toString("hex"));if(!check$9(e.value))throw new Error("Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature");return e.value}tapKeySig$1.decode=decode$b;function encode$b(e){return{key:buffer$2.Buffer.from([typeFields_1$8.InputTypes.TAP_KEY_SIG]),value:e}}tapKeySig$1.encode=encode$b;tapKeySig$1.expected="Buffer";function check$9(e){return buffer$2.Buffer.isBuffer(e)&&(e.length===64||e.length===65)}tapKeySig$1.check=check$9;function canAdd$3(e,a){return!!e&&!!a&&e.tapKeySig===void 0}tapKeySig$1.canAdd=canAdd$3;var tapLeafScript$1={};Object.defineProperty(tapLeafScript$1,"__esModule",{value:!0});const typeFields_1$7=typeFields;function decode$a(e){if(e.key[0]!==typeFields_1$7.InputTypes.TAP_LEAF_SCRIPT)throw new Error("Decode Error: could not decode tapLeafScript with key 0x"+e.key.toString("hex"));if((e.key.length-2)%32!==0)throw new Error("Decode Error: tapLeafScript has invalid control block in key 0x"+e.key.toString("hex"));const a=e.value[e.value.length-1];if((e.key[1]&254)!==a)throw new Error("Decode Error: tapLeafScript bad leaf version in key 0x"+e.key.toString("hex"));const t=e.value.slice(0,-1);return{controlBlock:e.key.slice(1),script:t,leafVersion:a}}tapLeafScript$1.decode=decode$a;function encode$a(e){const a=buffer$2.Buffer.from([typeFields_1$7.InputTypes.TAP_LEAF_SCRIPT]),t=buffer$2.Buffer.from([e.leafVersion]);return{key:buffer$2.Buffer.concat([a,e.controlBlock]),value:buffer$2.Buffer.concat([e.script,t])}}tapLeafScript$1.encode=encode$a;tapLeafScript$1.expected="{ controlBlock: Buffer; leafVersion: number, script: Buffer; }";function check$8(e){return buffer$2.Buffer.isBuffer(e.controlBlock)&&(e.controlBlock.length-1)%32===0&&(e.controlBlock[0]&254)===e.leafVersion&&buffer$2.Buffer.isBuffer(e.script)}tapLeafScript$1.check=check$8;function canAddToArray$1(e,a,t){const c=a.controlBlock.toString("hex");return t.has(c)?!1:(t.add(c),e.filter(i=>i.controlBlock.equals(a.controlBlock)).length===0)}tapLeafScript$1.canAddToArray=canAddToArray$1;var tapMerkleRoot$1={};Object.defineProperty(tapMerkleRoot$1,"__esModule",{value:!0});const typeFields_1$6=typeFields;function decode$9(e){if(e.key[0]!==typeFields_1$6.InputTypes.TAP_MERKLE_ROOT||e.key.length!==1)throw new Error("Decode Error: could not decode tapMerkleRoot with key 0x"+e.key.toString("hex"));if(!check$7(e.value))throw new Error("Decode Error: tapMerkleRoot not a 32-byte hash");return e.value}tapMerkleRoot$1.decode=decode$9;function encode$9(e){return{key:buffer$2.Buffer.from([typeFields_1$6.InputTypes.TAP_MERKLE_ROOT]),value:e}}tapMerkleRoot$1.encode=encode$9;tapMerkleRoot$1.expected="Buffer";function check$7(e){return buffer$2.Buffer.isBuffer(e)&&e.length===32}tapMerkleRoot$1.check=check$7;function canAdd$2(e,a){return!!e&&!!a&&e.tapMerkleRoot===void 0}tapMerkleRoot$1.canAdd=canAdd$2;var tapScriptSig$1={};Object.defineProperty(tapScriptSig$1,"__esModule",{value:!0});const typeFields_1$5=typeFields;function decode$8(e){if(e.key[0]!==typeFields_1$5.InputTypes.TAP_SCRIPT_SIG)throw new Error("Decode Error: could not decode tapScriptSig with key 0x"+e.key.toString("hex"));if(e.key.length!==65)throw new Error("Decode Error: tapScriptSig has invalid key 0x"+e.key.toString("hex"));if(e.value.length!==64&&e.value.length!==65)throw new Error("Decode Error: tapScriptSig has invalid signature in key 0x"+e.key.toString("hex"));const a=e.key.slice(1,33),t=e.key.slice(33);return{pubkey:a,leafHash:t,signature:e.value}}tapScriptSig$1.decode=decode$8;function encode$8(e){const a=buffer$2.Buffer.from([typeFields_1$5.InputTypes.TAP_SCRIPT_SIG]);return{key:buffer$2.Buffer.concat([a,e.pubkey,e.leafHash]),value:e.signature}}tapScriptSig$1.encode=encode$8;tapScriptSig$1.expected="{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }";function check$6(e){return buffer$2.Buffer.isBuffer(e.pubkey)&&buffer$2.Buffer.isBuffer(e.leafHash)&&buffer$2.Buffer.isBuffer(e.signature)&&e.pubkey.length===32&&e.leafHash.length===32&&(e.signature.length===64||e.signature.length===65)}tapScriptSig$1.check=check$6;function canAddToArray(e,a,t){const c=a.pubkey.toString("hex")+a.leafHash.toString("hex");return t.has(c)?!1:(t.add(c),e.filter(i=>i.pubkey.equals(a.pubkey)&&i.leafHash.equals(a.leafHash)).length===0)}tapScriptSig$1.canAddToArray=canAddToArray;var witnessUtxo$1={},tools={},varint$1={};Object.defineProperty(varint$1,"__esModule",{value:!0});const MAX_SAFE_INTEGER=9007199254740991;function checkUInt53(e){if(e<0||e>MAX_SAFE_INTEGER||e%1!==0)throw new RangeError("value out of range")}function encode$7(e,a,t){if(checkUInt53(e),a||(a=buffer$2.Buffer.allocUnsafe(encodingLength(e))),!buffer$2.Buffer.isBuffer(a))throw new TypeError("buffer must be a Buffer instance");return t||(t=0),e<253?(a.writeUInt8(e,t),Object.assign(encode$7,{bytes:1})):e<=65535?(a.writeUInt8(253,t),a.writeUInt16LE(e,t+1),Object.assign(encode$7,{bytes:3})):e<=4294967295?(a.writeUInt8(254,t),a.writeUInt32LE(e,t+1),Object.assign(encode$7,{bytes:5})):(a.writeUInt8(255,t),a.writeUInt32LE(e>>>0,t+1),a.writeUInt32LE(e/4294967296|0,t+5),Object.assign(encode$7,{bytes:9})),a}varint$1.encode=encode$7;function decode$7(e,a){if(!buffer$2.Buffer.isBuffer(e))throw new TypeError("buffer must be a Buffer instance");a||(a=0);const t=e.readUInt8(a);if(t<253)return Object.assign(decode$7,{bytes:1}),t;if(t===253)return Object.assign(decode$7,{bytes:3}),e.readUInt16LE(a+1);if(t===254)return Object.assign(decode$7,{bytes:5}),e.readUInt32LE(a+1);{Object.assign(decode$7,{bytes:9});const c=e.readUInt32LE(a+1),o=e.readUInt32LE(a+5)*4294967296+c;return checkUInt53(o),o}}varint$1.decode=decode$7;function encodingLength(e){return checkUInt53(e),e<253?1:e<=65535?3:e<=4294967295?5:9}varint$1.encodingLength=encodingLength;Object.defineProperty(tools,"__esModule",{value:!0});const varuint$6=varint$1;tools.range=e=>[...Array(e).keys()];function reverseBuffer(e){if(e.length<1)return e;let a=e.length-1,t=0;for(let c=0;c<e.length/2;c++)t=e[c],e[c]=e[a],e[a]=t,a--;return e}tools.reverseBuffer=reverseBuffer;function keyValsToBuffer(e){const a=e.map(keyValToBuffer);return a.push(buffer$2.Buffer.from([0])),buffer$2.Buffer.concat(a)}tools.keyValsToBuffer=keyValsToBuffer;function keyValToBuffer(e){const a=e.key.length,t=e.value.length,c=varuint$6.encodingLength(a),i=varuint$6.encodingLength(t),o=buffer$2.Buffer.allocUnsafe(c+a+i+t);return varuint$6.encode(a,o,0),e.key.copy(o,c),varuint$6.encode(t,o,c+a),e.value.copy(o,c+a+i),o}tools.keyValToBuffer=keyValToBuffer;function verifuint(e,a){if(typeof e!="number")throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>a)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}function readUInt64LE(e,a){const t=e.readUInt32LE(a);let c=e.readUInt32LE(a+4);return c*=4294967296,verifuint(c+t,9007199254740991),c+t}tools.readUInt64LE=readUInt64LE;function writeUInt64LE(e,a,t){return verifuint(a,9007199254740991),e.writeInt32LE(a&-1,t),e.writeUInt32LE(Math.floor(a/4294967296),t+4),t+8}tools.writeUInt64LE=writeUInt64LE;Object.defineProperty(witnessUtxo$1,"__esModule",{value:!0});const typeFields_1$4=typeFields,tools_1$2=tools,varuint$5=varint$1;function decode$6(e){if(e.key[0]!==typeFields_1$4.InputTypes.WITNESS_UTXO)throw new Error("Decode Error: could not decode witnessUtxo with key 0x"+e.key.toString("hex"));const a=tools_1$2.readUInt64LE(e.value,0);let t=8;const c=varuint$5.decode(e.value,t);t+=varuint$5.encodingLength(c);const i=e.value.slice(t);if(i.length!==c)throw new Error("Decode Error: WITNESS_UTXO script is not proper length");return{script:i,value:a}}witnessUtxo$1.decode=decode$6;function encode$6(e){const{script:a,value:t}=e,c=varuint$5.encodingLength(a.length),i=buffer$2.Buffer.allocUnsafe(8+c+a.length);return tools_1$2.writeUInt64LE(i,t,0),varuint$5.encode(a.length,i,8),a.copy(i,8+c),{key:buffer$2.Buffer.from([typeFields_1$4.InputTypes.WITNESS_UTXO]),value:i}}witnessUtxo$1.encode=encode$6;witnessUtxo$1.expected="{ script: Buffer; value: number; }";function check$5(e){return buffer$2.Buffer.isBuffer(e.script)&&typeof e.value=="number"}witnessUtxo$1.check=check$5;function canAdd$1(e,a){return!!e&&!!a&&e.witnessUtxo===void 0}witnessUtxo$1.canAdd=canAdd$1;var tapTree$1={};Object.defineProperty(tapTree$1,"__esModule",{value:!0});const typeFields_1$3=typeFields,varuint$4=varint$1;function decode$5(e){if(e.key[0]!==typeFields_1$3.OutputTypes.TAP_TREE||e.key.length!==1)throw new Error("Decode Error: could not decode tapTree with key 0x"+e.key.toString("hex"));let a=0;const t=[];for(;a<e.value.length;){const c=e.value[a++],i=e.value[a++],o=varuint$4.decode(e.value,a);a+=varuint$4.encodingLength(o),t.push({depth:c,leafVersion:i,script:e.value.slice(a,a+o)}),a+=o}return{leaves:t}}tapTree$1.decode=decode$5;function encode$5(e){const a=buffer$2.Buffer.from([typeFields_1$3.OutputTypes.TAP_TREE]),t=[].concat(...e.leaves.map(c=>[buffer$2.Buffer.of(c.depth,c.leafVersion),varuint$4.encode(c.script.length),c.script]));return{key:a,value:buffer$2.Buffer.concat(t)}}tapTree$1.encode=encode$5;tapTree$1.expected="{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }";function check$4(e){return Array.isArray(e.leaves)&&e.leaves.every(a=>a.depth>=0&&a.depth<=128&&(a.leafVersion&254)===a.leafVersion&&buffer$2.Buffer.isBuffer(a.script))}tapTree$1.check=check$4;function canAdd(e,a){return!!e&&!!a&&e.tapTree===void 0}tapTree$1.canAdd=canAdd;var bip32Derivation$2={};Object.defineProperty(bip32Derivation$2,"__esModule",{value:!0});const range$1=e=>[...Array(e).keys()],isValidDERKey=e=>e.length===33&&[2,3].includes(e[0])||e.length===65&&e[0]===4;function makeConverter$4(e,a=isValidDERKey){function t(u){if(u.key[0]!==e)throw new Error("Decode Error: could not decode bip32Derivation with key 0x"+u.key.toString("hex"));const l=u.key.slice(1);if(!a(l))throw new Error("Decode Error: bip32Derivation has invalid pubkey in key 0x"+u.key.toString("hex"));if(u.value.length/4%1!==0)throw new Error("Decode Error: Input BIP32_DERIVATION value length should be multiple of 4");const x={masterFingerprint:u.value.slice(0,4),pubkey:l,path:"m"};for(const g of range$1(u.value.length/4-1)){const v=u.value.readUInt32LE(g*4+4),E=!!(v&2147483648),S=v&2147483647;x.path+="/"+S.toString(10)+(E?"'":"")}return x}function c(u){const l=buffer$2.Buffer.from([e]),x=buffer$2.Buffer.concat([l,u.pubkey]),g=u.path.split("/"),v=buffer$2.Buffer.allocUnsafe(g.length*4);u.masterFingerprint.copy(v,0);let E=4;return g.slice(1).forEach(S=>{const T=S.slice(-1)==="'";let I=2147483647&parseInt(T?S.slice(0,-1):S,10);T&&(I+=2147483648),v.writeUInt32LE(I,E),E+=4}),{key:x,value:v}}const i="{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }";function o(u){return buffer$2.Buffer.isBuffer(u.pubkey)&&buffer$2.Buffer.isBuffer(u.masterFingerprint)&&typeof u.path=="string"&&a(u.pubkey)&&u.masterFingerprint.length===4}function b(u,l,x){const g=l.pubkey.toString("hex");return x.has(g)?!1:(x.add(g),u.filter(v=>v.pubkey.equals(l.pubkey)).length===0)}return{decode:t,encode:c,check:o,expected:i,canAddToArray:b}}bip32Derivation$2.makeConverter=makeConverter$4;var checkPubkey$1={};Object.defineProperty(checkPubkey$1,"__esModule",{value:!0});function makeChecker(e){return a;function a(t){let c;if(e.includes(t.key[0])&&(c=t.key.slice(1),!(c.length===33||c.length===65)||![2,3,4].includes(c[0])))throw new Error("Format Error: invalid pubkey in key 0x"+t.key.toString("hex"));return c}}checkPubkey$1.makeChecker=makeChecker;var redeemScript$1={};Object.defineProperty(redeemScript$1,"__esModule",{value:!0});function makeConverter$3(e){function a(b){if(b.key[0]!==e)throw new Error("Decode Error: could not decode redeemScript with key 0x"+b.key.toString("hex"));return b.value}function t(b){return{key:buffer$2.Buffer.from([e]),value:b}}const c="Buffer";function i(b){return buffer$2.Buffer.isBuffer(b)}function o(b,u){return!!b&&!!u&&b.redeemScript===void 0}return{decode:a,encode:t,check:i,expected:c,canAdd:o}}redeemScript$1.makeConverter=makeConverter$3;var tapBip32Derivation$1={};Object.defineProperty(tapBip32Derivation$1,"__esModule",{value:!0});const varuint$3=varint$1,bip32Derivation$1=bip32Derivation$2,isValidBIP340Key=e=>e.length===32;function makeConverter$2(e){const a=bip32Derivation$1.makeConverter(e,isValidBIP340Key);function t(b){const u=varuint$3.decode(b.value),l=varuint$3.encodingLength(u),x=a.decode({key:b.key,value:b.value.slice(l+u*32)}),g=new Array(u);for(let v=0,E=l;v<u;v++,E+=32)g[v]=b.value.slice(E,E+32);return Object.assign({},x,{leafHashes:g})}function c(b){const u=a.encode(b),l=varuint$3.encodingLength(b.leafHashes.length),x=buffer$2.Buffer.allocUnsafe(l);varuint$3.encode(b.leafHashes.length,x);const g=buffer$2.Buffer.concat([x,...b.leafHashes,u.value]);return Object.assign({},u,{value:g})}const i="{ masterFingerprint: Buffer; pubkey: Buffer; path: string; leafHashes: Buffer[]; }";function o(b){return Array.isArray(b.leafHashes)&&b.leafHashes.every(u=>buffer$2.Buffer.isBuffer(u)&&u.length===32)&&a.check(b)}return{decode:t,encode:c,check:o,expected:i,canAddToArray:a.canAddToArray}}tapBip32Derivation$1.makeConverter=makeConverter$2;var tapInternalKey$1={};Object.defineProperty(tapInternalKey$1,"__esModule",{value:!0});function makeConverter$1(e){function a(b){if(b.key[0]!==e||b.key.length!==1)throw new Error("Decode Error: could not decode tapInternalKey with key 0x"+b.key.toString("hex"));if(b.value.length!==32)throw new Error("Decode Error: tapInternalKey not a 32-byte x-only pubkey");return b.value}function t(b){return{key:buffer$2.Buffer.from([e]),value:b}}const c="Buffer";function i(b){return buffer$2.Buffer.isBuffer(b)&&b.length===32}function o(b,u){return!!b&&!!u&&b.tapInternalKey===void 0}return{decode:a,encode:t,check:i,expected:c,canAdd:o}}tapInternalKey$1.makeConverter=makeConverter$1;var witnessScript$1={};Object.defineProperty(witnessScript$1,"__esModule",{value:!0});function makeConverter(e){function a(b){if(b.key[0]!==e)throw new Error("Decode Error: could not decode witnessScript with key 0x"+b.key.toString("hex"));return b.value}function t(b){return{key:buffer$2.Buffer.from([e]),value:b}}const c="Buffer";function i(b){return buffer$2.Buffer.isBuffer(b)}function o(b,u){return!!b&&!!u&&b.witnessScript===void 0}return{decode:a,encode:t,check:i,expected:c,canAdd:o}}witnessScript$1.makeConverter=makeConverter;Object.defineProperty(converter,"__esModule",{value:!0});const typeFields_1$2=typeFields,globalXpub=globalXpub$1,unsignedTx=unsignedTx$1,finalScriptSig=finalScriptSig$1,finalScriptWitness=finalScriptWitness$1,nonWitnessUtxo=nonWitnessUtxo$1,partialSig=partialSig$1,porCommitment=porCommitment$1,sighashType=sighashType$1,tapKeySig=tapKeySig$1,tapLeafScript=tapLeafScript$1,tapMerkleRoot=tapMerkleRoot$1,tapScriptSig=tapScriptSig$1,witnessUtxo=witnessUtxo$1,tapTree=tapTree$1,bip32Derivation=bip32Derivation$2,checkPubkey=checkPubkey$1,redeemScript=redeemScript$1,tapBip32Derivation=tapBip32Derivation$1,tapInternalKey=tapInternalKey$1,witnessScript=witnessScript$1,globals={unsignedTx,globalXpub,checkPubkey:checkPubkey.makeChecker([])};converter.globals=globals;const inputs={nonWitnessUtxo,partialSig,sighashType,finalScriptSig,finalScriptWitness,porCommitment,witnessUtxo,bip32Derivation:bip32Derivation.makeConverter(typeFields_1$2.InputTypes.BIP32_DERIVATION),redeemScript:redeemScript.makeConverter(typeFields_1$2.InputTypes.REDEEM_SCRIPT),witnessScript:witnessScript.makeConverter(typeFields_1$2.InputTypes.WITNESS_SCRIPT),checkPubkey:checkPubkey.makeChecker([typeFields_1$2.InputTypes.PARTIAL_SIG,typeFields_1$2.InputTypes.BIP32_DERIVATION]),tapKeySig,tapScriptSig,tapLeafScript,tapBip32Derivation:tapBip32Derivation.makeConverter(typeFields_1$2.InputTypes.TAP_BIP32_DERIVATION),tapInternalKey:tapInternalKey.makeConverter(typeFields_1$2.InputTypes.TAP_INTERNAL_KEY),tapMerkleRoot};converter.inputs=inputs;const outputs={bip32Derivation:bip32Derivation.makeConverter(typeFields_1$2.OutputTypes.BIP32_DERIVATION),redeemScript:redeemScript.makeConverter(typeFields_1$2.OutputTypes.REDEEM_SCRIPT),witnessScript:witnessScript.makeConverter(typeFields_1$2.OutputTypes.WITNESS_SCRIPT),checkPubkey:checkPubkey.makeChecker([typeFields_1$2.OutputTypes.BIP32_DERIVATION]),tapBip32Derivation:tapBip32Derivation.makeConverter(typeFields_1$2.OutputTypes.TAP_BIP32_DERIVATION),tapTree,tapInternalKey:tapInternalKey.makeConverter(typeFields_1$2.OutputTypes.TAP_INTERNAL_KEY)};converter.outputs=outputs;Object.defineProperty(fromBuffer,"__esModule",{value:!0});const convert$6=converter,tools_1$1=tools,varuint$2=varint$1,typeFields_1$1=typeFields;function psbtFromBuffer(e,a){let t=0;function c(){const A=varuint$2.decode(e,t);t+=varuint$2.encodingLength(A);const C=e.slice(t,t+A);return t+=A,C}function i(){const A=e.readUInt32BE(t);return t+=4,A}function o(){const A=e.readUInt8(t);return t+=1,A}function b(){const A=c(),C=c();return{key:A,value:C}}function u(){if(t>=e.length)throw new Error("Format Error: Unexpected End of PSBT");const A=e.readUInt8(t)===0;return A&&t++,A}if(i()!==1886610036)throw new Error("Format Error: Invalid Magic Number");if(o()!==255)throw new Error("Format Error: Magic Number must be followed by 0xff separator");const l=[],x={};for(;!u();){const A=b(),C=A.key.toString("hex");if(x[C])throw new Error("Format Error: Keys must be unique for global keymap: key "+C);x[C]=1,l.push(A)}const g=l.filter(A=>A.key[0]===typeFields_1$1.GlobalTypes.UNSIGNED_TX);if(g.length!==1)throw new Error("Format Error: Only one UNSIGNED_TX allowed");const v=a(g[0].value),{inputCount:E,outputCount:S}=v.getInputOutputCounts(),T=[],I=[];for(const A of tools_1$1.range(E)){const C={},O=[];for(;!u();){const R=b(),B=R.key.toString("hex");if(C[B])throw new Error("Format Error: Keys must be unique for each input: input index "+A+" key "+B);C[B]=1,O.push(R)}T.push(O)}for(const A of tools_1$1.range(S)){const C={},O=[];for(;!u();){const R=b(),B=R.key.toString("hex");if(C[B])throw new Error("Format Error: Keys must be unique for each output: output index "+A+" key "+B);C[B]=1,O.push(R)}I.push(O)}return psbtFromKeyVals(v,{globalMapKeyVals:l,inputKeyVals:T,outputKeyVals:I})}fromBuffer.psbtFromBuffer=psbtFromBuffer;function checkKeyBuffer(e,a,t){if(!a.equals(buffer$2.Buffer.from([t])))throw new Error(`Format Error: Invalid ${e} key: ${a.toString("hex")}`)}fromBuffer.checkKeyBuffer=checkKeyBuffer;function psbtFromKeyVals(e,{globalMapKeyVals:a,inputKeyVals:t,outputKeyVals:c}){const i={unsignedTx:e};let o=0;for(const g of a)switch(g.key[0]){case typeFields_1$1.GlobalTypes.UNSIGNED_TX:if(checkKeyBuffer("global",g.key,typeFields_1$1.GlobalTypes.UNSIGNED_TX),o>0)throw new Error("Format Error: GlobalMap has multiple UNSIGNED_TX");o++;break;case typeFields_1$1.GlobalTypes.GLOBAL_XPUB:i.globalXpub===void 0&&(i.globalXpub=[]),i.globalXpub.push(convert$6.globals.globalXpub.decode(g));break;default:i.unknownKeyVals||(i.unknownKeyVals=[]),i.unknownKeyVals.push(g)}const b=t.length,u=c.length,l=[],x=[];for(const g of tools_1$1.range(b)){const v={};for(const E of t[g])switch(convert$6.inputs.checkPubkey(E),E.key[0]){case typeFields_1$1.InputTypes.NON_WITNESS_UTXO:if(checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.NON_WITNESS_UTXO),v.nonWitnessUtxo!==void 0)throw new Error("Format Error: Input has multiple NON_WITNESS_UTXO");v.nonWitnessUtxo=convert$6.inputs.nonWitnessUtxo.decode(E);break;case typeFields_1$1.InputTypes.WITNESS_UTXO:if(checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.WITNESS_UTXO),v.witnessUtxo!==void 0)throw new Error("Format Error: Input has multiple WITNESS_UTXO");v.witnessUtxo=convert$6.inputs.witnessUtxo.decode(E);break;case typeFields_1$1.InputTypes.PARTIAL_SIG:v.partialSig===void 0&&(v.partialSig=[]),v.partialSig.push(convert$6.inputs.partialSig.decode(E));break;case typeFields_1$1.InputTypes.SIGHASH_TYPE:if(checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.SIGHASH_TYPE),v.sighashType!==void 0)throw new Error("Format Error: Input has multiple SIGHASH_TYPE");v.sighashType=convert$6.inputs.sighashType.decode(E);break;case typeFields_1$1.InputTypes.REDEEM_SCRIPT:if(checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.REDEEM_SCRIPT),v.redeemScript!==void 0)throw new Error("Format Error: Input has multiple REDEEM_SCRIPT");v.redeemScript=convert$6.inputs.redeemScript.decode(E);break;case typeFields_1$1.InputTypes.WITNESS_SCRIPT:if(checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.WITNESS_SCRIPT),v.witnessScript!==void 0)throw new Error("Format Error: Input has multiple WITNESS_SCRIPT");v.witnessScript=convert$6.inputs.witnessScript.decode(E);break;case typeFields_1$1.InputTypes.BIP32_DERIVATION:v.bip32Derivation===void 0&&(v.bip32Derivation=[]),v.bip32Derivation.push(convert$6.inputs.bip32Derivation.decode(E));break;case typeFields_1$1.InputTypes.FINAL_SCRIPTSIG:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.FINAL_SCRIPTSIG),v.finalScriptSig=convert$6.inputs.finalScriptSig.decode(E);break;case typeFields_1$1.InputTypes.FINAL_SCRIPTWITNESS:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.FINAL_SCRIPTWITNESS),v.finalScriptWitness=convert$6.inputs.finalScriptWitness.decode(E);break;case typeFields_1$1.InputTypes.POR_COMMITMENT:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.POR_COMMITMENT),v.porCommitment=convert$6.inputs.porCommitment.decode(E);break;case typeFields_1$1.InputTypes.TAP_KEY_SIG:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.TAP_KEY_SIG),v.tapKeySig=convert$6.inputs.tapKeySig.decode(E);break;case typeFields_1$1.InputTypes.TAP_SCRIPT_SIG:v.tapScriptSig===void 0&&(v.tapScriptSig=[]),v.tapScriptSig.push(convert$6.inputs.tapScriptSig.decode(E));break;case typeFields_1$1.InputTypes.TAP_LEAF_SCRIPT:v.tapLeafScript===void 0&&(v.tapLeafScript=[]),v.tapLeafScript.push(convert$6.inputs.tapLeafScript.decode(E));break;case typeFields_1$1.InputTypes.TAP_BIP32_DERIVATION:v.tapBip32Derivation===void 0&&(v.tapBip32Derivation=[]),v.tapBip32Derivation.push(convert$6.inputs.tapBip32Derivation.decode(E));break;case typeFields_1$1.InputTypes.TAP_INTERNAL_KEY:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.TAP_INTERNAL_KEY),v.tapInternalKey=convert$6.inputs.tapInternalKey.decode(E);break;case typeFields_1$1.InputTypes.TAP_MERKLE_ROOT:checkKeyBuffer("input",E.key,typeFields_1$1.InputTypes.TAP_MERKLE_ROOT),v.tapMerkleRoot=convert$6.inputs.tapMerkleRoot.decode(E);break;default:v.unknownKeyVals||(v.unknownKeyVals=[]),v.unknownKeyVals.push(E)}l.push(v)}for(const g of tools_1$1.range(u)){const v={};for(const E of c[g])switch(convert$6.outputs.checkPubkey(E),E.key[0]){case typeFields_1$1.OutputTypes.REDEEM_SCRIPT:if(checkKeyBuffer("output",E.key,typeFields_1$1.OutputTypes.REDEEM_SCRIPT),v.redeemScript!==void 0)throw new Error("Format Error: Output has multiple REDEEM_SCRIPT");v.redeemScript=convert$6.outputs.redeemScript.decode(E);break;case typeFields_1$1.OutputTypes.WITNESS_SCRIPT:if(checkKeyBuffer("output",E.key,typeFields_1$1.OutputTypes.WITNESS_SCRIPT),v.witnessScript!==void 0)throw new Error("Format Error: Output has multiple WITNESS_SCRIPT");v.witnessScript=convert$6.outputs.witnessScript.decode(E);break;case typeFields_1$1.OutputTypes.BIP32_DERIVATION:v.bip32Derivation===void 0&&(v.bip32Derivation=[]),v.bip32Derivation.push(convert$6.outputs.bip32Derivation.decode(E));break;case typeFields_1$1.OutputTypes.TAP_INTERNAL_KEY:checkKeyBuffer("output",E.key,typeFields_1$1.OutputTypes.TAP_INTERNAL_KEY),v.tapInternalKey=convert$6.outputs.tapInternalKey.decode(E);break;case typeFields_1$1.OutputTypes.TAP_TREE:checkKeyBuffer("output",E.key,typeFields_1$1.OutputTypes.TAP_TREE),v.tapTree=convert$6.outputs.tapTree.decode(E);break;case typeFields_1$1.OutputTypes.TAP_BIP32_DERIVATION:v.tapBip32Derivation===void 0&&(v.tapBip32Derivation=[]),v.tapBip32Derivation.push(convert$6.outputs.tapBip32Derivation.decode(E));break;default:v.unknownKeyVals||(v.unknownKeyVals=[]),v.unknownKeyVals.push(E)}x.push(v)}return{globalMap:i,inputs:l,outputs:x}}fromBuffer.psbtFromKeyVals=psbtFromKeyVals;var toBuffer={};Object.defineProperty(toBuffer,"__esModule",{value:!0});const convert$5=converter,tools_1=tools;function psbtToBuffer({globalMap:e,inputs:a,outputs:t}){const{globalKeyVals:c,inputKeyVals:i,outputKeyVals:o}=psbtToKeyVals({globalMap:e,inputs:a,outputs:t}),b=tools_1.keyValsToBuffer(c),u=v=>v.length===0?[buffer$2.Buffer.from([0])]:v.map(tools_1.keyValsToBuffer),l=u(i),x=u(o),g=buffer$2.Buffer.allocUnsafe(5);return g.writeUIntBE(482972169471,0,5),buffer$2.Buffer.concat([g,b].concat(l,x))}toBuffer.psbtToBuffer=psbtToBuffer;const sortKeyVals=(e,a)=>e.key.compare(a.key);function keyValsFromMap(e,a){const t=new Set,c=Object.entries(e).reduce((o,[b,u])=>{if(b==="unknownKeyVals")return o;const l=a[b];if(l===void 0)return o;const x=(Array.isArray(u)?u:[u]).map(l.encode);return x.map(v=>v.key.toString("hex")).forEach(v=>{if(t.has(v))throw new Error("Serialize Error: Duplicate key: "+v);t.add(v)}),o.concat(x)},[]),i=e.unknownKeyVals?e.unknownKeyVals.filter(o=>!t.has(o.key.toString("hex"))):[];return c.concat(i).sort(sortKeyVals)}function psbtToKeyVals({globalMap:e,inputs:a,outputs:t}){return{globalKeyVals:keyValsFromMap(e,convert$5.globals),inputKeyVals:a.map(c=>keyValsFromMap(c,convert$5.inputs)),outputKeyVals:t.map(c=>keyValsFromMap(c,convert$5.outputs))}}toBuffer.psbtToKeyVals=psbtToKeyVals;(function(e){function a(t){for(var c in t)e.hasOwnProperty(c)||(e[c]=t[c])}Object.defineProperty(e,"__esModule",{value:!0}),a(fromBuffer),a(toBuffer)})(parser);Object.defineProperty(combiner,"__esModule",{value:!0});const parser_1$1=parser;function combine(e){const a=e[0],t=parser_1$1.psbtToKeyVals(a),c=e.slice(1);if(c.length===0)throw new Error("Combine: Nothing to combine");const i=getTx(a);if(i===void 0)throw new Error("Combine: Self missing transaction");const o=getKeySet(t.globalKeyVals),b=t.inputKeyVals.map(getKeySet),u=t.outputKeyVals.map(getKeySet);for(const l of c){const x=getTx(l);if(x===void 0||!x.toBuffer().equals(i.toBuffer()))throw new Error("Combine: One of the Psbts does not have the same transaction.");const g=parser_1$1.psbtToKeyVals(l);getKeySet(g.globalKeyVals).forEach(keyPusher(o,t.globalKeyVals,g.globalKeyVals)),g.inputKeyVals.map(getKeySet).forEach((T,I)=>T.forEach(keyPusher(b[I],t.inputKeyVals[I],g.inputKeyVals[I]))),g.outputKeyVals.map(getKeySet).forEach((T,I)=>T.forEach(keyPusher(u[I],t.outputKeyVals[I],g.outputKeyVals[I])))}return parser_1$1.psbtFromKeyVals(i,{globalMapKeyVals:t.globalKeyVals,inputKeyVals:t.inputKeyVals,outputKeyVals:t.outputKeyVals})}combiner.combine=combine;function keyPusher(e,a,t){return c=>{if(e.has(c))return;const i=t.filter(o=>o.key.toString("hex")===c)[0];a.push(i),e.add(c)}}function getTx(e){return e.globalMap.unsignedTx}function getKeySet(e){const a=new Set;return e.forEach(t=>{const c=t.key.toString("hex");if(a.has(c))throw new Error("Combine: KeyValue Map keys should be unique");a.add(c)}),a}var utils={};(function(e){Object.defineProperty(e,"__esModule",{value:!0});const a=converter;function t(S,T){const I=S[T];if(I===void 0)throw new Error(`No input #${T}`);return I}e.checkForInput=t;function c(S,T){const I=S[T];if(I===void 0)throw new Error(`No output #${T}`);return I}e.checkForOutput=c;function i(S,T,I){if(S.key[0]<I)throw new Error("Use the method for your specific key instead of addUnknownKeyVal*");if(T&&T.filter(A=>A.key.equals(S.key)).length!==0)throw new Error(`Duplicate Key: ${S.key.toString("hex")}`)}e.checkHasKey=i;function o(S){let T=0;return Object.keys(S).forEach(I=>{Number(isNaN(Number(I)))&&T++}),T}e.getEnumLength=o;function b(S,T){let I=!1;if(T.nonWitnessUtxo||T.witnessUtxo){const A=!!T.redeemScript,C=!!T.witnessScript,O=!A||!!T.finalScriptSig,R=!C||!!T.finalScriptWitness,B=!!T.finalScriptSig||!!T.finalScriptWitness;I=O&&R&&B}if(I===!1)throw new Error(`Input #${S} has too much or too little data to clean`)}e.inputCheckUncleanFinalized=b;function u(S,T,I,A){throw new Error(`Data for ${S} key ${T} is incorrect: Expected ${I} and got ${JSON.stringify(A)}`)}function l(S){return(T,I)=>{for(const A of Object.keys(T)){const C=T[A],{canAdd:O,canAddToArray:R,check:B,expected:M}=a[S+"s"][A]||{},L=!!R;if(B)if(L){if(!Array.isArray(C)||I[A]&&!Array.isArray(I[A]))throw new Error(`Key type ${A} must be an array`);C.every(B)||u(S,A,M,C);const ee=I[A]||[],z=new Set;if(!C.every(oe=>R(ee,oe,z)))throw new Error("Can not add duplicate data to array");I[A]=ee.concat(C)}else{if(B(C)||u(S,A,M,C),!O(I,C))throw new Error(`Can not add duplicate data to ${S}`);I[A]=C}}}}e.updateGlobal=l("global"),e.updateInput=l("input"),e.updateOutput=l("output");function x(S,T){const I=S.length-1,A=t(S,I);e.updateInput(T,A)}e.addInputAttributes=x;function g(S,T){const I=S.length-1,A=c(S,I);e.updateOutput(T,A)}e.addOutputAttributes=g;function v(S,T){if(!buffer$2.Buffer.isBuffer(T)||T.length<4)throw new Error("Set Version: Invalid Transaction");return T.writeUInt32LE(S,0),T}e.defaultVersionSetter=v;function E(S,T){if(!buffer$2.Buffer.isBuffer(T)||T.length<4)throw new Error("Set Locktime: Invalid Transaction");return T.writeUInt32LE(S,T.length-4),T}e.defaultLocktimeSetter=E})(utils);Object.defineProperty(psbt,"__esModule",{value:!0});const combiner_1=combiner,parser_1=parser,typeFields_1=typeFields,utils_1$2=utils;let Psbt$1=class{constructor(a){this.inputs=[],this.outputs=[],this.globalMap={unsignedTx:a}}static fromBase64(a,t){const c=buffer$2.Buffer.from(a,"base64");return this.fromBuffer(c,t)}static fromHex(a,t){const c=buffer$2.Buffer.from(a,"hex");return this.fromBuffer(c,t)}static fromBuffer(a,t){const c=parser_1.psbtFromBuffer(a,t),i=new this(c.globalMap.unsignedTx);return Object.assign(i,c),i}toBase64(){return this.toBuffer().toString("base64")}toHex(){return this.toBuffer().toString("hex")}toBuffer(){return parser_1.psbtToBuffer(this)}updateGlobal(a){return utils_1$2.updateGlobal(a,this.globalMap),this}updateInput(a,t){const c=utils_1$2.checkForInput(this.inputs,a);return utils_1$2.updateInput(t,c),this}updateOutput(a,t){const c=utils_1$2.checkForOutput(this.outputs,a);return utils_1$2.updateOutput(t,c),this}addUnknownKeyValToGlobal(a){return utils_1$2.checkHasKey(a,this.globalMap.unknownKeyVals,utils_1$2.getEnumLength(typeFields_1.GlobalTypes)),this.globalMap.unknownKeyVals||(this.globalMap.unknownKeyVals=[]),this.globalMap.unknownKeyVals.push(a),this}addUnknownKeyValToInput(a,t){const c=utils_1$2.checkForInput(this.inputs,a);return utils_1$2.checkHasKey(t,c.unknownKeyVals,utils_1$2.getEnumLength(typeFields_1.InputTypes)),c.unknownKeyVals||(c.unknownKeyVals=[]),c.unknownKeyVals.push(t),this}addUnknownKeyValToOutput(a,t){const c=utils_1$2.checkForOutput(this.outputs,a);return utils_1$2.checkHasKey(t,c.unknownKeyVals,utils_1$2.getEnumLength(typeFields_1.OutputTypes)),c.unknownKeyVals||(c.unknownKeyVals=[]),c.unknownKeyVals.push(t),this}addInput(a){this.globalMap.unsignedTx.addInput(a),this.inputs.push({unknownKeyVals:[]});const t=a.unknownKeyVals||[],c=this.inputs.length-1;if(!Array.isArray(t))throw new Error("unknownKeyVals must be an Array");return t.forEach(i=>this.addUnknownKeyValToInput(c,i)),utils_1$2.addInputAttributes(this.inputs,a),this}addOutput(a){this.globalMap.unsignedTx.addOutput(a),this.outputs.push({unknownKeyVals:[]});const t=a.unknownKeyVals||[],c=this.outputs.length-1;if(!Array.isArray(t))throw new Error("unknownKeyVals must be an Array");return t.forEach(i=>this.addUnknownKeyValToInput(c,i)),utils_1$2.addOutputAttributes(this.outputs,a),this}clearFinalizedInput(a){const t=utils_1$2.checkForInput(this.inputs,a);utils_1$2.inputCheckUncleanFinalized(a,t);for(const c of Object.keys(t))["witnessUtxo","nonWitnessUtxo","finalScriptSig","finalScriptWitness","unknownKeyVals"].includes(c)||delete t[c];return this}combine(...a){const t=combiner_1.combine([this].concat(a));return Object.assign(this,t),this}getTransaction(){return this.globalMap.unsignedTx.toBuffer()}};psbt.Psbt=Psbt$1;var bip371={},psbtutils={};Object.defineProperty(psbtutils,"__esModule",{value:!0});psbtutils.signatureBlocksAction=psbtutils.checkInputForSig=psbtutils.pubkeyInScript=psbtutils.pubkeyPositionInScript=psbtutils.witnessStackToScriptWitness=psbtutils.isP2TR=psbtutils.isP2SHScript=psbtutils.isP2WSHScript=psbtutils.isP2WPKH=psbtutils.isP2PKH=psbtutils.isP2PK=psbtutils.isP2MS=void 0;const varuint$1=varint$1,bscript$1=script$2,transaction_1$2=transaction$2,crypto_1=crypto$2,payments$1=payments$3;function isPaymentFactory(e){return a=>{try{return e({output:a}),!0}catch{return!1}}}psbtutils.isP2MS=isPaymentFactory(payments$1.p2ms);psbtutils.isP2PK=isPaymentFactory(payments$1.p2pk);psbtutils.isP2PKH=isPaymentFactory(payments$1.p2pkh);psbtutils.isP2WPKH=isPaymentFactory(payments$1.p2wpkh);psbtutils.isP2WSHScript=isPaymentFactory(payments$1.p2wsh);psbtutils.isP2SHScript=isPaymentFactory(payments$1.p2sh);psbtutils.isP2TR=isPaymentFactory(payments$1.p2tr);function witnessStackToScriptWitness(e){let a=buffer$2.Buffer.allocUnsafe(0);function t(b){a=buffer$2.Buffer.concat([a,buffer$2.Buffer.from(b)])}function c(b){const u=a.length,l=varuint$1.encodingLength(b);a=buffer$2.Buffer.concat([a,buffer$2.Buffer.allocUnsafe(l)]),varuint$1.encode(b,a,u)}function i(b){c(b.length),t(b)}function o(b){c(b.length),b.forEach(i)}return o(e),a}psbtutils.witnessStackToScriptWitness=witnessStackToScriptWitness;function pubkeyPositionInScript(e,a){const t=(0,crypto_1.hash160)(e),c=e.slice(1,33),i=bscript$1.decompile(a);if(i===null)throw new Error("Unknown script error");return i.findIndex(o=>typeof o=="number"?!1:o.equals(e)||o.equals(t)||o.equals(c))}psbtutils.pubkeyPositionInScript=pubkeyPositionInScript;function pubkeyInScript(e,a){return pubkeyPositionInScript(e,a)!==-1}psbtutils.pubkeyInScript=pubkeyInScript;function checkInputForSig(e,a){return extractPartialSigs(e).some(c=>signatureBlocksAction(c,bscript$1.signature.decode,a))}psbtutils.checkInputForSig=checkInputForSig;function signatureBlocksAction(e,a,t){const{hashType:c}=a(e),i=[];switch(c&transaction_1$2.Transaction.SIGHASH_ANYONECANPAY&&i.push("addInput"),c&31){case transaction_1$2.Transaction.SIGHASH_ALL:break;case transaction_1$2.Transaction.SIGHASH_SINGLE:case transaction_1$2.Transaction.SIGHASH_NONE:i.push("addOutput"),i.push("setInputSequence");break}return i.indexOf(t)===-1}psbtutils.signatureBlocksAction=signatureBlocksAction;function extractPartialSigs(e){let a=[];if((e.partialSig||[]).length===0){if(!e.finalScriptSig&&!e.finalScriptWitness)return[];a=getPsigsFromInputFinalScripts(e)}else a=e.partialSig;return a.map(t=>t.signature)}function getPsigsFromInputFinalScripts(e){const a=e.finalScriptSig?bscript$1.decompile(e.finalScriptSig)||[]:[],t=e.finalScriptWitness?bscript$1.decompile(e.finalScriptWitness)||[]:[];return a.concat(t).filter(c=>buffer$2.Buffer.isBuffer(c)&&bscript$1.isCanonicalScriptSignature(c)).map(c=>({signature:c}))}Object.defineProperty(bip371,"__esModule",{value:!0});bip371.checkTaprootInputForSigs=bip371.tapTreeFromList=bip371.tapTreeToList=bip371.tweakInternalPubKey=bip371.checkTaprootOutputFields=bip371.checkTaprootInputFields=bip371.isTaprootOutput=isTaprootInput_1=bip371.isTaprootInput=bip371.serializeTaprootSignature=bip371.tapScriptFinalizer=bip371.toXOnly=void 0;const types_1$5=types$8,transaction_1$1=transaction$2,psbtutils_1$1=psbtutils,bip341_1$1=bip341,payments_1=payments$3,psbtutils_2=psbtutils,toXOnly$3=e=>e.length===32?e:e.slice(1,33);bip371.toXOnly=toXOnly$3;function tapScriptFinalizer(e,a,t){const c=findTapLeafToFinalize(a,e,t);try{const o=sortSignatures(a,c).concat(c.script).concat(c.controlBlock);return{finalScriptWitness:(0,psbtutils_1$1.witnessStackToScriptWitness)(o)}}catch(i){throw new Error(`Can not finalize taproot input #${e}: ${i}`)}}bip371.tapScriptFinalizer=tapScriptFinalizer;function serializeTaprootSignature(e,a){const t=a?buffer$2.Buffer.from([a]):buffer$2.Buffer.from([]);return buffer$2.Buffer.concat([e,t])}bip371.serializeTaprootSignature=serializeTaprootSignature;function isTaprootInput(e){return e&&!!(e.tapInternalKey||e.tapMerkleRoot||e.tapLeafScript&&e.tapLeafScript.length||e.tapBip32Derivation&&e.tapBip32Derivation.length||e.witnessUtxo&&(0,psbtutils_1$1.isP2TR)(e.witnessUtxo.script))}var isTaprootInput_1=bip371.isTaprootInput=isTaprootInput;function isTaprootOutput(e,a){return e&&!!(e.tapInternalKey||e.tapTree||e.tapBip32Derivation&&e.tapBip32Derivation.length||a&&(0,psbtutils_1$1.isP2TR)(a))}bip371.isTaprootOutput=isTaprootOutput;function checkTaprootInputFields(e,a,t){checkMixedTaprootAndNonTaprootInputFields(e,a,t),checkIfTapLeafInTree(e,a,t)}bip371.checkTaprootInputFields=checkTaprootInputFields;function checkTaprootOutputFields(e,a,t){checkMixedTaprootAndNonTaprootOutputFields(e,a,t),checkTaprootScriptPubkey(e,a)}bip371.checkTaprootOutputFields=checkTaprootOutputFields;function checkTaprootScriptPubkey(e,a){if(!a.tapTree&&!a.tapInternalKey)return;const t=a.tapInternalKey||e.tapInternalKey,c=a.tapTree||e.tapTree;if(t){const{script:i}=e,o=getTaprootScripPubkey(t,c);if(i&&!i.equals(o))throw new Error("Error adding output. Script or address missmatch.")}}function getTaprootScripPubkey(e,a){const t=a&&tapTreeFromList(a.leaves),{output:c}=(0,payments_1.p2tr)({internalPubkey:e,scriptTree:t});return c}function tweakInternalPubKey(e,a){const t=a.tapInternalKey,c=t&&(0,bip341_1$1.tweakKey)(t,a.tapMerkleRoot);if(!c)throw new Error(`Cannot tweak tap internal key for input #${e}. Public key: ${t&&t.toString("hex")}`);return c.x}bip371.tweakInternalPubKey=tweakInternalPubKey;function tapTreeToList(e){if(!(0,types_1$5.isTaptree)(e))throw new Error("Cannot convert taptree to tapleaf list. Expecting a tapree structure.");return _tapTreeToList(e)}bip371.tapTreeToList=tapTreeToList;function tapTreeFromList(e=[]){return e.length===1&&e[0].depth===0?{output:e[0].script,version:e[0].leafVersion}:instertLeavesInTree(e)}bip371.tapTreeFromList=tapTreeFromList;function checkTaprootInputForSigs(e,a){return extractTaprootSigs(e).some(c=>(0,psbtutils_2.signatureBlocksAction)(c,decodeSchnorrSignature,a))}bip371.checkTaprootInputForSigs=checkTaprootInputForSigs;function decodeSchnorrSignature(e){return{signature:e.slice(0,64),hashType:e.slice(64)[0]||transaction_1$1.Transaction.SIGHASH_DEFAULT}}function extractTaprootSigs(e){const a=[];if(e.tapKeySig&&a.push(e.tapKeySig),e.tapScriptSig&&a.push(...e.tapScriptSig.map(t=>t.signature)),!a.length){const t=getTapKeySigFromWithness(e.finalScriptWitness);t&&a.push(t)}return a}function getTapKeySigFromWithness(e){if(!e)return;const a=e.slice(2);if(a.length===64||a.length===65)return a}function _tapTreeToList(e,a=[],t=0){if(t>bip341_1$1.MAX_TAPTREE_DEPTH)throw new Error("Max taptree depth exceeded.");return e?(0,types_1$5.isTapleaf)(e)?(a.push({depth:t,leafVersion:e.version||bip341_1$1.LEAF_VERSION_TAPSCRIPT,script:e.output}),a):(e[0]&&_tapTreeToList(e[0],a,t+1),e[1]&&_tapTreeToList(e[1],a,t+1),a):[]}function instertLeavesInTree(e){let a;for(const t of e)if(a=instertLeafInTree(t,a),!a)throw new Error("No room left to insert tapleaf in tree");return a}function instertLeafInTree(e,a,t=0){if(t>bip341_1$1.MAX_TAPTREE_DEPTH)throw new Error("Max taptree depth exceeded.");if(e.depth===t)return a?void 0:{output:e.script,version:e.leafVersion};if((0,types_1$5.isTapleaf)(a))return;const c=instertLeafInTree(e,a&&a[0],t+1);if(c)return[c,a&&a[1]];const i=instertLeafInTree(e,a&&a[1],t+1);if(i)return[a&&a[0],i]}function checkMixedTaprootAndNonTaprootInputFields(e,a,t){const c=isTaprootInput(e)&&hasNonTaprootFields(a),i=hasNonTaprootFields(e)&&isTaprootInput(a),o=e===a&&isTaprootInput(a)&&hasNonTaprootFields(a);if(c||i||o)throw new Error(`Invalid arguments for Psbt.${t}. Cannot use both taproot and non-taproot fields.`)}function checkMixedTaprootAndNonTaprootOutputFields(e,a,t){const c=isTaprootOutput(e)&&hasNonTaprootFields(a),i=hasNonTaprootFields(e)&&isTaprootOutput(a),o=e===a&&isTaprootOutput(a)&&hasNonTaprootFields(a);if(c||i||o)throw new Error(`Invalid arguments for Psbt.${t}. Cannot use both taproot and non-taproot fields.`)}function checkIfTapLeafInTree(e,a,t){if(a.tapMerkleRoot){const c=(a.tapLeafScript||[]).every(o=>isTapLeafInTree(o,a.tapMerkleRoot)),i=(e.tapLeafScript||[]).every(o=>isTapLeafInTree(o,a.tapMerkleRoot));if(!c||!i)throw new Error(`Invalid arguments for Psbt.${t}. Tapleaf not part of taptree.`)}else if(e.tapMerkleRoot&&!(a.tapLeafScript||[]).every(i=>isTapLeafInTree(i,e.tapMerkleRoot)))throw new Error(`Invalid arguments for Psbt.${t}. Tapleaf not part of taptree.`)}function isTapLeafInTree(e,a){if(!a)return!0;const t=(0,bip341_1$1.tapleafHash)({output:e.script,version:e.leafVersion});return(0,bip341_1$1.rootHashFromPath)(e.controlBlock,t).equals(a)}function sortSignatures(e,a){const t=(0,bip341_1$1.tapleafHash)({output:a.script,version:a.leafVersion});return(e.tapScriptSig||[]).filter(c=>c.leafHash.equals(t)).map(c=>addPubkeyPositionInScript(a.script,c)).sort((c,i)=>i.positionInScript-c.positionInScript).map(c=>c.signature)}function addPubkeyPositionInScript(e,a){return Object.assign({positionInScript:(0,psbtutils_1$1.pubkeyPositionInScript)(a.pubkey,e)},a)}function findTapLeafToFinalize(e,a,t){if(!e.tapScriptSig||!e.tapScriptSig.length)throw new Error(`Can not finalize taproot input #${a}. No tapleaf script signature provided.`);const c=(e.tapLeafScript||[]).sort((i,o)=>i.controlBlock.length-o.controlBlock.length).find(i=>canFinalizeLeaf(i,e.tapScriptSig,t));if(!c)throw new Error(`Can not finalize taproot input #${a}. Signature for tapleaf script not found.`);return c}function canFinalizeLeaf(e,a,t){const c=(0,bip341_1$1.tapleafHash)({output:e.script,version:e.leafVersion});return(!t||t.equals(c))&&a.find(o=>o.leafHash.equals(c))!==void 0}function hasNonTaprootFields(e){return e&&!!(e.redeemScript||e.witnessScript||e.bip32Derivation&&e.bip32Derivation.length)}Object.defineProperty(psbt$1,"__esModule",{value:!0});psbt$1.Psbt=void 0;const bip174_1=psbt,varuint=varint$1,utils_1$1=utils,address_1=address$1,bufferutils_1=bufferutils,networks_1$1=networks$4,payments=payments$3,bip341_1=bip341,bscript=script$2,transaction_1=transaction$2,bip371_1=bip371,psbtutils_1=psbtutils,DEFAULT_OPTS={network:networks_1$1.bitcoin,maximumFeeRate:5e3};class Psbt{static fromBase64(a,t={}){const c=buffer$2.Buffer.from(a,"base64");return this.fromBuffer(c,t)}static fromHex(a,t={}){const c=buffer$2.Buffer.from(a,"hex");return this.fromBuffer(c,t)}static fromBuffer(a,t={}){const c=bip174_1.Psbt.fromBuffer(a,transactionFromBuffer),i=new Psbt(t,c);return checkTxForDupeIns(i.__CACHE.__TX,i.__CACHE),i}constructor(a={},t=new bip174_1.Psbt(new PsbtTransaction)){this.data=t,this.opts=Object.assign({},DEFAULT_OPTS,a),this.__CACHE={__NON_WITNESS_UTXO_TX_CACHE:[],__NON_WITNESS_UTXO_BUF_CACHE:[],__TX_IN_CACHE:{},__TX:this.data.globalMap.unsignedTx.tx,__UNSAFE_SIGN_NONSEGWIT:!1},this.data.inputs.length===0&&this.setVersion(2);const c=(i,o,b,u)=>Object.defineProperty(i,o,{enumerable:b,writable:u});c(this,"__CACHE",!1,!0),c(this,"opts",!1,!0)}get inputCount(){return this.data.inputs.length}get version(){return this.__CACHE.__TX.version}set version(a){this.setVersion(a)}get locktime(){return this.__CACHE.__TX.locktime}set locktime(a){this.setLocktime(a)}get txInputs(){return this.__CACHE.__TX.ins.map(a=>({hash:(0,bufferutils_1.cloneBuffer)(a.hash),index:a.index,sequence:a.sequence}))}get txOutputs(){return this.__CACHE.__TX.outs.map(a=>{let t;try{t=(0,address_1.fromOutputScript)(a.script,this.opts.network)}catch{}return{script:(0,bufferutils_1.cloneBuffer)(a.script),value:a.value,address:t}})}combine(...a){return this.data.combine(...a.map(t=>t.data)),this}clone(){const a=Psbt.fromBuffer(this.data.toBuffer());return a.opts=JSON.parse(JSON.stringify(this.opts)),a}setMaximumFeeRate(a){check32Bit(a),this.opts.maximumFeeRate=a}setVersion(a){check32Bit(a),checkInputsForPartialSig(this.data.inputs,"setVersion");const t=this.__CACHE;return t.__TX.version=a,t.__EXTRACTED_TX=void 0,this}setLocktime(a){check32Bit(a),checkInputsForPartialSig(this.data.inputs,"setLocktime");const t=this.__CACHE;return t.__TX.locktime=a,t.__EXTRACTED_TX=void 0,this}setInputSequence(a,t){check32Bit(t),checkInputsForPartialSig(this.data.inputs,"setInputSequence");const c=this.__CACHE;if(c.__TX.ins.length<=a)throw new Error("Input index too high");return c.__TX.ins[a].sequence=t,c.__EXTRACTED_TX=void 0,this}addInputs(a){return a.forEach(t=>this.addInput(t)),this}addInput(a){if(arguments.length>1||!a||a.hash===void 0||a.index===void 0)throw new Error("Invalid arguments for Psbt.addInput. Requires single object with at least [hash] and [index]");(0,bip371_1.checkTaprootInputFields)(a,a,"addInput"),checkInputsForPartialSig(this.data.inputs,"addInput"),a.witnessScript&&checkInvalidP2WSH(a.witnessScript);const t=this.__CACHE;this.data.addInput(a);const c=t.__TX.ins[t.__TX.ins.length-1];checkTxInputCache(t,c);const i=this.data.inputs.length-1,o=this.data.inputs[i];return o.nonWitnessUtxo&&addNonWitnessTxCache(this.__CACHE,o,i),t.__FEE=void 0,t.__FEE_RATE=void 0,t.__EXTRACTED_TX=void 0,this}addOutputs(a){return a.forEach(t=>this.addOutput(t)),this}addOutput(a){if(arguments.length>1||!a||a.value===void 0||a.address===void 0&&a.script===void 0)throw new Error("Invalid arguments for Psbt.addOutput. Requires single object with at least [script or address] and [value]");checkInputsForPartialSig(this.data.inputs,"addOutput");const{address:t}=a;if(typeof t=="string"){const{network:i}=this.opts,o=(0,address_1.toOutputScript)(t,i);a=Object.assign(a,{script:o})}(0,bip371_1.checkTaprootOutputFields)(a,a,"addOutput");const c=this.__CACHE;return this.data.addOutput(a),c.__FEE=void 0,c.__FEE_RATE=void 0,c.__EXTRACTED_TX=void 0,this}extractTransaction(a){if(!this.data.inputs.every(isFinalized))throw new Error("Not finalized");const t=this.__CACHE;if(a||checkFees(this,t,this.opts),t.__EXTRACTED_TX)return t.__EXTRACTED_TX;const c=t.__TX.clone();return inputFinalizeGetAmts(this.data.inputs,c,t,!0),c}getFeeRate(){return getTxCacheValue("__FEE_RATE","fee rate",this.data.inputs,this.__CACHE)}getFee(){return getTxCacheValue("__FEE","fee",this.data.inputs,this.__CACHE)}finalizeAllInputs(){return(0,utils_1$1.checkForInput)(this.data.inputs,0),range(this.data.inputs.length).forEach(a=>this.finalizeInput(a)),this}finalizeInput(a,t){const c=(0,utils_1$1.checkForInput)(this.data.inputs,a);return(0,bip371_1.isTaprootInput)(c)?this._finalizeTaprootInput(a,c,void 0,t):this._finalizeInput(a,c,t)}finalizeTaprootInput(a,t,c=bip371_1.tapScriptFinalizer){const i=(0,utils_1$1.checkForInput)(this.data.inputs,a);if((0,bip371_1.isTaprootInput)(i))return this._finalizeTaprootInput(a,i,t,c);throw new Error(`Cannot finalize input #${a}. Not Taproot.`)}_finalizeInput(a,t,c=getFinalScripts){const{script:i,isP2SH:o,isP2WSH:b,isSegwit:u}=getScriptFromInput(a,t,this.__CACHE);if(!i)throw new Error(`No script found for input #${a}`);checkPartialSigSighashes(t);const{finalScriptSig:l,finalScriptWitness:x}=c(a,t,i,u,o,b);if(l&&this.data.updateInput(a,{finalScriptSig:l}),x&&this.data.updateInput(a,{finalScriptWitness:x}),!l&&!x)throw new Error(`Unknown error finalizing input #${a}`);return this.data.clearFinalizedInput(a),this}_finalizeTaprootInput(a,t,c,i=bip371_1.tapScriptFinalizer){if(!t.witnessUtxo)throw new Error(`Cannot finalize input #${a}. Missing withness utxo.`);if(t.tapKeySig){const o=payments.p2tr({output:t.witnessUtxo.script,signature:t.tapKeySig}),b=(0,psbtutils_1.witnessStackToScriptWitness)(o.witness);this.data.updateInput(a,{finalScriptWitness:b})}else{const{finalScriptWitness:o}=i(a,t,c);this.data.updateInput(a,{finalScriptWitness:o})}return this.data.clearFinalizedInput(a),this}getInputType(a){const t=(0,utils_1$1.checkForInput)(this.data.inputs,a),c=getScriptFromUtxo(a,t,this.__CACHE),i=getMeaningfulScript(c,a,"input",t.redeemScript||redeemFromFinalScriptSig(t.finalScriptSig),t.witnessScript||redeemFromFinalWitnessScript(t.finalScriptWitness)),o=i.type==="raw"?"":i.type+"-",b=classifyScript(i.meaningfulScript);return o+b}inputHasPubkey(a,t){const c=(0,utils_1$1.checkForInput)(this.data.inputs,a);return pubkeyInInput(t,c,a,this.__CACHE)}inputHasHDKey(a,t){const c=(0,utils_1$1.checkForInput)(this.data.inputs,a),i=bip32DerivationIsMine(t);return!!c.bip32Derivation&&c.bip32Derivation.some(i)}outputHasPubkey(a,t){const c=(0,utils_1$1.checkForOutput)(this.data.outputs,a);return pubkeyInOutput(t,c,a,this.__CACHE)}outputHasHDKey(a,t){const c=(0,utils_1$1.checkForOutput)(this.data.outputs,a),i=bip32DerivationIsMine(t);return!!c.bip32Derivation&&c.bip32Derivation.some(i)}validateSignaturesOfAllInputs(a){return(0,utils_1$1.checkForInput)(this.data.inputs,0),range(this.data.inputs.length).map(c=>this.validateSignaturesOfInput(c,a)).reduce((c,i)=>i===!0&&c,!0)}validateSignaturesOfInput(a,t,c){const i=this.data.inputs[a];return(0,bip371_1.isTaprootInput)(i)?this.validateSignaturesOfTaprootInput(a,t,c):this._validateSignaturesOfInput(a,t,c)}_validateSignaturesOfInput(a,t,c){const i=this.data.inputs[a],o=(i||{}).partialSig;if(!i||!o||o.length<1)throw new Error("No signatures to validate");if(typeof t!="function")throw new Error("Need validator function to validate signatures");const b=c?o.filter(v=>v.pubkey.equals(c)):o;if(b.length<1)throw new Error("No signatures for this pubkey");const u=[];let l,x,g;for(const v of b){const E=bscript.signature.decode(v.signature),{hash:S,script:T}=g!==E.hashType?getHashForSig(a,Object.assign({},i,{sighashType:E.hashType}),this.__CACHE,!0):{hash:l,script:x};g=E.hashType,l=S,x=T,checkScriptForPubkey(v.pubkey,T,"verify"),u.push(t(v.pubkey,S,E.signature))}return u.every(v=>v===!0)}validateSignaturesOfTaprootInput(a,t,c){const i=this.data.inputs[a],o=(i||{}).tapKeySig,b=(i||{}).tapScriptSig;if(!i&&!o&&!(b&&!b.length))throw new Error("No signatures to validate");if(typeof t!="function")throw new Error("Need validator function to validate signatures");c=c&&(0,bip371_1.toXOnly)(c);const u=c?getTaprootHashesForSig(a,i,this.data.inputs,c,this.__CACHE):getAllTaprootHashesForSig(a,i,this.data.inputs,this.__CACHE);if(!u.length)throw new Error("No signatures for this pubkey");const l=u.find(x=>!!x.leafHash);if(o&&l&&!t(l.pubkey,l.hash,o))return!1;if(b)for(const x of b){const g=u.find(v=>x.pubkey.equals(v.pubkey));if(g&&!t(x.pubkey,g.hash,x.signature))return!1}return!0}signAllInputsHD(a,t=[transaction_1.Transaction.SIGHASH_ALL]){if(!a||!a.publicKey||!a.fingerprint)throw new Error("Need HDSigner to sign input");const c=[];for(const i of range(this.data.inputs.length))try{this.signInputHD(i,a,t),c.push(!0)}catch{c.push(!1)}if(c.every(i=>i===!1))throw new Error("No inputs were signed");return this}signAllInputsHDAsync(a,t=[transaction_1.Transaction.SIGHASH_ALL]){return new Promise((c,i)=>{if(!a||!a.publicKey||!a.fingerprint)return i(new Error("Need HDSigner to sign input"));const o=[],b=[];for(const u of range(this.data.inputs.length))b.push(this.signInputHDAsync(u,a,t).then(()=>{o.push(!0)},()=>{o.push(!1)}));return Promise.all(b).then(()=>{if(o.every(u=>u===!1))return i(new Error("No inputs were signed"));c()})})}signInputHD(a,t,c=[transaction_1.Transaction.SIGHASH_ALL]){if(!t||!t.publicKey||!t.fingerprint)throw new Error("Need HDSigner to sign input");return getSignersFromHD(a,this.data.inputs,t).forEach(o=>this.signInput(a,o,c)),this}signInputHDAsync(a,t,c=[transaction_1.Transaction.SIGHASH_ALL]){return new Promise((i,o)=>{if(!t||!t.publicKey||!t.fingerprint)return o(new Error("Need HDSigner to sign input"));const u=getSignersFromHD(a,this.data.inputs,t).map(l=>this.signInputAsync(a,l,c));return Promise.all(u).then(()=>{i()}).catch(o)})}signAllInputs(a,t){if(!a||!a.publicKey)throw new Error("Need Signer to sign input");const c=[];for(const i of range(this.data.inputs.length))try{this.signInput(i,a,t),c.push(!0)}catch{c.push(!1)}if(c.every(i=>i===!1))throw new Error("No inputs were signed");return this}signAllInputsAsync(a,t){return new Promise((c,i)=>{if(!a||!a.publicKey)return i(new Error("Need Signer to sign input"));const o=[],b=[];for(const[u]of this.data.inputs.entries())b.push(this.signInputAsync(u,a,t).then(()=>{o.push(!0)},()=>{o.push(!1)}));return Promise.all(b).then(()=>{if(o.every(u=>u===!1))return i(new Error("No inputs were signed"));c()})})}signInput(a,t,c){if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const i=(0,utils_1$1.checkForInput)(this.data.inputs,a);return(0,bip371_1.isTaprootInput)(i)?this._signTaprootInput(a,i,t,void 0,c):this._signInput(a,t,c)}signTaprootInput(a,t,c,i){if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const o=(0,utils_1$1.checkForInput)(this.data.inputs,a);if((0,bip371_1.isTaprootInput)(o))return this._signTaprootInput(a,o,t,c,i);throw new Error(`Input #${a} is not of type Taproot.`)}_signInput(a,t,c=[transaction_1.Transaction.SIGHASH_ALL]){const{hash:i,sighashType:o}=getHashAndSighashType(this.data.inputs,a,t.publicKey,this.__CACHE,c),b=[{pubkey:t.publicKey,signature:bscript.signature.encode(t.sign(i),o)}];return this.data.updateInput(a,{partialSig:b}),this}_signTaprootInput(a,t,c,i,o=[transaction_1.Transaction.SIGHASH_DEFAULT]){const b=this.checkTaprootHashesForSig(a,t,c,i,o),u=b.filter(x=>!x.leafHash).map(x=>(0,bip371_1.serializeTaprootSignature)(c.signSchnorr(x.hash),t.sighashType))[0],l=b.filter(x=>!!x.leafHash).map(x=>({pubkey:(0,bip371_1.toXOnly)(c.publicKey),signature:(0,bip371_1.serializeTaprootSignature)(c.signSchnorr(x.hash),t.sighashType),leafHash:x.leafHash}));return u&&this.data.updateInput(a,{tapKeySig:u}),l.length&&this.data.updateInput(a,{tapScriptSig:l}),this}signInputAsync(a,t,c){return Promise.resolve().then(()=>{if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const i=(0,utils_1$1.checkForInput)(this.data.inputs,a);return(0,bip371_1.isTaprootInput)(i)?this._signTaprootInputAsync(a,i,t,void 0,c):this._signInputAsync(a,t,c)})}signTaprootInputAsync(a,t,c,i){return Promise.resolve().then(()=>{if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const o=(0,utils_1$1.checkForInput)(this.data.inputs,a);if((0,bip371_1.isTaprootInput)(o))return this._signTaprootInputAsync(a,o,t,c,i);throw new Error(`Input #${a} is not of type Taproot.`)})}_signInputAsync(a,t,c=[transaction_1.Transaction.SIGHASH_ALL]){const{hash:i,sighashType:o}=getHashAndSighashType(this.data.inputs,a,t.publicKey,this.__CACHE,c);return Promise.resolve(t.sign(i)).then(b=>{const u=[{pubkey:t.publicKey,signature:bscript.signature.encode(b,o)}];this.data.updateInput(a,{partialSig:u})})}async _signTaprootInputAsync(a,t,c,i,o=[transaction_1.Transaction.SIGHASH_DEFAULT]){const b=this.checkTaprootHashesForSig(a,t,c,i,o),u=[],l=b.filter(g=>!g.leafHash)[0];if(l){const g=Promise.resolve(c.signSchnorr(l.hash)).then(v=>({tapKeySig:(0,bip371_1.serializeTaprootSignature)(v,t.sighashType)}));u.push(g)}const x=b.filter(g=>!!g.leafHash);if(x.length){const g=x.map(v=>Promise.resolve(c.signSchnorr(v.hash)).then(E=>({tapScriptSig:[{pubkey:(0,bip371_1.toXOnly)(c.publicKey),signature:(0,bip371_1.serializeTaprootSignature)(E,t.sighashType),leafHash:v.leafHash}]})));u.push(...g)}return Promise.all(u).then(g=>{g.forEach(v=>this.data.updateInput(a,v))})}checkTaprootHashesForSig(a,t,c,i,o){if(typeof c.signSchnorr!="function")throw new Error(`Need Schnorr Signer to sign taproot input #${a}.`);const b=getTaprootHashesForSig(a,t,this.data.inputs,c.publicKey,this.__CACHE,i,o);if(!b||!b.length)throw new Error(`Can not sign for input #${a} with the key ${c.publicKey.toString("hex")}`);return b}toBuffer(){return checkCache(this.__CACHE),this.data.toBuffer()}toHex(){return checkCache(this.__CACHE),this.data.toHex()}toBase64(){return checkCache(this.__CACHE),this.data.toBase64()}updateGlobal(a){return this.data.updateGlobal(a),this}updateInput(a,t){return t.witnessScript&&checkInvalidP2WSH(t.witnessScript),(0,bip371_1.checkTaprootInputFields)(this.data.inputs[a],t,"updateInput"),this.data.updateInput(a,t),t.nonWitnessUtxo&&addNonWitnessTxCache(this.__CACHE,this.data.inputs[a],a),this}updateOutput(a,t){const c=this.data.outputs[a];return(0,bip371_1.checkTaprootOutputFields)(c,t,"updateOutput"),this.data.updateOutput(a,t),this}addUnknownKeyValToGlobal(a){return this.data.addUnknownKeyValToGlobal(a),this}addUnknownKeyValToInput(a,t){return this.data.addUnknownKeyValToInput(a,t),this}addUnknownKeyValToOutput(a,t){return this.data.addUnknownKeyValToOutput(a,t),this}clearFinalizedInput(a){return this.data.clearFinalizedInput(a),this}}psbt$1.Psbt=Psbt;const transactionFromBuffer=e=>new PsbtTransaction(e);class PsbtTransaction{constructor(a=buffer$2.Buffer.from([2,0,0,0,0,0,0,0,0,0])){this.tx=transaction_1.Transaction.fromBuffer(a),checkTxEmpty(this.tx),Object.defineProperty(this,"tx",{enumerable:!1,writable:!0})}getInputOutputCounts(){return{inputCount:this.tx.ins.length,outputCount:this.tx.outs.length}}addInput(a){if(a.hash===void 0||a.index===void 0||!buffer$2.Buffer.isBuffer(a.hash)&&typeof a.hash!="string"||typeof a.index!="number")throw new Error("Error adding input.");const t=typeof a.hash=="string"?(0,bufferutils_1.reverseBuffer)(buffer$2.Buffer.from(a.hash,"hex")):a.hash;this.tx.addInput(t,a.index,a.sequence)}addOutput(a){if(a.script===void 0||a.value===void 0||!buffer$2.Buffer.isBuffer(a.script)||typeof a.value!="number")throw new Error("Error adding output.");this.tx.addOutput(a.script,a.value)}toBuffer(){return this.tx.toBuffer()}}function canFinalize(e,a,t){switch(t){case"pubkey":case"pubkeyhash":case"witnesspubkeyhash":return hasSigs(1,e.partialSig);case"multisig":const c=payments.p2ms({output:a});return hasSigs(c.m,e.partialSig,c.pubkeys);default:return!1}}function checkCache(e){if(e.__UNSAFE_SIGN_NONSEGWIT!==!1)throw new Error("Not BIP174 compliant, can not export")}function hasSigs(e,a,t){if(!a)return!1;let c;if(t?c=t.map(i=>{const o=compressPubkey(i);return a.find(b=>b.pubkey.equals(o))}).filter(i=>!!i):c=a,c.length>e)throw new Error("Too many signatures");return c.length===e}function isFinalized(e){return!!e.finalScriptSig||!!e.finalScriptWitness}function bip32DerivationIsMine(e){return a=>!(!a.masterFingerprint.equals(e.fingerprint)||!e.derivePath(a.path).publicKey.equals(a.pubkey))}function check32Bit(e){if(typeof e!="number"||e!==Math.floor(e)||e>4294967295||e<0)throw new Error("Invalid 32 bit integer")}function checkFees(e,a,t){const c=a.__FEE_RATE||e.getFeeRate(),i=a.__EXTRACTED_TX.virtualSize(),o=c*i;if(c>=t.maximumFeeRate)throw new Error(`Warning: You are paying around ${(o/1e8).toFixed(8)} in fees, which is ${c} satoshi per byte for a transaction with a VSize of ${i} bytes (segwit counted as 0.25 byte per byte). Use setMaximumFeeRate method to raise your threshold, or pass true to the first arg of extractTransaction.`)}function checkInputsForPartialSig(e,a){e.forEach(t=>{if((0,bip371_1.isTaprootInput)(t)?(0,bip371_1.checkTaprootInputForSigs)(t,a):(0,psbtutils_1.checkInputForSig)(t,a))throw new Error("Can not modify transaction, signatures exist.")})}function checkPartialSigSighashes(e){if(!e.sighashType||!e.partialSig)return;const{partialSig:a,sighashType:t}=e;a.forEach(c=>{const{hashType:i}=bscript.signature.decode(c.signature);if(t!==i)throw new Error("Signature sighash does not match input sighash type")})}function checkScriptForPubkey(e,a,t){if(!(0,psbtutils_1.pubkeyInScript)(e,a))throw new Error(`Can not ${t} for this input with the key ${e.toString("hex")}`)}function checkTxEmpty(e){if(!e.ins.every(t=>t.script&&t.script.length===0&&t.witness&&t.witness.length===0))throw new Error("Format Error: Transaction ScriptSigs are not empty")}function checkTxForDupeIns(e,a){e.ins.forEach(t=>{checkTxInputCache(a,t)})}function checkTxInputCache(e,a){const t=(0,bufferutils_1.reverseBuffer)(buffer$2.Buffer.from(a.hash)).toString("hex")+":"+a.index;if(e.__TX_IN_CACHE[t])throw new Error("Duplicate input detected.");e.__TX_IN_CACHE[t]=1}function scriptCheckerFactory(e,a){return(t,c,i,o)=>{const b=e({redeem:{output:i}}).output;if(!c.equals(b))throw new Error(`${a} for ${o} #${t} doesn't match the scriptPubKey in the prevout`)}}const checkRedeemScript=scriptCheckerFactory(payments.p2sh,"Redeem script"),checkWitnessScript=scriptCheckerFactory(payments.p2wsh,"Witness script");function getTxCacheValue(e,a,t,c){if(!t.every(isFinalized))throw new Error(`PSBT must be finalized to calculate ${a}`);if(e==="__FEE_RATE"&&c.__FEE_RATE)return c.__FEE_RATE;if(e==="__FEE"&&c.__FEE)return c.__FEE;let i,o=!0;if(c.__EXTRACTED_TX?(i=c.__EXTRACTED_TX,o=!1):i=c.__TX.clone(),inputFinalizeGetAmts(t,i,c,o),e==="__FEE_RATE")return c.__FEE_RATE;if(e==="__FEE")return c.__FEE}function getFinalScripts(e,a,t,c,i,o){const b=classifyScript(t);if(!canFinalize(a,t,b))throw new Error(`Can not finalize input #${e}`);return prepareFinalScripts(t,b,a.partialSig,c,i,o)}function prepareFinalScripts(e,a,t,c,i,o){let b,u;const l=getPayment(e,a,t),x=o?payments.p2wsh({redeem:l}):null,g=i?payments.p2sh({redeem:x||l}):null;return c?(x?u=(0,psbtutils_1.witnessStackToScriptWitness)(x.witness):u=(0,psbtutils_1.witnessStackToScriptWitness)(l.witness),g&&(b=g.input)):g?b=g.input:b=l.input,{finalScriptSig:b,finalScriptWitness:u}}function getHashAndSighashType(e,a,t,c,i){const o=(0,utils_1$1.checkForInput)(e,a),{hash:b,sighashType:u,script:l}=getHashForSig(a,o,c,!1,i);return checkScriptForPubkey(t,l,"sign"),{hash:b,sighashType:u}}function getHashForSig(e,a,t,c,i){const o=t.__TX,b=a.sighashType||transaction_1.Transaction.SIGHASH_ALL;checkSighashTypeAllowed(b,i);let u,l;if(a.nonWitnessUtxo){const v=nonWitnessUtxoTxFromCache(t,a,e),E=o.ins[e].hash,S=v.getHash();if(!E.equals(S))throw new Error(`Non-witness UTXO hash for input #${e} doesn't match the hash specified in the prevout`);const T=o.ins[e].index;l=v.outs[T]}else if(a.witnessUtxo)l=a.witnessUtxo;else throw new Error("Need a Utxo input item for signing");const{meaningfulScript:x,type:g}=getMeaningfulScript(l.script,e,"input",a.redeemScript,a.witnessScript);if(["p2sh-p2wsh","p2wsh"].indexOf(g)>=0)u=o.hashForWitnessV0(e,x,l.value,b);else if((0,psbtutils_1.isP2WPKH)(x)){const v=payments.p2pkh({hash:x.slice(2)}).output;u=o.hashForWitnessV0(e,v,l.value,b)}else{if(a.nonWitnessUtxo===void 0&&t.__UNSAFE_SIGN_NONSEGWIT===!1)throw new Error(`Input #${e} has witnessUtxo but non-segwit script: ${x.toString("hex")}`);!c&&t.__UNSAFE_SIGN_NONSEGWIT,u=o.hashForSignature(e,x,b)}return{script:x,sighashType:b,hash:u}}function getAllTaprootHashesForSig(e,a,t,c){const i=[];if(a.tapInternalKey){const b=(0,bip371_1.tweakInternalPubKey)(e,a);i.push(b)}if(a.tapScriptSig){const b=a.tapScriptSig.map(u=>u.pubkey);i.push(...b)}return i.map(b=>getTaprootHashesForSig(e,a,t,b,c)).flat()}function getTaprootHashesForSig(e,a,t,c,i,o,b){const u=i.__TX,l=a.sighashType||transaction_1.Transaction.SIGHASH_DEFAULT;checkSighashTypeAllowed(l,b);const x=t.map((T,I)=>getScriptAndAmountFromUtxo(I,T,i)),g=x.map(T=>T.script),v=x.map(T=>T.value),E=[];if(a.tapInternalKey&&!o){const T=(0,bip371_1.tweakInternalPubKey)(e,a);if((0,bip371_1.toXOnly)(c).equals(T)){const I=u.hashForWitnessV1(e,g,v,l);E.push({pubkey:c,hash:I})}}const S=(a.tapLeafScript||[]).filter(T=>(0,psbtutils_1.pubkeyInScript)(c,T.script)).map(T=>{const I=(0,bip341_1.tapleafHash)({output:T.script,version:T.leafVersion});return Object.assign({hash:I},T)}).filter(T=>!o||o.equals(T.hash)).map(T=>{const I=u.hashForWitnessV1(e,g,v,transaction_1.Transaction.SIGHASH_DEFAULT,T.hash);return{pubkey:c,hash:I,leafHash:T.hash}});return E.concat(S)}function checkSighashTypeAllowed(e,a){if(a&&a.indexOf(e)<0){const t=sighashTypeToString(e);throw new Error(`Sighash type is not allowed. Retry the sign method passing the sighashTypes array of whitelisted types. Sighash type: ${t}`)}}function getPayment(e,a,t){let c;switch(a){case"multisig":const i=getSortedSigs(e,t);c=payments.p2ms({output:e,signatures:i});break;case"pubkey":c=payments.p2pk({output:e,signature:t[0].signature});break;case"pubkeyhash":c=payments.p2pkh({output:e,pubkey:t[0].pubkey,signature:t[0].signature});break;case"witnesspubkeyhash":c=payments.p2wpkh({output:e,pubkey:t[0].pubkey,signature:t[0].signature});break}return c}function getScriptFromInput(e,a,t){const c=t.__TX,i={script:null,isSegwit:!1,isP2SH:!1,isP2WSH:!1};if(i.isP2SH=!!a.redeemScript,i.isP2WSH=!!a.witnessScript,a.witnessScript)i.script=a.witnessScript;else if(a.redeemScript)i.script=a.redeemScript;else if(a.nonWitnessUtxo){const o=nonWitnessUtxoTxFromCache(t,a,e),b=c.ins[e].index;i.script=o.outs[b].script}else a.witnessUtxo&&(i.script=a.witnessUtxo.script);return(a.witnessScript||(0,psbtutils_1.isP2WPKH)(i.script))&&(i.isSegwit=!0),i}function getSignersFromHD(e,a,t){const c=(0,utils_1$1.checkForInput)(a,e);if(!c.bip32Derivation||c.bip32Derivation.length===0)throw new Error("Need bip32Derivation to sign with HD");const i=c.bip32Derivation.map(b=>{if(b.masterFingerprint.equals(t.fingerprint))return b}).filter(b=>!!b);if(i.length===0)throw new Error("Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint");return i.map(b=>{const u=t.derivePath(b.path);if(!b.pubkey.equals(u.publicKey))throw new Error("pubkey did not match bip32Derivation");return u})}function getSortedSigs(e,a){return payments.p2ms({output:e}).pubkeys.map(c=>(a.filter(i=>i.pubkey.equals(c))[0]||{}).signature).filter(c=>!!c)}function scriptWitnessToWitnessStack(e){let a=0;function t(b){return a+=b,e.slice(a-b,a)}function c(){const b=varuint.decode(e,a);return a+=varuint.decode.bytes,b}function i(){return t(c())}function o(){const b=c(),u=[];for(let l=0;l<b;l++)u.push(i());return u}return o()}function sighashTypeToString(e){let a=e&transaction_1.Transaction.SIGHASH_ANYONECANPAY?"SIGHASH_ANYONECANPAY | ":"";switch(e&31){case transaction_1.Transaction.SIGHASH_ALL:a+="SIGHASH_ALL";break;case transaction_1.Transaction.SIGHASH_SINGLE:a+="SIGHASH_SINGLE";break;case transaction_1.Transaction.SIGHASH_NONE:a+="SIGHASH_NONE";break}return a}function addNonWitnessTxCache(e,a,t){e.__NON_WITNESS_UTXO_BUF_CACHE[t]=a.nonWitnessUtxo;const c=transaction_1.Transaction.fromBuffer(a.nonWitnessUtxo);e.__NON_WITNESS_UTXO_TX_CACHE[t]=c;const i=e,o=t;delete a.nonWitnessUtxo,Object.defineProperty(a,"nonWitnessUtxo",{enumerable:!0,get(){const b=i.__NON_WITNESS_UTXO_BUF_CACHE[o],u=i.__NON_WITNESS_UTXO_TX_CACHE[o];if(b!==void 0)return b;{const l=u.toBuffer();return i.__NON_WITNESS_UTXO_BUF_CACHE[o]=l,l}},set(b){i.__NON_WITNESS_UTXO_BUF_CACHE[o]=b}})}function inputFinalizeGetAmts(e,a,t,c){let i=0;e.forEach((l,x)=>{if(c&&l.finalScriptSig&&(a.ins[x].script=l.finalScriptSig),c&&l.finalScriptWitness&&(a.ins[x].witness=scriptWitnessToWitnessStack(l.finalScriptWitness)),l.witnessUtxo)i+=l.witnessUtxo.value;else if(l.nonWitnessUtxo){const g=nonWitnessUtxoTxFromCache(t,l,x),v=a.ins[x].index,E=g.outs[v];i+=E.value}});const o=a.outs.reduce((l,x)=>l+x.value,0),b=i-o;if(b<0)throw new Error("Outputs are spending more than Inputs");const u=a.virtualSize();t.__FEE=b,t.__EXTRACTED_TX=a,t.__FEE_RATE=Math.floor(b/u)}function nonWitnessUtxoTxFromCache(e,a,t){const c=e.__NON_WITNESS_UTXO_TX_CACHE;return c[t]||addNonWitnessTxCache(e,a,t),c[t]}function getScriptFromUtxo(e,a,t){const{script:c}=getScriptAndAmountFromUtxo(e,a,t);return c}function getScriptAndAmountFromUtxo(e,a,t){if(a.witnessUtxo!==void 0)return{script:a.witnessUtxo.script,value:a.witnessUtxo.value};if(a.nonWitnessUtxo!==void 0){const i=nonWitnessUtxoTxFromCache(t,a,e).outs[t.__TX.ins[e].index];return{script:i.script,value:i.value}}else throw new Error("Can't find pubkey in input without Utxo data")}function pubkeyInInput(e,a,t,c){const i=getScriptFromUtxo(t,a,c),{meaningfulScript:o}=getMeaningfulScript(i,t,"input",a.redeemScript,a.witnessScript);return(0,psbtutils_1.pubkeyInScript)(e,o)}function pubkeyInOutput(e,a,t,c){const i=c.__TX.outs[t].script,{meaningfulScript:o}=getMeaningfulScript(i,t,"output",a.redeemScript,a.witnessScript);return(0,psbtutils_1.pubkeyInScript)(e,o)}function redeemFromFinalScriptSig(e){if(!e)return;const a=bscript.decompile(e);if(!a)return;const t=a[a.length-1];if(!(!buffer$2.Buffer.isBuffer(t)||isPubkeyLike(t)||isSigLike(t)||!bscript.decompile(t)))return t}function redeemFromFinalWitnessScript(e){if(!e)return;const a=scriptWitnessToWitnessStack(e),t=a[a.length-1];if(!(isPubkeyLike(t)||!bscript.decompile(t)))return t}function compressPubkey(e){if(e.length===65){const a=e[64]&1,t=e.slice(0,33);return t[0]=2|a,t}return e.slice()}function isPubkeyLike(e){return e.length===33&&bscript.isCanonicalPubKey(e)}function isSigLike(e){return bscript.isCanonicalScriptSignature(e)}function getMeaningfulScript(e,a,t,c,i){const o=(0,psbtutils_1.isP2SHScript)(e),b=o&&c&&(0,psbtutils_1.isP2WSHScript)(c),u=(0,psbtutils_1.isP2WSHScript)(e);if(o&&c===void 0)throw new Error("scriptPubkey is P2SH but redeemScript missing");if((u||b)&&i===void 0)throw new Error("scriptPubkey or redeemScript is P2WSH but witnessScript missing");let l;return b?(l=i,checkRedeemScript(a,e,c,t),checkWitnessScript(a,c,i,t),checkInvalidP2WSH(l)):u?(l=i,checkWitnessScript(a,e,i,t),checkInvalidP2WSH(l)):o?(l=c,checkRedeemScript(a,e,c,t)):l=e,{meaningfulScript:l,type:b?"p2sh-p2wsh":o?"p2sh":u?"p2wsh":"raw"}}function checkInvalidP2WSH(e){if((0,psbtutils_1.isP2WPKH)(e)||(0,psbtutils_1.isP2SHScript)(e))throw new Error("P2WPKH or P2SH can not be contained within P2WSH")}function classifyScript(e){return(0,psbtutils_1.isP2WPKH)(e)?"witnesspubkeyhash":(0,psbtutils_1.isP2PKH)(e)?"pubkeyhash":(0,psbtutils_1.isP2MS)(e)?"multisig":(0,psbtutils_1.isP2PK)(e)?"pubkey":"nonstandard"}function range(e){return[...Array(e).keys()]}(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.initEccLib=e.Transaction=e.opcodes=e.Psbt=e.Block=e.script=e.payments=e.networks=e.crypto=e.address=void 0;const a=address$1;e.address=a;const t=crypto$2;e.crypto=t;const c=networks$4;e.networks=c;const i=payments$3;e.payments=i;const o=script$2;e.script=o;var b=block$2;Object.defineProperty(e,"Block",{enumerable:!0,get:function(){return b.Block}});var u=psbt$1;Object.defineProperty(e,"Psbt",{enumerable:!0,get:function(){return u.Psbt}});var l=ops;Object.defineProperty(e,"opcodes",{enumerable:!0,get:function(){return l.OPS}});var x=transaction$2;Object.defineProperty(e,"Transaction",{enumerable:!0,get:function(){return x.Transaction}});var g=ecc_lib;Object.defineProperty(e,"initEccLib",{enumerable:!0,get:function(){return g.initEccLib}})})(src$4);var bitcoreLibExports={},bitcoreLib={get exports(){return bitcoreLibExports},set exports(e){bitcoreLibExports=e}};const name$K="bitcore-lib",version$1="10.0.5",description$1="A pure and powerful JavaScript Bitcoin library.",author="BitPay <dev@bitpay.com>",main$1="index.js",scripts$1={test:"gulp test","test:ci":"npm run test",coverage:"gulp coverage",build:"gulp",pub:"npm run build && npm publish"},keywords$1=["bitcoin","transaction","address","p2p","ecies","cryptocurrency","blockchain","payment","bip21","bip32","bip37","bip69","bip70","multisig"],repository$1={type:"git",url:"https://github.com/bitpay/bitcore/tree/master/packages/bitcore-lib"},browser$1={request:"browser-request"},dependencies$1={bech32:"=2.0.0","bip-schnorr":"=0.6.4","bn.js":"=4.11.8",bs58:"^4.0.1","buffer-compare":"=1.1.1",elliptic:"^6.5.3",inherits:"=2.0.1",lodash:"^4.17.20"},devDependencies$1={"bitcore-build":"^10.0.5",brfs:"^2.0.1",chai:"^4.2.0",gulp:"^4.0.0",sinon:"^7.1.1"},license="MIT",gitHead="018ec774b14321dca20519277c4cd19a93532bbc",require$$0$6={name:name$K,version:version$1,description:description$1,author,main:main$1,scripts:scripts$1,keywords:keywords$1,repository:repository$1,browser:browser$1,dependencies:dependencies$1,devDependencies:devDependencies$1,license,gitHead};var errorsExports={},errors$5={get exports(){return errorsExports},set exports(e){errorsExports=e}},spec$1,hasRequiredSpec;function requireSpec(){if(hasRequiredSpec)return spec$1;hasRequiredSpec=1;var e="http://bitcore.io/";return spec$1=[{name:"InvalidB58Char",message:"Invalid Base58 character: {0} in {1}"},{name:"InvalidB58Checksum",message:"Invalid Base58 checksum for {0}"},{name:"InvalidNetwork",message:"Invalid version for network: got {0}"},{name:"InvalidState",message:"Invalid state: {0}"},{name:"NotImplemented",message:"Function {0} was not implemented yet"},{name:"InvalidNetworkArgument",message:'Invalid network: must be "livenet" or "testnet", got {0}'},{name:"InvalidArgument",message:function(){return"Invalid Argument"+(arguments[0]?": "+arguments[0]:"")+(arguments[1]?" Documentation: "+e+arguments[1]:"")}},{name:"AbstractMethodInvoked",message:"Abstract Method Invocation: {0}"},{name:"InvalidArgumentType",message:function(){return"Invalid Argument for "+arguments[2]+", expected "+arguments[1]+" but got "+typeof arguments[0]}},{name:"Unit",message:"Internal Error on Unit {0}",errors:[{name:"UnknownCode",message:"Unrecognized unit code: {0}"},{name:"InvalidRate",message:"Invalid exchange rate: {0}"}]},{name:"MerkleBlock",message:"Internal Error on MerkleBlock {0}",errors:[{name:"InvalidMerkleTree",message:"This MerkleBlock contain an invalid Merkle Tree"}]},{name:"Transaction",message:"Internal Error on Transaction {0}",errors:[{name:"Input",message:"Internal Error on Input {0}",errors:[{name:"MissingScript",message:"Need a script to create an input"},{name:"UnsupportedScript",message:"Unsupported input script type: {0}"},{name:"MissingPreviousOutput",message:"No previous output information."},{name:"BlockHeightOutOfRange",message:"Block Height can only be between 0 and 65535"},{name:"LockTimeRange",message:"Seconds needs to be more that 0 and less that 33553920"}]},{name:"NeedMoreInfo",message:"{0}"},{name:"InvalidSorting",message:"The sorting function provided did not return the change output as one of the array elements"},{name:"InvalidOutputAmountSum",message:"{0}"},{name:"MissingSignatures",message:"Some inputs have not been fully signed"},{name:"InvalidIndex",message:"Invalid index: {0} is not between 0, {1}"},{name:"UnableToVerifySignature",message:"Unable to verify signature: {0}"},{name:"DustOutputs",message:"Dust amount detected in one output"},{name:"InvalidSatoshis",message:"Output satoshis are invalid"},{name:"FeeError",message:"Internal Error on Fee {0}",errors:[{name:"TooSmall",message:"Fee is too small: {0}"},{name:"TooLarge",message:"Fee is too large: {0}"},{name:"Different",message:"Unspent value is different from specified fee: {0}"}]},{name:"ChangeAddressMissing",message:"Change address is missing"},{name:"BlockHeightTooHigh",message:"Block Height can be at most 2^32 -1"},{name:"NLockTimeOutOfRange",message:"Block Height can only be between 0 and 499 999 999"},{name:"LockTimeTooEarly",message:"Lock Time can't be earlier than UNIX date 500 000 000"}]},{name:"Script",message:"Internal Error on Script {0}",errors:[{name:"UnrecognizedAddress",message:"Expected argument {0} to be an address"},{name:"CantDeriveAddress",message:"Can't derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out."},{name:"InvalidBuffer",message:"Invalid script buffer: can't parse valid script from given buffer {0}"}]},{name:"HDPrivateKey",message:"Internal Error on HDPrivateKey {0}",errors:[{name:"InvalidDerivationArgument",message:"Invalid derivation argument {0}, expected string, or number and boolean"},{name:"InvalidEntropyArgument",message:"Invalid entropy: must be an hexa string or binary buffer, got {0}",errors:[{name:"TooMuchEntropy",message:'Invalid entropy: more than 512 bits is non standard, got "{0}"'},{name:"NotEnoughEntropy",message:'Invalid entropy: at least 128 bits needed, got "{0}"'}]},{name:"InvalidLength",message:"Invalid length for xprivkey string in {0}"},{name:"InvalidPath",message:"Invalid derivation path: {0}"},{name:"UnrecognizedArgument",message:'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got "{0}"'}]},{name:"HDPublicKey",message:"Internal Error on HDPublicKey {0}",errors:[{name:"ArgumentIsPrivateExtended",message:"Argument is an extended private key: {0}"},{name:"InvalidDerivationArgument",message:"Invalid derivation argument: got {0}"},{name:"InvalidLength",message:'Invalid length for xpubkey: got "{0}"'},{name:"InvalidPath",message:'Invalid derivation path, it should look like: "m/1/100", got "{0}"'},{name:"InvalidIndexCantDeriveHardened",message:"Invalid argument: creating a hardened path requires an HDPrivateKey"},{name:"MustSupplyArgument",message:"Must supply an argument to create a HDPublicKey"},{name:"UnrecognizedArgument",message:"Invalid argument for creation, must be string, json, buffer, or object"}]}],spec$1}var _$g=lodashExports;function format$1(e,a){return e.replace("{0}",a[0]).replace("{1}",a[1]).replace("{2}",a[2])}var traverseNode=function(e,a){var t=function(){if(_$g.isString(a.message))this.message=format$1(a.message,arguments);else if(_$g.isFunction(a.message))this.message=a.message.apply(null,arguments);else throw new Error("Invalid error definition for "+a.name);this.stack=this.message+`
`+new Error().stack};return t.prototype=Object.create(e.prototype),t.prototype.name=e.prototype.name+a.name,e[a.name]=t,a.errors&&childDefinitions(t,a.errors),t},childDefinitions=function(e,a){_$g.each(a,function(t){traverseNode(e,t)})},traverseRoot=function(e,a){return childDefinitions(e,a),e},bitcore$2={};bitcore$2.Error=function(){this.message="Internal error",this.stack=this.message+`
`+new Error().stack};bitcore$2.Error.prototype=Object.create(Error.prototype);bitcore$2.Error.prototype.name="bitcore.Error";var data=requireSpec();traverseRoot(bitcore$2.Error,data);errors$5.exports=bitcore$2.Error;errorsExports.extend=function(e){return traverseNode(bitcore$2.Error,e)};var errors$4=errorsExports,_$f=lodashExports,preconditions={checkState:function(e,a){if(!e)throw new errors$4.InvalidState(a)},checkArgument:function(e,a,t,c){if(!e)throw new errors$4.InvalidArgument(a,t,c)},checkArgumentType:function(e,a,t){if(t=t||"(unknown name)",_$f.isString(a)){if(a==="Buffer"){var c=buffer$2;if(!c.Buffer.isBuffer(e))throw new errors$4.InvalidArgumentType(e,a,t)}else if(typeof e!==a)throw new errors$4.InvalidArgumentType(e,a,t)}else if(!(e instanceof a))throw new errors$4.InvalidArgumentType(e,a.name,t)}},BN$9=bnExports$2,$$9=preconditions,_$e=lodashExports,reversebuf=function(e){for(var a=buffer$2.Buffer.alloc(e.length),t=0;t<e.length;t++)a[t]=e[e.length-1-t];return a};BN$9.Zero=new BN$9(0);BN$9.One=new BN$9(1);BN$9.Minus1=new BN$9(-1);BN$9.fromNumber=function(e){return $$9.checkArgument(_$e.isNumber(e)),new BN$9(e)};BN$9.fromString=function(e,a){return $$9.checkArgument(_$e.isString(e)),new BN$9(e,a)};BN$9.fromBuffer=function(e,a){typeof a<"u"&&a.endian==="little"&&(e=reversebuf(e));var t=e.toString("hex"),c=new BN$9(t,16);return c};BN$9.fromSM=function(e,a){var t;if(e.length===0)return BN$9.fromBuffer(buffer$2.Buffer.from([0]));var c="big";return a&&(c=a.endian),c==="little"&&(e=reversebuf(e)),e[0]&128?(e[0]=e[0]&127,t=BN$9.fromBuffer(e),t.neg().copy(t)):t=BN$9.fromBuffer(e),t};BN$9.prototype.toNumber=function(){return parseInt(this.toString(10),10)};BN$9.prototype.toBuffer=function(e){var a,t;if(e&&e.size){t=this.toString(16,2);var c=t.length/2;a=buffer$2.Buffer.from(t,"hex"),c===e.size?a=a:c>e.size?a=BN$9.trim(a,c):c<e.size&&(a=BN$9.pad(a,c,e.size))}else t=this.toString(16,2),a=buffer$2.Buffer.from(t,"hex");return typeof e<"u"&&e.endian==="little"&&(a=reversebuf(a)),a};BN$9.prototype.toSMBigEndian=function(){var e;return this.cmp(BN$9.Zero)===-1?(e=this.neg().toBuffer(),e[0]&128?e=buffer$2.Buffer.concat([buffer$2.Buffer.from([128]),e]):e[0]=e[0]|128):(e=this.toBuffer(),e[0]&128&&(e=buffer$2.Buffer.concat([buffer$2.Buffer.from([0]),e]))),e.length===1&e[0]===0&&(e=buffer$2.Buffer.from([])),e};BN$9.prototype.toSM=function(e){var a=e?e.endian:"big",t=this.toSMBigEndian();return a==="little"&&(t=reversebuf(t)),t};BN$9.fromScriptNumBuffer=function(e,a,t){var c=t||4;if($$9.checkArgument(e.length<=c,new Error("script number overflow")),a&&e.length>0&&!(e[e.length-1]&127)&&(e.length<=1||!(e[e.length-2]&128)))throw new Error("non-minimally encoded script number");return BN$9.fromSM(e,{endian:"little"})};BN$9.prototype.toScriptNumBuffer=function(){return this.toSM({endian:"little"})};BN$9.trim=function(e,a){return e.slice(a-e.length,e.length)};BN$9.pad=function(e,a,t){for(var c=buffer$2.Buffer.alloc(t),i=0;i<e.length;i++)c[c.length-1-i]=e[e.length-1-i];for(i=0;i<t-a;i++)c[i]=0;return c};var bn=BN$9,bufferExports={},buffer$1={get exports(){return bufferExports},set exports(e){bufferExports=e}},_$d=lodashExports,isHexa=function(a){return _$d.isString(a)?/^[0-9a-fA-F]+$/.test(a):!1},js={isValidJSON:function(a){var t;if(!_$d.isString(a))return!1;try{t=JSON.parse(a)}catch{return!1}return typeof t=="object"},isHexa,isHexaString:isHexa,cloneArray:function(e){return[].concat(e)},defineImmutable:function(a,t){return Object.keys(t).forEach(function(c){Object.defineProperty(a,c,{configurable:!1,enumerable:!0,value:t[c]})}),a},isNaturalNumber:function(a){return typeof a=="number"&&isFinite(a)&&Math.floor(a)===a&&a>=0}};(function(e){var a=buffer$2;requireAssert();var t=preconditions;function c(i,o){if(i.length!==o.length)return!1;for(var b=i.length,u=0;u<b;u++)if(i[u]!==o[u])return!1;return!0}e.exports={fill:function(o,b){t.checkArgumentType(o,"Buffer","buffer"),t.checkArgumentType(b,"number","value");for(var u=o.length,l=0;l<u;l++)o[l]=b;return o},copy:function(i){var o=buffer$2.Buffer.alloc(i.length);return i.copy(o),o},isBuffer:function(o){return a.Buffer.isBuffer(o)||o instanceof Uint8Array},emptyBuffer:function(o){t.checkArgumentType(o,"number","bytes");for(var b=buffer$2.Buffer.alloc(o),u=0;u<o;u++)b.write("\0",u);return b},concat:a.Buffer.concat,equals:c,equal:c,integerAsSingleByteBuffer:function(o){return t.checkArgumentType(o,"number","integer"),buffer$2.Buffer.from([o&255])},integerAsBuffer:function(o){t.checkArgumentType(o,"number","integer");var b=[];return b.push(o>>24&255),b.push(o>>16&255),b.push(o>>8&255),b.push(o&255),buffer$2.Buffer.from(b)},integerFromBuffer:function(o){return t.checkArgumentType(o,"Buffer","buffer"),o[0]<<24|o[1]<<16|o[2]<<8|o[3]},integerFromSingleByteBuffer:function(o){return t.checkArgumentType(o,"Buffer","buffer"),o[0]},bufferToHex:function(o){return t.checkArgumentType(o,"Buffer","buffer"),o.toString("hex")},reverse:function(o){return buffer$2.Buffer.from(o).reverse()}},e.exports.NULL_HASH=e.exports.fill(buffer$2.Buffer.alloc(32),0),e.exports.EMPTY_BUFFER=buffer$2.Buffer.alloc(0)})(buffer$1);var BN$8=bn,BufferUtil$7=bufferExports,EC$1=requireElliptic().ec,ec$1=new EC$1("secp256k1"),ecPoint=ec$1.curve.point.bind(ec$1.curve),ecPointFromX=ec$1.curve.pointFromX.bind(ec$1.curve),Point$3=function(a,t,c){try{var i=ecPoint(a,t,c)}catch{throw new Error("Invalid Point")}return i.validate(),i};Point$3.prototype=Object.getPrototypeOf(ec$1.curve.point());Point$3.fromX=function(a,t){try{var c=ecPointFromX(t,a)}catch{throw new Error("Invalid X")}return c.validate(),c};Point$3.getG=function(){return ec$1.curve.g};Point$3.getN=function(){return new BN$8(ec$1.curve.n.toArray())};Point$3.prototype._getX=Point$3.prototype.getX;Point$3.prototype.getX=function(){return new BN$8(this._getX().toArray())};Point$3.prototype._getY=Point$3.prototype.getY;Point$3.prototype.getY=function(){return new BN$8(this._getY().toArray())};Point$3.prototype.validate=function(){if(this.isInfinity())throw new Error("Point cannot be equal to Infinity");var a;try{a=ecPointFromX(this.getX(),this.getY().isOdd())}catch{throw new Error("Point does not lie on the curve")}if(a.y.cmp(this.y)!==0)throw new Error("Invalid y value for curve.");if(!this.mul(Point$3.getN()).isInfinity())throw new Error("Point times N must be infinity");return this};Point$3.pointToCompressed=function(a){var t=a.getX().toBuffer({size:32}),c=a.getY().toBuffer({size:32}),i,o=c[c.length-1]%2;return o?i=buffer$2.Buffer.from([3]):i=buffer$2.Buffer.from([2]),BufferUtil$7.concat([i,t])};var point$1=Point$3,BN$7=bn,_$c=lodashExports,$$8=preconditions,BufferUtil$6=bufferExports,JSUtil$3=js,Signature$1=function e(a,t){if(!(this instanceof e))return new e(a,t);if(a instanceof BN$7)this.set({r:a,s:t});else if(a){var c=a;this.set(c)}};Signature$1.prototype.set=function(e){return this.r=e.r||this.r||void 0,this.s=e.s||this.s||void 0,this.i=typeof e.i<"u"?e.i:this.i,this.compressed=typeof e.compressed<"u"?e.compressed:this.compressed,this.nhashtype=e.nhashtype||this.nhashtype||void 0,this};Signature$1.fromCompact=function(e){$$8.checkArgument(BufferUtil$6.isBuffer(e),"Argument is expected to be a Buffer");var a=new Signature$1,t=!0,c=e.slice(0,1)[0]-27-4;c<0&&(t=!1,c=c+4);var i=e.slice(1,33),o=e.slice(33,65);return $$8.checkArgument(c===0||c===1||c===2||c===3,new Error("i must be 0, 1, 2, or 3")),$$8.checkArgument(i.length===32,new Error("r must be 32 bytes")),$$8.checkArgument(o.length===32,new Error("s must be 32 bytes")),a.compressed=t,a.i=c,a.r=BN$7.fromBuffer(i),a.s=BN$7.fromBuffer(o),a};Signature$1.fromDER=Signature$1.fromBuffer=function(e,a){var t=Signature$1.parseDER(e,a),c=new Signature$1;return c.r=t.r,c.s=t.s,c};Signature$1.fromTxFormat=function(e){var a=e.readUInt8(e.length-1),t=e.slice(0,e.length-1),c=new Signature$1.fromDER(t,!1);return c.nhashtype=a,c};Signature$1.fromString=function(e){var a=buffer$2.Buffer.from(e,"hex");return Signature$1.fromDER(a)};Signature$1.parseDER=function(e,a){$$8.checkArgument(BufferUtil$6.isBuffer(e),new Error("DER formatted signature should be a buffer")),_$c.isUndefined(a)&&(a=!0);var t=e[0];$$8.checkArgument(t===48,new Error("Header byte should be 0x30"));var c=e[1],i=e.slice(2).length;$$8.checkArgument(!a||c===i,new Error("Length byte should length of what follows")),c=c<i?c:i;var o=e[2+0];$$8.checkArgument(o===2,new Error("Integer byte for r should be 0x02"));var b=e[2+1],u=e.slice(2+2,2+2+b),l=BN$7.fromBuffer(u),x=e[2+1+1]===0;$$8.checkArgument(b===u.length,new Error("Length of r incorrect"));var g=e[2+2+b+0];$$8.checkArgument(g===2,new Error("Integer byte for s should be 0x02"));var v=e[2+2+b+1],E=e.slice(2+2+b+2,2+2+b+2+v),S=BN$7.fromBuffer(E),T=e[2+2+b+2+2]===0;$$8.checkArgument(v===E.length,new Error("Length of s incorrect"));var I=2+2+b+2+v;$$8.checkArgument(c===I-2,new Error("Length of signature incorrect"));var A={header:t,length:c,rheader:o,rlength:b,rneg:x,rbuf:u,r:l,sheader:g,slength:v,sneg:T,sbuf:E,s:S};return A};Signature$1.prototype.toCompact=function(e,a){if(e=typeof e=="number"?e:this.i,a=typeof a=="boolean"?a:this.compressed,!(e===0||e===1||e===2||e===3))throw new Error("i must be equal to 0, 1, 2, or 3");var t=e+27+4;a===!1&&(t=t-4);var c=buffer$2.Buffer.from([t]),i=this.r.toBuffer({size:32}),o=this.s.toBuffer({size:32});return buffer$2.Buffer.concat([c,i,o])};Signature$1.prototype.toBuffer=Signature$1.prototype.toDER=function(){var e=this.r.toBuffer(),a=this.s.toBuffer(),t=!!(e[0]&128),c=!!(a[0]&128),i=t?buffer$2.Buffer.concat([buffer$2.Buffer.from([0]),e]):e,o=c?buffer$2.Buffer.concat([buffer$2.Buffer.from([0]),a]):a,b=i.length,u=o.length,l=2+b+2+u,x=2,g=2,v=48,E=buffer$2.Buffer.concat([buffer$2.Buffer.from([v,l,x,b]),i,buffer$2.Buffer.from([g,u]),o]);return E};Signature$1.prototype.toString=function(){var e=this.toDER();return e.toString("hex")};Signature$1.isTxDER=function(e){if(e.length<9||e.length>73||e[0]!==48||e[1]!==e.length-3)return!1;var a=e[3];if(5+a>=e.length)return!1;var t=e[5+a];if(a+t+7!==e.length)return!1;var c=e.slice(4);if(e[4-2]!==2||a===0||c[0]&128||a>1&&c[0]===0&&!(c[1]&128))return!1;var i=e.slice(6+a);return!(e[6+a-2]!==2||t===0||i[0]&128||t>1&&i[0]===0&&!(i[1]&128))};Signature$1.prototype.hasLowS=function(){return!(this.s.lt(new BN$7(1))||this.s.gt(new BN$7("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0","hex")))};Signature$1.prototype.hasDefinedHashtype=function(){if(!JSUtil$3.isNaturalNumber(this.nhashtype))return!1;var e=this.nhashtype&~Signature$1.SIGHASH_ANYONECANPAY;return!(e<Signature$1.SIGHASH_ALL||e>Signature$1.SIGHASH_SINGLE)};Signature$1.prototype.toTxFormat=function(){var e=this.toDER(),a=buffer$2.Buffer.alloc(1);return a.writeUInt8(this.nhashtype,0),buffer$2.Buffer.concat([e,a])};Signature$1.SIGHASH_ALL=1;Signature$1.SIGHASH_NONE=2;Signature$1.SIGHASH_SINGLE=3;Signature$1.SIGHASH_ANYONECANPAY=128;var signature$2=Signature$1,hashExports={},hash$2={get exports(){return hashExports},set exports(e){hashExports=e}};(function(e){var a=requireCryptoBrowserify(),t=bufferExports,c=preconditions,i=e.exports;i.sha1=function(o){return c.checkArgument(t.isBuffer(o)),a.createHash("sha1").update(o).digest()},i.sha1.blocksize=512,i.sha256=function(o){return c.checkArgument(t.isBuffer(o)),a.createHash("sha256").update(o).digest()},i.sha256.blocksize=512,i.sha256sha256=function(o){return c.checkArgument(t.isBuffer(o)),i.sha256(i.sha256(o))},i.ripemd160=function(o){return c.checkArgument(t.isBuffer(o)),a.createHash("ripemd160").update(o).digest()},i.sha256ripemd160=function(o){return c.checkArgument(t.isBuffer(o)),i.ripemd160(i.sha256(o))},i.sha512=function(o){return c.checkArgument(t.isBuffer(o)),a.createHash("sha512").update(o).digest()},i.sha512.blocksize=1024,i.hmac=function(o,b,u){c.checkArgument(t.isBuffer(b)),c.checkArgument(t.isBuffer(u)),c.checkArgument(o.blocksize);var l=o.blocksize/8;if(u.length>l)u=o(u);else if(u<l){var x=buffer$2.Buffer.alloc(l);x.fill(0),u.copy(x),u=x}var g=buffer$2.Buffer.alloc(l);g.fill(92);var v=buffer$2.Buffer.alloc(l);v.fill(54);for(var E=buffer$2.Buffer.alloc(l),S=buffer$2.Buffer.alloc(l),T=0;T<l;T++)E[T]=g[T]^u[T],S[T]=v[T]^u[T];return o(buffer$2.Buffer.concat([E,o(buffer$2.Buffer.concat([S,b]))]))},i.sha256hmac=function(o,b){return i.hmac(i.sha256,o,b)},i.sha512hmac=function(o,b){return i.hmac(i.sha512,o,b)}})(hash$2);var _$b=lodashExports,BufferUtil$5=bufferExports,JSUtil$2=js,networks$2=[],networkMaps={};function Network(){}Network.prototype.toString=function(){return this.name};function get(e,a){if(~networks$2.indexOf(e))return e;if(a){_$b.isArray(a)||(a=[a]);var t=function(i){return networks$2[c][i]===e};for(var c in networks$2)if(_$b.some(a,t))return networks$2[c];return}return networkMaps[e]&&networkMaps[e].length>=1?networkMaps[e][0]:networkMaps[e]}function addNetwork(e){var a=new Network;return JSUtil$2.defineImmutable(a,{name:e.name,alias:e.alias,pubkeyhash:e.pubkeyhash,privatekey:e.privatekey,scripthash:e.scripthash,bech32prefix:e.bech32prefix,xpubkey:e.xpubkey,xprivkey:e.xprivkey}),e.networkMagic&&JSUtil$2.defineImmutable(a,{networkMagic:BufferUtil$5.integerAsBuffer(e.networkMagic)}),e.port&&JSUtil$2.defineImmutable(a,{port:e.port}),e.dnsSeeds&&JSUtil$2.defineImmutable(a,{dnsSeeds:e.dnsSeeds}),_$b.each(a,function(t){!_$b.isUndefined(t)&&!_$b.isObject(t)&&(networkMaps[t]||(networkMaps[t]=[]),networkMaps[t].push(a))}),networks$2.push(a),a}function removeNetwork(e){typeof e!="object"&&(e=get(e));for(var a=0;a<networks$2.length;a++)networks$2[a]===e&&networks$2.splice(a,1);for(var t in networkMaps)if(networkMaps[t].length){const c=networkMaps[t].indexOf(e);c>=0&&networkMaps[t].splice(c,1),networkMaps[t].length===0&&delete networkMaps[t]}else networkMaps[t]===e&&delete networkMaps[t]}addNetwork({name:"livenet",alias:"mainnet",pubkeyhash:0,privatekey:128,scripthash:5,bech32prefix:"bc",xpubkey:76067358,xprivkey:76066276,networkMagic:4190024921,port:8333,dnsSeeds:["seed.bitcoin.sipa.be","dnsseed.bluematt.me","dnsseed.bitcoin.dashjr.org","seed.bitcoinstats.com","seed.bitnodes.io","bitseed.xf2.org"]});var livenet=get("livenet");addNetwork({name:"testnet",alias:"test",pubkeyhash:111,privatekey:239,scripthash:196,bech32prefix:"tb",xpubkey:70617039,xprivkey:70615956,networkMagic:185665799,port:18333,dnsSeeds:["testnet-seed.bitcoin.petertodd.org","testnet-seed.bluematt.me","testnet-seed.alexykot.me","testnet-seed.bitcoin.schildbach.de"]});var testnet=get("testnet");addNetwork({name:"regtest",alias:"dev",pubkeyhash:111,privatekey:239,scripthash:196,bech32prefix:"bcrt",xpubkey:70617039,xprivkey:70615956,networkMagic:4206867930,port:18444,dnsSeeds:[]});var regtest=get("regtest");function enableRegtest(){testnet.regtestEnabled=!0}function disableRegtest(){testnet.regtestEnabled=!1}var networks_1={add:addNetwork,remove:removeNetwork,defaultNetwork:livenet,livenet,mainnet:livenet,testnet,regtest,get,enableRegtest,disableRegtest},_$a=lodashExports,bs58=bs58$1,buffer=buffer$2,ALPHABET="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split(""),Base58$1=function e(a){if(!(this instanceof e))return new e(a);if(buffer$2.Buffer.isBuffer(a)){var t=a;this.fromBuffer(t)}else if(typeof a=="string"){var c=a;this.fromString(c)}else a&&this.set(a)};Base58$1.validCharacters=function(a){return buffer.Buffer.isBuffer(a)&&(a=a.toString()),_$a.every(_$a.map(a,function(t){return _$a.includes(ALPHABET,t)}))};Base58$1.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this};Base58$1.encode=function(e){if(!buffer.Buffer.isBuffer(e))throw new Error("Input should be a buffer");return bs58.encode(e)};Base58$1.decode=function(e){if(typeof e!="string")throw new Error("Input should be a string");return buffer$2.Buffer.from(bs58.decode(e))};Base58$1.prototype.fromBuffer=function(e){return this.buf=e,this};Base58$1.prototype.fromString=function(e){var a=Base58$1.decode(e);return this.buf=a,this};Base58$1.prototype.toBuffer=function(){return this.buf};Base58$1.prototype.toString=function(){return Base58$1.encode(this.buf)};var base58=Base58$1,_$9=lodashExports,Base58=base58,sha256sha256$1=hashExports.sha256sha256,Base58Check=function e(a){if(!(this instanceof e))return new e(a);if(buffer$2.Buffer.isBuffer(a)){var t=a;this.fromBuffer(t)}else if(typeof a=="string"){var c=a;this.fromString(c)}else a&&this.set(a)};Base58Check.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this};Base58Check.validChecksum=function(a,t){return _$9.isString(a)&&(a=buffer$2.Buffer.from(Base58.decode(a))),_$9.isString(t)&&(t=buffer$2.Buffer.from(Base58.decode(t))),t||(t=a.slice(-4),a=a.slice(0,-4)),Base58Check.checksum(a).toString("hex")===t.toString("hex")};Base58Check.decode=function(e){if(typeof e!="string")throw new Error("Input must be a string");var a=buffer$2.Buffer.from(Base58.decode(e));if(a.length<4)throw new Error("Input string too short");var t=a.slice(0,-4),c=a.slice(-4),i=sha256sha256$1(t),o=i.slice(0,4);if(c.toString("hex")!==o.toString("hex"))throw new Error("Checksum mismatch");return t};Base58Check.checksum=function(e){return sha256sha256$1(e).slice(0,4)};Base58Check.encode=function(e){if(!buffer$2.Buffer.isBuffer(e))throw new Error("Input must be a buffer");var a=buffer$2.Buffer.alloc(e.length+4),t=Base58Check.checksum(e);return e.copy(a),t.copy(a,e.length),Base58.encode(a)};Base58Check.prototype.fromBuffer=function(e){return this.buf=e,this};Base58Check.prototype.fromString=function(e){var a=Base58Check.decode(e);return this.buf=a,this};Base58Check.prototype.toBuffer=function(){return this.buf};Base58Check.prototype.toString=function(){return Base58Check.encode(this.buf)};var base58check=Base58Check,bech32=dist$2,decode$4=function(e){if(typeof e!="string")throw new Error("Input should be a string");var a;let t=bech32.bech32.fromWords,c=encodings.BECH32;try{a=bech32.bech32.decode(e)}catch(o){if(o.message.indexOf("Invalid checksum")>-1)a=bech32.bech32m.decode(e),c=encodings.BECH32M,t=bech32.bech32m.fromWords;else throw o}const i=a.words[0];if(i>=1&&c!==encodings.BECH32M)throw new Error("Version 1+ witness address must use Bech32m checksum");return{prefix:a.prefix,data:buffer$2.Buffer.from(t(a.words.slice(1))),version:i}},encode$4=function(e,a,t,c){if(typeof e!="string")throw new Error("Prefix should be a string");if(typeof a!="number")throw new Error("version should be a number");if(c&&typeof c=="string"&&(c=encodings[c.toUpperCase()]||-1),c&&!(c==encodings.BECH32||c==encodings.BECH32M))throw new Error("Invalid encoding specified");let i=c==encodings.BECH32M?bech32.bech32m:bech32.bech32,o=i.toWords(t);return o.unshift(a),i.encode(e,o)};const encodings={BECH32:1,BECH32M:2};var bech32_1={decode:decode$4,encode:encode$4,encodings},scriptExports={},script$1={get exports(){return scriptExports},set exports(e){scriptExports=e}},_$8=lodashExports,$$7=preconditions,BufferUtil$4=bufferExports,BN$6=bn,BufferReader$4=function e(a){if(!(this instanceof e))return new e(a);if(!_$8.isUndefined(a))if(buffer$2.Buffer.isBuffer(a))this.set({buf:a});else if(_$8.isString(a))this.set({buf:buffer$2.Buffer.from(a,"hex")});else if(_$8.isObject(a)){var t=a;this.set(t)}else throw new TypeError("Unrecognized argument for BufferReader")};BufferReader$4.prototype.set=function(e){return this.buf=e.buf||this.buf||void 0,this.pos=e.pos||this.pos||0,this};BufferReader$4.prototype.eof=function(){return this.buf?this.pos>=this.buf.length:!0};BufferReader$4.prototype.finished=BufferReader$4.prototype.eof;BufferReader$4.prototype.read=function(e){$$7.checkArgument(!_$8.isUndefined(e),"Must specify a length");var a=this.buf.slice(this.pos,this.pos+e);return this.pos=this.pos+e,a};BufferReader$4.prototype.readAll=function(){var e=this.buf.slice(this.pos,this.buf.length);return this.pos=this.buf.length,e};BufferReader$4.prototype.readUInt8=function(){var e=this.buf.readUInt8(this.pos);return this.pos=this.pos+1,e};BufferReader$4.prototype.readUInt16BE=function(){var e=this.buf.readUInt16BE(this.pos);return this.pos=this.pos+2,e};BufferReader$4.prototype.readUInt16LE=function(){var e=this.buf.readUInt16LE(this.pos);return this.pos=this.pos+2,e};BufferReader$4.prototype.readUInt32BE=function(){var e=this.buf.readUInt32BE(this.pos);return this.pos=this.pos+4,e};BufferReader$4.prototype.readUInt32LE=function(){var e=this.buf.readUInt32LE(this.pos);return this.pos=this.pos+4,e};BufferReader$4.prototype.readInt32LE=function(){var e=this.buf.readInt32LE(this.pos);return this.pos=this.pos+4,e};BufferReader$4.prototype.readUInt64BEBN=function(){var e=this.buf.slice(this.pos,this.pos+8),a=BN$6.fromBuffer(e);return this.pos=this.pos+8,a};BufferReader$4.prototype.readUInt64LEBN=function(){var e=this.buf.readUInt32LE(this.pos),a=this.buf.readUInt32LE(this.pos+4),t=a*4294967296+e,c;if(t<=9007199254740991)c=new BN$6(t);else{var i=Array.prototype.slice.call(this.buf,this.pos,this.pos+8);c=new BN$6(i,10,"le")}return this.pos=this.pos+8,c};BufferReader$4.prototype.readVarintNum=function(){var e=this.readUInt8();switch(e){case 253:return this.readUInt16LE();case 254:return this.readUInt32LE();case 255:var a=this.readUInt64LEBN(),t=a.toNumber();if(t<=Math.pow(2,53))return t;throw new Error("number too large to retain precision - use readVarintBN");default:return e}};BufferReader$4.prototype.readVarLengthBuffer=function(){var e=this.readVarintNum(),a=this.read(e);return $$7.checkState(a.length===e,"Invalid length while reading varlength buffer. Expected to read: "+e+" and read "+a.length),a};BufferReader$4.prototype.readVarintBuf=function(){var e=this.buf.readUInt8(this.pos);switch(e){case 253:return this.read(1+2);case 254:return this.read(1+4);case 255:return this.read(1+8);default:return this.read(1)}};BufferReader$4.prototype.readVarintBN=function(){var e=this.readUInt8();switch(e){case 253:return new BN$6(this.readUInt16LE());case 254:return new BN$6(this.readUInt32LE());case 255:return this.readUInt64LEBN();default:return new BN$6(e)}};BufferReader$4.prototype.reverse=function(){for(var e=buffer$2.Buffer.alloc(this.buf.length),a=0;a<e.length;a++)e[a]=this.buf[this.buf.length-1-a];return this.buf=e,this};BufferReader$4.prototype.readReverse=function(e){_$8.isUndefined(e)&&(e=this.buf.length);var a=this.buf.slice(this.pos,this.pos+e);return this.pos=this.pos+e,BufferUtil$4.reverse(a)};var bufferreader=BufferReader$4,bufferUtil=bufferExports,assert$5=requireAssert(),BufferWriter$5=function e(a){if(!(this instanceof e))return new e(a);this.bufLen=0,a?this.set(a):this.bufs=[]};BufferWriter$5.prototype.set=function(e){return this.bufs=e.bufs||this.bufs||[],this.bufLen=this.bufs.reduce(function(a,t){return a+t.length},0),this};BufferWriter$5.prototype.toBuffer=function(){return this.concat()};BufferWriter$5.prototype.concat=function(){return buffer$2.Buffer.concat(this.bufs,this.bufLen)};BufferWriter$5.prototype.write=function(e){return assert$5(bufferUtil.isBuffer(e)),this.bufs.push(e),this.bufLen+=e.length,this};BufferWriter$5.prototype.writeReverse=function(e){return assert$5(bufferUtil.isBuffer(e)),this.bufs.push(bufferUtil.reverse(e)),this.bufLen+=e.length,this};BufferWriter$5.prototype.writeUInt8=function(e){var a=buffer$2.Buffer.alloc(1);return a.writeUInt8(e,0),this.write(a),this};BufferWriter$5.prototype.writeUInt16BE=function(e){var a=buffer$2.Buffer.alloc(2);return a.writeUInt16BE(e,0),this.write(a),this};BufferWriter$5.prototype.writeUInt16LE=function(e){var a=buffer$2.Buffer.alloc(2);return a.writeUInt16LE(e,0),this.write(a),this};BufferWriter$5.prototype.writeUInt32BE=function(e){var a=buffer$2.Buffer.alloc(4);return a.writeUInt32BE(e,0),this.write(a),this};BufferWriter$5.prototype.writeInt32LE=function(e){var a=buffer$2.Buffer.alloc(4);return a.writeInt32LE(e,0),this.write(a),this};BufferWriter$5.prototype.writeUInt32LE=function(e){var a=buffer$2.Buffer.alloc(4);return a.writeUInt32LE(e,0),this.write(a),this};BufferWriter$5.prototype.writeUInt64BEBN=function(e){var a=e.toBuffer({size:8});return this.write(a),this};BufferWriter$5.prototype.writeUInt64LEBN=function(e){var a=e.toBuffer({size:8});return this.writeReverse(a),this};BufferWriter$5.prototype.writeVarintNum=function(e){var a=BufferWriter$5.varintBufNum(e);return this.write(a),this};BufferWriter$5.prototype.writeVarintBN=function(e){var a=BufferWriter$5.varintBufBN(e);return this.write(a),this};BufferWriter$5.varintBufNum=function(e){var a=void 0;return e<253?(a=buffer$2.Buffer.alloc(1),a.writeUInt8(e,0)):e<65536?(a=buffer$2.Buffer.alloc(1+2),a.writeUInt8(253,0),a.writeUInt16LE(e,1)):e<4294967296?(a=buffer$2.Buffer.alloc(1+4),a.writeUInt8(254,0),a.writeUInt32LE(e,1)):(a=buffer$2.Buffer.alloc(1+8),a.writeUInt8(255,0),a.writeInt32LE(e&-1,1),a.writeUInt32LE(Math.floor(e/4294967296),5)),a};BufferWriter$5.varintBufBN=function(e){var a=void 0,t=e.toNumber();if(t<253)a=buffer$2.Buffer.alloc(1),a.writeUInt8(t,0);else if(t<65536)a=buffer$2.Buffer.alloc(1+2),a.writeUInt8(253,0),a.writeUInt16LE(t,1);else if(t<4294967296)a=buffer$2.Buffer.alloc(1+4),a.writeUInt8(254,0),a.writeUInt32LE(t,1);else{var c=new BufferWriter$5;c.writeUInt8(255),c.writeUInt64LEBN(e);var a=c.concat()}return a};var bufferwriter=BufferWriter$5,_$7=lodashExports,$$6=preconditions,BufferUtil$3=bufferExports,JSUtil$1=js;function Opcode(e){if(!(this instanceof Opcode))return new Opcode(e);var a;if(_$7.isNumber(e))a=e;else if(_$7.isString(e))a=Opcode.map[e];else throw new TypeError('Unrecognized num type: "'+typeof e+'" for Opcode');return JSUtil$1.defineImmutable(this,{num:a}),this}Opcode.fromBuffer=function(e){return $$6.checkArgument(BufferUtil$3.isBuffer(e)),new Opcode(+("0x"+e.toString("hex")))};Opcode.fromNumber=function(e){return $$6.checkArgument(_$7.isNumber(e)),new Opcode(e)};Opcode.fromString=function(e){$$6.checkArgument(_$7.isString(e));var a=Opcode.map[e];if(typeof a>"u")throw new TypeError("Invalid opcodestr");return new Opcode(a)};Opcode.prototype.toHex=function(){return this.num.toString(16)};Opcode.prototype.toBuffer=function(){return buffer$2.Buffer.from(this.toHex(),"hex")};Opcode.prototype.toNumber=function(){return this.num};Opcode.prototype.toString=function(){var e=Opcode.reverseMap[this.num];if(typeof e>"u")throw new Error("Opcode does not have a string representation");return e};Opcode.smallInt=function(e){return $$6.checkArgument(_$7.isNumber(e),"Invalid Argument: n should be number"),$$6.checkArgument(e>=0&&e<=16,"Invalid Argument: n must be between 0 and 16"),e===0?Opcode("OP_0"):new Opcode(Opcode.map.OP_1+e-1)};Opcode.map={OP_FALSE:0,OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_TRUE:81,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_CHECKLOCKTIMEVERIFY:177,OP_CHECKSEQUENCEVERIFY:178,OP_NOP1:176,OP_NOP2:177,OP_NOP3:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_PUBKEYHASH:253,OP_PUBKEY:254,OP_INVALIDOPCODE:255};Opcode.reverseMap=[];for(var k in Opcode.map)Opcode.reverseMap[Opcode.map[k]]=k;_$7.extend(Opcode,Opcode.map);Opcode.isSmallIntOp=function(e){return e instanceof Opcode&&(e=e.toNumber()),e===Opcode.map.OP_0||e>=Opcode.map.OP_1&&e<=Opcode.map.OP_16};Opcode.prototype.inspect=function(){return"<Opcode: "+this.toString()+", hex: "+this.toHex()+", decimal: "+this.num+">"};var opcode=Opcode,script,hasRequiredScript$1;function requireScript$1(){if(hasRequiredScript$1)return script;hasRequiredScript$1=1;var e=requireAddress(),a=bufferreader,t=bufferwriter,c=hashExports,i=opcode,o=requirePublickey(),b=signature$2,u=networks_1,l=preconditions,x=lodashExports,g=errorsExports,v=bufferExports,E=js,S=function T(I){if(!(this instanceof T))return new T(I);if(this.chunks=[],v.isBuffer(I))return T.fromBuffer(I);if(I instanceof e)return T.fromAddress(I);if(I instanceof T)return T.fromBuffer(I.toBuffer());if(x.isString(I))return T.fromString(I);x.isObject(I)&&x.isArray(I.chunks)&&this.set(I)};return S.VERIFY_TAPROOT=1<<17,S.prototype.set=function(T){return l.checkArgument(x.isObject(T)),l.checkArgument(x.isArray(T.chunks)),this.chunks=T.chunks,this},S.fromBuffer=function(T){var I=new S;I.chunks=[];for(var A=new a(T);!A.finished();)try{var C=A.readUInt8(),O,R;C>0&&C<i.OP_PUSHDATA1?(O=C,I.chunks.push({buf:A.read(O),len:O,opcodenum:C})):C===i.OP_PUSHDATA1?(O=A.readUInt8(),R=A.read(O),I.chunks.push({buf:R,len:O,opcodenum:C})):C===i.OP_PUSHDATA2?(O=A.readUInt16LE(),R=A.read(O),I.chunks.push({buf:R,len:O,opcodenum:C})):C===i.OP_PUSHDATA4?(O=A.readUInt32LE(),R=A.read(O),I.chunks.push({buf:R,len:O,opcodenum:C})):I.chunks.push({opcodenum:C})}catch(B){throw B instanceof RangeError?new g.Script.InvalidBuffer(T.toString("hex")):B}return I},S.prototype.toBuffer=function(){for(var T=new t,I=0;I<this.chunks.length;I++){var A=this.chunks[I],C=A.opcodenum;T.writeUInt8(A.opcodenum),A.buf&&(C<i.OP_PUSHDATA1?T.write(A.buf):C===i.OP_PUSHDATA1?(T.writeUInt8(A.len),T.write(A.buf)):C===i.OP_PUSHDATA2?(T.writeUInt16LE(A.len),T.write(A.buf)):C===i.OP_PUSHDATA4&&(T.writeUInt32LE(A.len),T.write(A.buf)))}return T.concat()},S.fromASM=function(T){var I=new S;I.chunks=[];for(var A=T.split(" "),C=0;C<A.length;){var O=A[C],R=i(O),B=R.toNumber();if(x.isUndefined(B)){var M=buffer$2.Buffer.from(A[C],"hex");I.chunks.push({buf:M,len:M.length,opcodenum:M.length}),C=C+1}else B===i.OP_PUSHDATA1||B===i.OP_PUSHDATA2||B===i.OP_PUSHDATA4?(I.chunks.push({buf:buffer$2.Buffer.from(A[C+2],"hex"),len:parseInt(A[C+1]),opcodenum:B}),C=C+3):(I.chunks.push({opcodenum:B}),C=C+1)}return I},S.fromHex=function(T){return new S(buffer$2.Buffer.from(T,"hex"))},S.fromString=function(T){if(E.isHexa(T)||T.length===0)return new S(buffer$2.Buffer.from(T,"hex"));var I=new S;I.chunks=[];for(var A=T.split(" "),C=0;C<A.length;){var O=A[C],R=i(O),B=R.toNumber();if(x.isUndefined(B))if(B=parseInt(O),B>0&&B<i.OP_PUSHDATA1)I.chunks.push({buf:buffer$2.Buffer.from(A[C+1].slice(2),"hex"),len:B,opcodenum:B}),C=C+2;else throw new Error("Invalid script: "+JSON.stringify(T));else if(B===i.OP_PUSHDATA1||B===i.OP_PUSHDATA2||B===i.OP_PUSHDATA4){if(A[C+2].slice(0,2)!=="0x")throw new Error("Pushdata data must start with 0x");I.chunks.push({buf:buffer$2.Buffer.from(A[C+2].slice(2),"hex"),len:parseInt(A[C+1]),opcodenum:B}),C=C+3}else I.chunks.push({opcodenum:B}),C=C+1}return I},S.prototype._chunkToString=function(T,I){var A=T.opcodenum,C=I==="asm",O="";if(T.buf)(!C&&A===i.OP_PUSHDATA1||A===i.OP_PUSHDATA2||A===i.OP_PUSHDATA4)&&(O=O+" "+i(A).toString()),T.len>0&&(C?O=O+" "+T.buf.toString("hex"):O=O+" "+T.len+" 0x"+T.buf.toString("hex"));else if(typeof i.reverseMap[A]<"u")C?A===0?O=O+" 0":A===79?O=O+" -1":O=O+" "+i(A).toString():O=O+" "+i(A).toString();else{var R=A.toString(16);R.length%2!==0&&(R="0"+R),C?O=O+" "+R:O=O+" 0x"+R}return O},S.prototype.toASM=function(){for(var T="",I=0;I<this.chunks.length;I++){var A=this.chunks[I];T+=this._chunkToString(A,"asm")}return T.substr(1)},S.prototype.toString=function(){for(var T="",I=0;I<this.chunks.length;I++){var A=this.chunks[I];T+=this._chunkToString(A)}return T.substr(1)},S.prototype.toHex=function(){return this.toBuffer().toString("hex")},S.prototype.inspect=function(){return"<Script: "+this.toString()+">"},S.prototype.isPublicKeyHashOut=function(){return!!(this.chunks.length===5&&this.chunks[0].opcodenum===i.OP_DUP&&this.chunks[1].opcodenum===i.OP_HASH160&&this.chunks[2].buf&&this.chunks[2].buf.length===20&&this.chunks[3].opcodenum===i.OP_EQUALVERIFY&&this.chunks[4].opcodenum===i.OP_CHECKSIG)},S.prototype.isPublicKeyHashIn=function(){if(this.chunks.length===2){var T=this.chunks[0].buf,I=this.chunks[1].buf;if(T&&T.length&&T[0]===48&&I&&I.length){var A=I[0];if((A===4||A===6||A===7)&&I.length===65)return!0;if((A===3||A===2)&&I.length===33)return!0}}return!1},S.prototype.getPublicKey=function(){return l.checkState(this.isPublicKeyOut(),"Can't retrieve PublicKey from a non-PK output"),this.chunks[0].buf},S.prototype.getPublicKeyHash=function(){if(this.isPublicKeyHashOut())return this.chunks[2].buf;if(this.isWitnessPublicKeyHashOut())return this.chunks[1].buf;throw new Error("Can't retrieve PublicKeyHash from a non-PKH output")},S.prototype.isPublicKeyOut=function(){if(this.chunks.length===2&&this.chunks[0].buf&&this.chunks[0].buf.length&&this.chunks[1].opcodenum===i.OP_CHECKSIG){var T=this.chunks[0].buf,I=T[0],A=!1;if(((I===4||I===6||I===7)&&T.length===65||(I===3||I===2)&&T.length===33)&&(A=!0),A)return o.isValid(T)}return!1},S.prototype.isPublicKeyIn=function(){if(this.chunks.length===1){var T=this.chunks[0].buf;if(T&&T.length&&T[0]===48)return!0}return!1},S.prototype.isScriptHashOut=function(){var T=this.toBuffer();return T.length===23&&T[0]===i.OP_HASH160&&T[1]===20&&T[T.length-1]===i.OP_EQUAL},S.prototype.isWitnessScriptHashOut=function(){var T=this.toBuffer();return T.length===34&&T[0]===i.OP_0&&T[1]===32},S.prototype.isWitnessPublicKeyHashOut=function(){var T=this.toBuffer();return T.length===22&&T[0]===i.OP_0&&T[1]===20},S.prototype.isTaproot=function(){var T=this.toBuffer();return T.length===34&&T[0]===i.OP_1&&T[1]===32},S.prototype.isWitnessProgram=function(T){T||(T={});var I=this.toBuffer();return I.length<4||I.length>42||I[0]!==i.OP_0&&!(I[0]>=i.OP_1&&I[0]<=i.OP_16)?!1:I.length===I[1]+2?(T.version=I[0],T.program=I.slice(2,I.length),!0):!1},S.prototype.isScriptHashIn=function(){if(this.chunks.length<=1)return!1;var T=this.chunks[this.chunks.length-1],I=T.buf;if(!I)return!1;var A;try{A=S.fromBuffer(I)}catch(O){if(O instanceof g.Script.InvalidBuffer)return!1;throw O}var C=A.classify();return C!==S.types.UNKNOWN},S.prototype.isMultisigOut=function(){return this.chunks.length>3&&i.isSmallIntOp(this.chunks[0].opcodenum)&&this.chunks.slice(1,this.chunks.length-2).every(function(T){return T.buf&&v.isBuffer(T.buf)})&&i.isSmallIntOp(this.chunks[this.chunks.length-2].opcodenum)&&this.chunks[this.chunks.length-1].opcodenum===i.OP_CHECKMULTISIG},S.prototype.isMultisigIn=function(){return this.chunks.length>=2&&this.chunks[0].opcodenum===0&&this.chunks.slice(1,this.chunks.length).every(function(T){return T.buf&&v.isBuffer(T.buf)&&b.isTxDER(T.buf)})},S.prototype.isDataOut=function(){return this.chunks.length>=1&&this.chunks[0].opcodenum===i.OP_RETURN&&(this.chunks.length===1||this.chunks.length===2&&this.chunks[1].buf&&this.chunks[1].buf.length<=S.OP_RETURN_STANDARD_SIZE&&this.chunks[1].length===this.chunks.len)},S.prototype.getData=function(){if(this.isDataOut()||this.isScriptHashOut()||this.isWitnessScriptHashOut()||this.isWitnessPublicKeyHashOut()||this.isTaproot())return x.isUndefined(this.chunks[1])?buffer$2.Buffer.alloc(0):buffer$2.Buffer.from(this.chunks[1].buf);if(this.isPublicKeyHashOut())return buffer$2.Buffer.from(this.chunks[2].buf);throw new Error("Unrecognized script type to get data from")},S.prototype.isPushOnly=function(){return x.every(this.chunks,function(T){return T.opcodenum<=i.OP_16})},S.types={},S.types.UNKNOWN="Unknown",S.types.PUBKEY_OUT="Pay to public key",S.types.PUBKEY_IN="Spend from public key",S.types.PUBKEYHASH_OUT="Pay to public key hash",S.types.PUBKEYHASH_IN="Spend from public key hash",S.types.SCRIPTHASH_OUT="Pay to script hash",S.types.SCRIPTHASH_IN="Spend from script hash",S.types.MULTISIG_OUT="Pay to multisig",S.types.MULTISIG_IN="Spend from multisig",S.types.DATA_OUT="Data push",S.OP_RETURN_STANDARD_SIZE=80,S.prototype.classify=function(){if(this._isInput)return this.classifyInput();if(this._isOutput)return this.classifyOutput();var T=this.classifyOutput();return T!=S.types.UNKNOWN?T:this.classifyInput()},S.outputIdentifiers={},S.outputIdentifiers.PUBKEY_OUT=S.prototype.isPublicKeyOut,S.outputIdentifiers.PUBKEYHASH_OUT=S.prototype.isPublicKeyHashOut,S.outputIdentifiers.MULTISIG_OUT=S.prototype.isMultisigOut,S.outputIdentifiers.SCRIPTHASH_OUT=S.prototype.isScriptHashOut,S.outputIdentifiers.DATA_OUT=S.prototype.isDataOut,S.prototype.classifyOutput=function(){for(var T in S.outputIdentifiers)if(S.outputIdentifiers[T].bind(this)())return S.types[T];return S.types.UNKNOWN},S.inputIdentifiers={},S.inputIdentifiers.PUBKEY_IN=S.prototype.isPublicKeyIn,S.inputIdentifiers.PUBKEYHASH_IN=S.prototype.isPublicKeyHashIn,S.inputIdentifiers.MULTISIG_IN=S.prototype.isMultisigIn,S.inputIdentifiers.SCRIPTHASH_IN=S.prototype.isScriptHashIn,S.prototype.classifyInput=function(){for(var T in S.inputIdentifiers)if(S.inputIdentifiers[T].bind(this)())return S.types[T];return S.types.UNKNOWN},S.prototype.isStandard=function(){return this.classify()!==S.types.UNKNOWN},S.prototype.prepend=function(T){return this._addByType(T,!0),this},S.prototype.equals=function(T){if(l.checkState(T instanceof S,"Must provide another script"),this.chunks.length!==T.chunks.length)return!1;var I;for(I=0;I<this.chunks.length;I++){if(v.isBuffer(this.chunks[I].buf)&&!v.isBuffer(T.chunks[I].buf)||v.isBuffer(this.chunks[I].buf)&&!v.equals(this.chunks[I].buf,T.chunks[I].buf))return!1;if(this.chunks[I].opcodenum!==T.chunks[I].opcodenum)return!1}return!0},S.prototype.add=function(T){return this._addByType(T,!1),this},S.prototype._addByType=function(T,I){if(typeof T=="string")this._addOpcode(T,I);else if(typeof T=="number")this._addOpcode(T,I);else if(T instanceof i)this._addOpcode(T,I);else if(v.isBuffer(T))this._addBuffer(T,I);else if(T instanceof S)this.chunks=this.chunks.concat(T.chunks);else if(typeof T=="object")this._insertAtPosition(T,I);else throw new Error("Invalid script chunk")},S.prototype._insertAtPosition=function(T,I){I?this.chunks.unshift(T):this.chunks.push(T)},S.prototype._addOpcode=function(T,I){var A;return typeof T=="number"?A=T:T instanceof i?A=T.toNumber():A=i(T).toNumber(),this._insertAtPosition({opcodenum:A},I),this},S.prototype._addBuffer=function(T,I){var A,C=T.length;if(C>=0&&C<i.OP_PUSHDATA1)A=C;else if(C<Math.pow(2,8))A=i.OP_PUSHDATA1;else if(C<Math.pow(2,16))A=i.OP_PUSHDATA2;else if(C<Math.pow(2,32))A=i.OP_PUSHDATA4;else throw new Error("You can't push that much data");return this._insertAtPosition({buf:T,len:C,opcodenum:A},I),this},S.prototype.hasCodeseparators=function(){for(var T=0;T<this.chunks.length;T++)if(this.chunks[T].opcodenum===i.OP_CODESEPARATOR)return!0;return!1},S.prototype.removeCodeseparators=function(){for(var T=[],I=0;I<this.chunks.length;I++)this.chunks[I].opcodenum!==i.OP_CODESEPARATOR&&T.push(this.chunks[I]);return this.chunks=T,this},S.buildMultisigOut=function(T,I,A){l.checkArgument(I<=T.length,"Number of required signatures must be less than or equal to the number of public keys"),A=A||{};var C=new S;C.add(i.smallInt(I)),T=x.map(T,o);var O=T;A.noSorting||(O=x.sortBy(T,function(M){return M.toString("hex")}));for(var R=0;R<O.length;R++){var B=O[R];C.add(B.toBuffer())}return C.add(i.smallInt(T.length)),C.add(i.OP_CHECKMULTISIG),C},S.buildWitnessMultisigOutFromScript=function(T){if(T instanceof S){var I=new S;return I.add(i.OP_0),I.add(c.sha256(T.toBuffer())),I}else throw new TypeError("First argument is expected to be a p2sh script")},S.buildMultisigIn=function(T,I,A,C){l.checkArgument(x.isArray(T)),l.checkArgument(x.isNumber(I)),l.checkArgument(x.isArray(A));var O=new S;return O.add(i.OP_0),x.each(A,function(R){l.checkArgument(v.isBuffer(R),"Signatures must be an array of Buffers"),O.add(R)}),O},S.buildP2SHMultisigIn=function(T,I,A,C){l.checkArgument(x.isArray(T)),l.checkArgument(x.isNumber(I)),l.checkArgument(x.isArray(A)),C=C||{};var O=new S;return O.add(i.OP_0),x.each(A,function(R){l.checkArgument(v.isBuffer(R),"Signatures must be an array of Buffers"),O.add(R)}),O.add((C.cachedMultisig||S.buildMultisigOut(T,I,C)).toBuffer()),O},S.buildPublicKeyHashOut=function(T){l.checkArgument(!x.isUndefined(T)),l.checkArgument(T instanceof o||T instanceof e||x.isString(T)),T instanceof o?T=T.toAddress():x.isString(T)&&(T=new e(T));var I=new S;return I.add(i.OP_DUP).add(i.OP_HASH160).add(T.hashBuffer).add(i.OP_EQUALVERIFY).add(i.OP_CHECKSIG),I._network=T.network,I},S.buildWitnessV0Out=function(T){l.checkArgument(!x.isUndefined(T)),l.checkArgument(T instanceof o||T instanceof e||x.isString(T)),T instanceof o?T=T.toAddress(null,e.PayToWitnessPublicKeyHash):x.isString(T)&&(T=new e(T));var I=new S;return I.add(i.OP_0).add(T.hashBuffer),I._network=T.network,I},S.buildPublicKeyOut=function(T){l.checkArgument(T instanceof o);var I=new S;return I.add(T.toBuffer()).add(i.OP_CHECKSIG),I},S.buildDataOut=function(T,I){l.checkArgument(x.isUndefined(T)||x.isString(T)||v.isBuffer(T)),x.isString(T)&&(T=buffer$2.Buffer.from(T,I));var A=new S;return A.add(i.OP_RETURN),x.isUndefined(T)||A.add(T),A},S.buildScriptHashOut=function(T){l.checkArgument(T instanceof S||T instanceof e&&T.isPayToScriptHash());var I=new S;return I.add(i.OP_HASH160).add(T instanceof e?T.hashBuffer:c.sha256ripemd160(T.toBuffer())).add(i.OP_EQUAL),I._network=T._network||T.network,I},S.buildPublicKeyIn=function(T,I){l.checkArgument(T instanceof b||v.isBuffer(T)),l.checkArgument(x.isUndefined(I)||x.isNumber(I)),T instanceof b&&(T=T.toBuffer());var A=new S;return A.add(v.concat([T,v.integerAsSingleByteBuffer(I||b.SIGHASH_ALL)])),A},S.buildPublicKeyHashIn=function(T,I,A){l.checkArgument(I instanceof b||v.isBuffer(I)),l.checkArgument(x.isUndefined(A)||x.isNumber(A)),I instanceof b&&(I=I.toBuffer());var C=new S().add(v.concat([I,v.integerAsSingleByteBuffer(A||b.SIGHASH_ALL)])).add(new o(T).toBuffer());return C},S.empty=function(){return new S},S.prototype.toScriptHashOut=function(){return S.buildScriptHashOut(this)},S.fromAddress=function(T){if(T=e(T),T.isPayToScriptHash())return S.buildScriptHashOut(T);if(T.isPayToPublicKeyHash())return S.buildPublicKeyHashOut(T);if(T.isPayToWitnessPublicKeyHash())return S.buildWitnessV0Out(T);if(T.isPayToWitnessScriptHash())return S.buildWitnessV0Out(T);throw new g.Script.UnrecognizedAddress(T)},S.prototype.getAddressInfo=function(T){if(this._isInput)return this._getInputAddressInfo();if(this._isOutput)return this._getOutputAddressInfo();var I=this._getOutputAddressInfo();return I||this._getInputAddressInfo()},S.prototype._getOutputAddressInfo=function(){var T={};if(this.isScriptHashOut())T.hashBuffer=this.getData(),T.type=e.PayToScriptHash;else if(this.isPublicKeyHashOut())T.hashBuffer=this.getData(),T.type=e.PayToPublicKeyHash;else if(this.isWitnessScriptHashOut())T.hashBuffer=this.getData(),T.type=e.PayToWitnessScriptHash;else if(this.isWitnessPublicKeyHashOut())T.hashBuffer=this.getData(),T.type=e.PayToWitnessPublicKeyHash;else if(this.isTaproot())T.hashBuffer=this.getData(),T.type=e.PayToTaproot;else return!1;return T},S.prototype._getInputAddressInfo=function(){var T={};if(this.isPublicKeyHashIn())T.hashBuffer=c.sha256ripemd160(this.chunks[1].buf),T.type=e.PayToPublicKeyHash;else if(this.isScriptHashIn())T.hashBuffer=c.sha256ripemd160(this.chunks[this.chunks.length-1].buf),T.type=e.PayToScriptHash;else return!1;return T},S.prototype.toAddress=function(T){var I=this.getAddressInfo();return I?(I.network=u.get(T)||this._network||u.defaultNetwork,new e(I)):!1},S.prototype.findAndDelete=function(T){for(var I=T.toBuffer(),A=I.toString("hex"),C=0;C<this.chunks.length;C++){var O=S({chunks:[this.chunks[C]]}),R=O.toBuffer(),B=R.toString("hex");A===B&&this.chunks.splice(C,1)}return this},S.prototype.checkMinimalPush=function(T){var I=this.chunks[T],A=I.buf,C=I.opcodenum;return A?A.length===0?C===i.OP_0:A.length===1&&A[0]>=1&&A[0]<=16?C===i.OP_1+(A[0]-1):A.length===1&&A[0]===129?C===i.OP_1NEGATE:A.length<=75?C===A.length:A.length<=255?C===i.OP_PUSHDATA1:A.length<=65535?C===i.OP_PUSHDATA2:!0:!0},S.prototype._decodeOP_N=function(T){if(T===i.OP_0)return 0;if(T>=i.OP_1&&T<=i.OP_16)return T-(i.OP_1-1);throw new Error("Invalid opcode: "+JSON.stringify(T))},S.prototype.getSignatureOperationsCount=function(T){T=x.isUndefined(T)?!0:T;var I=this,A=0,C=i.OP_INVALIDOPCODE;return x.each(I.chunks,function(R){var B=R.opcodenum;B==i.OP_CHECKSIG||B==i.OP_CHECKSIGVERIFY?A++:(B==i.OP_CHECKMULTISIG||B==i.OP_CHECKMULTISIGVERIFY)&&(T&&C>=i.OP_1&&C<=i.OP_16?A+=I._decodeOP_N(C):A+=20),C=B}),A},script=S,script}var transactionExports={},transaction$1={get exports(){return transactionExports},set exports(e){transactionExports=e}},bufferCompare,hasRequiredBufferCompare;function requireBufferCompare(){return hasRequiredBufferCompare||(hasRequiredBufferCompare=1,bufferCompare=function(e,a){if(typeof e.compare=="function")return e.compare(a);if(e===a)return 0;for(var t=e.length,c=a.length,i=0,o=Math.min(t,c);i<o&&e[i]===a[i];)++i;return i!==o&&(t=e[i],c=a[i]),t<c?-1:c<t?1:0}),bufferCompare}var output,hasRequiredOutput;function requireOutput(){if(hasRequiredOutput)return output;hasRequiredOutput=1;var e=lodashExports,a=bn,t=bufferExports,c=js,i=bufferwriter,o=requireScript(),b=preconditions,u=errorsExports,l=9007199254740991;function x(g){if(!(this instanceof x))return new x(g);if(e.isObject(g))if(this.satoshis=g.satoshis,t.isBuffer(g.script))this._scriptBuffer=g.script;else{var v;e.isString(g.script)&&c.isHexa(g.script)?v=buffer$2.Buffer.from(g.script,"hex"):v=g.script,this.setScript(v)}else throw new TypeError("Unrecognized argument for Output")}return Object.defineProperty(x.prototype,"script",{configurable:!1,enumerable:!0,get:function(){return this._script?this._script:(this.setScriptFromBuffer(this._scriptBuffer),this._script)}}),Object.defineProperty(x.prototype,"satoshis",{configurable:!1,enumerable:!0,get:function(){return this._satoshis},set:function(g){g instanceof a?(this._satoshisBN=g,this._satoshis=g.toNumber()):e.isString(g)?(this._satoshis=parseInt(g),this._satoshisBN=a.fromNumber(this._satoshis)):(b.checkArgument(c.isNaturalNumber(g),"Output satoshis is not a natural number"),this._satoshisBN=a.fromNumber(g),this._satoshis=g),b.checkState(c.isNaturalNumber(this._satoshis),"Output satoshis is not a natural number")}}),x.prototype.invalidSatoshis=function(){return this._satoshis>l?"transaction txout satoshis greater than max safe integer":this._satoshis!==this._satoshisBN.toNumber()?"transaction txout satoshis has corrupted value":this._satoshis<0?"transaction txout negative":!1},x.prototype.toObject=x.prototype.toJSON=function(){var v={satoshis:this.satoshis};return v.script=this._scriptBuffer.toString("hex"),v},x.fromObject=function(g){return new x(g)},x.prototype.setScriptFromBuffer=function(g){this._scriptBuffer=g;try{this._script=o.fromBuffer(this._scriptBuffer),this._script._isOutput=!0}catch(v){if(v instanceof u.Script.InvalidBuffer)this._script=null;else throw v}},x.prototype.setScript=function(g){if(g instanceof o)this._scriptBuffer=g.toBuffer(),this._script=g,this._script._isOutput=!0;else if(e.isString(g))this._script=o.fromString(g),this._scriptBuffer=this._script.toBuffer(),this._script._isOutput=!0;else if(t.isBuffer(g))this.setScriptFromBuffer(g);else throw new TypeError("Invalid argument type: script");return this},x.prototype.inspect=function(){var g;return this.script?g=this.script.inspect():g=this._scriptBuffer.toString("hex"),"<Output ("+this.satoshis+" sats) "+g+">"},x.fromBufferReader=function(g){var v={};v.satoshis=g.readUInt64LEBN();var E=g.readVarintNum();return E!==0?v.script=g.read(E):v.script=buffer$2.Buffer.from([]),new x(v)},x.prototype.toBufferWriter=function(g){g||(g=new i),g.writeUInt64LEBN(this._satoshisBN);var v=this._scriptBuffer;return g.writeVarintNum(v.length),g.write(v),g},output=x,output}const name$J="bigi",version="1.4.2",description="Big integers.",keywords=["cryptography","math","bitcoin","arbitrary","precision","arithmetic","big","integer","int","number","biginteger","bigint","bignumber","decimal","float"],devDependencies={coveralls:"^2.11.2",istanbul:"^0.3.5",jshint:"^2.5.1",mocha:"^2.1.0",mochify:"^2.1.0"},repository={url:"https://github.com/cryptocoinjs/bigi",type:"git"},main="./lib/index.js",scripts={"browser-test":"./node_modules/.bin/mochify --wd -R spec",test:"./node_modules/.bin/_mocha -- test/*.js",jshint:"./node_modules/.bin/jshint --config jshint.json lib/*.js ; true",unit:"./node_modules/.bin/mocha",coverage:"./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",coveralls:"npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info"},dependencies={},testling={files:"test/*.js",harness:"mocha",browsers:["ie/9..latest","firefox/latest","chrome/latest","safari/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},require$$0$5={name:name$J,version,description,keywords,devDependencies,repository,main,scripts,dependencies,testling};function BigInteger$9(e,a,t){if(!(this instanceof BigInteger$9))return new BigInteger$9(e,a,t);e!=null&&(typeof e=="number"?this.fromNumber(e,a,t):a==null&&typeof e!="string"?this.fromString(e,256):this.fromString(e,a))}var proto=BigInteger$9.prototype;proto.__bigi=require$$0$5.version;BigInteger$9.isBigInteger=function(e,a){return e&&e.__bigi&&(!a||e.__bigi===proto.__bigi)};var dbits;function am1(e,a,t,c,i,o){for(;--o>=0;){var b=a*this[e++]+t[c]+i;i=Math.floor(b/67108864),t[c++]=b&67108863}return i}BigInteger$9.prototype.am=am1;dbits=26;BigInteger$9.prototype.DB=dbits;BigInteger$9.prototype.DM=(1<<dbits)-1;var DV=BigInteger$9.prototype.DV=1<<dbits,BI_FP=52;BigInteger$9.prototype.FV=Math.pow(2,BI_FP);BigInteger$9.prototype.F1=BI_FP-dbits;BigInteger$9.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz",BI_RC=new Array,rr,vv;rr="0".charCodeAt(0);for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr="a".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr="A".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(e){return BI_RM.charAt(e)}function intAt(e,a){var t=BI_RC[e.charCodeAt(a)];return t??-1}function bnpCopyTo(e){for(var a=this.t-1;a>=0;--a)e[a]=this[a];e.t=this.t,e.s=this.s}function bnpFromInt(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+DV:this.t=0}function nbv(e){var a=new BigInteger$9;return a.fromInt(e),a}function bnpFromString(e,a){var t=this,c;if(a==16)c=4;else if(a==8)c=3;else if(a==256)c=8;else if(a==2)c=1;else if(a==32)c=5;else if(a==4)c=2;else{t.fromRadix(e,a);return}t.t=0,t.s=0;for(var i=e.length,o=!1,b=0;--i>=0;){var u=c==8?e[i]&255:intAt(e,i);if(u<0){e.charAt(i)=="-"&&(o=!0);continue}o=!1,b==0?t[t.t++]=u:b+c>t.DB?(t[t.t-1]|=(u&(1<<t.DB-b)-1)<<b,t[t.t++]=u>>t.DB-b):t[t.t-1]|=u<<b,b+=c,b>=t.DB&&(b-=t.DB)}c==8&&e[0]&128&&(t.s=-1,b>0&&(t[t.t-1]|=(1<<t.DB-b)-1<<b)),t.clamp(),o&&BigInteger$9.ZERO.subTo(t,t)}function bnpClamp(){for(var e=this.s&this.DM;this.t>0&&this[this.t-1]==e;)--this.t}function bnToString(e){var a=this;if(a.s<0)return"-"+a.negate().toString(e);var t;if(e==16)t=4;else if(e==8)t=3;else if(e==2)t=1;else if(e==32)t=5;else if(e==4)t=2;else return a.toRadix(e);var c=(1<<t)-1,i,o=!1,b="",u=a.t,l=a.DB-u*a.DB%t;if(u-- >0)for(l<a.DB&&(i=a[u]>>l)>0&&(o=!0,b=int2char(i));u>=0;)l<t?(i=(a[u]&(1<<l)-1)<<t-l,i|=a[--u]>>(l+=a.DB-t)):(i=a[u]>>(l-=t)&c,l<=0&&(l+=a.DB,--u)),i>0&&(o=!0),o&&(b+=int2char(i));return o?b:"0"}function bnNegate(){var e=new BigInteger$9;return BigInteger$9.ZERO.subTo(this,e),e}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(e){var a=this.s-e.s;if(a!=0)return a;var t=this.t;if(a=t-e.t,a!=0)return this.s<0?-a:a;for(;--t>=0;)if((a=this[t]-e[t])!=0)return a;return 0}function nbits(e){var a=1,t;return(t=e>>>16)!=0&&(e=t,a+=16),(t=e>>8)!=0&&(e=t,a+=8),(t=e>>4)!=0&&(e=t,a+=4),(t=e>>2)!=0&&(e=t,a+=2),(t=e>>1)!=0&&(e=t,a+=1),a}function bnBitLength(){return this.t<=0?0:this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM)}function bnByteLength(){return this.bitLength()>>3}function bnpDLShiftTo(e,a){var t;for(t=this.t-1;t>=0;--t)a[t+e]=this[t];for(t=e-1;t>=0;--t)a[t]=0;a.t=this.t+e,a.s=this.s}function bnpDRShiftTo(e,a){for(var t=e;t<this.t;++t)a[t-e]=this[t];a.t=Math.max(this.t-e,0),a.s=this.s}function bnpLShiftTo(e,a){var t=this,c=e%t.DB,i=t.DB-c,o=(1<<i)-1,b=Math.floor(e/t.DB),u=t.s<<c&t.DM,l;for(l=t.t-1;l>=0;--l)a[l+b+1]=t[l]>>i|u,u=(t[l]&o)<<c;for(l=b-1;l>=0;--l)a[l]=0;a[b]=u,a.t=t.t+b+1,a.s=t.s,a.clamp()}function bnpRShiftTo(e,a){var t=this;a.s=t.s;var c=Math.floor(e/t.DB);if(c>=t.t){a.t=0;return}var i=e%t.DB,o=t.DB-i,b=(1<<i)-1;a[0]=t[c]>>i;for(var u=c+1;u<t.t;++u)a[u-c-1]|=(t[u]&b)<<o,a[u-c]=t[u]>>i;i>0&&(a[t.t-c-1]|=(t.s&b)<<o),a.t=t.t-c,a.clamp()}function bnpSubTo(e,a){for(var t=this,c=0,i=0,o=Math.min(e.t,t.t);c<o;)i+=t[c]-e[c],a[c++]=i&t.DM,i>>=t.DB;if(e.t<t.t){for(i-=e.s;c<t.t;)i+=t[c],a[c++]=i&t.DM,i>>=t.DB;i+=t.s}else{for(i+=t.s;c<e.t;)i-=e[c],a[c++]=i&t.DM,i>>=t.DB;i-=e.s}a.s=i<0?-1:0,i<-1?a[c++]=t.DV+i:i>0&&(a[c++]=i),a.t=c,a.clamp()}function bnpMultiplyTo(e,a){var t=this.abs(),c=e.abs(),i=t.t;for(a.t=i+c.t;--i>=0;)a[i]=0;for(i=0;i<c.t;++i)a[i+t.t]=t.am(0,c[i],a,i,0,t.t);a.s=0,a.clamp(),this.s!=e.s&&BigInteger$9.ZERO.subTo(a,a)}function bnpSquareTo(e){for(var a=this.abs(),t=e.t=2*a.t;--t>=0;)e[t]=0;for(t=0;t<a.t-1;++t){var c=a.am(t,a[t],e,2*t,0,1);(e[t+a.t]+=a.am(t+1,2*a[t],e,2*t+1,c,a.t-t-1))>=a.DV&&(e[t+a.t]-=a.DV,e[t+a.t+1]=1)}e.t>0&&(e[e.t-1]+=a.am(t,a[t],e,2*t,0,1)),e.s=0,e.clamp()}function bnpDivRemTo(e,a,t){var c=this,i=e.abs();if(!(i.t<=0)){var o=c.abs();if(o.t<i.t){a?.fromInt(0),t!=null&&c.copyTo(t);return}t==null&&(t=new BigInteger$9);var b=new BigInteger$9,u=c.s,l=e.s,x=c.DB-nbits(i[i.t-1]);x>0?(i.lShiftTo(x,b),o.lShiftTo(x,t)):(i.copyTo(b),o.copyTo(t));var g=b.t,v=b[g-1];if(v!=0){var E=v*(1<<c.F1)+(g>1?b[g-2]>>c.F2:0),S=c.FV/E,T=(1<<c.F1)/E,I=1<<c.F2,A=t.t,C=A-g,O=a??new BigInteger$9;for(b.dlShiftTo(C,O),t.compareTo(O)>=0&&(t[t.t++]=1,t.subTo(O,t)),BigInteger$9.ONE.dlShiftTo(g,O),O.subTo(b,b);b.t<g;)b[b.t++]=0;for(;--C>=0;){var R=t[--A]==v?c.DM:Math.floor(t[A]*S+(t[A-1]+I)*T);if((t[A]+=b.am(0,R,t,C,0,g))<R)for(b.dlShiftTo(C,O),t.subTo(O,t);t[A]<--R;)t.subTo(O,t)}a!=null&&(t.drShiftTo(g,a),u!=l&&BigInteger$9.ZERO.subTo(a,a)),t.t=g,t.clamp(),x>0&&t.rShiftTo(x,t),u<0&&BigInteger$9.ZERO.subTo(t,t)}}}function bnMod(e){var a=new BigInteger$9;return this.abs().divRemTo(e,null,a),this.s<0&&a.compareTo(BigInteger$9.ZERO)>0&&e.subTo(a,a),a}function Classic(e){this.m=e}function cConvert(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}function cRevert(e){return e}function cReduce(e){e.divRemTo(this.m,null,e)}function cMulTo(e,a,t){e.multiplyTo(a,t),this.reduce(t)}function cSqrTo(e,a){e.squareTo(a),this.reduce(a)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var e=this[0];if(!(e&1))return 0;var a=e&3;return a=a*(2-(e&15)*a)&15,a=a*(2-(e&255)*a)&255,a=a*(2-((e&65535)*a&65535))&65535,a=a*(2-e*a%this.DV)%this.DV,a>0?this.DV-a:-a}function Montgomery(e){this.m=e,this.mp=e.invDigit(),this.mpl=this.mp&32767,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function montConvert(e){var a=new BigInteger$9;return e.abs().dlShiftTo(this.m.t,a),a.divRemTo(this.m,null,a),e.s<0&&a.compareTo(BigInteger$9.ZERO)>0&&this.m.subTo(a,a),a}function montRevert(e){var a=new BigInteger$9;return e.copyTo(a),this.reduce(a),a}function montReduce(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(var a=0;a<this.m.t;++a){var t=e[a]&32767,c=t*this.mpl+((t*this.mph+(e[a]>>15)*this.mpl&this.um)<<15)&e.DM;for(t=a+this.m.t,e[t]+=this.m.am(0,c,e,a,0,this.m.t);e[t]>=e.DV;)e[t]-=e.DV,e[++t]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}function montSqrTo(e,a){e.squareTo(a),this.reduce(a)}function montMulTo(e,a,t){e.multiplyTo(a,t),this.reduce(t)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0}function bnpExp(e,a){if(e>4294967295||e<1)return BigInteger$9.ONE;var t=new BigInteger$9,c=new BigInteger$9,i=a.convert(this),o=nbits(e)-1;for(i.copyTo(t);--o>=0;)if(a.sqrTo(t,c),(e&1<<o)>0)a.mulTo(c,i,t);else{var b=t;t=c,c=b}return a.revert(t)}function bnModPowInt(e,a){var t;return e<256||a.isEven()?t=new Classic(a):t=new Montgomery(a),this.exp(e,t)}proto.copyTo=bnpCopyTo;proto.fromInt=bnpFromInt;proto.fromString=bnpFromString;proto.clamp=bnpClamp;proto.dlShiftTo=bnpDLShiftTo;proto.drShiftTo=bnpDRShiftTo;proto.lShiftTo=bnpLShiftTo;proto.rShiftTo=bnpRShiftTo;proto.subTo=bnpSubTo;proto.multiplyTo=bnpMultiplyTo;proto.squareTo=bnpSquareTo;proto.divRemTo=bnpDivRemTo;proto.invDigit=bnpInvDigit;proto.isEven=bnpIsEven;proto.exp=bnpExp;proto.toString=bnToString;proto.negate=bnNegate;proto.abs=bnAbs;proto.compareTo=bnCompareTo;proto.bitLength=bnBitLength;proto.byteLength=bnByteLength;proto.mod=bnMod;proto.modPowInt=bnModPowInt;function bnClone(){var e=new BigInteger$9;return this.copyTo(e),e}function bnIntValue(){if(this.s<0){if(this.t==1)return this[0]-this.DV;if(this.t==0)return-1}else{if(this.t==1)return this[0];if(this.t==0)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function bnByteValue(){return this.t==0?this.s:this[0]<<24>>24}function bnShortValue(){return this.t==0?this.s:this[0]<<16>>16}function bnpChunkSize(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}function bnSigNum(){return this.s<0?-1:this.t<=0||this.t==1&&this[0]<=0?0:1}function bnpToRadix(e){if(e==null&&(e=10),this.signum()==0||e<2||e>36)return"0";var a=this.chunkSize(e),t=Math.pow(e,a),c=nbv(t),i=new BigInteger$9,o=new BigInteger$9,b="";for(this.divRemTo(c,i,o);i.signum()>0;)b=(t+o.intValue()).toString(e).substr(1)+b,i.divRemTo(c,i,o);return o.intValue().toString(e)+b}function bnpFromRadix(e,a){var t=this;t.fromInt(0),a==null&&(a=10);for(var c=t.chunkSize(a),i=Math.pow(a,c),o=!1,b=0,u=0,l=0;l<e.length;++l){var x=intAt(e,l);if(x<0){e.charAt(l)=="-"&&t.signum()==0&&(o=!0);continue}u=a*u+x,++b>=c&&(t.dMultiply(i),t.dAddOffset(u,0),b=0,u=0)}b>0&&(t.dMultiply(Math.pow(a,b)),t.dAddOffset(u,0)),o&&BigInteger$9.ZERO.subTo(t,t)}function bnpFromNumber(e,a,t){var c=this;if(typeof a=="number")if(e<2)c.fromInt(1);else for(c.fromNumber(e,t),c.testBit(e-1)||c.bitwiseTo(BigInteger$9.ONE.shiftLeft(e-1),op_or,c),c.isEven()&&c.dAddOffset(1,0);!c.isProbablePrime(a);)c.dAddOffset(2,0),c.bitLength()>e&&c.subTo(BigInteger$9.ONE.shiftLeft(e-1),c);else{var i=new Array,o=e&7;i.length=(e>>3)+1,a.nextBytes(i),o>0?i[0]&=(1<<o)-1:i[0]=0,c.fromString(i,256)}}function bnToByteArray(){var e=this,a=e.t,t=new Array;t[0]=e.s;var c=e.DB-a*e.DB%8,i,o=0;if(a-- >0)for(c<e.DB&&(i=e[a]>>c)!=(e.s&e.DM)>>c&&(t[o++]=i|e.s<<e.DB-c);a>=0;)c<8?(i=(e[a]&(1<<c)-1)<<8-c,i|=e[--a]>>(c+=e.DB-8)):(i=e[a]>>(c-=8)&255,c<=0&&(c+=e.DB,--a)),i&128&&(i|=-256),o===0&&(e.s&128)!=(i&128)&&++o,(o>0||i!=e.s)&&(t[o++]=i);return t}function bnEquals(e){return this.compareTo(e)==0}function bnMin(e){return this.compareTo(e)<0?this:e}function bnMax(e){return this.compareTo(e)>0?this:e}function bnpBitwiseTo(e,a,t){var c=this,i,o,b=Math.min(e.t,c.t);for(i=0;i<b;++i)t[i]=a(c[i],e[i]);if(e.t<c.t){for(o=e.s&c.DM,i=b;i<c.t;++i)t[i]=a(c[i],o);t.t=c.t}else{for(o=c.s&c.DM,i=b;i<e.t;++i)t[i]=a(o,e[i]);t.t=e.t}t.s=a(c.s,e.s),t.clamp()}function op_and(e,a){return e&a}function bnAnd(e){var a=new BigInteger$9;return this.bitwiseTo(e,op_and,a),a}function op_or(e,a){return e|a}function bnOr(e){var a=new BigInteger$9;return this.bitwiseTo(e,op_or,a),a}function op_xor(e,a){return e^a}function bnXor(e){var a=new BigInteger$9;return this.bitwiseTo(e,op_xor,a),a}function op_andnot(e,a){return e&~a}function bnAndNot(e){var a=new BigInteger$9;return this.bitwiseTo(e,op_andnot,a),a}function bnNot(){for(var e=new BigInteger$9,a=0;a<this.t;++a)e[a]=this.DM&~this[a];return e.t=this.t,e.s=~this.s,e}function bnShiftLeft(e){var a=new BigInteger$9;return e<0?this.rShiftTo(-e,a):this.lShiftTo(e,a),a}function bnShiftRight(e){var a=new BigInteger$9;return e<0?this.lShiftTo(-e,a):this.rShiftTo(e,a),a}function lbit(e){if(e==0)return-1;var a=0;return e&65535||(e>>=16,a+=16),e&255||(e>>=8,a+=8),e&15||(e>>=4,a+=4),e&3||(e>>=2,a+=2),e&1||++a,a}function bnGetLowestSetBit(){for(var e=0;e<this.t;++e)if(this[e]!=0)return e*this.DB+lbit(this[e]);return this.s<0?this.t*this.DB:-1}function cbit(e){for(var a=0;e!=0;)e&=e-1,++a;return a}function bnBitCount(){for(var e=0,a=this.s&this.DM,t=0;t<this.t;++t)e+=cbit(this[t]^a);return e}function bnTestBit(e){var a=Math.floor(e/this.DB);return a>=this.t?this.s!=0:(this[a]&1<<e%this.DB)!=0}function bnpChangeBit(e,a){var t=BigInteger$9.ONE.shiftLeft(e);return this.bitwiseTo(t,a,t),t}function bnSetBit(e){return this.changeBit(e,op_or)}function bnClearBit(e){return this.changeBit(e,op_andnot)}function bnFlipBit(e){return this.changeBit(e,op_xor)}function bnpAddTo(e,a){for(var t=this,c=0,i=0,o=Math.min(e.t,t.t);c<o;)i+=t[c]+e[c],a[c++]=i&t.DM,i>>=t.DB;if(e.t<t.t){for(i+=e.s;c<t.t;)i+=t[c],a[c++]=i&t.DM,i>>=t.DB;i+=t.s}else{for(i+=t.s;c<e.t;)i+=e[c],a[c++]=i&t.DM,i>>=t.DB;i+=e.s}a.s=i<0?-1:0,i>0?a[c++]=i:i<-1&&(a[c++]=t.DV+i),a.t=c,a.clamp()}function bnAdd(e){var a=new BigInteger$9;return this.addTo(e,a),a}function bnSubtract(e){var a=new BigInteger$9;return this.subTo(e,a),a}function bnMultiply(e){var a=new BigInteger$9;return this.multiplyTo(e,a),a}function bnSquare(){var e=new BigInteger$9;return this.squareTo(e),e}function bnDivide(e){var a=new BigInteger$9;return this.divRemTo(e,a,null),a}function bnRemainder(e){var a=new BigInteger$9;return this.divRemTo(e,null,a),a}function bnDivideAndRemainder(e){var a=new BigInteger$9,t=new BigInteger$9;return this.divRemTo(e,a,t),new Array(a,t)}function bnpDMultiply(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}function bnpDAddOffset(e,a){if(e!=0){for(;this.t<=a;)this[this.t++]=0;for(this[a]+=e;this[a]>=this.DV;)this[a]-=this.DV,++a>=this.t&&(this[this.t++]=0),++this[a]}}function NullExp(){}function nNop(e){return e}function nMulTo(e,a,t){e.multiplyTo(a,t)}function nSqrTo(e,a){e.squareTo(a)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(e){return this.exp(e,new NullExp)}function bnpMultiplyLowerTo(e,a,t){var c=Math.min(this.t+e.t,a);for(t.s=0,t.t=c;c>0;)t[--c]=0;var i;for(i=t.t-this.t;c<i;++c)t[c+this.t]=this.am(0,e[c],t,c,0,this.t);for(i=Math.min(e.t,a);c<i;++c)this.am(0,e[c],t,c,0,a-c);t.clamp()}function bnpMultiplyUpperTo(e,a,t){--a;var c=t.t=this.t+e.t-a;for(t.s=0;--c>=0;)t[c]=0;for(c=Math.max(a-this.t,0);c<e.t;++c)t[this.t+c-a]=this.am(a-c,e[c],t,0,0,this.t+c-a);t.clamp(),t.drShiftTo(1,t)}function Barrett(e){this.r2=new BigInteger$9,this.q3=new BigInteger$9,BigInteger$9.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e),this.m=e}function barrettConvert(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;var a=new BigInteger$9;return e.copyTo(a),this.reduce(a),a}function barrettRevert(e){return e}function barrettReduce(e){var a=this;for(e.drShiftTo(a.m.t-1,a.r2),e.t>a.m.t+1&&(e.t=a.m.t+1,e.clamp()),a.mu.multiplyUpperTo(a.r2,a.m.t+1,a.q3),a.m.multiplyLowerTo(a.q3,a.m.t+1,a.r2);e.compareTo(a.r2)<0;)e.dAddOffset(1,a.m.t+1);for(e.subTo(a.r2,e);e.compareTo(a.m)>=0;)e.subTo(a.m,e)}function barrettSqrTo(e,a){e.squareTo(a),this.reduce(a)}function barrettMulTo(e,a,t){e.multiplyTo(a,t),this.reduce(t)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(e,a){var t=e.bitLength(),c,i=nbv(1),o;if(t<=0)return i;t<18?c=1:t<48?c=3:t<144?c=4:t<768?c=5:c=6,t<8?o=new Classic(a):a.isEven()?o=new Barrett(a):o=new Montgomery(a);var b=new Array,u=3,l=c-1,x=(1<<c)-1;if(b[1]=o.convert(this),c>1){var g=new BigInteger$9;for(o.sqrTo(b[1],g);u<=x;)b[u]=new BigInteger$9,o.mulTo(g,b[u-2],b[u]),u+=2}var v=e.t-1,E,S=!0,T=new BigInteger$9,I;for(t=nbits(e[v])-1;v>=0;){for(t>=l?E=e[v]>>t-l&x:(E=(e[v]&(1<<t+1)-1)<<l-t,v>0&&(E|=e[v-1]>>this.DB+t-l)),u=c;!(E&1);)E>>=1,--u;if((t-=u)<0&&(t+=this.DB,--v),S)b[E].copyTo(i),S=!1;else{for(;u>1;)o.sqrTo(i,T),o.sqrTo(T,i),u-=2;u>0?o.sqrTo(i,T):(I=i,i=T,T=I),o.mulTo(T,b[E],i)}for(;v>=0&&!(e[v]&1<<t);)o.sqrTo(i,T),I=i,i=T,T=I,--t<0&&(t=this.DB-1,--v)}return o.revert(i)}function bnGCD(e){var a=this.s<0?this.negate():this.clone(),t=e.s<0?e.negate():e.clone();if(a.compareTo(t)<0){var c=a;a=t,t=c}var i=a.getLowestSetBit(),o=t.getLowestSetBit();if(o<0)return a;for(i<o&&(o=i),o>0&&(a.rShiftTo(o,a),t.rShiftTo(o,t));a.signum()>0;)(i=a.getLowestSetBit())>0&&a.rShiftTo(i,a),(i=t.getLowestSetBit())>0&&t.rShiftTo(i,t),a.compareTo(t)>=0?(a.subTo(t,a),a.rShiftTo(1,a)):(t.subTo(a,t),t.rShiftTo(1,t));return o>0&&t.lShiftTo(o,t),t}function bnpModInt(e){if(e<=0)return 0;var a=this.DV%e,t=this.s<0?e-1:0;if(this.t>0)if(a==0)t=this[0]%e;else for(var c=this.t-1;c>=0;--c)t=(a*t+this[c])%e;return t}function bnModInverse(e){var a=e.isEven();if(this.signum()===0)throw new Error("division by zero");if(this.isEven()&&a||e.signum()==0)return BigInteger$9.ZERO;for(var t=e.clone(),c=this.clone(),i=nbv(1),o=nbv(0),b=nbv(0),u=nbv(1);t.signum()!=0;){for(;t.isEven();)t.rShiftTo(1,t),a?((!i.isEven()||!o.isEven())&&(i.addTo(this,i),o.subTo(e,o)),i.rShiftTo(1,i)):o.isEven()||o.subTo(e,o),o.rShiftTo(1,o);for(;c.isEven();)c.rShiftTo(1,c),a?((!b.isEven()||!u.isEven())&&(b.addTo(this,b),u.subTo(e,u)),b.rShiftTo(1,b)):u.isEven()||u.subTo(e,u),u.rShiftTo(1,u);t.compareTo(c)>=0?(t.subTo(c,t),a&&i.subTo(b,i),o.subTo(u,o)):(c.subTo(t,c),a&&b.subTo(i,b),u.subTo(o,u))}if(c.compareTo(BigInteger$9.ONE)!=0)return BigInteger$9.ZERO;for(;u.compareTo(e)>=0;)u.subTo(e,u);for(;u.signum()<0;)u.addTo(e,u);return u}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(e){var a,t=this.abs();if(t.t==1&&t[0]<=lowprimes[lowprimes.length-1]){for(a=0;a<lowprimes.length;++a)if(t[0]==lowprimes[a])return!0;return!1}if(t.isEven())return!1;for(a=1;a<lowprimes.length;){for(var c=lowprimes[a],i=a+1;i<lowprimes.length&&c<lplim;)c*=lowprimes[i++];for(c=t.modInt(c);a<i;)if(c%lowprimes[a++]==0)return!1}return t.millerRabin(e)}function bnpMillerRabin(e){var a=this.subtract(BigInteger$9.ONE),t=a.getLowestSetBit();if(t<=0)return!1;var c=a.shiftRight(t);e=e+1>>1,e>lowprimes.length&&(e=lowprimes.length);for(var i=new BigInteger$9(null),o,b=[],u=0;u<e;++u){for(;o=lowprimes[Math.floor(Math.random()*lowprimes.length)],b.indexOf(o)!=-1;);b.push(o),i.fromInt(o);var l=i.modPow(c,this);if(l.compareTo(BigInteger$9.ONE)!=0&&l.compareTo(a)!=0){for(var o=1;o++<t&&l.compareTo(a)!=0;)if(l=l.modPowInt(2,this),l.compareTo(BigInteger$9.ONE)==0)return!1;if(l.compareTo(a)!=0)return!1}}return!0}proto.chunkSize=bnpChunkSize;proto.toRadix=bnpToRadix;proto.fromRadix=bnpFromRadix;proto.fromNumber=bnpFromNumber;proto.bitwiseTo=bnpBitwiseTo;proto.changeBit=bnpChangeBit;proto.addTo=bnpAddTo;proto.dMultiply=bnpDMultiply;proto.dAddOffset=bnpDAddOffset;proto.multiplyLowerTo=bnpMultiplyLowerTo;proto.multiplyUpperTo=bnpMultiplyUpperTo;proto.modInt=bnpModInt;proto.millerRabin=bnpMillerRabin;proto.clone=bnClone;proto.intValue=bnIntValue;proto.byteValue=bnByteValue;proto.shortValue=bnShortValue;proto.signum=bnSigNum;proto.toByteArray=bnToByteArray;proto.equals=bnEquals;proto.min=bnMin;proto.max=bnMax;proto.and=bnAnd;proto.or=bnOr;proto.xor=bnXor;proto.andNot=bnAndNot;proto.not=bnNot;proto.shiftLeft=bnShiftLeft;proto.shiftRight=bnShiftRight;proto.getLowestSetBit=bnGetLowestSetBit;proto.bitCount=bnBitCount;proto.testBit=bnTestBit;proto.setBit=bnSetBit;proto.clearBit=bnClearBit;proto.flipBit=bnFlipBit;proto.add=bnAdd;proto.subtract=bnSubtract;proto.multiply=bnMultiply;proto.divide=bnDivide;proto.remainder=bnRemainder;proto.divideAndRemainder=bnDivideAndRemainder;proto.modPow=bnModPow;proto.modInverse=bnModInverse;proto.pow=bnPow;proto.gcd=bnGCD;proto.isProbablePrime=bnIsProbablePrime;proto.square=bnSquare;BigInteger$9.ZERO=nbv(0);BigInteger$9.ONE=nbv(1);BigInteger$9.valueOf=nbv;var bigi=BigInteger$9,assert$4=requireAssert(),BigInteger$8=bigi;BigInteger$8.fromByteArrayUnsigned=function(e){return e[0]&128?new BigInteger$8([0].concat(e)):new BigInteger$8(e)};BigInteger$8.prototype.toByteArrayUnsigned=function(){var e=this.toByteArray();return e[0]===0?e.slice(1):e};BigInteger$8.fromDERInteger=function(e){return new BigInteger$8(e)};BigInteger$8.prototype.toDERInteger=BigInteger$8.prototype.toByteArray;BigInteger$8.fromBuffer=function(e){if(e[0]&128){var a=Array.prototype.slice.call(e);return new BigInteger$8([0].concat(a))}return new BigInteger$8(e)};BigInteger$8.fromHex=function(e){return e===""?BigInteger$8.ZERO:(assert$4.equal(e,e.match(/^[A-Fa-f0-9]+/),"Invalid hex string"),assert$4.equal(e.length%2,0,"Incomplete hex"),new BigInteger$8(e,16))};BigInteger$8.prototype.toBuffer=function(e){for(var a=this.toByteArrayUnsigned(),t=[],c=e-a.length;t.length<c;)t.push(0);return new buffer$2.Buffer(t.concat(a))};BigInteger$8.prototype.toHex=function(e){return this.toBuffer(e).toString("hex")};var BigInteger$7=bigi,lib$2=BigInteger$7,assert$3=requireAssert(),Buffer$6=requireSafeBuffer().Buffer,BigInteger$6=lib$2,THREE=BigInteger$6.valueOf(3);function Point$2(e,a,t,c){assert$3.notStrictEqual(c,void 0,"Missing Z coordinate"),this.curve=e,this.x=a,this.y=t,this.z=c,this._zInv=null,this.compressed=!0}Object.defineProperty(Point$2.prototype,"zInv",{get:function(){return this._zInv===null&&(this._zInv=this.z.modInverse(this.curve.p)),this._zInv}});Object.defineProperty(Point$2.prototype,"affineX",{get:function(){return this.x.multiply(this.zInv).mod(this.curve.p)}});Object.defineProperty(Point$2.prototype,"affineY",{get:function(){return this.y.multiply(this.zInv).mod(this.curve.p)}});Point$2.fromAffine=function(e,a,t){return new Point$2(e,a,t,BigInteger$6.ONE)};Point$2.prototype.equals=function(e){if(e===this)return!0;if(this.curve.isInfinity(this))return this.curve.isInfinity(e);if(this.curve.isInfinity(e))return this.curve.isInfinity(this);var a=e.y.multiply(this.z).subtract(this.y.multiply(e.z)).mod(this.curve.p);if(a.signum()!==0)return!1;var t=e.x.multiply(this.z).subtract(this.x.multiply(e.z)).mod(this.curve.p);return t.signum()===0};Point$2.prototype.negate=function(){var e=this.curve.p.subtract(this.y);return new Point$2(this.curve,this.x,e,this.z)};Point$2.prototype.add=function(e){if(this.curve.isInfinity(this))return e;if(this.curve.isInfinity(e))return this;var a=this.x,t=this.y,c=e.x,i=e.y,o=i.multiply(this.z).subtract(t.multiply(e.z)).mod(this.curve.p),b=c.multiply(this.z).subtract(a.multiply(e.z)).mod(this.curve.p);if(b.signum()===0)return o.signum()===0?this.twice():this.curve.infinity;var u=b.square(),l=u.multiply(b),x=a.multiply(u),g=o.square().multiply(this.z),v=g.subtract(x.shiftLeft(1)).multiply(e.z).subtract(l).multiply(b).mod(this.curve.p),E=x.multiply(THREE).multiply(o).subtract(t.multiply(l)).subtract(g.multiply(o)).multiply(e.z).add(o.multiply(l)).mod(this.curve.p),S=l.multiply(this.z).multiply(e.z).mod(this.curve.p);return new Point$2(this.curve,v,E,S)};Point$2.prototype.twice=function(){if(this.curve.isInfinity(this))return this;if(this.y.signum()===0)return this.curve.infinity;var e=this.x,a=this.y,t=a.multiply(this.z).mod(this.curve.p),c=t.multiply(a).mod(this.curve.p),i=this.curve.a,o=e.square().multiply(THREE);i.signum()!==0&&(o=o.add(this.z.square().multiply(i))),o=o.mod(this.curve.p);var b=o.square().subtract(e.shiftLeft(3).multiply(c)).shiftLeft(1).multiply(t).mod(this.curve.p),u=o.multiply(THREE).multiply(e).subtract(c.shiftLeft(1)).shiftLeft(2).multiply(c).subtract(o.pow(3)).mod(this.curve.p),l=t.pow(3).shiftLeft(3).mod(this.curve.p);return new Point$2(this.curve,b,u,l)};Point$2.prototype.multiply=function(e){if(this.curve.isInfinity(this))return this;if(e.signum()===0)return this.curve.infinity;for(var a=e,t=a.multiply(THREE),c=this.negate(),i=this,o=t.bitLength()-2;o>0;--o){var b=t.testBit(o),u=a.testBit(o);i=i.twice(),b!==u&&(i=i.add(b?this:c))}return i};Point$2.prototype.multiplyTwo=function(e,a,t){for(var c=Math.max(e.bitLength(),t.bitLength())-1,i=this.curve.infinity,o=this.add(a);c>=0;){var b=e.testBit(c),u=t.testBit(c);i=i.twice(),b?u?i=i.add(o):i=i.add(this):u&&(i=i.add(a)),--c}return i};Point$2.prototype.getEncoded=function(e){if(e==null&&(e=this.compressed),this.curve.isInfinity(this))return Buffer$6.alloc(1,0);var a=this.affineX,t=this.affineY,c=this.curve.pLength,i;return e?(i=Buffer$6.allocUnsafe(1+c),i.writeUInt8(t.isEven()?2:3,0)):(i=Buffer$6.allocUnsafe(1+c+c),i.writeUInt8(4,0),t.toBuffer(c).copy(i,1+c)),a.toBuffer(c).copy(i,1),i};Point$2.decodeFrom=function(e,a){var t=a.readUInt8(0),c=t!==4,i=Math.floor((e.p.bitLength()+7)/8),o=BigInteger$6.fromBuffer(a.slice(1,1+i)),b;if(c){assert$3.equal(a.length,i+1,"Invalid sequence length"),assert$3(t===2||t===3,"Invalid sequence tag");var u=t===3;b=e.pointFromX(u,o)}else{assert$3.equal(a.length,1+i+i,"Invalid sequence length");var l=BigInteger$6.fromBuffer(a.slice(1+i));b=Point$2.fromAffine(e,o,l)}return b.compressed=c,b};Point$2.prototype.toString=function(){return this.curve.isInfinity(this)?"(INFINITY)":"("+this.affineX.toString()+","+this.affineY.toString()+")"};var point=Point$2,assert$2=requireAssert(),BigInteger$5=lib$2,Point$1=point;function Curve$2(e,a,t,c,i,o,b){this.p=e,this.a=a,this.b=t,this.G=Point$1.fromAffine(this,c,i),this.n=o,this.h=b,this.infinity=new Point$1(this,null,null,BigInteger$5.ZERO),this.pOverFour=e.add(BigInteger$5.ONE).shiftRight(2),this.pLength=Math.floor((this.p.bitLength()+7)/8)}Curve$2.prototype.pointFromX=function(e,a){var t=a.pow(3).add(this.a.multiply(a)).add(this.b).mod(this.p),c=t.modPow(this.pOverFour,this.p),i=c;return c.isEven()^!e&&(i=this.p.subtract(i)),Point$1.fromAffine(this,a,i)};Curve$2.prototype.isInfinity=function(e){return e===this.infinity?!0:e.z.signum()===0&&e.y.signum()!==0};Curve$2.prototype.isOnCurve=function(e){if(this.isInfinity(e))return!0;var a=e.affineX,t=e.affineY,c=this.a,i=this.b,o=this.p;if(a.signum()<0||a.compareTo(o)>=0||t.signum()<0||t.compareTo(o)>=0)return!1;var b=t.square().mod(o),u=a.pow(3).add(c.multiply(a)).add(i).mod(o);return b.equals(u)};Curve$2.prototype.validate=function(e){assert$2(!this.isInfinity(e),"Point is at infinity"),assert$2(this.isOnCurve(e),"Point is not on the curve");var a=e.multiply(this.n);return assert$2(this.isInfinity(a),"Point is not a scalar multiple of G"),!0};var curve$5=Curve$2;const secp128r1={p:"fffffffdffffffffffffffffffffffff",a:"fffffffdfffffffffffffffffffffffc",b:"e87579c11079f43dd824993c2cee5ed3",n:"fffffffe0000000075a30d1b9038a115",h:"01",Gx:"161ff7528b899b2d0c28607ca52c5b86",Gy:"cf5ac8395bafeb13c02da292dded7a83"},secp160k1={p:"fffffffffffffffffffffffffffffffeffffac73",a:"00",b:"07",n:"0100000000000000000001b8fa16dfab9aca16b6b3",h:"01",Gx:"3b4c382ce37aa192a4019e763036f4f5dd4d7ebb",Gy:"938cf935318fdced6bc28286531733c3f03c4fee"},secp160r1={p:"ffffffffffffffffffffffffffffffff7fffffff",a:"ffffffffffffffffffffffffffffffff7ffffffc",b:"1c97befc54bd7a8b65acf89f81d4d4adc565fa45",n:"0100000000000000000001f4c8f927aed3ca752257",h:"01",Gx:"4a96b5688ef573284664698968c38bb913cbfc82",Gy:"23a628553168947d59dcc912042351377ac5fb32"},secp192k1={p:"fffffffffffffffffffffffffffffffffffffffeffffee37",a:"00",b:"03",n:"fffffffffffffffffffffffe26f2fc170f69466a74defd8d",h:"01",Gx:"db4ff10ec057e9ae26b07d0280b7f4341da5d1b1eae06c7d",Gy:"9b2f2f6d9c5628a7844163d015be86344082aa88d95e2f9d"},secp192r1={p:"fffffffffffffffffffffffffffffffeffffffffffffffff",a:"fffffffffffffffffffffffffffffffefffffffffffffffc",b:"64210519e59c80e70fa7e9ab72243049feb8deecc146b9b1",n:"ffffffffffffffffffffffff99def836146bc9b1b4d22831",h:"01",Gx:"188da80eb03090f67cbf20eb43a18800f4ff0afd82ff1012",Gy:"07192b95ffc8da78631011ed6b24cdd573f977a11e794811"},secp256k1$1={p:"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f",a:"00",b:"07",n:"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",h:"01",Gx:"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",Gy:"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"},secp256r1={p:"ffffffff00000001000000000000000000000000ffffffffffffffffffffffff",a:"ffffffff00000001000000000000000000000000fffffffffffffffffffffffc",b:"5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b",n:"ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551",h:"01",Gx:"6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296",Gy:"4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"},require$$1$5={secp128r1,secp160k1,secp160r1,secp192k1,secp192r1,secp256k1:secp256k1$1,secp256r1};var BigInteger$4=lib$2,curves=require$$1$5,Curve$1=curve$5;function getCurveByName$1(e){var a=curves[e];if(!a)return null;var t=new BigInteger$4(a.p,16),c=new BigInteger$4(a.a,16),i=new BigInteger$4(a.b,16),o=new BigInteger$4(a.n,16),b=new BigInteger$4(a.h,16),u=new BigInteger$4(a.Gx,16),l=new BigInteger$4(a.Gy,16);return new Curve$1(t,c,i,u,l,o,b)}var names=getCurveByName$1,Point=point,Curve=curve$5,getCurveByName=names,lib$1={Curve,Point,getCurveByName};const BigInteger$3=lib$2,Buffer$5=requireSafeBuffer().Buffer,ecurve$4=lib$1,curve$4=ecurve$4.getCurveByName("secp256k1"),one$1=BigInteger$3.ONE,n$3=curve$4.n,p$1=curve$4.p;function checkBuffer(e,a,t,c){const i=c!==void 0?"["+c+"]":"";if(!Buffer$5.isBuffer(a))throw new Error(e+i+" must be a Buffer");if(a.length!==t)throw new Error(e+i+" must be "+t+" bytes long")}function checkArray(e,a){if(!a||!a.length)throw new Error(e+" must be an array with one or more elements")}function checkPubKeyArr(e){checkArray("pubKeys",e);for(let a=0;a<e.length;a++)checkBuffer("pubKey",e[a],32,a)}function checkMessageArr(e){checkArray("messages",e);for(let a=0;a<e.length;a++)checkBuffer("message",e[a],32,a)}function checkSignatureArr(e){checkArray("signatures",e);for(let a=0;a<e.length;a++)checkBuffer("signature",e[a],64,a)}function checkNonceArr(e){checkArray("nonces",e);for(let a=0;a<e.length;a++)checkBuffer("nonce",e[a],32,a)}function checkPrivateKey(e,a){const t=a!==void 0?"["+a+"]":"";if(!BigInteger$3.isBigInteger(e)&&typeof e!="string")throw new Error("privateKey"+t+" must be a BigInteger or valid hex string");if(typeof e=="string"){if(e.match(/[^a-f^A-F^0-9]+/))throw new Error("privateKey must be a BigInteger or valid hex string");checkRange("privateKey",BigInteger$3.fromHex(e));return}checkRange("privateKey",e)}function checkSignParams(e,a){checkPrivateKey(e),checkBuffer("message",a,32)}function checkVerifyParams(e,a,t){checkBuffer("pubKey",e,32),checkBuffer("message",a,32),checkBuffer("signature",t,64)}function checkBatchVerifyParams(e,a,t){if(checkPubKeyArr(e),checkMessageArr(a),checkSignatureArr(t),e.length!==a.length||a.length!==t.length)throw new Error("all parameters must be an array with the same length")}function checkSessionParams(e,a,t,c,i){checkSignParams(a,t),checkBuffer("sessionId",e,32),checkBuffer("pubKeyCombined",c,32),checkBuffer("ell",i,32)}function checkRange(e,a){if(a.compareTo(one$1)<0||a.compareTo(n$3.subtract(one$1))>0)throw new Error(e+" must be an integer in the range 1..n-1")}function checkSignatureInput(e,a){if(e.compareTo(p$1)>=0)throw new Error("r is larger than or equal to field size");if(a.compareTo(n$3)>=0)throw new Error("s is larger than or equal to curve order")}function checkPointExists(e,a){if(a.curve.isInfinity(a))throw new Error("point is at infinity");const t=a.affineY.isEven();if(e!==t)throw new Error("point does not exist")}function checkAux(e){if(e.length!==32)throw new Error("aux must be 32 bytes")}var check$3={checkSessionParams,checkSignParams,checkVerifyParams,checkBatchVerifyParams,checkRange,checkSignatureInput,checkPointExists,checkPubKeyArr,checkArray,checkNonceArr,checkAux},sha256Exports={},sha256$1={get exports(){return sha256Exports},set exports(e){sha256Exports=e}};(function(module){(function(){var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof browserExports=="object"&&browserExports.versions&&browserExports.versions.node;NODE_JS?root=commonjsGlobal:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&!0&&module.exports,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(e){return typeof e=="object"&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,a){return function(t){return new Sha256(a,!0).update(t)[e]()}},createMethod=function(e){var a=createOutputMethod("hex",e);NODE_JS&&(a=nodeWrap(a,e)),a.create=function(){return new Sha256(e)},a.update=function(i){return a.create().update(i)};for(var t=0;t<OUTPUT_TYPES.length;++t){var c=OUTPUT_TYPES[t];a[c]=createOutputMethod(c,e)}return a},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if(typeof e=="string")return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(e==null)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,a){return function(t,c){return new HmacSha256(t,a,!0).update(c)[e]()}},createHmacMethod=function(e){var a=createHmacOutputMethod("hex",e);a.create=function(i){return new HmacSha256(i,e)},a.update=function(i,o){return a.create(i).update(o)};for(var t=0;t<OUTPUT_TYPES.length;++t){var c=OUTPUT_TYPES[t];a[c]=createHmacOutputMethod(c,e)}return a};function Sha256(e,a){a?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}Sha256.prototype.update=function(e){if(!this.finalized){var a,t=typeof e;if(t!=="string"){if(t==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);a=!0}for(var c,i=0,o,b=e.length,u=this.blocks;i<b;){if(this.hashed&&(this.hashed=!1,u[0]=this.block,u[16]=u[1]=u[2]=u[3]=u[4]=u[5]=u[6]=u[7]=u[8]=u[9]=u[10]=u[11]=u[12]=u[13]=u[14]=u[15]=0),a)for(o=this.start;i<b&&o<64;++i)u[o>>2]|=e[i]<<SHIFT[o++&3];else for(o=this.start;i<b&&o<64;++i)c=e.charCodeAt(i),c<128?u[o>>2]|=c<<SHIFT[o++&3]:c<2048?(u[o>>2]|=(192|c>>6)<<SHIFT[o++&3],u[o>>2]|=(128|c&63)<<SHIFT[o++&3]):c<55296||c>=57344?(u[o>>2]|=(224|c>>12)<<SHIFT[o++&3],u[o>>2]|=(128|c>>6&63)<<SHIFT[o++&3],u[o>>2]|=(128|c&63)<<SHIFT[o++&3]):(c=65536+((c&1023)<<10|e.charCodeAt(++i)&1023),u[o>>2]|=(240|c>>18)<<SHIFT[o++&3],u[o>>2]|=(128|c>>12&63)<<SHIFT[o++&3],u[o>>2]|=(128|c>>6&63)<<SHIFT[o++&3],u[o>>2]|=(128|c&63)<<SHIFT[o++&3]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=u[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,a=this.lastByteIndex;e[16]=this.block,e[a>>2]|=EXTRA[a&3],this.block=e[16],a>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e=this.h0,a=this.h1,t=this.h2,c=this.h3,i=this.h4,o=this.h5,b=this.h6,u=this.h7,l=this.blocks,x,g,v,E,S,T,I,A,C,O,R;for(x=16;x<64;++x)S=l[x-15],g=(S>>>7|S<<25)^(S>>>18|S<<14)^S>>>3,S=l[x-2],v=(S>>>17|S<<15)^(S>>>19|S<<13)^S>>>10,l[x]=l[x-16]+g+l[x-7]+v<<0;for(R=a&t,x=0;x<64;x+=4)this.first?(this.is224?(A=300032,S=l[0]-1413257819,u=S-150054599<<0,c=S+24177077<<0):(A=704751109,S=l[0]-210244248,u=S-1521486534<<0,c=S+143694565<<0),this.first=!1):(g=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),v=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),A=e&a,E=A^e&t^R,I=i&o^~i&b,S=u+v+I+K[x]+l[x],T=g+E,u=c+S<<0,c=S+T<<0),g=(c>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),v=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7),C=c&e,E=C^c&a^A,I=u&i^~u&o,S=b+v+I+K[x+1]+l[x+1],T=g+E,b=t+S<<0,t=S+T<<0,g=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),v=(b>>>6|b<<26)^(b>>>11|b<<21)^(b>>>25|b<<7),O=t&c,E=O^t&e^C,I=b&u^~b&i,S=o+v+I+K[x+2]+l[x+2],T=g+E,o=a+S<<0,a=S+T<<0,g=(a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10),v=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),R=a&t,E=R^a&c^O,I=o&b^~o&u,S=i+v+I+K[x+3]+l[x+3],T=g+E,i=e+S<<0,e=S+T<<0;this.h0=this.h0+e<<0,this.h1=this.h1+a<<0,this.h2=this.h2+t<<0,this.h3=this.h3+c<<0,this.h4=this.h4+i<<0,this.h5=this.h5+o<<0,this.h6=this.h6+b<<0,this.h7=this.h7+u<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,a=this.h1,t=this.h2,c=this.h3,i=this.h4,o=this.h5,b=this.h6,u=this.h7,l=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[a&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[c>>28&15]+HEX_CHARS[c>>24&15]+HEX_CHARS[c>>20&15]+HEX_CHARS[c>>16&15]+HEX_CHARS[c>>12&15]+HEX_CHARS[c>>8&15]+HEX_CHARS[c>>4&15]+HEX_CHARS[c&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[b>>28&15]+HEX_CHARS[b>>24&15]+HEX_CHARS[b>>20&15]+HEX_CHARS[b>>16&15]+HEX_CHARS[b>>12&15]+HEX_CHARS[b>>8&15]+HEX_CHARS[b>>4&15]+HEX_CHARS[b&15];return this.is224||(l+=HEX_CHARS[u>>28&15]+HEX_CHARS[u>>24&15]+HEX_CHARS[u>>20&15]+HEX_CHARS[u>>16&15]+HEX_CHARS[u>>12&15]+HEX_CHARS[u>>8&15]+HEX_CHARS[u>>4&15]+HEX_CHARS[u&15]),l},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,a=this.h1,t=this.h2,c=this.h3,i=this.h4,o=this.h5,b=this.h6,u=this.h7,l=[e>>24&255,e>>16&255,e>>8&255,e&255,a>>24&255,a>>16&255,a>>8&255,a&255,t>>24&255,t>>16&255,t>>8&255,t&255,c>>24&255,c>>16&255,c>>8&255,c&255,i>>24&255,i>>16&255,i>>8&255,i&255,o>>24&255,o>>16&255,o>>8&255,o&255,b>>24&255,b>>16&255,b>>8&255,b&255];return this.is224||l.push(u>>24&255,u>>16&255,u>>8&255,u&255),l},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),a=new DataView(e);return a.setUint32(0,this.h0),a.setUint32(4,this.h1),a.setUint32(8,this.h2),a.setUint32(12,this.h3),a.setUint32(16,this.h4),a.setUint32(20,this.h5),a.setUint32(24,this.h6),this.is224||a.setUint32(28,this.h7),e};function HmacSha256(e,a,t){var c,i=typeof e;if(i==="string"){var o=[],b=e.length,u=0,l;for(c=0;c<b;++c)l=e.charCodeAt(c),l<128?o[u++]=l:l<2048?(o[u++]=192|l>>6,o[u++]=128|l&63):l<55296||l>=57344?(o[u++]=224|l>>12,o[u++]=128|l>>6&63,o[u++]=128|l&63):(l=65536+((l&1023)<<10|e.charCodeAt(++c)&1023),o[u++]=240|l>>18,o[u++]=128|l>>12&63,o[u++]=128|l>>6&63,o[u++]=128|l&63);e=o}else if(i==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);e.length>64&&(e=new Sha256(a,!0).update(e).array());var x=[],g=[];for(c=0;c<64;++c){var v=e[c]||0;x[c]=92^v,g[c]=54^v}Sha256.call(this,a,t),this.update(g),this.oKeyPad=x,this.inner=!0,this.sharedMemory=t}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224)})()})(sha256$1);const BigInteger$2=lib$2,Buffer$4=requireSafeBuffer().Buffer,sha256=sha256Exports;function bufferToInt(e){return BigInteger$2.fromBuffer(e)}function intToBuffer$1(e){return e.toBuffer(32)}function hash$1(e){return Buffer$4.from(sha256.create().update(e).array())}var convert$4={bufferToInt,intToBuffer:intToBuffer$1,hash:hash$1};const BigInteger$1=lib$2,Buffer$3=requireSafeBuffer().Buffer,ecurve$3=lib$1,randomBytes$1=requireBrowser(),curve$3=ecurve$3.getCurveByName("secp256k1"),check$2=check$3,convert$3=convert$4,concat$3=Buffer$3.concat,G$3=curve$3.G,p=curve$3.p,n$2=curve$3.n,zero$1=BigInteger$1.ZERO,one=BigInteger$1.ONE,two=BigInteger$1.valueOf(2),three=BigInteger$1.valueOf(3),four=BigInteger$1.valueOf(4),seven=BigInteger$1.valueOf(7);function deterministicGetK0(e,a,t){check$2.checkSignParams(e,t);const c=taggedHash("BIP0340/nonce",concat$3([convert$3.intToBuffer(e),a,t]));return convert$3.bufferToInt(c).mod(n$2)}function isEven(e){return e.affineY.mod(two).equals(zero$1)}function getEvenKey(e,a){return isEven(e)?a.clone():n$2.subtract(a)}function getE(e,a,t){const c=taggedHash("BIP0340/challenge",concat$3([e,a,t]));return convert$3.bufferToInt(c).mod(n$2)}function getR(e,a,t){const c=G$3.multiply(e),i=t.multiply(a);return c.add(i.negate())}function taggedHash(e,a){const t=convert$3.hash(e);return convert$3.hash(concat$3([t,t,Buffer$3.from(a)]))}function liftX(e){const a=convert$3.bufferToInt(e),t=a.pow(three).add(seven).mod(p),c=t.modPow(p.add(one).divide(four),p);if(t.compareTo(c.modPow(two,p))!==0)throw new Error("c is not equal to y^2");let i=ecurve$3.Point.fromAffine(curve$3,a,c);return isEven(i)||(i=ecurve$3.Point.fromAffine(curve$3,a,p.subtract(c))),check$2.checkPointExists(!0,i),i}function randomA(){let e=null;for(;;){e=convert$3.bufferToInt(Buffer$3.from(randomBytes$1(32)));try{return check$2.checkRange("a",e),e}catch{}}}var math$3={deterministicGetK0,isEven,getEvenKey,getE,getR,taggedHash,liftX,randomA};const BigInteger=lib$2,Buffer$2=requireSafeBuffer().Buffer,ecurve$2=lib$1,curve$2=ecurve$2.getCurveByName("secp256k1"),math$2=math$3,check$1=check$3,convert$2=convert$4,concat$2=Buffer$2.concat,G$2=curve$2.G;curve$2.p;const n$1=curve$2.n,zero=BigInteger.ZERO;function sign(e,a,t){check$1.checkSignParams(e,a),e=typeof e=="string"?BigInteger.fromHex(e):e;const c=G$2.multiply(e),i=convert$2.intToBuffer(c.affineX),o=math$2.getEvenKey(c,e);let b;if(t){check$1.checkAux(t);const v=convert$2.intToBuffer(o.xor(convert$2.bufferToInt(math$2.taggedHash("BIP0340/aux",t)))),E=math$2.taggedHash("BIP0340/nonce",concat$2([v,i,a]));b=convert$2.bufferToInt(E).mod(n$1)}else b=math$2.deterministicGetK0(o,i,a);if(b.signum()===0)throw new Error("kPrime is zero");const u=G$2.multiply(b),l=math$2.getEvenKey(u,b),x=convert$2.intToBuffer(u.affineX),g=math$2.getE(x,i,a);return concat$2([x,convert$2.intToBuffer(l.add(g.multiply(o)).mod(n$1))])}function verify(e,a,t){check$1.checkVerifyParams(e,a,t);const c=math$2.liftX(e),i=convert$2.intToBuffer(c.affineX),o=convert$2.bufferToInt(t.slice(0,32)),b=convert$2.bufferToInt(t.slice(32,64));check$1.checkSignatureInput(o,b);const u=math$2.getE(convert$2.intToBuffer(o),i,a),l=math$2.getR(b,u,c);if(l.curve.isInfinity(l)||!math$2.isEven(l)||!l.affineX.equals(o))throw new Error("signature verification failed")}function batchVerify(e,a,t){check$1.checkBatchVerifyParams(e,a,t);let c=zero,i=null;for(let o=0;o<e.length;o++){const b=math$2.liftX(e[o]),u=convert$2.intToBuffer(b.affineX),l=convert$2.bufferToInt(t[o].slice(0,32)),x=convert$2.bufferToInt(t[o].slice(32,64));check$1.checkSignatureInput(l,x);const g=math$2.getE(convert$2.intToBuffer(l),u,a[o]),v=math$2.liftX(t[o].slice(0,32));if(o===0)c=c.add(x),i=v,i=i.add(b.multiply(g));else{const E=math$2.randomA();c=c.add(E.multiply(x)),i=i.add(v.multiply(E)),i=i.add(b.multiply(E.multiply(g)))}}if(!G$2.multiply(c).equals(i))throw new Error("signature verification failed")}var schnorr$1={sign,verify,batchVerify};const Buffer$1=requireSafeBuffer().Buffer,ecurve$1=lib$1,curve$1=ecurve$1.getCurveByName("secp256k1"),math$1=math$3,check=check$3,convert$1=convert$4,concat$1=Buffer$1.concat,G$1=curve$1.G,n=curve$1.n,MUSIG_TAG=convert$1.hash(Buffer$1.from("MuSig coefficient"));function computeEll(e){return check.checkPubKeyArr(e),convert$1.hash(concat$1(e))}function computeCoefficient(e,a){const t=Buffer$1.alloc(4);t.writeUInt32LE(a);const c=concat$1([MUSIG_TAG,MUSIG_TAG,e,t]);return convert$1.bufferToInt(convert$1.hash(c)).mod(n)}function pubKeyCombine(e,a){const t=a||computeEll(e);let c=null;for(let i=0;i<e.length;i++){const o=math$1.liftX(e[i]),b=computeCoefficient(t,i),u=o.multiply(b);c===null?c=u:c=c.add(u)}return c}function sessionInitialize(e,a,t,c,i,o,b){check.checkSessionParams(e,a,t,c,o);const u={sessionId:e,message:t,pubKeyCombined:c,pkParity:i,ell:o,idx:b},l=computeCoefficient(o,b);u.secretKey=a.multiply(l).mod(n),u.ownKeyParity=math$1.isEven(G$1.multiply(a)),u.pkParity!==u.ownKeyParity&&(u.secretKey=n.subtract(u.secretKey));const x=concat$1([e,t,u.pubKeyCombined,convert$1.intToBuffer(a)]);u.secretNonce=convert$1.bufferToInt(convert$1.hash(x)),check.checkRange("secretNonce",u.secretNonce);const g=G$1.multiply(u.secretNonce);return u.nonce=convert$1.intToBuffer(g.affineX),u.nonceParity=math$1.isEven(g),u.commitment=convert$1.hash(u.nonce),u}function sessionNonceCombine(e,a){check.checkNonceArr(a);let t=math$1.liftX(a[0]);for(let c=1;c<a.length;c++)t=t.add(math$1.liftX(a[c]));return e.combinedNonceParity=math$1.isEven(t),convert$1.intToBuffer(t.affineX)}function partialSign(e,a,t,c){const i=math$1.getE(t,c,a),o=e.secretKey;let b=e.secretNonce;return e.nonceParity!==e.combinedNonceParity&&(b=n.subtract(b)),o.multiply(i).add(b).mod(n)}function partialSigVerify(e,a,t,c,i,o){let b=math$1.getE(t,e.pubKeyCombined,e.message);const u=computeCoefficient(e.ell,c),l=math$1.liftX(i),x=math$1.liftX(o);e.pkParity||(b=n.subtract(b));let g=math$1.getR(a,b.multiply(u).mod(n),l);e.combinedNonceParity&&(g=g.negate());const v=g.add(x);if(!v.curve.isInfinity(v))throw new Error("partial signature verification failed")}function partialSigCombine(e,a){const t=math$1.liftX(e);check.checkArray("partialSigs",a);const c=convert$1.intToBuffer(t.affineX);let i=a[0];for(let o=1;o<a.length;o++)i=i.add(a[o]).mod(n);return concat$1([c,convert$1.intToBuffer(i)])}var muSig={computeEll,computeCoefficient,pubKeyCombine,sessionInitialize,sessionNonceCombine,partialSign,partialSigVerify,partialSigCombine};const Buffer=requireSafeBuffer().Buffer,ecurve=lib$1,curve=ecurve.getCurveByName("secp256k1"),math=math$3,convert=convert$4,concat=Buffer.concat,G=curve.G;function taprootConstruct(e,a){a||(a=[]);const t=taprootTree(a),c=convert.intToBuffer(e.affineX),i=math.liftX(c),o=convert.bufferToInt(math.taggedHash("TapTweak",concat([c,t]))),b=i.add(G.multiply(o));return convert.intToBuffer(b.affineX)}function taprootTree(e){let a=Buffer.alloc(32,0);return!e||e.length===0?new Buffer(0):a}var taproot={taprootConstruct};const schnorr=schnorr$1;schnorr.check=check$3;schnorr.convert=convert$4;schnorr.math=math$3;schnorr.muSig=muSig;schnorr.taproot=taproot;var src$2=schnorr,inputExports={},input$1={get exports(){return inputExports},set exports(e){inputExports=e}},input,hasRequiredInput$1;function requireInput$1(){if(hasRequiredInput$1)return input;hasRequiredInput$1=1;var e=lodashExports,a=preconditions;const t=errorsExports;var c=bufferwriter,i=bufferExports,o=js,b=requireScript(),u=requireSighash(),l=requireOutput(),x=4294967295,g=x,v=x-1,E=x-2;const S=Math.pow(2,31),T=Math.pow(2,22),I=65535,A=512,C=Math.pow(2,16)-1;function O(R){if(!(this instanceof O))return new O(R);if(R)return this._fromObject(R)}return O.MAXINT=x,O.DEFAULT_SEQNUMBER=g,O.DEFAULT_LOCKTIME_SEQNUMBER=v,O.DEFAULT_RBF_SEQNUMBER=E,O.SEQUENCE_LOCKTIME_TYPE_FLAG=T,Object.defineProperty(O.prototype,"script",{configurable:!1,enumerable:!0,get:function(){return this.isNull()?null:(this._script||(this._script=new b(this._scriptBuffer),this._script._isInput=!0),this._script)}}),O.fromObject=function(R){a.checkArgument(e.isObject(R));var B=new O;return B._fromObject(R)},O.prototype._fromObject=function(R){var B;if(e.isString(R.prevTxId)&&o.isHexa(R.prevTxId)?B=buffer$2.Buffer.from(R.prevTxId,"hex"):B=R.prevTxId,this.witnesses=[],this.output=R.output?R.output instanceof l?R.output:new l(R.output):void 0,this.prevTxId=B||R.txidbuf,this.outputIndex=e.isUndefined(R.outputIndex)?R.txoutnum:R.outputIndex,this.sequenceNumber=e.isUndefined(R.sequenceNumber)?e.isUndefined(R.seqnum)?g:R.seqnum:R.sequenceNumber,e.isUndefined(R.script)&&e.isUndefined(R.scriptBuffer))throw new t.Transaction.Input.MissingScript;return this.setScript(R.scriptBuffer||R.script),this},O.prototype.toObject=O.prototype.toJSON=function(){var B={prevTxId:this.prevTxId.toString("hex"),outputIndex:this.outputIndex,sequenceNumber:this.sequenceNumber,script:this._scriptBuffer.toString("hex")};return this.script&&(B.scriptString=this.script.toString()),this.output&&(B.output=this.output.toObject()),B},O.fromBufferReader=function(R){var B=new O;return B.prevTxId=R.readReverse(32),B.outputIndex=R.readUInt32LE(),B._scriptBuffer=R.readVarLengthBuffer(),B.sequenceNumber=R.readUInt32LE(),B},O.prototype.toBufferWriter=function(R){R||(R=new c),R.writeReverse(this.prevTxId),R.writeUInt32LE(this.outputIndex);var B=this._scriptBuffer;return R.writeVarintNum(B.length),R.write(B),R.writeUInt32LE(this.sequenceNumber),R},O.prototype.setScript=function(R){if(this._script=null,R instanceof b)this._script=R,this._script._isInput=!0,this._scriptBuffer=R.toBuffer();else if(o.isHexa(R))this._scriptBuffer=buffer$2.Buffer.from(R,"hex");else if(e.isString(R))this._script=new b(R),this._script._isInput=!0,this._scriptBuffer=this._script.toBuffer();else if(i.isBuffer(R))this._scriptBuffer=buffer$2.Buffer.from(R);else throw new TypeError("Invalid argument type: script");return this},O.prototype.getSignatures=function(){throw new t.AbstractMethodInvoked("Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported) for input: "+JSON.stringify(this))},O.prototype.getSatoshisBuffer=function(){return a.checkState(this.output instanceof l),a.checkState(this.output._satoshisBN),new c().writeUInt64LEBN(this.output._satoshisBN).toBuffer()},O.prototype.isFullySigned=function(){throw new t.AbstractMethodInvoked("Input#isFullySigned")},O.prototype.isFinal=function(){return this.sequenceNumber!==O.MAXINT},O.prototype.addSignature=function(){throw new t.AbstractMethodInvoked("Input#addSignature")},O.prototype.clearSignatures=function(){throw new t.AbstractMethodInvoked("Input#clearSignatures")},O.prototype.hasWitnesses=function(){return!!(this.witnesses&&this.witnesses.length>0)},O.prototype.getWitnesses=function(){return this.witnesses},O.prototype.setWitnesses=function(R){this.witnesses=R},O.prototype.isValidSignature=function(R,B,M){return M=M||"ecdsa",B.signature.nhashtype=B.sigtype,u.verify(R,B.signature,B.publicKey,B.inputIndex,this.output.script,M)},O.prototype.isNull=function(){return this.prevTxId.toString("hex")==="0000000000000000000000000000000000000000000000000000000000000000"&&this.outputIndex===4294967295},O.prototype._estimateSize=function(){return this.toBufferWriter().toBuffer().length},O.prototype.lockForSeconds=function(R){if(a.checkArgument(e.isNumber(R)),R<0||R>=A*I)throw new t.Transaction.Input.LockTimeRange;return R=parseInt(Math.floor(R/A)),this.sequenceNumber=R|T,this},O.prototype.lockUntilBlockHeight=function(R){if(a.checkArgument(e.isNumber(R)),R<0||R>=C)throw new t.Transaction.Input.BlockHeightOutOfRange;return this.sequenceNumber=R,this},O.prototype.getLockTime=function(){if(this.sequenceNumber&S)return null;if(this.sequenceNumber&T){var R=A*(this.sequenceNumber&I);return R}else{var B=this.sequenceNumber&I;return B}},input=O,input}var inherits_browserExports={},inherits_browser={get exports(){return inherits_browserExports},set exports(e){inherits_browserExports=e}};typeof Object.create=="function"?inherits_browser.exports=function(a,t){a.super_=t,a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}})}:inherits_browser.exports=function(a,t){a.super_=t;var c=function(){};c.prototype=t.prototype,a.prototype=new c,a.prototype.constructor=a};var signature$1,hasRequiredSignature;function requireSignature(){if(hasRequiredSignature)return signature$1;hasRequiredSignature=1;var e=lodashExports,a=preconditions,t=inherits_browserExports,c=bufferExports,i=js,o=requirePublickey(),b=errorsExports,u=signature$2;function l(x){if(!(this instanceof l))return new l(x);if(x instanceof l)return x;if(e.isObject(x))return this._fromObject(x);throw new b.InvalidArgument("TransactionSignatures must be instantiated from an object")}return t(l,u),l.prototype._fromObject=function(x){return this._checkObjectArgs(x),this.publicKey=new o(x.publicKey),this.prevTxId=c.isBuffer(x.prevTxId)?x.prevTxId:buffer$2.Buffer.from(x.prevTxId,"hex"),this.outputIndex=x.outputIndex,this.inputIndex=x.inputIndex,this.signature=x.signature instanceof u?x.signature:c.isBuffer(x.signature)?u.fromBuffer(x.signature):u.fromString(x.signature),this.sigtype=x.sigtype,this},l.prototype._checkObjectArgs=function(x){a.checkArgument(o(x.publicKey),"publicKey"),a.checkArgument(!e.isUndefined(x.inputIndex),"inputIndex"),a.checkArgument(!e.isUndefined(x.outputIndex),"outputIndex"),a.checkState(e.isNumber(x.inputIndex),"inputIndex must be a number"),a.checkState(e.isNumber(x.outputIndex),"outputIndex must be a number"),a.checkArgument(x.signature,"signature"),a.checkArgument(x.prevTxId,"prevTxId"),a.checkState(x.signature instanceof u||c.isBuffer(x.signature)||i.isHexa(x.signature),"signature must be a buffer or hexa value"),a.checkState(c.isBuffer(x.prevTxId)||i.isHexa(x.prevTxId),"prevTxId must be a buffer or hexa value"),a.checkArgument(x.sigtype,"sigtype"),a.checkState(e.isNumber(x.sigtype),"sigtype must be a number")},l.prototype.toObject=l.prototype.toJSON=function(){return{publicKey:this.publicKey.toString(),prevTxId:this.prevTxId.toString("hex"),outputIndex:this.outputIndex,inputIndex:this.inputIndex,signature:this.signature.toString(),sigtype:this.sigtype}},l.fromObject=function(x){return a.checkArgument(x),new l(x)},signature$1=l,signature$1}var publickey$1,hasRequiredPublickey$1;function requirePublickey$1(){if(hasRequiredPublickey$1)return publickey$1;hasRequiredPublickey$1=1;var e=inherits_browserExports,a=preconditions,t=requireInput$1(),c=requireOutput(),i=requireSighash(),o=requireScript(),b=signature$2,u=requireSignature();function l(){t.apply(this,arguments)}return e(l,t),l.prototype.getSignatures=function(x,g,v,E,S,T){a.checkState(this.output instanceof c),E=E||b.SIGHASH_ALL;var I=g.toPublicKey();return I.toString()===this.output.script.getPublicKey().toString("hex")?[new u({publicKey:I,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:v,signature:i.sign(x,g,E,v,this.output.script,T),sigtype:E})]:[]},l.prototype.addSignature=function(x,g,v){return a.checkState(this.isValidSignature(x,g,v),"Signature is invalid"),this.setScript(o.buildPublicKeyIn(g.signature.toDER(),g.sigtype)),this},l.prototype.clearSignatures=function(){return this.setScript(o.empty()),this},l.prototype.isFullySigned=function(){return this.script.isPublicKeyIn()},l.SCRIPT_MAX_SIZE=73,l.prototype._estimateSize=function(){return l.SCRIPT_MAX_SIZE},publickey$1=l,publickey$1}var sighashwitness,hasRequiredSighashwitness;function requireSighashwitness(){if(hasRequiredSighashwitness)return sighashwitness;hasRequiredSighashwitness=1;var e=signature$2;requireScript(),requireOutput();var a=bufferreader,t=bufferwriter,c=hashExports,i=requireEcdsa(),o=preconditions,b=lodashExports,u=function(v,E,S,T,I){var A,C,O;if(!(E&e.SIGHASH_ANYONECANPAY)){for(var R=[],B=0;B<v.inputs.length;B++){var M=v.inputs[B],L=new a(M.prevTxId).readReverse();R.push(L);var ee=buffer$2.Buffer.alloc(4);ee.writeUInt32LE(M.outputIndex,0),R.push(ee)}A=c.sha256sha256(buffer$2.Buffer.concat(R))}if(!(E&e.SIGHASH_ANYONECANPAY)&&(E&31)!==e.SIGHASH_SINGLE&&(E&31)!==e.SIGHASH_NONE){for(var z=[],oe=0;oe<v.inputs.length;oe++){var W=buffer$2.Buffer.alloc(4);W.writeUInt32LE(v.inputs[oe].sequenceNumber,0),z.push(W)}C=c.sha256sha256(buffer$2.Buffer.concat(z))}var P=new t;if((E&31)!==e.SIGHASH_SINGLE&&(E&31)!==e.SIGHASH_NONE){for(var D=0;D<v.outputs.length;D++)v.outputs[D].toBufferWriter(P);O=c.sha256sha256(P.toBuffer())}else(E&31)===e.SIGHASH_SINGLE&&S<v.outputs.length&&(v.outputs[S].toBufferWriter(P),O=c.sha256sha256(P.toBuffer()));var q=new t;q.writeUInt32LE(v.version),q.write(A),q.write(C);var Y=new a(v.inputs[S].prevTxId).readReverse();return q.write(Y),q.writeUInt32LE(v.inputs[S].outputIndex),q.write(T),q.write(I),q.writeUInt32LE(v.inputs[S].sequenceNumber),q.write(O),q.writeUInt32LE(v.nLockTime),q.writeInt32LE(E),c.sha256sha256(q.toBuffer())};function l(g,v,E,S,T,I,A){A=A||"ecdsa";var C;if(A==="ecdsa"){let O=u(g,E,S,T,I);return C=i.sign(O,v).set({nhashtype:E}),C}throw new Error("signingMethod not supported ",A)}function x(g,v,E,S,T,I,A){if(o.checkArgument(!b.isUndefined(g)),o.checkArgument(!b.isUndefined(v)&&!b.isUndefined(v.nhashtype)),A=A||"ecdsa",A==="ecdsa"){let C=u(g,v.nhashtype,S,T,I);return i.verify(C,v,E)}throw new Error("signingMethod not supported ",A)}return sighashwitness={sighash:u,sign:l,verify:x},sighashwitness}var publickeyhash,hasRequiredPublickeyhash;function requirePublickeyhash(){if(hasRequiredPublickeyhash)return publickeyhash;hasRequiredPublickeyhash=1;var e=inherits_browserExports,a=preconditions,l=bufferExports;requireAddress();var t=hashExports,c=requireInput$1(),i=requireOutput(),o=requireSighash(),b=requireSighashwitness(),u=bufferwriter,l=bufferExports,x=requireScript(),g=signature$2,v=requireSignature();function E(){c.apply(this,arguments)}return e(E,c),E.prototype.getRedeemScript=function(S){if(!this.redeemScript){var T=x.buildWitnessV0Out(S);if(x.buildScriptHashOut(T).equals(this.output.script)){var I=new x;I.add(T.toBuffer()),this.setScript(I),this.redeemScript=T}}return this.redeemScript},E.prototype.getScriptCode=function(S){var T=new u,I;this.output.script.isScriptHashOut()?I=this.getRedeemScript(S):I=this.output.script;var A=x.buildPublicKeyHashOut(I.toAddress()).toBuffer();return T.writeVarintNum(A.length),T.write(A),T.toBuffer()},E.prototype.getSighash=function(S,T,I,A){var C=this.getScriptCode(T),O=this.getSatoshisBuffer();return b.sighash(S,A,I,C,O)},E.prototype.getSignatures=function(S,T,I,A,C,O){a.checkState(this.output instanceof i),C=C||t.sha256ripemd160(T.publicKey.toBuffer()),A=A||g.SIGHASH_ALL,O=O||"ecdsa";var R;if(this.output.script.isScriptHashOut()?R=this.getRedeemScript(T.publicKey):R=this.output.script,R&&l.equals(C,R.getPublicKeyHash())){var B;if(R.isWitnessPublicKeyHashOut()){var M=this.getSatoshisBuffer(),L=this.getScriptCode(T.publicKey);B=b.sign(S,T,A,I,L,M,O)}else B=o.sign(S,T,A,I,this.output.script,O);return[new v({publicKey:T.publicKey,prevTxId:this.prevTxId,outputIndex:this.outputIndex,inputIndex:I,signature:B,sigtype:A})]}return[]},E.prototype.addSignature=function(S,T,I){return a.checkState(this.isValidSignature(S,T,I),"Signature is invalid"),this.output.script.isWitnessPublicKeyHashOut()||this.output.script.isScriptHashOut()?this.setWitnesses([l.concat([T.signature.toDER(),l.integerAsSingleByteBuffer(T.sigtype)]),T.publicKey.toBuffer()]):this.setScript(x.buildPublicKeyHashIn(T.publicKey,T.signature.toDER(),T.sigtype)),this},E.prototype.clearSignatures=function(){return this.setScript(x.empty()),this.setWitnesses([]),this},E.prototype.isFullySigned=function(){return this.script.isPublicKeyHashIn()||this.hasWitnesses()},E.prototype.isValidSignature=function(S,T,I){if(T.signature.nhashtype=T.sigtype,this.output.script.isWitnessPublicKeyHashOut()||this.output.script.isScriptHashOut()){var A=this.getScriptCode(),C=this.getSatoshisBuffer();return b.verify(S,T.signature,T.publicKey,T.inputIndex,A,C,I)}else return o.verify(S,T.signature,T.publicKey,T.inputIndex,this.output.script,I)},E.SCRIPT_MAX_SIZE=73+34,E.REDEEM_SCRIPT_SIZE=22,E.prototype._estimateSize=function(){var S=4;const T=E.SCRIPT_MAX_SIZE/S;return this.output.script.isWitnessPublicKeyHashOut()?T:this.output.script.isScriptHashOut()?T+E.REDEEM_SCRIPT_SIZE:E.SCRIPT_MAX_SIZE},publickeyhash=E,publickeyhash}var multisig$1,hasRequiredMultisig;function requireMultisig(){if(hasRequiredMultisig)return multisig$1;hasRequiredMultisig=1;var e=lodashExports,a=inherits_browserExports;requireTransaction$1();var t=requireInput$1(),c=requireOutput(),i=preconditions,o=requireScript(),b=signature$2,u=requireSighash();requirePublickey();var l=bufferExports,x=requireSignature();function g(v,E,S,T,I){I=I||{},t.apply(this,arguments);var A=this;E=E||v.publicKeys,S=S||v.threshold,T=T||v.signatures,I.noSorting?this.publicKeys=E:this.publicKeys=e.sortBy(E,function(C){return C.toString("hex")}),i.checkState(o.buildMultisigOut(this.publicKeys,S).equals(this.output.script),"Provided public keys don't match to the provided output script"),this.publicKeyIndex={},e.each(this.publicKeys,function(C,O){A.publicKeyIndex[C.toString()]=O}),this.threshold=S,this.signatures=T?this._deserializeSignatures(T):new Array(this.publicKeys.length)}return a(g,t),g.prototype.toObject=function(){var v=t.prototype.toObject.apply(this,arguments);return v.threshold=this.threshold,v.publicKeys=e.map(this.publicKeys,function(E){return E.toString()}),v.signatures=this._serializeSignatures(),v},g.prototype._deserializeSignatures=function(v){return e.map(v,function(E){if(E)return new x(E)})},g.prototype._serializeSignatures=function(){return e.map(this.signatures,function(v){if(v)return v.toObject()})},g.prototype.getSignatures=function(v,E,S,T,I,A){i.checkState(this.output instanceof c),T=T||b.SIGHASH_ALL,A=A||"ecdsa";var C=this,O=[];return e.each(this.publicKeys,function(R){R.toString()===E.publicKey.toString()&&O.push(new x({publicKey:E.publicKey,prevTxId:C.prevTxId,outputIndex:C.outputIndex,inputIndex:S,signature:u.sign(v,E,T,S,C.output.script,A),sigtype:T}))}),O},g.prototype.addSignature=function(v,E,S){return i.checkState(!this.isFullySigned(),"All needed signatures have already been added"),i.checkArgument(!e.isUndefined(this.publicKeyIndex[E.publicKey.toString()],"Signature Undefined"),"Signature has no matching public key"),i.checkState(this.isValidSignature(v,E,S),"Invalid Signature"),this.signatures[this.publicKeyIndex[E.publicKey.toString()]]=E,this._updateScript(),this},g.prototype._updateScript=function(){return this.setScript(o.buildMultisigIn(this.publicKeys,this.threshold,this._createSignatures())),this},g.prototype._createSignatures=function(){return e.map(e.filter(this.signatures,function(v){return!e.isUndefined(v)}),function(v){return l.concat([v.signature.toDER(),l.integerAsSingleByteBuffer(v.sigtype)])})},g.prototype.clearSignatures=function(){this.signatures=new Array(this.publicKeys.length),this._updateScript()},g.prototype.isFullySigned=function(){return this.countSignatures()===this.threshold},g.prototype.countMissingSignatures=function(){return this.threshold-this.countSignatures()},g.prototype.countSignatures=function(){return e.reduce(this.signatures,function(v,E){return v+!!E},0)},g.prototype.publicKeysWithoutSignature=function(){var v=this;return e.filter(this.publicKeys,function(E){return!v.signatures[v.publicKeyIndex[E.toString()]]})},g.prototype.isValidSignature=function(v,E,S){return E.signature.nhashtype=E.sigtype,u.verify(v,E.signature,E.publicKey,E.inputIndex,this.output.script,S)},g.normalizeSignatures=function(v,E,S,T,I,A){return I.map(function(C){var O=null;return T=T.filter(function(R){if(O)return!0;var B=new x({signature:b.fromTxFormat(R),publicKey:C,prevTxId:E.prevTxId,outputIndex:E.outputIndex,inputIndex:S,sigtype:b.SIGHASH_ALL});B.signature.nhashtype=B.sigtype;var M=u.verify(v,B.signature,B.publicKey,B.inputIndex,E.output.script,A);return M?(O=B,!1):!0}),O||null})},g.OPCODES_SIZE=1,g.SIGNATURE_SIZE=73,g.prototype._estimateSize=function(){return g.OPCODES_SIZE+this.threshold*g.SIGNATURE_SIZE},multisig$1=g,multisig$1}var multisigscripthash,hasRequiredMultisigscripthash;function requireMultisigscripthash(){if(hasRequiredMultisigscripthash)return multisigscripthash;hasRequiredMultisigscripthash=1;var e=lodashExports,a=inherits_browserExports,t=requireInput$1(),c=requireOutput(),i=preconditions,o=requireAddress(),b=requireScript(),u=signature$2,l=requireSighash(),x=requireSighashwitness(),g=bufferwriter,v=bufferExports,E=requireSignature();function S(T,I,A,C,O){O=O||{},t.apply(this,arguments);var R=this;I=I||T.publicKeys,A=A||T.threshold,C=C||T.signatures,O.noSorting?this.publicKeys=I:this.publicKeys=e.sortBy(I,function(L){return L.toString("hex")}),this.redeemScript=b.buildMultisigOut(this.publicKeys,A,O);var B=b.buildWitnessMultisigOutFromScript(this.redeemScript);if(B.equals(this.output.script))this.nestedWitness=!1,this.type=o.PayToWitnessScriptHash;else if(b.buildScriptHashOut(B).equals(this.output.script))this.nestedWitness=!0,this.type=o.PayToScriptHash;else if(b.buildScriptHashOut(this.redeemScript).equals(this.output.script))this.nestedWitness=!1,this.type=o.PayToScriptHash;else throw new Error("Provided public keys don't hash to the provided output");if(this.nestedWitness){var M=new b;M.add(B.toBuffer()),this.setScript(M)}this.publicKeyIndex={},e.each(this.publicKeys,function(L,ee){R.publicKeyIndex[L.toString()]=ee}),this.threshold=A,this.signatures=C?this._deserializeSignatures(C):new Array(this.publicKeys.length)}return a(S,t),S.prototype.toObject=function(){var T=t.prototype.toObject.apply(this,arguments);return T.threshold=this.threshold,T.publicKeys=e.map(this.publicKeys,function(I){return I.toString()}),T.signatures=this._serializeSignatures(),T},S.prototype._deserializeSignatures=function(T){return e.map(T,function(I){if(I)return new E(I)})},S.prototype._serializeSignatures=function(){return e.map(this.signatures,function(T){if(T)return T.toObject()})},S.prototype.getScriptCode=function(){var T=new g;if(this.redeemScript.hasCodeseparators())throw new Error("@TODO");var I=this.redeemScript.toBuffer();return T.writeVarintNum(I.length),T.write(I),T.toBuffer()},S.prototype.getSighash=function(T,I,A,C){var O=this,R;if(O.nestedWitness||O.type===o.PayToWitnessScriptHash){var B=O.getScriptCode(),M=O.getSatoshisBuffer();R=x.sighash(T,C,A,B,M)}else R=l.sighash(T,C,A,O.redeemScript);return R},S.prototype.getSignatures=function(T,I,A,C,O,R){i.checkState(this.output instanceof c),C=C||u.SIGHASH_ALL,R=R||"ecdsa";var B=this,M=[];return e.each(this.publicKeys,function(L){if(L.toString()===I.publicKey.toString()){var ee;if(B.nestedWitness||B.type===o.PayToWitnessScriptHash){var z=B.getScriptCode(),oe=B.getSatoshisBuffer();ee=x.sign(T,I,C,A,z,oe,R)}else ee=l.sign(T,I,C,A,B.redeemScript,R);M.push(new E({publicKey:I.publicKey,prevTxId:B.prevTxId,outputIndex:B.outputIndex,inputIndex:A,signature:ee,sigtype:C}))}}),M},S.prototype.addSignature=function(T,I,A){return i.checkState(!this.isFullySigned(),"All needed signatures have already been added"),i.checkArgument(!e.isUndefined(this.publicKeyIndex[I.publicKey.toString()]),"Signature has no matching public key"),i.checkState(this.isValidSignature(T,I,A),"Invalid Signature!"),this.signatures[this.publicKeyIndex[I.publicKey.toString()]]=I,this._updateScript(),this},S.prototype._updateScript=function(){if(this.nestedWitness||this.type===o.PayToWitnessScriptHash){for(var T=[buffer$2.Buffer.alloc(0)],I=this._createSignatures(),A=0;A<I.length;A++)T.push(I[A]);T.push(this.redeemScript.toBuffer()),this.setWitnesses(T)}else{var C=b.buildP2SHMultisigIn(this.publicKeys,this.threshold,this._createSignatures(),{cachedMultisig:this.redeemScript});this.setScript(C)}return this},S.prototype._createSignatures=function(){return e.map(e.filter(this.signatures,function(T){return!e.isUndefined(T)}),function(T){return v.concat([T.signature.toDER(),v.integerAsSingleByteBuffer(T.sigtype)])})},S.prototype.clearSignatures=function(){this.signatures=new Array(this.publicKeys.length),this._updateScript()},S.prototype.isFullySigned=function(){return this.countSignatures()===this.threshold},S.prototype.countMissingSignatures=function(){return this.threshold-this.countSignatures()},S.prototype.countSignatures=function(){return e.reduce(this.signatures,function(T,I){return T+!!I},0)},S.prototype.publicKeysWithoutSignature=function(){var T=this;return e.filter(this.publicKeys,function(I){return!T.signatures[T.publicKeyIndex[I.toString()]]})},S.prototype.isValidSignature=function(T,I,A){if(A=A||"ecdsa",this.nestedWitness||this.type===o.PayToWitnessScriptHash){I.signature.nhashtype=I.sigtype;var C=this.getScriptCode(),O=this.getSatoshisBuffer();return x.verify(T,I.signature,I.publicKey,I.inputIndex,C,O,A)}else return I.signature.nhashtype=I.sigtype,l.verify(T,I.signature,I.publicKey,I.inputIndex,this.redeemScript,A)},S.OPCODES_SIZE=7,S.SIGNATURE_SIZE=74,S.PUBKEY_SIZE=34,S.REDEEM_SCRIPT_SIZE=34,S.prototype._estimateSize=function(){var T=4,I=S.OPCODES_SIZE+this.threshold*S.SIGNATURE_SIZE+this.publicKeys.length*S.PUBKEY_SIZE;return this.type===o.PayToWitnessScriptHash?I/T:this.nestedWitness?I/T+S.REDEEM_SCRIPT_SIZE:I},multisigscripthash=S,multisigscripthash}var hasRequiredInput;function requireInput(){return hasRequiredInput||(hasRequiredInput=1,function(e){e.exports=requireInput$1(),e.exports.PublicKey=requirePublickey$1(),e.exports.PublicKeyHash=requirePublickeyhash(),e.exports.MultiSig=requireMultisig(),e.exports.MultiSigScriptHash=requireMultisigscripthash()}(input$1)),inputExports}var sighash_1,hasRequiredSighash;function requireSighash(){if(hasRequiredSighash)return sighash_1;hasRequiredSighash=1;var e=signature$2,a=requireScript(),t=requireOutput(),c=bufferreader,i=bufferwriter,o=bn,b=hashExports,u=requireEcdsa(),l=preconditions,x=lodashExports;const g=src$2;var v="0000000000000000000000000000000000000000000000000000000000000001",E="ffffffffffffffff",S=function(C,O,R,B){var M=requireTransaction$1(),L=requireInput(),ee,z=M.shallowCopy(C);for(B=new a(B),B.removeCodeseparators(),ee=0;ee<z.inputs.length;ee++)z.inputs[ee]=new L(z.inputs[ee]).setScript(a.empty());if(z.inputs[R]=new L(z.inputs[R]).setScript(B),(O&31)===e.SIGHASH_NONE||(O&31)===e.SIGHASH_SINGLE)for(ee=0;ee<z.inputs.length;ee++)ee!==R&&(z.inputs[ee].sequenceNumber=0);if((O&31)===e.SIGHASH_NONE)z.outputs=[];else if((O&31)===e.SIGHASH_SINGLE){if(R>=z.outputs.length)return buffer$2.Buffer.from(v,"hex");for(z.outputs.length=R+1,ee=0;ee<R;ee++)z.outputs[ee]=new t({satoshis:o.fromBuffer(buffer$2.Buffer.from(E,"hex")),script:a.empty()})}O&e.SIGHASH_ANYONECANPAY&&(z.inputs=[z.inputs[R]]);var oe=new i().write(z.toBuffer()).writeInt32LE(O).toBuffer(),W=b.sha256sha256(oe);return W=new c(W).readReverse(),W};function T(A,C,O,R,B,M){M=M||"ecdsa";let L=S(A,O,R,B),ee;switch(M){case"ecdsa":ee=u.sign(L,C,"little").set({nhashtype:O});break;case"schnorr":ee=g.sign(C.toString(),L);break;default:throw new Error("signingMethod not supported ",M)}return ee}function I(A,C,O,R,B,M){l.checkArgument(!x.isUndefined(A),"Transaction Undefined"),l.checkArgument(!x.isUndefined(C)&&!x.isUndefined(C.nhashtype),"Signature Undefined"),M=M||"ecdsa";let L=S(A,C.nhashtype,R,B),ee=!1;switch(M){case"ecdsa":ee=u.verify(L,C,O,"little");break;case"schnorr":ee=g.verify(O,L,C);break;default:throw new Error("signingMethod not supported ",M)}return ee}return sighash_1={sighash:S,sign:T,verify:I},sighash_1}var _$6=lodashExports,errors$3=errorsExports,$$5=preconditions,UNITS={BTC:[1e8,8],mBTC:[1e5,5],uBTC:[100,2],bits:[100,2],satoshis:[1,0]};function Unit$1(e,a){if(!(this instanceof Unit$1))return new Unit$1(e,a);if(_$6.isNumber(a)){if(a<=0)throw new errors$3.Unit.InvalidRate(a);e=e/a,a=Unit$1.BTC}this._value=this._from(e,a);var t=this,c=function(i){Object.defineProperty(t,i,{get:function(){return t.to(i)},enumerable:!0})};Object.keys(UNITS).forEach(c)}Object.keys(UNITS).forEach(function(e){Unit$1[e]=e});Unit$1.fromObject=function e(a){return $$5.checkArgument(_$6.isObject(a),"Argument is expected to be an object"),new Unit$1(a.amount,a.code)};Unit$1.fromBTC=function(e){return new Unit$1(e,Unit$1.BTC)};Unit$1.fromMillis=Unit$1.fromMilis=function(e){return new Unit$1(e,Unit$1.mBTC)};Unit$1.fromMicros=Unit$1.fromBits=function(e){return new Unit$1(e,Unit$1.bits)};Unit$1.fromSatoshis=function(e){return new Unit$1(e,Unit$1.satoshis)};Unit$1.fromFiat=function(e,a){return new Unit$1(e,a)};Unit$1.prototype._from=function(e,a){if(!UNITS[a])throw new errors$3.Unit.UnknownCode(a);return parseInt((e*UNITS[a][0]).toFixed())};Unit$1.prototype.to=function(e){if(_$6.isNumber(e)){if(e<=0)throw new errors$3.Unit.InvalidRate(e);return parseFloat((this.BTC*e).toFixed(2))}if(!UNITS[e])throw new errors$3.Unit.UnknownCode(e);var a=this._value/UNITS[e][0];return parseFloat(a.toFixed(UNITS[e][1]))};Unit$1.prototype.toBTC=function(){return this.to(Unit$1.BTC)};Unit$1.prototype.toMillis=Unit$1.prototype.toMilis=function(){return this.to(Unit$1.mBTC)};Unit$1.prototype.toMicros=Unit$1.prototype.toBits=function(){return this.to(Unit$1.bits)};Unit$1.prototype.toSatoshis=function(){return this.to(Unit$1.satoshis)};Unit$1.prototype.atRate=function(e){return this.to(e)};Unit$1.prototype.toString=function(){return this.satoshis+" satoshis"};Unit$1.prototype.toObject=Unit$1.prototype.toJSON=function e(){return{amount:this.BTC,code:Unit$1.BTC}};Unit$1.prototype.inspect=function(){return"<Unit: "+this.toString()+">"};var unit=Unit$1,unspentoutput,hasRequiredUnspentoutput;function requireUnspentoutput(){if(hasRequiredUnspentoutput)return unspentoutput;hasRequiredUnspentoutput=1;var e=lodashExports,a=preconditions,t=js,c=requireScript(),i=requireAddress(),o=unit;function b(u){if(!(this instanceof b))return new b(u);a.checkArgument(e.isObject(u),"Must provide an object from where to extract data");var l=u.address?new i(u.address):void 0,x=u.txid?u.txid:u.txId;if(!x||!t.isHexaString(x)||x.length>64)throw new Error("Invalid TXID in object",u);var g=e.isUndefined(u.vout)?u.outputIndex:u.vout;if(!e.isNumber(g))throw new Error("Invalid outputIndex, received "+g);a.checkArgument(!e.isUndefined(u.scriptPubKey)||!e.isUndefined(u.script),"Must provide the scriptPubKey for that output!");var v=new c(u.scriptPubKey||u.script);a.checkArgument(!e.isUndefined(u.amount)||!e.isUndefined(u.satoshis),"Must provide an amount for the output");var E=e.isUndefined(u.amount)?u.satoshis:new o.fromBTC(u.amount).toSatoshis();a.checkArgument(e.isNumber(E),"Amount must be a number"),t.defineImmutable(this,{address:l,txId:x,outputIndex:g,script:v,satoshis:E})}return b.prototype.inspect=function(){return"<UnspentOutput: "+this.txId+":"+this.outputIndex+", satoshis: "+this.satoshis+", address: "+this.address+">"},b.prototype.toString=function(){return this.txId+":"+this.outputIndex},b.fromObject=function(u){return new b(u)},b.prototype.toObject=b.prototype.toJSON=function(){return{address:this.address?this.address.toString():void 0,txid:this.txId,vout:this.outputIndex,scriptPubKey:this.script.toBuffer().toString("hex"),amount:o.fromSatoshis(this.satoshis).toBTC()}},unspentoutput=b,unspentoutput}var transaction,hasRequiredTransaction$1;function requireTransaction$1(){if(hasRequiredTransaction$1)return transaction;hasRequiredTransaction$1=1;var e=lodashExports,a=preconditions,t=buffer$2,c=buffer$2.Buffer.compare||requireBufferCompare(),i=errorsExports,o=bufferExports,b=js,u=bufferreader,l=bufferwriter,x=hashExports,g=signature$2,v=requireSighash(),E=requireSighashwitness(),S=requireAddress(),T=requireUnspentoutput(),I=requireInput(),A=I.PublicKeyHash,C=I.PublicKey,O=I.MultiSigScriptHash,R=I.MultiSig,B=requireOutput(),M=requireScript(),L=requirePrivatekey(),ee=bn;function z(U,j){if(!(this instanceof z))return new z(U);if(this.inputs=[],this.outputs=[],this._inputAmount=void 0,this._outputAmount=void 0,U){if(U instanceof z)return z.shallowCopy(U);if(b.isHexa(U))this.fromString(U);else if(o.isBuffer(U))this.fromBuffer(U);else if(e.isObject(U))this.fromObject(U,j);else throw new i.InvalidArgument("Must provide an object or string to deserialize a transaction")}else this._newTransaction()}var oe=2,W=0,P=1e6;z.DUST_AMOUNT=546,z.FEE_SECURITY_MARGIN=150,z.MAX_MONEY=21e6*1e8,z.NLOCKTIME_BLOCKHEIGHT_LIMIT=5e8,z.NLOCKTIME_MAX_VALUE=4294967295,z.FEE_PER_KB=1e5,z.CHANGE_OUTPUT_MAX_SIZE=20+4+34+4,z.MAXIMUM_EXTRA_SIZE=4+9+9+4,z.shallowCopy=function(U){var j=new z(U.toBuffer());return j};var D={configurable:!1,enumerable:!0,get:function(){return this._hash=new u(this._getHash()).readReverse().toString("hex"),this._hash}},q={configurable:!1,enumerable:!0,get:function(){return new u(this._getWitnessHash()).readReverse().toString("hex")}};Object.defineProperty(z.prototype,"witnessHash",q),Object.defineProperty(z.prototype,"hash",D),Object.defineProperty(z.prototype,"id",D);var Y={configurable:!1,enumerable:!0,get:function(){return this._getInputAmount()}};return Object.defineProperty(z.prototype,"inputAmount",Y),Y.get=function(){return this._getOutputAmount()},Object.defineProperty(z.prototype,"outputAmount",Y),z.prototype._getHash=function(){return x.sha256sha256(this.toBuffer(!0))},z.prototype._getWitnessHash=function(){return x.sha256sha256(this.toBuffer(!1))},z.prototype.serialize=function(U){return U===!0||U&&U.disableAll?this.uncheckedSerialize():this.checkedSerialize(U)},z.prototype.uncheckedSerialize=z.prototype.toString=function(){return this.toBuffer().toString("hex")},z.prototype.checkedSerialize=function(U){var j=this.getSerializationError(U);if(j)throw j.message+=" - For more information please see: https://github.com/bitpay/bitcore/blob/master/packages/bitcore-lib/docs/transaction.md#serialization-checks",j;return this.uncheckedSerialize()},z.prototype.invalidSatoshis=function(){for(var U=!1,j=0;j<this.outputs.length;j++)this.outputs[j].invalidSatoshis()&&(U=!0);return U},z.prototype.getSerializationError=function(U){if(U=U||{},this.invalidSatoshis())return new i.Transaction.InvalidSatoshis;var j=this._getUnspentValue(),Q;return j<0?U.disableMoreOutputThanInput||(Q=new i.Transaction.InvalidOutputAmountSum):Q=this._hasFeeError(U,j),Q||this._hasDustOutputs(U)||this._isMissingSignatures(U)},z.prototype._hasFeeError=function(U,j){if(!e.isUndefined(this._fee)&&this._fee!==j)return new i.Transaction.FeeError.Different("Unspent value is "+j+" but specified fee is "+this._fee);if(!U.disableLargeFees){var Q=Math.floor(z.FEE_SECURITY_MARGIN*this._estimateFee());if(j>Q)return this._missingChange()?new i.Transaction.ChangeAddressMissing("Fee is too large and no change address was provided"):new i.Transaction.FeeError.TooLarge("expected less than "+Q+" but got "+j)}if(!U.disableSmallFees){var X=Math.ceil(this._estimateFee()/z.FEE_SECURITY_MARGIN);if(j<X)return new i.Transaction.FeeError.TooSmall("expected more than "+X+" but got "+j)}},z.prototype._missingChange=function(){return!this._changeScript},z.prototype._hasDustOutputs=function(U){if(!U.disableDustOutputs){var j,Q;for(j in this.outputs)if(Q=this.outputs[j],Q.satoshis<z.DUST_AMOUNT&&!Q.script.isDataOut())return new i.Transaction.DustOutputs}},z.prototype._isMissingSignatures=function(U){if(!U.disableIsFullySigned&&!this.isFullySigned())return new i.Transaction.MissingSignatures},z.prototype.inspect=function(){return"<Transaction: "+this.uncheckedSerialize()+">"},z.prototype.toBuffer=function(U){var j=new l;return this.toBufferWriter(j,U).toBuffer()},z.prototype.hasWitnesses=function(){for(var U=0;U<this.inputs.length;U++)if(this.inputs[U].hasWitnesses())return!0;return!1},z.prototype.toBufferWriter=function(U,j){U.writeInt32LE(this.version);var Q=this.hasWitnesses();return Q&&!j&&U.write(buffer$2.Buffer.from("0001","hex")),U.writeVarintNum(this.inputs.length),e.each(this.inputs,function(X){X.toBufferWriter(U)}),U.writeVarintNum(this.outputs.length),e.each(this.outputs,function(X){X.toBufferWriter(U)}),Q&&!j&&e.each(this.inputs,function(X){var F=X.getWitnesses();U.writeVarintNum(F.length);for(var Z=0;Z<F.length;Z++)U.writeVarintNum(F[Z].length),U.write(F[Z])}),U.writeUInt32LE(this.nLockTime),U},z.prototype.fromBuffer=function(U){var j=new u(U);return this.fromBufferReader(j)},z.prototype.fromBufferReader=function(U){a.checkArgument(!U.finished(),"No transaction data received"),this.version=U.readInt32LE();var j=U.readVarintNum(),Q=!1;j===0&&U.buf[U.pos]!==0&&(U.pos+=1,Q=!0,j=U.readVarintNum());for(var X=0;X<j;X++){var F=I.fromBufferReader(U);this.inputs.push(F)}for(var Z=U.readVarintNum(),J=0;J<Z;J++)this.outputs.push(B.fromBufferReader(U));if(Q)for(var ce=0;ce<j;ce++){for(var re=U.readVarintNum(),ie=[],fe=0;fe<re;fe++){var pe=U.readVarintNum(),Oe=U.read(pe);ie.push(Oe)}this.inputs[ce].setWitnesses(ie)}return this.nLockTime=U.readUInt32LE(),this},z.prototype.toObject=z.prototype.toJSON=function(){var j=[];this.inputs.forEach(function(F){j.push(F.toObject())});var Q=[];this.outputs.forEach(function(F){Q.push(F.toObject())});var X={hash:this.hash,version:this.version,inputs:j,outputs:Q,nLockTime:this.nLockTime};return this._changeScript&&(X.changeScript=this._changeScript.toString()),e.isUndefined(this._changeIndex)||(X.changeIndex=this._changeIndex),e.isUndefined(this._fee)||(X.fee=this._fee),X},z.prototype.fromObject=function(j,Q){a.checkArgument(e.isObject(j)||j instanceof z);var X=this,F;return j instanceof z?F=F.toObject():F=j,e.each(F.inputs,function(Z){if(!Z.output||!Z.output.script){X.uncheckedAddInput(new I(Z));return}var J=new M(Z.output.script),ce;if((J.isScriptHashOut()||J.isWitnessScriptHashOut())&&Z.publicKeys&&Z.threshold)ce=new I.MultiSigScriptHash(Z,Z.publicKeys,Z.threshold,Z.signatures,Q);else if(J.isPublicKeyHashOut()||J.isWitnessPublicKeyHashOut()||J.isScriptHashOut())ce=new I.PublicKeyHash(Z);else if(J.isPublicKeyOut())ce=new I.PublicKey(Z);else throw new i.Transaction.Input.UnsupportedScript(Z.output.script);X.addInput(ce)}),e.each(F.outputs,function(Z){X.addOutput(new B(Z))}),F.changeIndex&&(this._changeIndex=F.changeIndex),F.changeScript&&(this._changeScript=new M(F.changeScript)),F.fee&&(this._fee=F.fee),this.nLockTime=F.nLockTime,this.version=F.version,this._checkConsistency(j),this},z.prototype._checkConsistency=function(U){e.isUndefined(this._changeIndex)||(a.checkState(this._changeScript,"Change script is expected."),a.checkState(this.outputs[this._changeIndex],"Change index points to undefined output."),a.checkState(this.outputs[this._changeIndex].script.toString()===this._changeScript.toString(),"Change output has an unexpected script.")),U&&U.hash&&a.checkState(U.hash===this.hash,"Hash in object does not match transaction hash.")},z.prototype.lockUntilDate=function(U){if(a.checkArgument(U),e.isNumber(U)&&U<z.NLOCKTIME_BLOCKHEIGHT_LIMIT)throw new i.Transaction.LockTimeTooEarly;e.isDate(U)&&(U=U.getTime()/1e3);for(var j=0;j<this.inputs.length;j++)this.inputs[j].sequenceNumber===I.DEFAULT_SEQNUMBER&&(this.inputs[j].sequenceNumber=I.DEFAULT_LOCKTIME_SEQNUMBER);return this.nLockTime=U,this},z.prototype.lockUntilBlockHeight=function(U){if(a.checkArgument(e.isNumber(U)),U>=z.NLOCKTIME_BLOCKHEIGHT_LIMIT)throw new i.Transaction.BlockHeightTooHigh;if(U<0)throw new i.Transaction.NLockTimeOutOfRange;for(var j=0;j<this.inputs.length;j++)this.inputs[j].sequenceNumber===I.DEFAULT_SEQNUMBER&&(this.inputs[j].sequenceNumber=I.DEFAULT_LOCKTIME_SEQNUMBER);return this.nLockTime=U,this},z.prototype.getLockTime=function(){return this.nLockTime?this.nLockTime<z.NLOCKTIME_BLOCKHEIGHT_LIMIT?this.nLockTime:new Date(1e3*this.nLockTime):null},z.prototype.fromString=function(U){this.fromBuffer(t.Buffer.from(U,"hex"))},z.prototype._newTransaction=function(){this.version=oe,this.nLockTime=W},z.prototype.from=function(U,j,Q,X){if(e.isArray(U)){var F=this;return e.each(U,function(J){F.from(J,j,Q,X)}),this}var Z=e.some(this.inputs,function(J){return J.prevTxId.toString("hex")===U.txId&&J.outputIndex===U.outputIndex});return Z?this:(j&&Q?this._fromMultisigUtxo(U,j,Q,X):this._fromNonP2SH(U),this)},z.prototype.associateInputs=function(U,j,Q,X){let F=[];for(let Z of U){const J=this.inputs.findIndex(ce=>ce.prevTxId.toString("hex")===Z.txId&&ce.outputIndex===Z.outputIndex);F.push(J),J>=0&&(this.inputs[J]=this._getInputFrom(Z,j,Q,X))}return F},z.prototype._selectInputType=function(U,j,Q){var X;return U=new T(U),j&&Q?U.script.isMultisigOut()?X=R:(U.script.isScriptHashOut()||U.script.isWitnessScriptHashOut())&&(X=O):U.script.isPublicKeyHashOut()||U.script.isWitnessPublicKeyHashOut()||U.script.isScriptHashOut()?X=A:U.script.isPublicKeyOut()?X=C:X=I,X},z.prototype._getInputFrom=function(U,j,Q,X){U=new T(U);const F=this._selectInputType(U,j,Q),Z={output:new B({script:U.script,satoshis:U.satoshis}),prevTxId:U.txId,outputIndex:U.outputIndex,sequenceNumber:U.sequenceNumber,script:M.empty()};let J=j&&Q?[j,Q,!1,X]:[];return new F(Z,...J)},z.prototype._fromNonP2SH=function(U){const j=this._getInputFrom(U);this.addInput(j)},z.prototype._fromMultisigUtxo=function(U,j,Q,X){a.checkArgument(Q<=j.length,"Number of required signatures must be greater than the number of public keys");const F=this._getInputFrom(U,j,Q,X);this.addInput(F)},z.prototype.addInput=function(U,j,Q){if(a.checkArgumentType(U,I,"input"),!U.output&&(e.isUndefined(j)||e.isUndefined(Q)))throw new i.Transaction.NeedMoreInfo("Need information about the UTXO script and satoshis");return!U.output&&j&&!e.isUndefined(Q)&&(j=j instanceof M?j:new M(j),a.checkArgumentType(Q,"number","satoshis"),U.output=new B({script:j,satoshis:Q})),this.uncheckedAddInput(U)},z.prototype.uncheckedAddInput=function(U){return a.checkArgumentType(U,I,"input"),this.inputs.push(U),this._inputAmount=void 0,this._updateChangeOutput(),this},z.prototype.hasAllUtxoInfo=function(){return e.every(this.inputs.map(function(U){return!!U.output}))},z.prototype.fee=function(U){return a.checkArgument(e.isNumber(U),"amount must be a number"),this._fee=U,this._updateChangeOutput(),this},z.prototype.feePerKb=function(U){return a.checkArgument(e.isNumber(U),"amount must be a number"),this._feePerKb=U,this._updateChangeOutput(),this},z.prototype.feePerByte=function(U){return a.checkArgument(e.isNumber(U),"amount must be a number"),this._feePerByte=U,this._updateChangeOutput(),this},z.prototype.change=function(U){return a.checkArgument(U,"address is required"),this._changeScript=M.fromAddress(U),this._updateChangeOutput(),this},z.prototype.getChangeOutput=function(){return e.isUndefined(this._changeIndex)?null:this.outputs[this._changeIndex]},z.prototype.to=function(U,j){if(e.isArray(U)){var Q=this;return e.each(U,function(X){Q.to(X.address,X.satoshis)}),this}return a.checkArgument(b.isNaturalNumber(j),"Amount is expected to be a positive integer"),this.addOutput(new B({script:M(new S(U)),satoshis:j})),this},z.prototype.addData=function(U){return this.addOutput(new B({script:M.buildDataOut(U),satoshis:0})),this},z.prototype.addOutput=function(U){return a.checkArgumentType(U,B,"output"),this._addOutput(U),this._updateChangeOutput(),this},z.prototype.clearOutputs=function(){return this.outputs=[],this._clearSignatures(),this._outputAmount=void 0,this._changeIndex=void 0,this._updateChangeOutput(),this},z.prototype._addOutput=function(U){this.outputs.push(U),this._outputAmount=void 0},z.prototype._getOutputAmount=function(){if(e.isUndefined(this._outputAmount)){var U=this;this._outputAmount=0,e.each(this.outputs,function(j){U._outputAmount+=j.satoshis})}return this._outputAmount},z.prototype._getInputAmount=function(){return e.isUndefined(this._inputAmount)&&(this._inputAmount=e.sumBy(this.inputs,function(U){if(e.isUndefined(U.output))throw new i.Transaction.Input.MissingPreviousOutput;return U.output.satoshis})),this._inputAmount},z.prototype._updateChangeOutput=function(){if(this._changeScript){this._clearSignatures(),e.isUndefined(this._changeIndex)||this._removeOutput(this._changeIndex);var U=this._getUnspentValue(),j=this.getFee(),Q=U-j;Q>z.DUST_AMOUNT?(this._changeIndex=this.outputs.length,this._addOutput(new B({script:this._changeScript,satoshis:Q}))):this._changeIndex=void 0}},z.prototype.getFee=function(){return this.isCoinbase()?0:e.isUndefined(this._fee)?this._changeScript?this._estimateFee():this._getUnspentValue():this._fee},z.prototype._estimateFee=function(){var U=this._estimateSize(),j=this._getUnspentValue(),Q=this._feePerByte||(this._feePerKb||z.FEE_PER_KB)/1e3;function X(J){return J*Q}var F=Math.ceil(X(U)),Z=Math.ceil(X(U)+X(z.CHANGE_OUTPUT_MAX_SIZE));return!this._changeScript||j<=Z?F:Z},z.prototype._getUnspentValue=function(){return this._getInputAmount()-this._getOutputAmount()},z.prototype._clearSignatures=function(){e.each(this.inputs,function(U){U.clearSignatures()})},z.prototype._estimateSize=function(){var U=z.MAXIMUM_EXTRA_SIZE;return e.each(this.inputs,function(j){U+=32+4,U+=j._estimateSize()}),e.each(this.outputs,function(j){U+=j.script.toBuffer().length+9}),Math.ceil(U)},z.prototype._removeOutput=function(U){var j=this.outputs[U];this.outputs=e.without(this.outputs,j),this._outputAmount=void 0},z.prototype.removeOutput=function(U){this._removeOutput(U),this._updateChangeOutput()},z.prototype.sort=function(){return this.sortInputs(function(U){var j=Array.prototype.concat.apply([],U);let Q=0;return j.forEach(X=>{X.i=Q++}),j.sort(function(X,F){return c(X.prevTxId,F.prevTxId)||X.outputIndex-F.outputIndex||X.i-F.i}),j}),this.sortOutputs(function(U){var j=Array.prototype.concat.apply([],U);let Q=0;return j.forEach(X=>{X.i=Q++}),j.sort(function(X,F){return X.satoshis-F.satoshis||c(X.script.toBuffer(),F.script.toBuffer())||X.i-F.i}),j}),this},z.prototype.shuffleOutputs=function(){return this.sortOutputs(e.shuffle)},z.prototype.sortOutputs=function(U){var j=U(this.outputs);return this._newOutputOrder(j)},z.prototype.sortInputs=function(U){return this.inputs=U(this.inputs),this._clearSignatures(),this},z.prototype._newOutputOrder=function(U){var j=this.outputs.length!==U.length||e.difference(this.outputs,U).length!==0;if(j)throw new i.Transaction.InvalidSorting;if(!e.isUndefined(this._changeIndex)){var Q=this.outputs[this._changeIndex];this._changeIndex=e.findIndex(U,Q)}return this.outputs=U,this},z.prototype.removeInput=function(U,j){var Q;if(!j&&e.isNumber(U)?Q=U:Q=e.findIndex(this.inputs,function(F){return F.prevTxId.toString("hex")===U&&F.outputIndex===j}),Q<0||Q>=this.inputs.length)throw new i.Transaction.InvalidIndex(Q,this.inputs.length);var X=this.inputs[Q];this.inputs=e.without(this.inputs,X),this._inputAmount=void 0,this._updateChangeOutput()},z.prototype.sign=function(U,j,Q){a.checkState(this.hasAllUtxoInfo(),"Not all utxo information is available to sign the transaction.");var X=this;return e.isArray(U)?(e.each(U,function(F){X.sign(F,j,Q)}),this):(e.each(this.getSignatures(U,j,Q),function(F){X.applySignature(F,Q)}),this)},z.prototype.getSignatures=function(U,j,Q){U=new L(U),j=j||g.SIGHASH_ALL;var X=this,F=[],Z=x.sha256ripemd160(U.publicKey.toBuffer());return e.each(this.inputs,function(ce,re){e.each(ce.getSignatures(X,U,re,j,Z,Q),function(ie){F.push(ie)})}),F},z.prototype.applySignature=function(U,j){return this.inputs[U.inputIndex].addSignature(this,U,j),this},z.prototype.isFullySigned=function(){return e.each(this.inputs,function(U){if(U.isFullySigned===I.prototype.isFullySigned)throw new i.Transaction.UnableToVerifySignature("Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction")}),e.every(e.map(this.inputs,function(U){return U.isFullySigned()}))},z.prototype.isValidSignature=function(U,j){var Q=this;if(this.inputs[U.inputIndex].isValidSignature===I.prototype.isValidSignature)throw new i.Transaction.UnableToVerifySignature("Unrecognized script kind, or not enough information to execute script.This usually happens when creating a transaction from a serialized transaction");return this.inputs[U.inputIndex].isValidSignature(Q,U,j)},z.prototype.verifySignature=function(U,j,Q,X,F,Z,J){if(e.isUndefined(F)&&(F=0),F===1){var ce=X.toBuffer(),re=new l;re.writeVarintNum(ce.length),re.write(ce);var ie;Z?(a.checkState(b.isNaturalNumber(Z)),ie=new l().writeUInt64LEBN(new ee(Z)).toBuffer()):ie=this.inputs[Q].getSatoshisBuffer();var fe=E.verify(this,U,j,Q,re.toBuffer(),ie,J);return fe}return v.verify(this,U,j,Q,X,J)},z.prototype.verify=function(){if(this.inputs.length===0)return"transaction txins empty";if(this.outputs.length===0)return"transaction txouts empty";for(var U=new ee(0),j=0;j<this.outputs.length;j++){var Q=this.outputs[j];if(Q.invalidSatoshis())return"transaction txout "+j+" satoshis is invalid";if(Q._satoshisBN.gt(new ee(z.MAX_MONEY,10)))return"transaction txout "+j+" greater than MAX_MONEY";if(U=U.add(Q._satoshisBN),U.gt(new ee(z.MAX_MONEY)))return"transaction txout "+j+" total output greater than MAX_MONEY"}if(this.toBuffer().length>P)return"transaction over the maximum block size";var X={};for(j=0;j<this.inputs.length;j++){var F=this.inputs[j],Z=F.prevTxId+":"+F.outputIndex;if(!e.isUndefined(X[Z]))return"transaction input "+j+" duplicate input";X[Z]=!0}var J=this.isCoinbase();if(J){var ce=this.inputs[0]._scriptBuffer;if(ce.length<2||ce.length>100)return"coinbase transaction script size invalid"}else for(j=0;j<this.inputs.length;j++)if(this.inputs[j].isNull())return"transaction input "+j+" has null input";return!0},z.prototype.isCoinbase=function(){return this.inputs.length===1&&this.inputs[0].isNull()},z.prototype.isRBF=function(){for(var U=0;U<this.inputs.length;U++){var j=this.inputs[U];if(j.sequenceNumber<I.MAXINT-1)return!0}return!1},z.prototype.enableRBF=function(){for(var U=0;U<this.inputs.length;U++){var j=this.inputs[U];j.sequenceNumber>=I.MAXINT-1&&(j.sequenceNumber=I.DEFAULT_RBF_SEQNUMBER)}return this},z.prototype.setVersion=function(U){return a.checkArgument(b.isNaturalNumber(U)&&U<=oe,"Wrong version number"),this.version=U,this},transaction=z,transaction}var hasRequiredTransaction;function requireTransaction(){return hasRequiredTransaction||(hasRequiredTransaction=1,function(e){e.exports=requireTransaction$1(),e.exports.Input=requireInput(),e.exports.Output=requireOutput(),e.exports.UnspentOutput=requireUnspentoutput(),e.exports.Signature=requireSignature(),e.exports.Sighash=requireSighash(),e.exports.SighashWitness=requireSighashwitness()}(transaction$1)),transactionExports}var interpreter,hasRequiredInterpreter;function requireInterpreter(){if(hasRequiredInterpreter)return interpreter;hasRequiredInterpreter=1;var e=lodashExports,a=requireScript$1(),t=opcode,c=bn,i=hashExports,o=signature$2,b=requirePublickey(),u=function l(x){if(!(this instanceof l))return new l(x);x?(this.initialize(),this.set(x)):this.initialize()};return u.SIGVERSION_BASE=0,u.SIGVERSION_WITNESS_V0=1,u.SIGVERSION_TAPROOT=2,u.SIGVERSION_TAPSCRIPT=3,u.prototype.verifyWitnessProgram=function(l,x,g,v,E){var S=new a,T=[];if(l===0)if(x.length===32){if(g.length===0)return this.errstr="SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY",!1;var I=g[g.length-1];S=new a(I);var A=i.sha256(I);if(A.toString("hex")!==x.toString("hex"))return this.errstr="SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH",!1;T=g.slice(0,-1)}else if(x.length===20){if(g.length!==2)return this.errstr="SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH",!1;S.add(t.OP_DUP),S.add(t.OP_HASH160),S.add(x),S.add(t.OP_EQUALVERIFY),S.add(t.OP_CHECKSIG),T=g}else return this.errstr="SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH",!1;else return E&u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM?(this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM",!1):!0;if(this.initialize(),this.set({script:S,stack:T,sigversion:u.SIGVERSION_WITNESS_V0,satoshis:v,flags:E}),!this.evaluate())return!1;if(this.stack.length!==1)return this.errstr="SCRIPT_ERR_EVAL_FALSE",!1;var C=this.stack[this.stack.length-1];return u.castToBool(C)?!0:(this.errstr="SCRIPT_ERR_EVAL_FALSE_IN_STACK",!1)},u.prototype.verify=function(l,x,g,v,E,S,T){var I=requireTransaction();e.isUndefined(g)&&(g=new I),e.isUndefined(v)&&(v=0),e.isUndefined(E)&&(E=0),e.isUndefined(S)&&(S=null),e.isUndefined(T)&&(T=0),this.set({script:l,tx:g,nin:v,sigversion:u.SIGVERSION_BASE,satoshis:0,flags:E});var A;if(E&u.SCRIPT_VERIFY_SIGPUSHONLY&&!l.isPushOnly())return this.errstr="SCRIPT_ERR_SIG_PUSHONLY",!1;if(!this.evaluate())return!1;E&u.SCRIPT_VERIFY_P2SH&&(A=this.stack.slice());var C=this.stack;if(this.initialize(),this.set({script:x,stack:C,tx:g,nin:v,flags:E}),!this.evaluate())return!1;if(this.stack.length===0)return this.errstr="SCRIPT_ERR_EVAL_FALSE_NO_RESULT",!1;var O=this.stack[this.stack.length-1];if(!u.castToBool(O))return this.errstr="SCRIPT_ERR_EVAL_FALSE_IN_STACK",!1;var R=!1;if(E&u.SCRIPT_VERIFY_WITNESS){var B={};if(x.isWitnessProgram(B)&&(R=!0,l.toBuffer().length!==0||!this.verifyWitnessProgram(B.version,B.program,S,T,this.flags)))return!1}if(E&u.SCRIPT_VERIFY_P2SH&&x.isScriptHashOut()){if(!l.isPushOnly())return this.errstr="SCRIPT_ERR_SIG_PUSHONLY",!1;if(A.length===0)throw new Error("internal error - stack copy empty");var M=A[A.length-1],L=a.fromBuffer(M);if(A.pop(),this.initialize(),this.set({script:L,stack:A,tx:g,nin:v,flags:E}),!this.evaluate())return!1;if(A.length===0)return this.errstr="SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK",!1;if(!u.castToBool(A[A.length-1]))return this.errstr="SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK",!1;if(E&u.SCRIPT_VERIFY_WITNESS){var ee={};if(L.isWitnessProgram(ee)){R=!0;var z=new a;if(z.add(L.toBuffer()),l.toHex()!==z.toHex())return this.errstr="SCRIPT_ERR_WITNESS_MALLEATED_P2SH",!1;if(!this.verifyWitnessProgram(ee.version,ee.program,S,T,this.flags))return!1;C=[C[0]]}}}if(this.flags&u.SCRIPT_VERIFY_CLEANSTACK){if(!(this.flags&u.SCRIPT_VERIFY_P2SH))throw"flags & SCRIPT_VERIFY_P2SH";if(A.length!=1)return this.errstr="SCRIPT_ERR_CLEANSTACK",!1}return this.flags&u.SCRIPT_VERIFY_WITNESS&&!R&&S.length>0?(this.errstr="SCRIPT_ERR_WITNESS_UNEXPECTED",!1):!0},interpreter=u,u.prototype.initialize=function(l){this.stack=[],this.altstack=[],this.pc=0,this.satoshis=0,this.sigversion=u.SIGVERSION_BASE,this.pbegincodehash=0,this.nOpCount=0,this.vfExec=[],this.errstr="",this.flags=0},u.prototype.set=function(l){this.script=l.script||this.script,this.tx=l.tx||this.tx,this.nin=typeof l.nin<"u"?l.nin:this.nin,this.stack=l.stack||this.stack,this.altstack=l.altack||this.altstack,this.pc=typeof l.pc<"u"?l.pc:this.pc,this.pbegincodehash=typeof l.pbegincodehash<"u"?l.pbegincodehash:this.pbegincodehash,this.sigversion=typeof l.sigversion<"u"?l.sigversion:this.sigversion,this.satoshis=typeof l.satoshis<"u"?l.satoshis:this.satoshis,this.nOpCount=typeof l.nOpCount<"u"?l.nOpCount:this.nOpCount,this.vfExec=l.vfExec||this.vfExec,this.errstr=l.errstr||this.errstr,this.flags=typeof l.flags<"u"?l.flags:this.flags},u.true=buffer$2.Buffer.from([1]),u.false=buffer$2.Buffer.from([]),u.MAX_SCRIPT_ELEMENT_SIZE=520,u.LOCKTIME_THRESHOLD=5e8,u.LOCKTIME_THRESHOLD_BN=new c(u.LOCKTIME_THRESHOLD),u.SCRIPT_VERIFY_NONE=0,u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM=1<<12,u.SCRIPT_VERIFY_P2SH=1<<0,u.SCRIPT_VERIFY_STRICTENC=1<<1,u.SCRIPT_VERIFY_DERSIG=1<<2,u.SCRIPT_VERIFY_LOW_S=1<<3,u.SCRIPT_VERIFY_NULLDUMMY=1<<4,u.SCRIPT_VERIFY_SIGPUSHONLY=1<<5,u.SCRIPT_VERIFY_MINIMALDATA=1<<6,u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS=1<<7,u.SCRIPT_VERIFY_CLEANSTACK=1<<8,u.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY=1<<9,u.SCRIPT_VERIFY_WITNESS=1<<10,u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS=1<<11,u.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY=1<<10,u.SCRIPT_VERIFY_MINIMALIF=1<<13,u.SCRIPT_VERIFY_NULLFAIL=1<<14,u.SCRIPT_VERIFY_WITNESS_PUBKEYTYPE=1<<15,u.SCRIPT_ENABLE_SIGHASH_FORKID=1<<16,u.SCRIPT_ENABLE_REPLAY_PROTECTION=1<<17,u.SCRIPT_ENABLE_MONOLITH_OPCODES=1<<18,u.SEQUENCE_LOCKTIME_DISABLE_FLAG=1<<31,u.SEQUENCE_LOCKTIME_TYPE_FLAG=1<<22,u.SEQUENCE_LOCKTIME_MASK=65535,u.castToBool=function(l){for(var x=0;x<l.length;x++)if(l[x]!==0)return!(x===l.length-1&&l[x]===128);return!1},u.prototype.checkSignatureEncoding=function(l){var x;if(l.length==0)return!0;if(this.flags&(u.SCRIPT_VERIFY_DERSIG|u.SCRIPT_VERIFY_LOW_S|u.SCRIPT_VERIFY_STRICTENC)&&!o.isTxDER(l))return this.errstr="SCRIPT_ERR_SIG_DER_INVALID_FORMAT",!1;if(this.flags&u.SCRIPT_VERIFY_LOW_S){if(x=o.fromTxFormat(l),!x.hasLowS())return this.errstr="SCRIPT_ERR_SIG_DER_HIGH_S",!1}else if(this.flags&u.SCRIPT_VERIFY_STRICTENC&&(x=o.fromTxFormat(l),!x.hasDefinedHashtype()))return this.errstr="SCRIPT_ERR_SIG_HASHTYPE",!1;return!0},u.prototype.checkPubkeyEncoding=function(l){return this.flags&u.SCRIPT_VERIFY_STRICTENC&&!b.isValid(l)?(this.errstr="SCRIPT_ERR_PUBKEYTYPE",!1):this.flags&u.SCRIPT_VERIFY_WITNESS_PUBKEYTYPE&&this.sigversion==u.SIGVERSION_WITNESS_V0&&!b.fromBuffer(l).compressed?(this.errstr="SCRIPT_ERR_WITNESS_PUBKEYTYPE",!1):!0},u.prototype.evaluate=function(){if(this.script.toBuffer().length>1e4)return this.errstr="SCRIPT_ERR_SCRIPT_SIZE",!1;try{for(;this.pc<this.script.chunks.length;){var l=this.step();if(!l)return!1}if(this.stack.length+this.altstack.length>1e3)return this.errstr="SCRIPT_ERR_STACK_SIZE",!1}catch(x){return this.errstr="SCRIPT_ERR_UNKNOWN_ERROR: "+x,!1}return this.vfExec.length>0?(this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1):!0},u.prototype.checkLockTime=function(l){return!(!(this.tx.nLockTime<u.LOCKTIME_THRESHOLD&&l.lt(u.LOCKTIME_THRESHOLD_BN)||this.tx.nLockTime>=u.LOCKTIME_THRESHOLD&&l.gte(u.LOCKTIME_THRESHOLD_BN))||l.gt(new c(this.tx.nLockTime))||!this.tx.inputs[this.nin].isFinal())},u.prototype.checkSequence=function(l){var x=this.tx.inputs[this.nin].sequenceNumber;if(this.tx.version<2||x&SEQUENCE_LOCKTIME_DISABLE_FLAG)return!1;var g=u.SEQUENCE_LOCKTIME_TYPE_FLAG|u.SEQUENCE_LOCKTIME_MASK,v=new c(x&g),E=l.and(g),S=new c(u.SEQUENCE_LOCKTIME_TYPE_FLAG);return!(!(v.lt(S)&&E.lt(S)||v.gte(S)&&E.gte(S))||E.gt(v))},u.prototype.step=function(){var l=(this.flags&u.SCRIPT_VERIFY_MINIMALDATA)!==0,x=this.vfExec.indexOf(!1)===-1,g,v,E,S,T,I,A,C,O,R,B,M,L,ee,z,oe,W,P=this.script.chunks[this.pc];this.pc++;var D=P.opcodenum;if(e.isUndefined(D))return this.errstr="SCRIPT_ERR_UNDEFINED_OPCODE",!1;if(P.buf&&P.buf.length>u.MAX_SCRIPT_ELEMENT_SIZE)return this.errstr="SCRIPT_ERR_PUSH_SIZE",!1;if(D>t.OP_16&&++this.nOpCount>201)return this.errstr="SCRIPT_ERR_OP_COUNT",!1;if(D===t.OP_CAT||D===t.OP_SUBSTR||D===t.OP_LEFT||D===t.OP_RIGHT||D===t.OP_INVERT||D===t.OP_AND||D===t.OP_OR||D===t.OP_XOR||D===t.OP_2MUL||D===t.OP_2DIV||D===t.OP_MUL||D===t.OP_DIV||D===t.OP_MOD||D===t.OP_LSHIFT||D===t.OP_RSHIFT)return this.errstr="SCRIPT_ERR_DISABLED_OPCODE",!1;if(x&&0<=D&&D<=t.OP_PUSHDATA4){if(l&&!this.script.checkMinimalPush(this.pc-1))return this.errstr="SCRIPT_ERR_MINIMALDATA",!1;if(!P.buf)this.stack.push(u.false);else{if(P.len!==P.buf.length)throw new Error("Length of push value not equal to length of data");this.stack.push(P.buf)}}else if(x||t.OP_IF<=D&&D<=t.OP_ENDIF)switch(D){case t.OP_1NEGATE:case t.OP_1:case t.OP_2:case t.OP_3:case t.OP_4:case t.OP_5:case t.OP_6:case t.OP_7:case t.OP_8:case t.OP_9:case t.OP_10:case t.OP_11:case t.OP_12:case t.OP_13:case t.OP_14:case t.OP_15:case t.OP_16:T=D-(t.OP_1-1),g=new c(T).toScriptNumBuffer(),this.stack.push(g);break;case t.OP_NOP:break;case t.OP_NOP2:case t.OP_CHECKLOCKTIMEVERIFY:if(!(this.flags&u.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)){if(this.flags&u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)return this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS",!1;break}if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;var q=c.fromScriptNumBuffer(this.stack[this.stack.length-1],l,5);if(q.lt(new c(0)))return this.errstr="SCRIPT_ERR_NEGATIVE_LOCKTIME",!1;if(!this.checkLockTime(q))return this.errstr="SCRIPT_ERR_UNSATISFIED_LOCKTIME",!1;break;case t.OP_NOP3:case t.OP_CHECKSEQUENCEVERIFY:if(!(this.flags&u.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)){if(this.flags&u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)return this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS",!1;break}if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;var Y=c.fromScriptNumBuffer(this.stack[this.stack.length-1],l,5);if(Y.lt(new c(0)))return this.errstr="SCRIPT_ERR_NEGATIVE_LOCKTIME",!1;if(Y&u.SEQUENCE_LOCKTIME_DISABLE_FLAG)break;if(!this.checkSequence(Y))return this.errstr="SCRIPT_ERR_UNSATISFIED_LOCKTIME",!1;break;case t.OP_NOP1:case t.OP_NOP4:case t.OP_NOP5:case t.OP_NOP6:case t.OP_NOP7:case t.OP_NOP8:case t.OP_NOP9:case t.OP_NOP10:if(this.flags&u.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS)return this.errstr="SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS",!1;break;case t.OP_IF:case t.OP_NOTIF:{if(oe=!1,x){if(this.stack.length<1)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;if(g=this.stack[this.stack.length-1],this.flags&u.SCRIPT_VERIFY_MINIMALIF){if(g=this.stack[this.stack.length-1],g.length>1)return this.errstr="SCRIPT_ERR_MINIMALIF",!1;if(g.length==1&&g[0]!=1)return this.errstr="SCRIPT_ERR_MINIMALIF",!1}oe=u.castToBool(g),D===t.OP_NOTIF&&(oe=!oe),this.stack.pop()}this.vfExec.push(oe)}break;case t.OP_ELSE:{if(this.vfExec.length===0)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;this.vfExec[this.vfExec.length-1]=!this.vfExec[this.vfExec.length-1]}break;case t.OP_ENDIF:{if(this.vfExec.length===0)return this.errstr="SCRIPT_ERR_UNBALANCED_CONDITIONAL",!1;this.vfExec.pop()}break;case t.OP_VERIFY:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(g=this.stack[this.stack.length-1],oe=u.castToBool(g),oe)this.stack.pop();else return this.errstr="SCRIPT_ERR_VERIFY",!1}break;case t.OP_RETURN:return this.errstr="SCRIPT_ERR_OP_RETURN",!1;case t.OP_TOALTSTACK:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.altstack.push(this.stack.pop())}break;case t.OP_FROMALTSTACK:{if(this.altstack.length<1)return this.errstr="SCRIPT_ERR_INVALID_ALTSTACK_OPERATION",!1;this.stack.push(this.altstack.pop())}break;case t.OP_2DROP:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.pop(),this.stack.pop()}break;case t.OP_2DUP:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;v=this.stack[this.stack.length-2],E=this.stack[this.stack.length-1],this.stack.push(v),this.stack.push(E)}break;case t.OP_3DUP:{if(this.stack.length<3)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;v=this.stack[this.stack.length-3],E=this.stack[this.stack.length-2];var U=this.stack[this.stack.length-1];this.stack.push(v),this.stack.push(E),this.stack.push(U)}break;case t.OP_2OVER:{if(this.stack.length<4)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;v=this.stack[this.stack.length-4],E=this.stack[this.stack.length-3],this.stack.push(v),this.stack.push(E)}break;case t.OP_2ROT:{if(this.stack.length<6)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;S=this.stack.splice(this.stack.length-6,2),this.stack.push(S[0]),this.stack.push(S[1])}break;case t.OP_2SWAP:{if(this.stack.length<4)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;S=this.stack.splice(this.stack.length-4,2),this.stack.push(S[0]),this.stack.push(S[1])}break;case t.OP_IFDUP:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;g=this.stack[this.stack.length-1],oe=u.castToBool(g),oe&&this.stack.push(g)}break;case t.OP_DEPTH:g=new c(this.stack.length).toScriptNumBuffer(),this.stack.push(g);break;case t.OP_DROP:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.pop()}break;case t.OP_DUP:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.push(this.stack[this.stack.length-1])}break;case t.OP_NIP:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.splice(this.stack.length-2,1)}break;case t.OP_OVER:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.push(this.stack[this.stack.length-2])}break;case t.OP_PICK:case t.OP_ROLL:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(g=this.stack[this.stack.length-1],C=c.fromScriptNumBuffer(g,l),T=C.toNumber(),this.stack.pop(),T<0||T>=this.stack.length)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;g=this.stack[this.stack.length-T-1],D===t.OP_ROLL&&this.stack.splice(this.stack.length-T-1,1),this.stack.push(g)}break;case t.OP_ROT:{if(this.stack.length<3)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;I=this.stack[this.stack.length-3],A=this.stack[this.stack.length-2];var j=this.stack[this.stack.length-1];this.stack[this.stack.length-3]=A,this.stack[this.stack.length-2]=j,this.stack[this.stack.length-1]=I}break;case t.OP_SWAP:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;I=this.stack[this.stack.length-2],A=this.stack[this.stack.length-1],this.stack[this.stack.length-2]=A,this.stack[this.stack.length-1]=I}break;case t.OP_TUCK:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;this.stack.splice(this.stack.length-2,0,this.stack[this.stack.length-1])}break;case t.OP_SIZE:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;C=new c(this.stack[this.stack.length-1].length),this.stack.push(C.toScriptNumBuffer())}break;case t.OP_EQUAL:case t.OP_EQUALVERIFY:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;v=this.stack[this.stack.length-2],E=this.stack[this.stack.length-1];var Q=v.toString("hex")===E.toString("hex");if(this.stack.pop(),this.stack.pop(),this.stack.push(Q?u.true:u.false),D===t.OP_EQUALVERIFY)if(Q)this.stack.pop();else return this.errstr="SCRIPT_ERR_EQUALVERIFY",!1}break;case t.OP_1ADD:case t.OP_1SUB:case t.OP_NEGATE:case t.OP_ABS:case t.OP_NOT:case t.OP_0NOTEQUAL:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;switch(g=this.stack[this.stack.length-1],C=c.fromScriptNumBuffer(g,l),D){case t.OP_1ADD:C=C.add(c.One);break;case t.OP_1SUB:C=C.sub(c.One);break;case t.OP_NEGATE:C=C.neg();break;case t.OP_ABS:C.cmp(c.Zero)<0&&(C=C.neg());break;case t.OP_NOT:C=new c((C.cmp(c.Zero)===0)+0);break;case t.OP_0NOTEQUAL:C=new c((C.cmp(c.Zero)!==0)+0);break}this.stack.pop(),this.stack.push(C.toScriptNumBuffer())}break;case t.OP_ADD:case t.OP_SUB:case t.OP_BOOLAND:case t.OP_BOOLOR:case t.OP_NUMEQUAL:case t.OP_NUMEQUALVERIFY:case t.OP_NUMNOTEQUAL:case t.OP_LESSTHAN:case t.OP_GREATERTHAN:case t.OP_LESSTHANOREQUAL:case t.OP_GREATERTHANOREQUAL:case t.OP_MIN:case t.OP_MAX:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;switch(O=c.fromScriptNumBuffer(this.stack[this.stack.length-2],l),R=c.fromScriptNumBuffer(this.stack[this.stack.length-1],l),C=new c(0),D){case t.OP_ADD:C=O.add(R);break;case t.OP_SUB:C=O.sub(R);break;case t.OP_BOOLAND:C=new c((O.cmp(c.Zero)!==0&&R.cmp(c.Zero)!==0)+0);break;case t.OP_BOOLOR:C=new c((O.cmp(c.Zero)!==0||R.cmp(c.Zero)!==0)+0);break;case t.OP_NUMEQUAL:C=new c((O.cmp(R)===0)+0);break;case t.OP_NUMEQUALVERIFY:C=new c((O.cmp(R)===0)+0);break;case t.OP_NUMNOTEQUAL:C=new c((O.cmp(R)!==0)+0);break;case t.OP_LESSTHAN:C=new c((O.cmp(R)<0)+0);break;case t.OP_GREATERTHAN:C=new c((O.cmp(R)>0)+0);break;case t.OP_LESSTHANOREQUAL:C=new c((O.cmp(R)<=0)+0);break;case t.OP_GREATERTHANOREQUAL:C=new c((O.cmp(R)>=0)+0);break;case t.OP_MIN:C=O.cmp(R)<0?O:R;break;case t.OP_MAX:C=O.cmp(R)>0?O:R;break}if(this.stack.pop(),this.stack.pop(),this.stack.push(C.toScriptNumBuffer()),D===t.OP_NUMEQUALVERIFY)if(u.castToBool(this.stack[this.stack.length-1]))this.stack.pop();else return this.errstr="SCRIPT_ERR_NUMEQUALVERIFY",!1}break;case t.OP_WITHIN:{if(this.stack.length<3)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;O=c.fromScriptNumBuffer(this.stack[this.stack.length-3],l),R=c.fromScriptNumBuffer(this.stack[this.stack.length-2],l);var X=c.fromScriptNumBuffer(this.stack[this.stack.length-1],l);oe=R.cmp(O)<=0&&O.cmp(X)<0,this.stack.pop(),this.stack.pop(),this.stack.pop(),this.stack.push(oe?u.true:u.false)}break;case t.OP_RIPEMD160:case t.OP_SHA1:case t.OP_SHA256:case t.OP_HASH160:case t.OP_HASH256:{if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;g=this.stack[this.stack.length-1];var F;D===t.OP_RIPEMD160?F=i.ripemd160(g):D===t.OP_SHA1?F=i.sha1(g):D===t.OP_SHA256?F=i.sha256(g):D===t.OP_HASH160?F=i.sha256ripemd160(g):D===t.OP_HASH256&&(F=i.sha256sha256(g)),this.stack.pop(),this.stack.push(F)}break;case t.OP_CODESEPARATOR:this.pbegincodehash=this.pc;break;case t.OP_CHECKSIG:case t.OP_CHECKSIGVERIFY:{if(this.stack.length<2)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(B=this.stack[this.stack.length-2],M=this.stack[this.stack.length-1],!this.checkSignatureEncoding(B)||!this.checkPubkeyEncoding(M))return!1;L=new a().set({chunks:this.script.chunks.slice(this.pbegincodehash)});var Z=new a().add(B);L.findAndDelete(Z);try{ee=o.fromTxFormat(B),z=b.fromBuffer(M,!1),W=this.tx.verifySignature(ee,z,this.nin,L,this.sigversion,this.satoshis)}catch{W=!1}if(!W&&this.flags&u.SCRIPT_VERIFY_NULLFAIL&&B.length)return this.errstr="SCRIPT_ERR_NULLFAIL",!1;if(this.stack.pop(),this.stack.pop(),this.stack.push(W?u.true:u.false),D===t.OP_CHECKSIGVERIFY)if(W)this.stack.pop();else return this.errstr="SCRIPT_ERR_CHECKSIGVERIFY",!1}break;case t.OP_CHECKMULTISIG:case t.OP_CHECKMULTISIGVERIFY:{var J=1;if(this.stack.length<J)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;var ce=c.fromScriptNumBuffer(this.stack[this.stack.length-J],l).toNumber();if(ce<0||ce>20)return this.errstr="SCRIPT_ERR_PUBKEY_COUNT",!1;if(this.nOpCount+=ce,this.nOpCount>201)return this.errstr="SCRIPT_ERR_OP_COUNT",!1;var re=++J;J+=ce;var ie=ce+2;if(this.stack.length<J)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;var fe=c.fromScriptNumBuffer(this.stack[this.stack.length-J],l).toNumber();if(fe<0||fe>ce)return this.errstr="SCRIPT_ERR_SIG_COUNT",!1;var pe=++J;if(J+=fe,this.stack.length<J)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;L=new a().set({chunks:this.script.chunks.slice(this.pbegincodehash)});for(var Oe=0;Oe<fe;Oe++)B=this.stack[this.stack.length-pe-Oe],L.findAndDelete(new a().add(B));for(W=!0;W&&fe>0;){if(B=this.stack[this.stack.length-pe],M=this.stack[this.stack.length-re],!this.checkSignatureEncoding(B)||!this.checkPubkeyEncoding(M))return!1;var Se;try{ee=o.fromTxFormat(B),z=b.fromBuffer(M,!1),Se=this.tx.verifySignature(ee,z,this.nin,L,this.sigversion,this.satoshis)}catch{Se=!1}Se&&(pe++,fe--),re++,ce--,fe>ce&&(W=!1)}for(;J-- >1;){if(!W&&this.flags&u.SCRIPT_VERIFY_NULLFAIL&&!ie&&this.stack[this.stack.length-1].length)return this.errstr="SCRIPT_ERR_NULLFAIL",!1;ie>0&&ie--,this.stack.pop()}if(this.stack.length<1)return this.errstr="SCRIPT_ERR_INVALID_STACK_OPERATION",!1;if(this.flags&u.SCRIPT_VERIFY_NULLDUMMY&&this.stack[this.stack.length-1].length)return this.errstr="SCRIPT_ERR_SIG_NULLDUMMY",!1;if(this.stack.pop(),this.stack.push(W?u.true:u.false),D===t.OP_CHECKMULTISIGVERIFY)if(W)this.stack.pop();else return this.errstr="SCRIPT_ERR_CHECKMULTISIGVERIFY",!1}break;default:return this.errstr="SCRIPT_ERR_BAD_OPCODE",!1}return!0},interpreter}var hasRequiredScript;function requireScript(){return hasRequiredScript||(hasRequiredScript=1,function(e){e.exports=requireScript$1(),e.exports.Interpreter=requireInterpreter()}(script$1)),scriptExports}var address,hasRequiredAddress;function requireAddress(){if(hasRequiredAddress)return address;hasRequiredAddress=1;var e=lodashExports,a=preconditions,t=errorsExports,c=base58check,i=bech32_1,o=networks_1,b=hashExports,u=js,l=requirePublickey();function x(v,E,S,T){if(!(this instanceof x))return new x(v,E,S);if(e.isArray(v)&&e.isNumber(E))return x.createMultisig(v,E,S,!1,T);if(v instanceof x)return v;if(a.checkArgument(v,"First argument is required, please include address data.","guide/address.html"),E&&!o.get(E))throw new TypeError('Second argument must be "livenet" or "testnet".');if(S&&S!==x.PayToPublicKeyHash&&S!==x.PayToScriptHash&&S!==x.PayToWitnessPublicKeyHash&&S!==x.PayToWitnessScriptHash&&S!==x.PayToTaproot)throw new TypeError('Third argument must be "pubkeyhash", "scripthash", "witnesspubkeyhash", "witnessscripthash", or "taproot".');var I=this._classifyArguments(v,E,S);return I.network=I.network||o.get(E)||o.defaultNetwork,I.type=I.type||S||x.PayToPublicKeyHash,u.defineImmutable(this,{hashBuffer:I.hashBuffer,network:I.network,type:I.type}),this}x.prototype._classifyArguments=function(v,E,S){if((v instanceof buffer$2.Buffer||v instanceof Uint8Array)&&(v.length===20||v.length===32))return x._transformHash(v,E,S);if((v instanceof buffer$2.Buffer||v instanceof Uint8Array)&&v.length>=21)return x._transformBuffer(v,E,S);if(v instanceof l)return x._transformPublicKey(v,E,S);if(v instanceof g)return x._transformScript(v,E);if(typeof v=="string")return x._transformString(v,E,S);if(e.isObject(v))return x._transformObject(v);throw new TypeError("First argument is an unrecognized data format.")},x.PayToPublicKeyHash="pubkeyhash",x.PayToScriptHash="scripthash",x.PayToWitnessPublicKeyHash="witnesspubkeyhash",x.PayToWitnessScriptHash="witnessscripthash",x.PayToTaproot="taproot",x._transformHash=function(v,E,S){var T={};if(!(v instanceof buffer$2.Buffer)&&!(v instanceof Uint8Array))throw new TypeError("Address supplied is not a buffer.");if(v.length!==20&&v.length!==32)throw new TypeError("Address hashbuffers must be either 20 or 32 bytes.");return T.hashBuffer=v,T.network=o.get(E)||o.defaultNetwork,T.type=S,T},x._transformObject=function(v){return a.checkArgument(v.hash||v.hashBuffer,"Must provide a `hash` or `hashBuffer` property"),a.checkArgument(v.type,"Must provide a `type` property"),{hashBuffer:v.hash?buffer$2.Buffer.from(v.hash,"hex"):v.hashBuffer,network:o.get(v.network)||o.defaultNetwork,type:v.type}},x._classifyFromVersion=function(v){var E={};if(v.length>21){var S=i.decode(v.toString("utf8"));if(S.version!==0&&S.version!==1)throw new TypeError("Only witness v0 and v1 addresses are supported.");if(S.version===0)if(S.data.length===20)E.type=x.PayToWitnessPublicKeyHash;else if(S.data.length===32)E.type=x.PayToWitnessScriptHash;else throw new TypeError("Witness data must be either 20 or 32 bytes.");else if(S.version===1)if(S.data.length===32)E.type=x.PayToTaproot;else throw new TypeError("Witness data must be 32 bytes for v1");E.network=o.get(S.prefix,"bech32prefix")}else{var T=o.get(v[0],"pubkeyhash"),I=o.get(v[0],"scripthash");T?(E.network=T,E.type=x.PayToPublicKeyHash):I&&(E.network=I,E.type=x.PayToScriptHash)}return E},x._transformBuffer=function(v,E,S){var T={};if(!(v instanceof buffer$2.Buffer)&&!(v instanceof Uint8Array))throw new TypeError("Address supplied is not a buffer.");if(v.length<21)throw new TypeError("Address buffer is incorrect length.");var I=o.get(E),A=x._classifyFromVersion(v);if(E&&!I)throw new TypeError("Unknown network");if(!A.network||I&&I.xpubkey!==A.network.xpubkey)throw new TypeError("Address has mismatched network type.");if(!A.type||S&&S!==A.type)throw new TypeError("Address has mismatched type.");return v.length>21?T.hashBuffer=i.decode(v.toString("utf8")).data:T.hashBuffer=v.slice(1),T.network=A.network,T.type=A.type,T},x._transformPublicKey=function(v,E,S){var T={};if(!(v instanceof l))throw new TypeError("Address must be an instance of PublicKey.");if(S&&S!==x.PayToScriptHash&&S!==x.PayToWitnessPublicKeyHash&&S!==x.PayToPublicKeyHash&&S!==x.PayToTaproot)throw new TypeError("Type must be either pubkeyhash, witnesspubkeyhash, scripthash, or taproot to transform public key.");if(!v.compressed&&(S===x.PayToScriptHash||S===x.PayToWitnessPublicKeyHash))throw new TypeError("Witness addresses must use compressed public keys.");return S===x.PayToScriptHash?T.hashBuffer=b.sha256ripemd160(g.buildWitnessV0Out(v).toBuffer()):S===x.PayToTaproot?T.hashBuffer=b.sha256ripemd160(g.buildWitnessV1Out(v).toBuffer()):T.hashBuffer=b.sha256ripemd160(v.toBuffer()),T.type=S||x.PayToPublicKeyHash,T},x._transformScript=function(v,E){a.checkArgument(v instanceof g,"script must be a Script instance");var S=v.getAddressInfo(E);if(!S)throw new t.Script.CantDeriveAddress(v);return S},x.createMultisig=function(v,E,S,T,I){if(S=S||v[0].network||o.defaultNetwork,I&&I!==x.PayToScriptHash&&I!==x.PayToWitnessScriptHash)throw new TypeError("Type must be either scripthash or witnessscripthash to create multisig.");if(T||I===x.PayToWitnessScriptHash){v=e.map(v,l);for(var A=0;A<v.length;A++)if(!v[A].compressed)throw new TypeError("Witness addresses must use compressed public keys.")}var C=g.buildMultisigOut(v,E);return T?x.payingTo(g.buildWitnessMultisigOutFromScript(C),S):x.payingTo(C,S,I)},x._transformString=function(v,E,S){if(typeof v!="string")throw new TypeError("data parameter supplied is not a string.");if(v.length>100)throw new TypeError("address string is too long");if(E&&!o.get(E))throw new TypeError("Unknown network");v=v.trim();try{var I=x._transformBuffer(buffer$2.Buffer.from(v,"utf8"),E,S);return I}catch(A){if(S===x.PayToWitnessPublicKeyHash||S===x.PayToWitnessScriptHash||S===x.PayToTaproot)throw A}var T=c.decode(v),I=x._transformBuffer(T,E,S);return I},x.fromPublicKey=function(v,E,S){var T=x._transformPublicKey(v,E,S);return E=E||o.defaultNetwork,new x(T.hashBuffer,E,T.type)},x.fromPublicKeyHash=function(v,E){var S=x._transformHash(v);return new x(S.hashBuffer,E,x.PayToPublicKeyHash)},x.fromScriptHash=function(v,E,I){a.checkArgument(v,"hash parameter is required");var T=x._transformHash(v);if(I===x.PayToWitnessScriptHash&&v.length!==32)throw new TypeError("Address hashbuffer must be exactly 32 bytes for v0 witness script hash.");var I=I||x.PayToScriptHash;return new x(T.hashBuffer,E,I)},x.payingTo=function(v,E,I){a.checkArgument(v,"script is required"),a.checkArgument(v instanceof g,"script must be instance of Script");var T;I===x.PayToWitnessScriptHash?T=b.sha256(v.toBuffer()):T=b.sha256ripemd160(v.toBuffer());var I=I||x.PayToScriptHash;return x.fromScriptHash(T,E,I)},x.fromScript=function(v,E){a.checkArgument(v instanceof g,"script must be a Script instance");var S=x._transformScript(v,E);return new x(S.hashBuffer,E,S.type)},x.fromBuffer=function(v,E,S){var T=x._transformBuffer(v,E,S);return new x(T.hashBuffer,T.network,T.type)},x.fromString=function(v,E,S){var T=x._transformString(v,E,S);return new x(T.hashBuffer,T.network,T.type)},x.fromObject=function(E){a.checkState(u.isHexa(E.hash),'Unexpected hash property, "'+E.hash+'", expected to be hex.');var S=buffer$2.Buffer.from(E.hash,"hex");return new x(S,E.network,E.type)},x.getValidationError=function(v,E,S){var T;try{new x(v,E,S)}catch(I){T=I}return T},x.isValid=function(v,E,S){return!x.getValidationError(v,E,S)},x.prototype.isPayToPublicKeyHash=function(){return this.type===x.PayToPublicKeyHash},x.prototype.isPayToScriptHash=function(){return this.type===x.PayToScriptHash},x.prototype.isPayToWitnessPublicKeyHash=function(){return this.type===x.PayToWitnessPublicKeyHash},x.prototype.isPayToWitnessScriptHash=function(){return this.type===x.PayToWitnessScriptHash},x.prototype.isPayToTaproot=function(){return this.type===x.PayToTaproot},x.prototype.toBuffer=function(){if(this.isPayToWitnessPublicKeyHash()||this.isPayToWitnessScriptHash())return buffer$2.Buffer.from(this.toString(),"utf8");var v=buffer$2.Buffer.from([this.network[this.type]]);return buffer$2.Buffer.concat([v,this.hashBuffer])},x.prototype.toObject=x.prototype.toJSON=function(){return{hash:this.hashBuffer.toString("hex"),type:this.type,network:this.network.toString()}},x.prototype.toString=function(){if(this.isPayToWitnessPublicKeyHash()||this.isPayToWitnessScriptHash()||this.isPayToTaproot()){let v=this.network.bech32prefix,E=0,S=i.encodings.BECH32;return this.isPayToTaproot()&&(E=1,S=i.encodings.BECH32M),i.encode(v,E,this.hashBuffer,S)}return c.encode(this.toBuffer())},x.prototype.inspect=function(){return"<Address: "+this.toString()+", type: "+this.type+", network: "+this.network+">"},address=x;var g=requireScript();return address}function Random$1(){}Random$1.getRandomBuffer=function(e){return browserExports.browser?Random$1.getRandomBufferBrowser(e):Random$1.getRandomBufferNode(e)};Random$1.getRandomBufferNode=function(e){var a=requireCryptoBrowserify();return a.randomBytes(e)};Random$1.getRandomBufferBrowser=function(e){if(!window.crypto&&!window.msCrypto)throw new Error("window.crypto not available");if(window.crypto&&window.crypto.getRandomValues)var a=window.crypto;else if(window.msCrypto&&window.msCrypto.getRandomValues)var a=window.msCrypto;else throw new Error("window.crypto.getRandomValues not available");var t=new Uint8Array(e);a.getRandomValues(t);var c=buffer$2.Buffer.from(t);return c};Random$1.getPseudoRandomBuffer=function(e){for(var a=4294967296,t=buffer$2.Buffer.alloc(e),c,i=0;i<=e;i++){var o=Math.floor(i/4),b=i-o*4;b===0?(c=Math.random()*a,t[i]=c&255):t[i]=(c=c>>>8)&255}return t};var random=Random$1,privatekey,hasRequiredPrivatekey;function requirePrivatekey(){if(hasRequiredPrivatekey)return privatekey;hasRequiredPrivatekey=1;var e=lodashExports,a=requireAddress(),t=base58check,c=bn,i=js,o=networks_1,b=point$1,u=requirePublickey(),l=random,x=preconditions;function g(v,E){if(!(this instanceof g))return new g(v,E);if(v instanceof g)return v;var S=this._classifyArguments(v,E);if(!S.bn||S.bn.cmp(new c(0))===0)throw new TypeError("Number can not be equal to zero, undefined, null or false");if(!S.bn.lt(b.getN()))throw new TypeError("Number must be less than N");if(typeof S.network>"u")throw new TypeError('Must specify the network ("livenet" or "testnet")');return i.defineImmutable(this,{bn:S.bn,compressed:S.compressed,network:S.network}),Object.defineProperty(this,"publicKey",{configurable:!1,enumerable:!0,get:this.toPublicKey.bind(this)}),this}return g.prototype._classifyArguments=function(v,E){var S={compressed:!0,network:E?o.get(E):o.defaultNetwork};if(e.isUndefined(v)||e.isNull(v))S.bn=g._getRandomBN();else if(v instanceof c)S.bn=v;else if(v instanceof buffer$2.Buffer||v instanceof Uint8Array)S=g._transformBuffer(v,E);else if(v.bn&&v.network)S=g._transformObject(v);else if(!E&&o.get(v))S.bn=g._getRandomBN(),S.network=o.get(v);else if(typeof v=="string")i.isHexa(v)?S.bn=new c(buffer$2.Buffer.from(v,"hex")):S=g._transformWIF(v,E);else throw new TypeError("First argument is an unrecognized data type.");return S},g._getRandomBN=function(){var v,E;do{var S=l.getRandomBuffer(32);E=c.fromBuffer(S),v=E.lt(b.getN())}while(!v);return E},g._transformBuffer=function(v,E){var S={};if(v.length===32)return g._transformBNBuffer(v,E);if(S.network=o.get(v[0],"privatekey"),!S.network)throw new Error("Invalid network");if(E&&S.network!==o.get(E))throw new TypeError("Private key network mismatch");if(v.length===1+32+1&&v[1+32+1-1]===1)S.compressed=!0;else if(v.length===1+32)S.compressed=!1;else throw new Error("Length of buffer must be 33 (uncompressed) or 34 (compressed)");return S.bn=c.fromBuffer(v.slice(1,32+1)),S},g._transformBNBuffer=function(v,E){var S={};return S.network=o.get(E)||o.defaultNetwork,S.bn=c.fromBuffer(v),S.compressed=!1,S},g._transformWIF=function(v,E){return g._transformBuffer(t.decode(v),E)},g.fromBuffer=function(v,E){return new g(v,E)},g._transformObject=function(v){var E=new c(v.bn,"hex"),S=o.get(v.network);return{bn:E,network:S,compressed:v.compressed}},g.fromString=g.fromWIF=function(v){return x.checkArgument(e.isString(v),"First argument is expected to be a string."),new g(v)},g.fromObject=function(v){return x.checkArgument(e.isObject(v),"First argument is expected to be an object."),new g(v)},g.fromRandom=function(v){var E=g._getRandomBN();return new g(E,v)},g.getValidationError=function(v,E){var S;try{new g(v,E)}catch(T){S=T}return S},g.isValid=function(v,E){return v?!g.getValidationError(v,E):!1},g.prototype.toString=function(){return this.toBuffer().toString("hex")},g.prototype.toWIF=function(){var v=this.network,E=this.compressed,S;return E?S=buffer$2.Buffer.concat([buffer$2.Buffer.from([v.privatekey]),this.bn.toBuffer({size:32}),buffer$2.Buffer.from([1])]):S=buffer$2.Buffer.concat([buffer$2.Buffer.from([v.privatekey]),this.bn.toBuffer({size:32})]),t.encode(S)},g.prototype.toBigNumber=function(){return this.bn},g.prototype.toBuffer=function(){return this.bn.toBuffer({size:32})},g.prototype.toBufferNoPadding=function(){return this.bn.toBuffer()},g.prototype.toPublicKey=function(){return this._pubkey||(this._pubkey=u.fromPrivateKey(this)),this._pubkey},g.prototype.toAddress=function(v,E){var S=this.toPublicKey();return a.fromPublicKey(S,v||this.network,E)},g.prototype.toObject=g.prototype.toJSON=function(){return{bn:this.bn.toString("hex"),compressed:this.compressed,network:this.network.toString()}},g.prototype.inspect=function(){var v=this.compressed?"":", uncompressed";return"<PrivateKey: "+this.toString()+", network: "+this.network+v+">"},privatekey=g,privatekey}var publickey,hasRequiredPublickey;function requirePublickey(){if(hasRequiredPublickey)return publickey;hasRequiredPublickey=1;var e=bn,a=point$1,t=hashExports,c=js,i=networks_1,o=lodashExports,b=preconditions;function u(l,x){if(!(this instanceof u))return new u(l,x);if(b.checkArgument(l,"First argument is required, please include public key data."),l instanceof u)return l;x=x||{};var g=this._classifyArgs(l,x);return g.point.validate(),c.defineImmutable(this,{point:g.point,compressed:g.compressed,network:g.network||i.defaultNetwork}),this}return u.prototype._classifyArgs=function(l,x){var g={compressed:o.isUndefined(x.compressed)||x.compressed};if(l instanceof a)g.point=l;else if(l.x&&l.y)g=u._transformObject(l);else if(typeof l=="string")g=u._transformDER(buffer$2.Buffer.from(l,"hex"));else if(u._isBuffer(l))g=u._transformDER(l);else if(u._isPrivateKey(l))g=u._transformPrivateKey(l);else throw new TypeError("First argument is an unrecognized data format.");return g.network||(g.network=o.isUndefined(x.network)?void 0:i.get(x.network)),g},u._isPrivateKey=function(l){var x=requirePrivatekey();return l instanceof x},u._isBuffer=function(l){return l instanceof buffer$2.Buffer||l instanceof Uint8Array},u._transformPrivateKey=function(l){b.checkArgument(u._isPrivateKey(l),"Must be an instance of PrivateKey");var x={};return x.point=a.getG().mul(l.bn),x.compressed=l.compressed,x.network=l.network,x},u._transformDER=function(l,x){b.checkArgument(u._isBuffer(l),"Must be a hex buffer of DER encoded public key");var g={};x=o.isUndefined(x)?!0:x;var v,E,S,T;if(l[0]===4||!x&&(l[0]===6||l[0]===7)){if(S=l.slice(1,33),T=l.slice(33,65),S.length!==32||T.length!==32||l.length!==65)throw new TypeError("Length of x and y must be 32 bytes");v=new e(S),E=new e(T),g.point=new a(v,E),g.compressed=!1}else if(l[0]===3)S=l.slice(1),v=new e(S),g=u._transformX(!0,v),g.compressed=!0;else if(l[0]===2)S=l.slice(1),v=new e(S),g=u._transformX(!1,v),g.compressed=!0;else throw new TypeError("Invalid DER format public key");return g},u._transformX=function(l,x){b.checkArgument(typeof l=="boolean","Must specify whether y is odd or not (true or false)");var g={};return g.point=a.fromX(l,x),g},u._transformObject=function(l){var x=new e(l.x,"hex"),g=new e(l.y,"hex"),v=new a(x,g);return new u(v,{compressed:l.compressed})},u.fromPrivateKey=function(l){b.checkArgument(u._isPrivateKey(l),"Must be an instance of PrivateKey");var x=u._transformPrivateKey(l);return new u(x.point,{compressed:x.compressed,network:x.network})},u.fromDER=u.fromBuffer=function(l,x){b.checkArgument(u._isBuffer(l),"Must be a hex buffer of DER encoded public key");var g=u._transformDER(l,x);return new u(g.point,{compressed:g.compressed})},u.fromPoint=function(l,x){return b.checkArgument(l instanceof a,"First argument must be an instance of Point."),new u(l,{compressed:x})},u.fromString=function(l,x){var g=buffer$2.Buffer.from(l,x||"hex"),v=u._transformDER(g);return new u(v.point,{compressed:v.compressed})},u.fromX=function(l,x){var g=u._transformX(l,x);return new u(g.point,{compressed:g.compressed})},u.getValidationError=function(l){var x;try{new u(l)}catch(g){x=g}return x},u.isValid=function(l){return!u.getValidationError(l)},u.prototype.toObject=u.prototype.toJSON=function(){return{x:this.point.getX().toString("hex",2),y:this.point.getY().toString("hex",2),compressed:this.compressed}},u.prototype.toBuffer=u.prototype.toDER=function(){var l=this.point.getX(),x=this.point.getY(),g=l.toBuffer({size:32}),v=x.toBuffer({size:32}),E;if(this.compressed){var S=v[v.length-1]%2;return S?E=buffer$2.Buffer.from([3]):E=buffer$2.Buffer.from([2]),buffer$2.Buffer.concat([E,g])}else return E=buffer$2.Buffer.from([4]),buffer$2.Buffer.concat([E,g,v])},u.prototype._getID=function(){return t.sha256ripemd160(this.toBuffer())},u.prototype.toAddress=function(l,x){var g=requireAddress();return g.fromPublicKey(this,l||this.network,x)},u.prototype.toString=function(){return this.toDER().toString("hex")},u.prototype.inspect=function(){return"<PublicKey: "+this.toString()+(this.compressed?"":", uncompressed")+">"},publickey=u,publickey}var ecdsa,hasRequiredEcdsa;function requireEcdsa(){if(hasRequiredEcdsa)return ecdsa;hasRequiredEcdsa=1;var e=bn,a=point$1,t=signature$2,c=requirePublickey(),i=random,o=hashExports,b=bufferExports,u=lodashExports,l=preconditions,x=function g(v){if(!(this instanceof g))return new g(v);v&&this.set(v)};return x.prototype.set=function(g){return this.hashbuf=g.hashbuf||this.hashbuf,this.endian=g.endian||this.endian,this.privkey=g.privkey||this.privkey,this.pubkey=g.pubkey||(this.privkey?this.privkey.publicKey:this.pubkey),this.sig=g.sig||this.sig,this.k=g.k||this.k,this.verified=g.verified||this.verified,this},x.prototype.privkey2pubkey=function(){this.pubkey=this.privkey.toPublicKey()},x.prototype.calci=function(){for(var g=0;g<4;g++){this.sig.i=g;var v;try{v=this.toPublicKey()}catch{continue}if(v.point.eq(this.pubkey.point))return this.sig.compressed=this.pubkey.compressed,this}throw this.sig.i=void 0,new Error("Unable to find valid recovery factor")},x.fromString=function(g){var v=JSON.parse(g);return new x(v)},x.prototype.randomK=function(){var g=a.getN(),v;do v=e.fromBuffer(i.getRandomBuffer(32));while(!(v.lt(g)&&v.gt(e.Zero)));return this.k=v,this},x.prototype.deterministicK=function(g){u.isUndefined(g)&&(g=0);var v=buffer$2.Buffer.alloc(32);v.fill(1);var E=buffer$2.Buffer.alloc(32);E.fill(0);var S=this.privkey.bn.toBuffer({size:32}),T=this.endian==="little"?b.reverse(this.hashbuf):this.hashbuf;E=o.sha256hmac(buffer$2.Buffer.concat([v,buffer$2.Buffer.from([0]),S,T]),E),v=o.sha256hmac(v,E),E=o.sha256hmac(buffer$2.Buffer.concat([v,buffer$2.Buffer.from([1]),S,T]),E),v=o.sha256hmac(v,E),v=o.sha256hmac(v,E);for(var I=e.fromBuffer(v),A=a.getN(),C=0;C<g||!(I.lt(A)&&I.gt(e.Zero));C++)E=o.sha256hmac(buffer$2.Buffer.concat([v,buffer$2.Buffer.from([0])]),E),v=o.sha256hmac(v,E),v=o.sha256hmac(v,E),I=e.fromBuffer(v);return this.k=I,this},x.prototype.toPublicKey=function(){var g=this.sig.i;l.checkArgument(g===0||g===1||g===2||g===3,new Error("i must be equal to 0, 1, 2, or 3"));var v=e.fromBuffer(this.hashbuf),E=this.sig.r,S=this.sig.s,T=g&1,I=g>>1,A=a.getN(),C=a.getG(),O=I?E.add(A):E,R=a.fromX(T,O),B=R.mul(A);if(!B.isInfinity())throw new Error("nR is not a valid curve point");var M=v.neg().umod(A),L=E.invm(A),ee=R.mul(S).add(C.mul(M)).mul(L),z=c.fromPoint(ee,this.sig.compressed);return z},x.prototype.sigError=function(){if(!b.isBuffer(this.hashbuf)||this.hashbuf.length!==32)return"hashbuf must be a 32 byte buffer";var g=this.sig.r,v=this.sig.s;if(!(g.gt(e.Zero)&&g.lt(a.getN()))||!(v.gt(e.Zero)&&v.lt(a.getN())))return"r and s not in range";var E=e.fromBuffer(this.hashbuf,this.endian?{endian:this.endian}:void 0),S=a.getN(),T=v.invm(S),I=T.mul(E).umod(S),A=T.mul(g).umod(S),C=a.getG().mulAdd(I,this.pubkey.point,A);return C.isInfinity()?"p is infinity":C.getX().umod(S).cmp(g)!==0?"Invalid signature":!1},x.toLowS=function(g){return g.gt(e.fromBuffer(buffer$2.Buffer.from("7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0","hex")))&&(g=a.getN().sub(g)),g},x.prototype._findSignature=function(g,v){var E=a.getN(),S=a.getG(),T=0,I,A,C,O;do(!this.k||T>0)&&this.deterministicK(T),T++,I=this.k,A=S.mul(I),C=A.x.umod(E),O=I.invm(E).mul(v.add(g.mul(C))).umod(E);while(C.cmp(e.Zero)<=0||O.cmp(e.Zero)<=0);return O=x.toLowS(O),{s:O,r:C}},x.prototype.sign=function(){var g=this.hashbuf,v=this.privkey,E=v.bn;l.checkState(g&&v&&E,new Error("invalid parameters")),l.checkState(b.isBuffer(g)&&g.length===32,new Error("hashbuf must be a 32 byte buffer"));var S=e.fromBuffer(g,this.endian?{endian:this.endian}:void 0),T=this._findSignature(E,S);return T.compressed=this.pubkey.compressed,this.sig=new t(T),this},x.prototype.signRandomK=function(){return this.randomK(),this.sign()},x.prototype.toString=function(){var g={};return this.hashbuf&&(g.hashbuf=this.hashbuf.toString("hex")),this.privkey&&(g.privkey=this.privkey.toString()),this.pubkey&&(g.pubkey=this.pubkey.toString()),this.sig&&(g.sig=this.sig.toString()),this.k&&(g.k=this.k.toString()),JSON.stringify(g)},x.prototype.verify=function(){return this.sigError()?this.verified=!1:this.verified=!0,this},x.sign=function(g,v,E){return x().set({hashbuf:g,endian:E,privkey:v}).sign().sig},x.verify=function(g,v,E,S){return x().set({hashbuf:g,endian:S,sig:v,pubkey:E}).verify().verified},ecdsa=x,ecdsa}var BufferWriter$4=bufferwriter,BufferReader$3=bufferreader,BN$5=bn,Varint=function e(a){if(!(this instanceof e))return new e(a);if(buffer$2.Buffer.isBuffer(a))this.buf=a;else if(typeof a=="number"){var t=a;this.fromNumber(t)}else if(a instanceof BN$5){var c=a;this.fromBN(c)}else if(a){var i=a;this.set(i)}};Varint.prototype.set=function(e){return this.buf=e.buf||this.buf,this};Varint.prototype.fromString=function(e){return this.set({buf:buffer$2.Buffer.from(e,"hex")}),this};Varint.prototype.toString=function(){return this.buf.toString("hex")};Varint.prototype.fromBuffer=function(e){return this.buf=e,this};Varint.prototype.fromBufferReader=function(e){return this.buf=e.readVarintBuf(),this};Varint.prototype.fromBN=function(e){return this.buf=BufferWriter$4().writeVarintBN(e).concat(),this};Varint.prototype.fromNumber=function(e){return this.buf=BufferWriter$4().writeVarintNum(e).concat(),this};Varint.prototype.toBuffer=function(){return this.buf};Varint.prototype.toBN=function(){return BufferReader$3(this.buf).readVarintBN()};Varint.prototype.toNumber=function(){return BufferReader$3(this.buf).readVarintNum()};var varint=Varint,blockExports={},block$1={get exports(){return blockExports},set exports(e){blockExports=e}},_$5=lodashExports,BN$4=bn,BufferUtil$2=bufferExports,BufferReader$2=bufferreader,BufferWriter$3=bufferwriter,Hash$3=hashExports,$$4=preconditions,GENESIS_BITS=486604799,BlockHeader$2=function e(a){if(!(this instanceof e))return new e(a);var t=e._from(a);return this.version=t.version,this.prevHash=t.prevHash,this.merkleRoot=t.merkleRoot,this.time=t.time,this.timestamp=t.time,this.bits=t.bits,this.nonce=t.nonce,t.hash&&$$4.checkState(this.hash===t.hash,"Argument object hash property does not match block hash."),this};BlockHeader$2._from=function e(a){var t={};if(BufferUtil$2.isBuffer(a))t=BlockHeader$2._fromBufferReader(BufferReader$2(a));else if(_$5.isObject(a))t=BlockHeader$2._fromObject(a);else throw new TypeError("Unrecognized argument for BlockHeader");return t};BlockHeader$2._fromObject=function e(a){$$4.checkArgument(a,"data is required");var t=a.prevHash,c=a.merkleRoot;_$5.isString(a.prevHash)&&(t=BufferUtil$2.reverse(buffer$2.Buffer.from(a.prevHash,"hex"))),_$5.isString(a.merkleRoot)&&(c=BufferUtil$2.reverse(buffer$2.Buffer.from(a.merkleRoot,"hex")));var i={hash:a.hash,version:a.version,prevHash:t,merkleRoot:c,time:a.time,timestamp:a.time,bits:a.bits,nonce:a.nonce};return i};BlockHeader$2.fromObject=function e(a){var t=BlockHeader$2._fromObject(a);return new BlockHeader$2(t)};BlockHeader$2.fromRawBlock=function e(a){BufferUtil$2.isBuffer(a)||(a=buffer$2.Buffer.from(a,"binary"));var t=BufferReader$2(a);t.pos=BlockHeader$2.Constants.START_OF_HEADER;var c=BlockHeader$2._fromBufferReader(t);return new BlockHeader$2(c)};BlockHeader$2.fromBuffer=function e(a){var t=BlockHeader$2._fromBufferReader(BufferReader$2(a));return new BlockHeader$2(t)};BlockHeader$2.fromString=function e(a){var t=buffer$2.Buffer.from(a,"hex");return BlockHeader$2.fromBuffer(t)};BlockHeader$2._fromBufferReader=function e(a){var t={};return t.version=a.readInt32LE(),t.prevHash=a.read(32),t.merkleRoot=a.read(32),t.time=a.readUInt32LE(),t.bits=a.readUInt32LE(),t.nonce=a.readUInt32LE(),t};BlockHeader$2.fromBufferReader=function e(a){var t=BlockHeader$2._fromBufferReader(a);return new BlockHeader$2(t)};BlockHeader$2.prototype.toObject=BlockHeader$2.prototype.toJSON=function e(){return{hash:this.hash,version:this.version,prevHash:BufferUtil$2.reverse(this.prevHash).toString("hex"),merkleRoot:BufferUtil$2.reverse(this.merkleRoot).toString("hex"),time:this.time,bits:this.bits,nonce:this.nonce}};BlockHeader$2.prototype.toBuffer=function e(){return this.toBufferWriter().concat()};BlockHeader$2.prototype.toString=function e(){return this.toBuffer().toString("hex")};BlockHeader$2.prototype.toBufferWriter=function e(a){return a||(a=new BufferWriter$3),a.writeInt32LE(this.version),a.write(this.prevHash),a.write(this.merkleRoot),a.writeUInt32LE(this.time),a.writeUInt32LE(this.bits),a.writeUInt32LE(this.nonce),a};BlockHeader$2.prototype.getTargetDifficulty=function e(a){a=a||this.bits;for(var t=new BN$4(a&16777215),c=8*((a>>>24)-3);c-- >0;)t=t.mul(new BN$4(2));return t};BlockHeader$2.prototype.getDifficulty=function e(){var a=this.getTargetDifficulty(GENESIS_BITS).mul(new BN$4(Math.pow(10,8))),t=this.getTargetDifficulty(),c=a.div(t).toString(10),i=c.length-8;return c=c.slice(0,i)+"."+c.slice(i),parseFloat(c)};BlockHeader$2.prototype._getHash=function e(){var a=this.toBuffer();return Hash$3.sha256sha256(a)};var idProperty$1={configurable:!1,enumerable:!0,get:function(){return this._id||(this._id=BufferReader$2(this._getHash()).readReverse().toString("hex")),this._id},set:_$5.noop};Object.defineProperty(BlockHeader$2.prototype,"id",idProperty$1);Object.defineProperty(BlockHeader$2.prototype,"hash",idProperty$1);BlockHeader$2.prototype.validTimestamp=function e(){var a=Math.round(new Date().getTime()/1e3);return!(this.time>a+BlockHeader$2.Constants.MAX_TIME_OFFSET)};BlockHeader$2.prototype.validProofOfWork=function e(){var a=new BN$4(this.id,"hex"),t=this.getTargetDifficulty();return!(a.cmp(t)>0)};BlockHeader$2.prototype.inspect=function e(){return"<BlockHeader "+this.id+">"};BlockHeader$2.Constants={START_OF_HEADER:8,MAX_TIME_OFFSET:2*60*60,LARGEST_HASH:new BN$4("10000000000000000000000000000000000000000000000000000000000000000","hex")};var blockheader=BlockHeader$2,_$4=lodashExports,BlockHeader$1=blockheader,BN$3=bn,BufferUtil$1=bufferExports,BufferReader$1=bufferreader,BufferWriter$2=bufferwriter,Hash$2=hashExports,Transaction$2=requireTransaction(),$$3=preconditions;function Block(e){return this instanceof Block?(_$4.extend(this,Block._from(e)),this):new Block(e)}Block.MAX_BLOCK_SIZE=1e6;Block._from=function e(a){var t={};if(BufferUtil$1.isBuffer(a))t=Block._fromBufferReader(BufferReader$1(a));else if(_$4.isObject(a))t=Block._fromObject(a);else throw new TypeError("Unrecognized argument for Block");return t};Block._fromObject=function e(a){var t=[];a.transactions.forEach(function(i){i instanceof Transaction$2?t.push(i):t.push(Transaction$2().fromObject(i))});var c={header:BlockHeader$1.fromObject(a.header),transactions:t};return c};Block.fromObject=function e(a){var t=Block._fromObject(a);return new Block(t)};Block._fromBufferReader=function e(a){var t={};$$3.checkState(!a.finished(),"No block data received"),t.header=BlockHeader$1.fromBufferReader(a);var c=a.readVarintNum();t.transactions=[];for(var i=0;i<c;i++)t.transactions.push(Transaction$2().fromBufferReader(a));return t};Block.fromBufferReader=function e(a){$$3.checkArgument(a,"br is required");var t=Block._fromBufferReader(a);return new Block(t)};Block.fromBuffer=function e(a){return Block.fromBufferReader(new BufferReader$1(a))};Block.fromString=function e(a){var t=buffer$2.Buffer.from(a,"hex");return Block.fromBuffer(t)};Block.fromRawBlock=function e(a){BufferUtil$1.isBuffer(a)||(a=buffer$2.Buffer.from(a,"binary"));var t=BufferReader$1(a);t.pos=Block.Values.START_OF_BLOCK;var c=Block._fromBufferReader(t);return new Block(c)};Block.prototype.toObject=Block.prototype.toJSON=function e(){var a=[];return this.transactions.forEach(function(t){a.push(t.toObject())}),{header:this.header.toObject(),transactions:a}};Block.prototype.toBuffer=function e(){return this.toBufferWriter().concat()};Block.prototype.toString=function e(){return this.toBuffer().toString("hex")};Block.prototype.toBufferWriter=function e(a){a||(a=new BufferWriter$2),a.write(this.header.toBuffer()),a.writeVarintNum(this.transactions.length);for(var t=0;t<this.transactions.length;t++)this.transactions[t].toBufferWriter(a);return a};Block.prototype.getTransactionHashes=function e(){var a=[];if(this.transactions.length===0)return[Block.Values.NULL_HASH];for(var t=0;t<this.transactions.length;t++)a.push(this.transactions[t]._getHash());return a};Block.prototype.getMerkleTree=function e(){for(var a=this.getTransactionHashes(),t=0,c=this.transactions.length;c>1;c=Math.floor((c+1)/2)){for(var i=0;i<c;i+=2){var o=Math.min(i+1,c-1),b=buffer$2.Buffer.concat([a[t+i],a[t+o]]);a.push(Hash$2.sha256sha256(b))}t+=c}return a};Block.prototype.getMerkleRoot=function e(){var a=this.getMerkleTree();return a[a.length-1]};Block.prototype.validMerkleRoot=function e(){var a=new BN$3(this.header.merkleRoot.toString("hex"),"hex"),t=new BN$3(this.getMerkleRoot().toString("hex"),"hex");return a.cmp(t)===0};Block.prototype._getHash=function(){return this.header._getHash()};var idProperty={configurable:!1,enumerable:!0,get:function(){return this._id||(this._id=this.header.id),this._id},set:_$4.noop};Object.defineProperty(Block.prototype,"id",idProperty);Object.defineProperty(Block.prototype,"hash",idProperty);Block.prototype.inspect=function e(){return"<Block "+this.id+">"};Block.Values={START_OF_BLOCK:8,NULL_HASH:buffer$2.Buffer.from("0000000000000000000000000000000000000000000000000000000000000000","hex")};var block=Block,_$3=lodashExports,BlockHeader=blockheader,BufferUtil=bufferExports,BufferReader=bufferreader,BufferWriter$1=bufferwriter,Hash$1=hashExports,Transaction$1=requireTransaction(),errors$2=errorsExports,$$2=preconditions;function MerkleBlock(e){if(!(this instanceof MerkleBlock))return new MerkleBlock(e);var a={};if(BufferUtil.isBuffer(e))a=MerkleBlock._fromBufferReader(BufferReader(e));else if(_$3.isObject(e)){var t;e.header instanceof BlockHeader?t=e.header:t=BlockHeader.fromObject(e.header),a={header:t,numTransactions:e.numTransactions,hashes:e.hashes,flags:e.flags}}else throw new TypeError("Unrecognized argument for MerkleBlock");return _$3.extend(this,a),this._flagBitsUsed=0,this._hashesUsed=0,this}MerkleBlock.fromBuffer=function e(a){return MerkleBlock.fromBufferReader(BufferReader(a))};MerkleBlock.fromBufferReader=function e(a){return new MerkleBlock(MerkleBlock._fromBufferReader(a))};MerkleBlock.prototype.toBuffer=function e(){return this.toBufferWriter().concat()};MerkleBlock.prototype.toBufferWriter=function e(a){a||(a=new BufferWriter$1),a.write(this.header.toBuffer()),a.writeUInt32LE(this.numTransactions),a.writeVarintNum(this.hashes.length);for(var t=0;t<this.hashes.length;t++)a.write(buffer$2.Buffer.from(this.hashes[t],"hex"));for(a.writeVarintNum(this.flags.length),t=0;t<this.flags.length;t++)a.writeUInt8(this.flags[t]);return a};MerkleBlock.prototype.toObject=MerkleBlock.prototype.toJSON=function e(){return{header:this.header.toObject(),numTransactions:this.numTransactions,hashes:this.hashes,flags:this.flags}};MerkleBlock.prototype.validMerkleTree=function e(){if($$2.checkState(_$3.isArray(this.flags),"MerkleBlock flags is not an array"),$$2.checkState(_$3.isArray(this.hashes),"MerkleBlock hashes is not an array"),this.hashes.length>this.numTransactions||this.flags.length*8<this.hashes.length)return!1;var a=this._calcTreeHeight(),t={hashesUsed:0,flagBitsUsed:0},c=this._traverseMerkleTree(a,0,t);return t.hashesUsed!==this.hashes.length?!1:BufferUtil.equals(c,this.header.merkleRoot)};MerkleBlock.prototype.filterdTxsHash=function e(){if($$2.checkState(_$3.isArray(this.flags),"MerkleBlock flags is not an array"),$$2.checkState(_$3.isArray(this.hashes),"MerkleBlock hashes is not an array"),this.hashes.length>this.numTransactions)throw new errors$2.MerkleBlock.InvalidMerkleTree;if(this.flags.length*8<this.hashes.length)throw new errors$2.MerkleBlock.InvalidMerkleTree;if(this.hashes.length===1)return[];var a=this._calcTreeHeight(),t={hashesUsed:0,flagBitsUsed:0},c=this._traverseMerkleTree(a,0,t,!0);if(t.hashesUsed!==this.hashes.length)throw new errors$2.MerkleBlock.InvalidMerkleTree;return c};MerkleBlock.prototype._traverseMerkleTree=function e(a,t,c,o){c=c||{},c.txs=c.txs||[],c.flagBitsUsed=c.flagBitsUsed||0,c.hashesUsed=c.hashesUsed||0;var o=o||!1;if(c.flagBitsUsed>this.flags.length*8)return null;var b=this.flags[c.flagBitsUsed>>3]>>>(c.flagBitsUsed++&7)&1;if(a===0||!b){if(c.hashesUsed>=this.hashes.length)return null;var u=this.hashes[c.hashesUsed++];return a===0&&b&&c.txs.push(u),buffer$2.Buffer.from(u,"hex")}else{var l=this._traverseMerkleTree(a-1,t*2,c),x=l;return t*2+1<this._calcTreeWidth(a-1)&&(x=this._traverseMerkleTree(a-1,t*2+1,c)),o?c.txs:Hash$1.sha256sha256(new buffer$2.Buffer.concat([l,x]))}};MerkleBlock.prototype._calcTreeWidth=function e(a){return this.numTransactions+(1<<a)-1>>a};MerkleBlock.prototype._calcTreeHeight=function e(){for(var a=0;this._calcTreeWidth(a)>1;)a++;return a};MerkleBlock.prototype.hasTransaction=function e(a){$$2.checkArgument(!_$3.isUndefined(a),"tx cannot be undefined"),$$2.checkArgument(a instanceof Transaction$1||typeof a=="string",'Invalid tx given, tx must be a "string" or "Transaction"');var t=a;a instanceof Transaction$1&&(t=BufferUtil.reverse(buffer$2.Buffer.from(a.id,"hex")).toString("hex"));var c=[],i=this._calcTreeHeight();return this._traverseMerkleTree(i,0,{txs:c}),c.indexOf(t)!==-1};MerkleBlock._fromBufferReader=function e(a){$$2.checkState(!a.finished(),"No merkleblock data received");var t={};t.header=BlockHeader.fromBufferReader(a),t.numTransactions=a.readUInt32LE();var c=a.readVarintNum();t.hashes=[];for(var i=0;i<c;i++)t.hashes.push(a.read(32).toString("hex"));var o=a.readVarintNum();for(t.flags=[],i=0;i<o;i++)t.flags.push(a.readUInt8());return t};MerkleBlock.fromObject=function e(a){return new MerkleBlock(a)};var merkleblock=MerkleBlock;(function(e){e.exports=block,e.exports.BlockHeader=blockheader,e.exports.MerkleBlock=merkleblock})(block$1);var hdpublickey,hasRequiredHdpublickey;function requireHdpublickey(){if(hasRequiredHdpublickey)return hdpublickey;hasRequiredHdpublickey=1;var e=lodashExports,a=preconditions,t=bn,c=base58,i=base58check,o=hashExports,b=requireHdprivatekey(),u=networks_1,l=point$1,x=requirePublickey(),g=errorsExports,v=g,E=g.HDPublicKey,S=requireAssert(),T=js,I=bufferExports;function A(C){if(C instanceof A)return C;if(!(this instanceof A))return new A(C);if(C)if(e.isString(C)||I.isBuffer(C)){var O=A.getSerializedError(C);if(O){if(I.isBuffer(C)&&!A.getSerializedError(C.toString()))return this._buildFromSerialized(C.toString());if(O instanceof E.ArgumentIsPrivateExtended)return new b(C).hdPublicKey;throw O}else return this._buildFromSerialized(C)}else{if(e.isObject(C))return C instanceof b?this._buildFromPrivate(C):this._buildFromObject(C);throw new E.UnrecognizedArgument(C)}else throw new E.MustSupplyArgument}return A.isValidPath=function(C){if(e.isString(C)){var O=b._getDerivationIndexes(C);return O!==null&&e.every(O,A.isValidPath)}return e.isNumber(C)?C>=0&&C<A.Hardened:!1},A.prototype.derive=function(C,O){return this.deriveChild(C,O)},A.prototype.deriveChild=function(C,O){if(e.isNumber(C))return this._deriveWithNumber(C,O);if(e.isString(C))return this._deriveFromString(C);throw new E.InvalidDerivationArgument(C)},A.prototype._deriveWithNumber=function(C,O){if(C>=A.Hardened||O)throw new E.InvalidIndexCantDeriveHardened;if(C<0)throw new E.InvalidPath(C);var R=I.integerAsBuffer(C),B=I.concat([this.publicKey.toBuffer(),R]),M=o.sha512hmac(B,this._buffers.chainCode),L=t.fromBuffer(M.slice(0,32),{size:32}),ee=M.slice(32,64),z;try{z=x.fromPoint(l.getG().mul(L).add(this.publicKey.point))}catch{return this._deriveWithNumber(C+1)}var oe=new A({network:this.network,depth:this.depth+1,parentFingerPrint:this.fingerPrint,childIndex:C,chainCode:ee,publicKey:z});return oe},A.prototype._deriveFromString=function(C){if(e.includes(C,"'"))throw new E.InvalidIndexCantDeriveHardened;if(!A.isValidPath(C))throw new E.InvalidPath(C);var O=b._getDerivationIndexes(C),R=O.reduce(function(B,M){return B._deriveWithNumber(M)},this);return R},A.isValidSerialized=function(C,O){return e.isNull(A.getSerializedError(C,O))},A.getSerializedError=function(C,O){if(!(e.isString(C)||I.isBuffer(C)))return new E.UnrecognizedArgument("expected buffer or string");if(!c.validCharacters(C))return new v.InvalidB58Char("(unknown)",C);try{C=i.decode(C)}catch{return new v.InvalidB58Checksum(C)}if(C.length!==A.DataSize)return new E.InvalidLength(C);if(!e.isUndefined(O)){var R=A._validateNetwork(C,O);if(R)return R}var B=I.integerFromBuffer(C.slice(0,4));return B===u.livenet.xprivkey||B===u.testnet.xprivkey?new E.ArgumentIsPrivateExtended:null},A._validateNetwork=function(C,O){var R=u.get(O);if(!R)return new v.InvalidNetworkArgument(O);var B=C.slice(A.VersionStart,A.VersionEnd);return I.integerFromBuffer(B)!==R.xpubkey?new v.InvalidNetwork(B):null},A.prototype._buildFromPrivate=function(C){var O=e.clone(C._buffers),R=l.getG().mul(t.fromBuffer(O.privateKey));return O.publicKey=l.pointToCompressed(R),O.version=I.integerAsBuffer(u.get(I.integerFromBuffer(O.version)).xpubkey),O.privateKey=void 0,O.checksum=void 0,O.xprivkey=void 0,this._buildFromBuffers(O)},A.prototype._buildFromObject=function(C){var O={version:C.network?I.integerAsBuffer(u.get(C.network).xpubkey):C.version,depth:e.isNumber(C.depth)?I.integerAsSingleByteBuffer(C.depth):C.depth,parentFingerPrint:e.isNumber(C.parentFingerPrint)?I.integerAsBuffer(C.parentFingerPrint):C.parentFingerPrint,childIndex:e.isNumber(C.childIndex)?I.integerAsBuffer(C.childIndex):C.childIndex,chainCode:e.isString(C.chainCode)?buffer$2.Buffer.from(C.chainCode,"hex"):C.chainCode,publicKey:e.isString(C.publicKey)?buffer$2.Buffer.from(C.publicKey,"hex"):I.isBuffer(C.publicKey)?C.publicKey:C.publicKey.toBuffer(),checksum:e.isNumber(C.checksum)?I.integerAsBuffer(C.checksum):C.checksum};return this._buildFromBuffers(O)},A.prototype._buildFromSerialized=function(C){var O=i.decode(C),R={version:O.slice(A.VersionStart,A.VersionEnd),depth:O.slice(A.DepthStart,A.DepthEnd),parentFingerPrint:O.slice(A.ParentFingerPrintStart,A.ParentFingerPrintEnd),childIndex:O.slice(A.ChildIndexStart,A.ChildIndexEnd),chainCode:O.slice(A.ChainCodeStart,A.ChainCodeEnd),publicKey:O.slice(A.PublicKeyStart,A.PublicKeyEnd),checksum:O.slice(A.ChecksumStart,A.ChecksumEnd),xpubkey:C};return this._buildFromBuffers(R)},A.prototype._buildFromBuffers=function(C){A._validateBufferArguments(C),T.defineImmutable(this,{_buffers:C});var O=[C.version,C.depth,C.parentFingerPrint,C.childIndex,C.chainCode,C.publicKey],R=I.concat(O),B=i.checksum(R);if(!C.checksum||!C.checksum.length)C.checksum=B;else if(C.checksum.toString("hex")!==B.toString("hex"))throw new v.InvalidB58Checksum(R,B);var M=u.get(I.integerFromBuffer(C.version)),L;L=i.encode(I.concat(O)),C.xpubkey=buffer$2.Buffer.from(L);var ee=new x(C.publicKey,{network:M}),z=A.ParentFingerPrintSize,oe=o.sha256ripemd160(ee.toBuffer()).slice(0,z);return T.defineImmutable(this,{xpubkey:L,network:M,depth:I.integerFromSingleByteBuffer(C.depth),publicKey:ee,fingerPrint:oe}),this},A._validateBufferArguments=function(C){var O=function(R,B){var M=C[R];S(I.isBuffer(M),R+" argument is not a buffer, it's "+typeof M),S(M.length===B,R+" has not the expected size: found "+M.length+", expected "+B)};O("version",A.VersionSize),O("depth",A.DepthSize),O("parentFingerPrint",A.ParentFingerPrintSize),O("childIndex",A.ChildIndexSize),O("chainCode",A.ChainCodeSize),O("publicKey",A.PublicKeySize),C.checksum&&C.checksum.length&&O("checksum",A.CheckSumSize)},A.fromString=function(C){return a.checkArgument(e.isString(C),"No valid string was provided"),new A(C)},A.fromObject=function(C){return a.checkArgument(e.isObject(C),"No valid argument was provided"),new A(C)},A.prototype.toString=function(){return this.xpubkey},A.prototype.inspect=function(){return"<HDPublicKey: "+this.xpubkey+">"},A.prototype.toObject=A.prototype.toJSON=function(){return{network:u.get(I.integerFromBuffer(this._buffers.version)).name,depth:I.integerFromSingleByteBuffer(this._buffers.depth),fingerPrint:I.integerFromBuffer(this.fingerPrint),parentFingerPrint:I.integerFromBuffer(this._buffers.parentFingerPrint),childIndex:I.integerFromBuffer(this._buffers.childIndex),chainCode:I.bufferToHex(this._buffers.chainCode),publicKey:this.publicKey.toString(),checksum:I.integerFromBuffer(this._buffers.checksum),xpubkey:this.xpubkey}},A.fromBuffer=function(C){return new A(C)},A.prototype.toBuffer=function(){return I.copy(this._buffers.xpubkey)},A.Hardened=2147483648,A.RootElementAlias=["m","M"],A.VersionSize=4,A.DepthSize=1,A.ParentFingerPrintSize=4,A.ChildIndexSize=4,A.ChainCodeSize=32,A.PublicKeySize=33,A.CheckSumSize=4,A.DataSize=78,A.SerializedByteSize=82,A.VersionStart=0,A.VersionEnd=A.VersionStart+A.VersionSize,A.DepthStart=A.VersionEnd,A.DepthEnd=A.DepthStart+A.DepthSize,A.ParentFingerPrintStart=A.DepthEnd,A.ParentFingerPrintEnd=A.ParentFingerPrintStart+A.ParentFingerPrintSize,A.ChildIndexStart=A.ParentFingerPrintEnd,A.ChildIndexEnd=A.ChildIndexStart+A.ChildIndexSize,A.ChainCodeStart=A.ChildIndexEnd,A.ChainCodeEnd=A.ChainCodeStart+A.ChainCodeSize,A.PublicKeyStart=A.ChainCodeEnd,A.PublicKeyEnd=A.PublicKeyStart+A.PublicKeySize,A.ChecksumStart=A.PublicKeyEnd,A.ChecksumEnd=A.ChecksumStart+A.CheckSumSize,S(A.PublicKeyEnd===A.DataSize),S(A.ChecksumEnd===A.SerializedByteSize),hdpublickey=A,hdpublickey}var hdprivatekey,hasRequiredHdprivatekey;function requireHdprivatekey(){if(hasRequiredHdprivatekey)return hdprivatekey;hasRequiredHdprivatekey=1;var e=requireAssert(),a=buffer$2,t=lodashExports,c=preconditions,i=bn,o=base58,b=base58check,u=hashExports,l=networks_1,x=point$1,g=requirePrivatekey(),v=random,E=errorsExports,S=E.HDPrivateKey,T=bufferExports,I=js,A=128,C=1/8,O=512;function R(B){if(B instanceof R)return B;if(!(this instanceof R))return new R(B);if(!B)return this._generateRandomly();if(l.get(B))return this._generateRandomly(B);if(t.isString(B)||T.isBuffer(B))if(R.isValidSerialized(B))this._buildFromSerialized(B);else if(I.isValidJSON(B))this._buildFromJSON(B);else if(T.isBuffer(B)&&R.isValidSerialized(B.toString()))this._buildFromSerialized(B.toString());else throw R.getSerializedError(B);else if(t.isObject(B))this._buildFromObject(B);else throw new S.UnrecognizedArgument(B)}return R.isValidPath=function(B,M){if(t.isString(B)){var L=R._getDerivationIndexes(B);return L!==null&&t.every(L,R.isValidPath)}return t.isNumber(B)?(B<R.Hardened&&M===!0&&(B+=R.Hardened),B>=0&&B<R.MaxIndex):!1},R._getDerivationIndexes=function(B){var M=B.split("/");if(t.includes(R.RootElementAlias,B))return[];if(!t.includes(R.RootElementAlias,M[0]))return null;var L=M.slice(1).map(function(ee){var z=ee.slice(-1)==="'";if(z&&(ee=ee.slice(0,-1)),!ee||ee[0]==="-")return NaN;var oe=+ee;return z&&(oe+=R.Hardened),oe});return t.some(L,isNaN)?null:L},R.prototype.derive=function(B,M){return this.deriveNonCompliantChild(B,M)},R.prototype.deriveChild=function(B,M){if(t.isNumber(B))return this._deriveWithNumber(B,M);if(t.isString(B))return this._deriveFromString(B);throw new S.InvalidDerivationArgument(B)},R.prototype.deriveNonCompliantChild=function(B,M){if(t.isNumber(B))return this._deriveWithNumber(B,M,!0);if(t.isString(B))return this._deriveFromString(B,!0);throw new S.InvalidDerivationArgument(B)},R.prototype._deriveWithNumber=function(B,M,L){if(!R.isValidPath(B,M))throw new S.InvalidPath(B);M=B>=R.Hardened?!0:M,B<R.Hardened&&M===!0&&(B+=R.Hardened);var ee=T.integerAsBuffer(B),z;if(M&&L){var oe=this.privateKey.bn.toBuffer();z=T.concat([buffer$2.Buffer.from([0]),oe,ee])}else if(M){var W=this.privateKey.bn.toBuffer({size:32});e(W.length===32,"length of private key buffer is expected to be 32 bytes"),z=T.concat([buffer$2.Buffer.from([0]),W,ee])}else z=T.concat([this.publicKey.toBuffer(),ee]);var P=u.sha512hmac(z,this._buffers.chainCode),D=i.fromBuffer(P.slice(0,32),{size:32}),q=P.slice(32,64),Y=D.add(this.privateKey.toBigNumber()).umod(x.getN()).toBuffer({size:32});if(!g.isValid(Y))return this._deriveWithNumber(B+1,null,L);var U=new R({network:this.network,depth:this.depth+1,parentFingerPrint:this.fingerPrint,childIndex:B,chainCode:q,privateKey:Y});return U},R.prototype._deriveFromString=function(B,M){if(!R.isValidPath(B))throw new S.InvalidPath(B);var L=R._getDerivationIndexes(B),ee=L.reduce(function(z,oe){return z._deriveWithNumber(oe,null,M)},this);return ee},R.isValidSerialized=function(B,M){return!R.getSerializedError(B,M)},R.getSerializedError=function(B,M){if(!(t.isString(B)||T.isBuffer(B)))return new S.UnrecognizedArgument("Expected string or buffer");if(!o.validCharacters(B))return new E.InvalidB58Char("(unknown)",B);try{B=b.decode(B)}catch{return new E.InvalidB58Checksum(B)}if(B.length!==R.DataLength)return new S.InvalidLength(B);if(!t.isUndefined(M)){var L=R._validateNetwork(B,M);if(L)return L}return null},R._validateNetwork=function(B,M){var L=l.get(M);if(!L)return new E.InvalidNetworkArgument(M);var ee=B.slice(0,4);return T.integerFromBuffer(ee)!==L.xprivkey?new E.InvalidNetwork(ee):null},R.fromString=function(B){return c.checkArgument(t.isString(B),"No valid string was provided"),new R(B)},R.fromObject=function(B){return c.checkArgument(t.isObject(B),"No valid argument was provided"),new R(B)},R.prototype._buildFromJSON=function(B){return this._buildFromObject(JSON.parse(B))},R.prototype._buildFromObject=function(B){var M={version:B.network?T.integerAsBuffer(l.get(B.network).xprivkey):B.version,depth:t.isNumber(B.depth)?T.integerAsSingleByteBuffer(B.depth):B.depth,parentFingerPrint:t.isNumber(B.parentFingerPrint)?T.integerAsBuffer(B.parentFingerPrint):B.parentFingerPrint,childIndex:t.isNumber(B.childIndex)?T.integerAsBuffer(B.childIndex):B.childIndex,chainCode:t.isString(B.chainCode)?buffer$2.Buffer.from(B.chainCode,"hex"):B.chainCode,privateKey:t.isString(B.privateKey)&&I.isHexa(B.privateKey)?buffer$2.Buffer.from(B.privateKey,"hex"):B.privateKey,checksum:B.checksum?B.checksum.length?B.checksum:T.integerAsBuffer(B.checksum):void 0};return this._buildFromBuffers(M)},R.prototype._buildFromSerialized=function(B){var M=b.decode(B),L={version:M.slice(R.VersionStart,R.VersionEnd),depth:M.slice(R.DepthStart,R.DepthEnd),parentFingerPrint:M.slice(R.ParentFingerPrintStart,R.ParentFingerPrintEnd),childIndex:M.slice(R.ChildIndexStart,R.ChildIndexEnd),chainCode:M.slice(R.ChainCodeStart,R.ChainCodeEnd),privateKey:M.slice(R.PrivateKeyStart,R.PrivateKeyEnd),checksum:M.slice(R.ChecksumStart,R.ChecksumEnd),xprivkey:B};return this._buildFromBuffers(L)},R.prototype._generateRandomly=function(B){return R.fromSeed(v.getRandomBuffer(64),B)},R.fromSeed=function(B,M){if(I.isHexaString(B)&&(B=buffer$2.Buffer.from(B,"hex")),!buffer$2.Buffer.isBuffer(B))throw new S.InvalidEntropyArgument(B);if(B.length<A*C)throw new S.InvalidEntropyArgument.NotEnoughEntropy(B);if(B.length>O*C)throw new S.InvalidEntropyArgument.TooMuchEntropy(B);var L=u.sha512hmac(B,buffer$2.Buffer.from("Bitcoin seed"));return new R({network:l.get(M)||l.defaultNetwork,depth:0,parentFingerPrint:0,childIndex:0,privateKey:L.slice(0,32),chainCode:L.slice(32,64)})},R.prototype._calcHDPublicKey=function(){if(!this._hdPublicKey){var B=requireHdpublickey();this._hdPublicKey=new B(this)}},R.prototype._buildFromBuffers=function(B){R._validateBufferArguments(B),I.defineImmutable(this,{_buffers:B});var M=[B.version,B.depth,B.parentFingerPrint,B.childIndex,B.chainCode,T.emptyBuffer(1),B.privateKey],L=a.Buffer.concat(M);if(!B.checksum||!B.checksum.length)B.checksum=b.checksum(L);else if(B.checksum.toString()!==b.checksum(L).toString())throw new E.InvalidB58Checksum(L);var ee=l.get(T.integerFromBuffer(B.version)),z;z=b.encode(a.Buffer.concat(M)),B.xprivkey=buffer$2.Buffer.from(z);var oe=new g(i.fromBuffer(B.privateKey),ee),W=oe.toPublicKey(),P=R.ParentFingerPrintSize,D=u.sha256ripemd160(W.toBuffer()).slice(0,P);return I.defineImmutable(this,{xprivkey:z,network:ee,depth:T.integerFromSingleByteBuffer(B.depth),privateKey:oe,publicKey:W,fingerPrint:D}),this._hdPublicKey=null,Object.defineProperty(this,"hdPublicKey",{configurable:!1,enumerable:!0,get:function(){return this._calcHDPublicKey(),this._hdPublicKey}}),Object.defineProperty(this,"xpubkey",{configurable:!1,enumerable:!0,get:function(){return this._calcHDPublicKey(),this._hdPublicKey.xpubkey}}),this},R._validateBufferArguments=function(B){var M=function(L,ee){var z=B[L];e(T.isBuffer(z),L+" argument is not a buffer"),e(z.length===ee,L+" has not the expected size: found "+z.length+", expected "+ee)};M("version",R.VersionSize),M("depth",R.DepthSize),M("parentFingerPrint",R.ParentFingerPrintSize),M("childIndex",R.ChildIndexSize),M("chainCode",R.ChainCodeSize),M("privateKey",R.PrivateKeySize),B.checksum&&B.checksum.length&&M("checksum",R.CheckSumSize)},R.prototype.toString=function(){return this.xprivkey},R.prototype.inspect=function(){return"<HDPrivateKey: "+this.xprivkey+">"},R.prototype.toObject=R.prototype.toJSON=function(){return{network:l.get(T.integerFromBuffer(this._buffers.version),"xprivkey").name,depth:T.integerFromSingleByteBuffer(this._buffers.depth),fingerPrint:T.integerFromBuffer(this.fingerPrint),parentFingerPrint:T.integerFromBuffer(this._buffers.parentFingerPrint),childIndex:T.integerFromBuffer(this._buffers.childIndex),chainCode:T.bufferToHex(this._buffers.chainCode),privateKey:this.privateKey.toBuffer().toString("hex"),checksum:T.integerFromBuffer(this._buffers.checksum),xprivkey:this.xprivkey}},R.fromBuffer=function(B){return new R(B.toString())},R.prototype.toBuffer=function(){return T.copy(this._buffers.xprivkey)},R.DefaultDepth=0,R.DefaultFingerprint=0,R.DefaultChildIndex=0,R.Hardened=2147483648,R.MaxIndex=2*R.Hardened,R.RootElementAlias=["m","M","m'","M'"],R.VersionSize=4,R.DepthSize=1,R.ParentFingerPrintSize=4,R.ChildIndexSize=4,R.ChainCodeSize=32,R.PrivateKeySize=32,R.CheckSumSize=4,R.DataLength=78,R.SerializedByteSize=82,R.VersionStart=0,R.VersionEnd=R.VersionStart+R.VersionSize,R.DepthStart=R.VersionEnd,R.DepthEnd=R.DepthStart+R.DepthSize,R.ParentFingerPrintStart=R.DepthEnd,R.ParentFingerPrintEnd=R.ParentFingerPrintStart+R.ParentFingerPrintSize,R.ChildIndexStart=R.ParentFingerPrintEnd,R.ChildIndexEnd=R.ChildIndexStart+R.ChildIndexSize,R.ChainCodeStart=R.ChildIndexEnd,R.ChainCodeEnd=R.ChainCodeStart+R.ChainCodeSize,R.PrivateKeyStart=R.ChainCodeEnd+1,R.PrivateKeyEnd=R.PrivateKeyStart+R.PrivateKeySize,R.ChecksumStart=R.PrivateKeyEnd,R.ChecksumEnd=R.ChecksumStart+R.CheckSumSize,e(R.ChecksumEnd===R.SerializedByteSize),hdprivatekey=R,hdprivatekey}var _$2=lodashExports,PrivateKey=requirePrivatekey(),PublicKey=requirePublickey(),Address$1=requireAddress(),BufferWriter=bufferwriter,ECDSA=requireEcdsa(),Signature=signature$2,sha256sha256=hashExports.sha256sha256,JSUtil=js,$$1=preconditions;function Message(e){return this instanceof Message?($$1.checkArgument(_$2.isString(e),"First argument should be a string"),this.message=e,this):new Message(e)}Message.MAGIC_BYTES=buffer$2.Buffer.from(`Bitcoin Signed Message:
`);Message.prototype.magicHash=function e(){var a=BufferWriter.varintBufNum(Message.MAGIC_BYTES.length),t=buffer$2.Buffer.from(this.message),c=BufferWriter.varintBufNum(t.length),i=buffer$2.Buffer.concat([a,Message.MAGIC_BYTES,c,t]),o=sha256sha256(i);return o};Message.prototype._sign=function e(a){$$1.checkArgument(a instanceof PrivateKey,"First argument should be an instance of PrivateKey");var t=this.magicHash(),c=new ECDSA;return c.hashbuf=t,c.privkey=a,c.pubkey=a.toPublicKey(),c.signRandomK(),c.calci(),c.sig};Message.prototype.sign=function e(a){var t=this._sign(a);return t.toCompact().toString("base64")};Message.prototype._verify=function e(a,t){$$1.checkArgument(a instanceof PublicKey,"First argument should be an instance of PublicKey"),$$1.checkArgument(t instanceof Signature,"Second argument should be an instance of Signature");var c=this.magicHash(),i=ECDSA.verify(c,t,a);return i||(this.error="The signature was invalid"),i};Message.prototype.verify=function e(a,t){$$1.checkArgument(a),$$1.checkArgument(t&&_$2.isString(t)),_$2.isString(a)&&(a=Address$1.fromString(a));var c=Signature.fromCompact(buffer$2.Buffer.from(t,"base64")),i=new ECDSA;i.hashbuf=this.magicHash(),i.sig=c;var o=i.toPublicKey(),b=Address$1.fromPublicKey(o,a.network);return a.toString()!==b.toString()?(this.error="The signature did not match the message digest",!1):this._verify(o,c)};Message.prototype.recoverPublicKey=function e(a,t){$$1.checkArgument(a),$$1.checkArgument(t&&_$2.isString(t)),_$2.isString(a)&&(a=Address$1.fromString(a));var c=Signature.fromCompact(buffer$2.Buffer.from(t,"base64")),i=new ECDSA;i.hashbuf=this.magicHash(),i.sig=c;var o=i.toPublicKey(),b=Address$1.fromPublicKey(o,a.network);return a.toString()!==b.toString()&&(this.error="The signature did not match the message digest"),o.toString()};Message.fromString=function(e){return new Message(e)};Message.fromJSON=function e(a){return JSUtil.isValidJSON(a)&&(a=JSON.parse(a)),new Message(a.message)};Message.prototype.toObject=function e(){return{message:this.message}};Message.prototype.toJSON=function e(){return JSON.stringify(this.toObject())};Message.prototype.toString=function(){return this.message};Message.prototype.inspect=function(){return"<Message: "+this.toString()+">"};var message=Message;requireScript();var punycodeExports={},punycode$1={get exports(){return punycodeExports},set exports(e){punycodeExports=e}};/*! https://mths.be/punycode v1.4.1 by @mathias */(function(e,a){(function(t){var c=a&&!a.nodeType&&a,i=e&&!e.nodeType&&e,o=typeof commonjsGlobal=="object"&&commonjsGlobal;(o.global===o||o.window===o||o.self===o)&&(t=o);var b,u=2147483647,l=36,x=1,g=26,v=38,E=700,S=72,T=128,I="-",A=/^xn--/,C=/[^\x20-\x7E]/,O=/[\x2E\u3002\uFF0E\uFF61]/g,R={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},B=l-x,M=Math.floor,L=String.fromCharCode,ee;function z(Z){throw new RangeError(R[Z])}function oe(Z,J){for(var ce=Z.length,re=[];ce--;)re[ce]=J(Z[ce]);return re}function W(Z,J){var ce=Z.split("@"),re="";ce.length>1&&(re=ce[0]+"@",Z=ce[1]),Z=Z.replace(O,".");var ie=Z.split("."),fe=oe(ie,J).join(".");return re+fe}function P(Z){for(var J=[],ce=0,re=Z.length,ie,fe;ce<re;)ie=Z.charCodeAt(ce++),ie>=55296&&ie<=56319&&ce<re?(fe=Z.charCodeAt(ce++),(fe&64512)==56320?J.push(((ie&1023)<<10)+(fe&1023)+65536):(J.push(ie),ce--)):J.push(ie);return J}function D(Z){return oe(Z,function(J){var ce="";return J>65535&&(J-=65536,ce+=L(J>>>10&1023|55296),J=56320|J&1023),ce+=L(J),ce}).join("")}function q(Z){return Z-48<10?Z-22:Z-65<26?Z-65:Z-97<26?Z-97:l}function Y(Z,J){return Z+22+75*(Z<26)-((J!=0)<<5)}function U(Z,J,ce){var re=0;for(Z=ce?M(Z/E):Z>>1,Z+=M(Z/J);Z>B*g>>1;re+=l)Z=M(Z/B);return M(re+(B+1)*Z/(Z+v))}function j(Z){var J=[],ce=Z.length,re,ie=0,fe=T,pe=S,Oe,Se,Pe,a0,qe,Ke,b0,Je,i0;for(Oe=Z.lastIndexOf(I),Oe<0&&(Oe=0),Se=0;Se<Oe;++Se)Z.charCodeAt(Se)>=128&&z("not-basic"),J.push(Z.charCodeAt(Se));for(Pe=Oe>0?Oe+1:0;Pe<ce;){for(a0=ie,qe=1,Ke=l;Pe>=ce&&z("invalid-input"),b0=q(Z.charCodeAt(Pe++)),(b0>=l||b0>M((u-ie)/qe))&&z("overflow"),ie+=b0*qe,Je=Ke<=pe?x:Ke>=pe+g?g:Ke-pe,!(b0<Je);Ke+=l)i0=l-Je,qe>M(u/i0)&&z("overflow"),qe*=i0;re=J.length+1,pe=U(ie-a0,re,a0==0),M(ie/re)>u-fe&&z("overflow"),fe+=M(ie/re),ie%=re,J.splice(ie++,0,fe)}return D(J)}function Q(Z){var J,ce,re,ie,fe,pe,Oe,Se,Pe,a0,qe,Ke=[],b0,Je,i0,N0;for(Z=P(Z),b0=Z.length,J=T,ce=0,fe=S,pe=0;pe<b0;++pe)qe=Z[pe],qe<128&&Ke.push(L(qe));for(re=ie=Ke.length,ie&&Ke.push(I);re<b0;){for(Oe=u,pe=0;pe<b0;++pe)qe=Z[pe],qe>=J&&qe<Oe&&(Oe=qe);for(Je=re+1,Oe-J>M((u-ce)/Je)&&z("overflow"),ce+=(Oe-J)*Je,J=Oe,pe=0;pe<b0;++pe)if(qe=Z[pe],qe<J&&++ce>u&&z("overflow"),qe==J){for(Se=ce,Pe=l;a0=Pe<=fe?x:Pe>=fe+g?g:Pe-fe,!(Se<a0);Pe+=l)N0=Se-a0,i0=l-a0,Ke.push(L(Y(a0+N0%i0,0))),Se=M(N0/i0);Ke.push(L(Y(Se,0))),fe=U(ce,Je,re==ie),ce=0,++re}++ce,++J}return Ke.join("")}function X(Z){return W(Z,function(J){return A.test(J)?j(J.slice(4).toLowerCase()):J})}function F(Z){return W(Z,function(J){return C.test(J)?"xn--"+Q(J):J})}if(b={version:"1.4.1",ucs2:{decode:P,encode:D},decode:j,encode:Q,toASCII:F,toUnicode:X},c&&i)if(e.exports==c)i.exports=b;else for(ee in b)b.hasOwnProperty(ee)&&(c[ee]=b[ee]);else t.punycode=b})(commonjsGlobal)})(punycode$1,punycodeExports);const require$$0$4=punycodeExports;function hasOwnProperty$1(e,a){return Object.prototype.hasOwnProperty.call(e,a)}var decode$3=function(e,a,t,c){a=a||"&",t=t||"=";var i={};if(typeof e!="string"||e.length===0)return i;var o=/\+/g;e=e.split(a);var b=1e3;c&&typeof c.maxKeys=="number"&&(b=c.maxKeys);var u=e.length;b>0&&u>b&&(u=b);for(var l=0;l<u;++l){var x=e[l].replace(o,"%20"),g=x.indexOf(t),v,E,S,T;g>=0?(v=x.substr(0,g),E=x.substr(g+1)):(v=x,E=""),S=decodeURIComponent(v),T=decodeURIComponent(E),hasOwnProperty$1(i,S)?isArray$1(i[S])?i[S].push(T):i[S]=[i[S],T]:i[S]=T}return i},isArray$1=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"},stringifyPrimitive=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}},encode$3=function(e,a,t,c){return a=a||"&",t=t||"=",e===null&&(e=void 0),typeof e=="object"?map(objectKeys(e),function(i){var o=encodeURIComponent(stringifyPrimitive(i))+t;return isArray(e[i])?map(e[i],function(b){return o+encodeURIComponent(stringifyPrimitive(b))}).join(a):o+encodeURIComponent(stringifyPrimitive(e[i]))}).join(a):c?encodeURIComponent(stringifyPrimitive(c))+t+encodeURIComponent(stringifyPrimitive(e)):""},isArray=Array.isArray||function(e){return Object.prototype.toString.call(e)==="[object Array]"};function map(e,a){if(e.map)return e.map(a);for(var t=[],c=0;c<e.length;c++)t.push(a(e[c],c));return t}var objectKeys=Object.keys||function(e){var a=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&a.push(t);return a},stringify,parse$1,decode$2=parse$1=decode$3,encode$2=stringify=encode$3;function qsEscape(e){return encodeURIComponent(e)}function qsUnescape(e){return decodeURIComponent(e)}var api$1={decode:decode$2,encode:encode$2,parse:parse$1,stringify,escape:qsEscape,unescape:qsUnescape},util$1={isString:function(e){return typeof e=="string"},isObject:function(e){return typeof e=="object"&&e!==null},isNull:function(e){return e===null},isNullOrUndefined:function(e){return e==null}},punycode=require$$0$4,util$2=util$1,parse=urlParse,resolve$1=urlResolve,resolveObject=urlResolveObject,format=urlFormat,Url_1=Url;function Url(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}var protocolPattern=/^([a-z0-9.+-]+:)/i,portPattern=/:[0-9]*$/,simplePathPattern=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,delims=["<",">",'"',"`"," ","\r",`
`,"	"],unwise=["{","}","|","\\","^","`"].concat(delims),autoEscape=["'"].concat(unwise),nonHostChars=["%","/","?",";","#"].concat(autoEscape),hostEndingChars=["/","?","#"],hostnameMaxLen=255,hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,unsafeProtocol={javascript:!0,"javascript:":!0},hostlessProtocol={javascript:!0,"javascript:":!0},slashedProtocol={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},querystring=api$1;function urlParse(e,a,t){if(e&&util$2.isObject(e)&&e instanceof Url)return e;var c=new Url;return c.parse(e,a,t),c}Url.prototype.parse=function(e,a,t){if(!util$2.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var c=e.indexOf("?"),i=c!==-1&&c<e.indexOf("#")?"?":"#",o=e.split(i),b=/\\/g;o[0]=o[0].replace(b,"/"),e=o.join(i);var u=e;if(u=u.trim(),!t&&e.split("#").length===1){var l=simplePathPattern.exec(u);if(l)return this.path=u,this.href=u,this.pathname=l[1],l[2]?(this.search=l[2],a?this.query=querystring.parse(this.search.substr(1)):this.query=this.search.substr(1)):a&&(this.search="",this.query={}),this}var x=protocolPattern.exec(u);if(x){x=x[0];var g=x.toLowerCase();this.protocol=g,u=u.substr(x.length)}if(t||x||u.match(/^\/\/[^@\/]+@[^@\/]+/)){var v=u.substr(0,2)==="//";v&&!(x&&hostlessProtocol[x])&&(u=u.substr(2),this.slashes=!0)}if(!hostlessProtocol[x]&&(v||x&&!slashedProtocol[x])){for(var E=-1,S=0;S<hostEndingChars.length;S++){var T=u.indexOf(hostEndingChars[S]);T!==-1&&(E===-1||T<E)&&(E=T)}var I,A;E===-1?A=u.lastIndexOf("@"):A=u.lastIndexOf("@",E),A!==-1&&(I=u.slice(0,A),u=u.slice(A+1),this.auth=decodeURIComponent(I)),E=-1;for(var S=0;S<nonHostChars.length;S++){var T=u.indexOf(nonHostChars[S]);T!==-1&&(E===-1||T<E)&&(E=T)}E===-1&&(E=u.length),this.host=u.slice(0,E),u=u.slice(E),this.parseHost(),this.hostname=this.hostname||"";var C=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!C)for(var O=this.hostname.split(/\./),S=0,R=O.length;S<R;S++){var B=O[S];if(B&&!B.match(hostnamePartPattern)){for(var M="",L=0,ee=B.length;L<ee;L++)B.charCodeAt(L)>127?M+="x":M+=B[L];if(!M.match(hostnamePartPattern)){var z=O.slice(0,S),oe=O.slice(S+1),W=B.match(hostnamePartStart);W&&(z.push(W[1]),oe.unshift(W[2])),oe.length&&(u="/"+oe.join(".")+u),this.hostname=z.join(".");break}}}this.hostname.length>hostnameMaxLen?this.hostname="":this.hostname=this.hostname.toLowerCase(),C||(this.hostname=punycode.toASCII(this.hostname));var P=this.port?":"+this.port:"",D=this.hostname||"";this.host=D+P,this.href+=this.host,C&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),u[0]!=="/"&&(u="/"+u))}if(!unsafeProtocol[g])for(var S=0,R=autoEscape.length;S<R;S++){var q=autoEscape[S];if(u.indexOf(q)!==-1){var Y=encodeURIComponent(q);Y===q&&(Y=escape(q)),u=u.split(q).join(Y)}}var U=u.indexOf("#");U!==-1&&(this.hash=u.substr(U),u=u.slice(0,U));var j=u.indexOf("?");if(j!==-1?(this.search=u.substr(j),this.query=u.substr(j+1),a&&(this.query=querystring.parse(this.query)),u=u.slice(0,j)):a&&(this.search="",this.query={}),u&&(this.pathname=u),slashedProtocol[g]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){var P=this.pathname||"",Q=this.search||"";this.path=P+Q}return this.href=this.format(),this};function urlFormat(e){return util$2.isString(e)&&(e=urlParse(e)),e instanceof Url?e.format():Url.prototype.format.call(e)}Url.prototype.format=function(){var e=this.auth||"";e&&(e=encodeURIComponent(e),e=e.replace(/%3A/i,":"),e+="@");var a=this.protocol||"",t=this.pathname||"",c=this.hash||"",i=!1,o="";this.host?i=e+this.host:this.hostname&&(i=e+(this.hostname.indexOf(":")===-1?this.hostname:"["+this.hostname+"]"),this.port&&(i+=":"+this.port)),this.query&&util$2.isObject(this.query)&&Object.keys(this.query).length&&(o=querystring.stringify(this.query));var b=this.search||o&&"?"+o||"";return a&&a.substr(-1)!==":"&&(a+=":"),this.slashes||(!a||slashedProtocol[a])&&i!==!1?(i="//"+(i||""),t&&t.charAt(0)!=="/"&&(t="/"+t)):i||(i=""),c&&c.charAt(0)!=="#"&&(c="#"+c),b&&b.charAt(0)!=="?"&&(b="?"+b),t=t.replace(/[?#]/g,function(u){return encodeURIComponent(u)}),b=b.replace("#","%23"),a+i+t+b+c};function urlResolve(e,a){return urlParse(e,!1,!0).resolve(a)}Url.prototype.resolve=function(e){return this.resolveObject(urlParse(e,!1,!0)).format()};function urlResolveObject(e,a){return e?urlParse(e,!1,!0).resolveObject(a):a}Url.prototype.resolveObject=function(e){if(util$2.isString(e)){var a=new Url;a.parse(e,!1,!0),e=a}for(var t=new Url,c=Object.keys(this),i=0;i<c.length;i++){var o=c[i];t[o]=this[o]}if(t.hash=e.hash,e.href==="")return t.href=t.format(),t;if(e.slashes&&!e.protocol){for(var b=Object.keys(e),u=0;u<b.length;u++){var l=b[u];l!=="protocol"&&(t[l]=e[l])}return slashedProtocol[t.protocol]&&t.hostname&&!t.pathname&&(t.path=t.pathname="/"),t.href=t.format(),t}if(e.protocol&&e.protocol!==t.protocol){if(!slashedProtocol[e.protocol]){for(var x=Object.keys(e),g=0;g<x.length;g++){var v=x[g];t[v]=e[v]}return t.href=t.format(),t}if(t.protocol=e.protocol,!e.host&&!hostlessProtocol[e.protocol]){for(var R=(e.pathname||"").split("/");R.length&&!(e.host=R.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),R[0]!==""&&R.unshift(""),R.length<2&&R.unshift(""),t.pathname=R.join("/")}else t.pathname=e.pathname;if(t.search=e.search,t.query=e.query,t.host=e.host||"",t.auth=e.auth,t.hostname=e.hostname||e.host,t.port=e.port,t.pathname||t.search){var E=t.pathname||"",S=t.search||"";t.path=E+S}return t.slashes=t.slashes||e.slashes,t.href=t.format(),t}var T=t.pathname&&t.pathname.charAt(0)==="/",I=e.host||e.pathname&&e.pathname.charAt(0)==="/",A=I||T||t.host&&e.pathname,C=A,O=t.pathname&&t.pathname.split("/")||[],R=e.pathname&&e.pathname.split("/")||[],B=t.protocol&&!slashedProtocol[t.protocol];if(B&&(t.hostname="",t.port=null,t.host&&(O[0]===""?O[0]=t.host:O.unshift(t.host)),t.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(R[0]===""?R[0]=e.host:R.unshift(e.host)),e.host=null),A=A&&(R[0]===""||O[0]==="")),I)t.host=e.host||e.host===""?e.host:t.host,t.hostname=e.hostname||e.hostname===""?e.hostname:t.hostname,t.search=e.search,t.query=e.query,O=R;else if(R.length)O||(O=[]),O.pop(),O=O.concat(R),t.search=e.search,t.query=e.query;else if(!util$2.isNullOrUndefined(e.search)){if(B){t.hostname=t.host=O.shift();var M=t.host&&t.host.indexOf("@")>0?t.host.split("@"):!1;M&&(t.auth=M.shift(),t.host=t.hostname=M.shift())}return t.search=e.search,t.query=e.query,(!util$2.isNull(t.pathname)||!util$2.isNull(t.search))&&(t.path=(t.pathname?t.pathname:"")+(t.search?t.search:"")),t.href=t.format(),t}if(!O.length)return t.pathname=null,t.search?t.path="/"+t.search:t.path=null,t.href=t.format(),t;for(var L=O.slice(-1)[0],ee=(t.host||e.host||O.length>1)&&(L==="."||L==="..")||L==="",z=0,oe=O.length;oe>=0;oe--)L=O[oe],L==="."?O.splice(oe,1):L===".."?(O.splice(oe,1),z++):z&&(O.splice(oe,1),z--);if(!A&&!C)for(;z--;z)O.unshift("..");A&&O[0]!==""&&(!O[0]||O[0].charAt(0)!=="/")&&O.unshift(""),ee&&O.join("/").substr(-1)!=="/"&&O.push("");var W=O[0]===""||O[0]&&O[0].charAt(0)==="/";if(B){t.hostname=t.host=W?"":O.length?O.shift():"";var M=t.host&&t.host.indexOf("@")>0?t.host.split("@"):!1;M&&(t.auth=M.shift(),t.host=t.hostname=M.shift())}return A=A||t.host&&O.length,A&&!W&&O.unshift(""),O.length?t.pathname=O.join("/"):(t.pathname=null,t.path=null),(!util$2.isNull(t.pathname)||!util$2.isNull(t.search))&&(t.path=(t.pathname?t.pathname:"")+(t.search?t.search:"")),t.auth=e.auth||t.auth,t.slashes=t.slashes||e.slashes,t.href=t.format(),t};Url.prototype.parseHost=function(){var e=this.host,a=portPattern.exec(e);a&&(a=a[0],a!==":"&&(this.port=a.substr(1)),e=e.substr(0,e.length-a.length)),e&&(this.hostname=e)};function normalizeArray(e,a){for(var t=0,c=e.length-1;c>=0;c--){var i=e[c];i==="."?e.splice(c,1):i===".."?(e.splice(c,1),t++):t&&(e.splice(c,1),t--)}if(a)for(;t--;t)e.unshift("..");return e}function resolve(){for(var e="",a=!1,t=arguments.length-1;t>=-1&&!a;t--){var c=t>=0?arguments[t]:"/";if(typeof c!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!c)continue;e=c+"/"+e,a=c.charAt(0)==="/"}return e=normalizeArray(filter(e.split("/"),function(i){return!!i}),!a).join("/"),(a?"/":"")+e||"."}function filter(e,a){if(e.filter)return e.filter(a);for(var t=[],c=0;c<e.length;c++)a(e[c],c,e)&&t.push(e[c]);return t}var _globalThis=function(e){function a(){var c=this||self;return delete e.prototype.__magic__,c}if(typeof globalThis=="object")return globalThis;if(this)return a();e.defineProperty(e.prototype,"__magic__",{configurable:!0,get:a});var t=__magic__;return t}(Object),formatImport=format,parseImport=parse,resolveImport=resolve$1,UrlImport=Url_1,URL$2=_globalThis.URL,URLSearchParams$1=_globalThis.URLSearchParams,percentRegEx=/%/g,backslashRegEx=/\\/g,newlineRegEx=/\n/g,carriageReturnRegEx=/\r/g,tabRegEx=/\t/g,CHAR_FORWARD_SLASH=47;function isURLInstance(e){var a=e??null;return!!(a!==null&&a?.href&&a?.origin)}function getPathFromURLPosix(e){if(e.hostname!=="")throw new TypeError('File URL host must be "localhost" or empty on browser');for(var a=e.pathname,t=0;t<a.length;t++)if(a[t]==="%"){var c=a.codePointAt(t+2)|32;if(a[t+1]==="2"&&c===102)throw new TypeError("File URL path must not include encoded / characters")}return decodeURIComponent(a)}function encodePathChars(e){return e.includes("%")&&(e=e.replace(percentRegEx,"%25")),e.includes("\\")&&(e=e.replace(backslashRegEx,"%5C")),e.includes(`
`)&&(e=e.replace(newlineRegEx,"%0A")),e.includes("\r")&&(e=e.replace(carriageReturnRegEx,"%0D")),e.includes("	")&&(e=e.replace(tabRegEx,"%09")),e}var domainToASCII=function e(a){if(typeof a>"u")throw new TypeError('The "domain" argument must be specified');return new URL$2("http://"+a).hostname},domainToUnicode=function e(a){if(typeof a>"u")throw new TypeError('The "domain" argument must be specified');return new URL$2("http://"+a).hostname},pathToFileURL=function e(a){var t=new URL$2("file://"),c=resolve(a),i=a.charCodeAt(a.length-1);return i===CHAR_FORWARD_SLASH&&c[c.length-1]!=="/"&&(c+="/"),t.pathname=encodePathChars(c),t},fileURLToPath=function e(a){if(!isURLInstance(a)&&typeof a!="string")throw new TypeError('The "path" argument must be of type string or an instance of URL. Received type '+typeof a+" ("+a+")");var t=new URL$2(a);if(t.protocol!=="file:")throw new TypeError("The URL must be of scheme file");return getPathFromURLPosix(t)},formatImportWithOverloads=function e(a,t){var c,i,o;if(t===void 0&&(t={}),!(a instanceof URL$2))return formatImport(a);if(typeof t!="object"||t===null)throw new TypeError('The "options" argument must be of type object.');var b=(c=t.auth)!=null?c:!0,u=(i=t.fragment)!=null?i:!0,l=(o=t.search)!=null?o:!0,x=new URL$2(a.toString());return b||(x.username="",x.password=""),u||(x.hash=""),l||(x.search=""),x.toString()},api={format:formatImportWithOverloads,parse:parseImport,resolve:resolveImport,resolveObject,Url:UrlImport,URL:URL$2,URLSearchParams:URLSearchParams$1,domainToASCII,domainToUnicode,pathToFileURL,fileURLToPath};const url$J=Object.freeze(Object.defineProperty({__proto__:null,URL:URL$2,URLSearchParams:URLSearchParams$1,Url:UrlImport,default:api,domainToASCII,domainToUnicode,fileURLToPath,format:formatImportWithOverloads,parse:parseImport,pathToFileURL,resolve:resolveImport,resolveObject},Symbol.toStringTag,{value:"Module"})),require$$1$4=getAugmentedNamespace(url$J);var _$1=lodashExports,URL$1=require$$1$4,Address=requireAddress(),Unit=unit,URI=function(e,a){if(!(this instanceof URI))return new URI(e,a);if(this.extras={},this.knownParams=a||[],this.address=this.network=this.amount=this.message=null,typeof e=="string"){var t=URI.parse(e);t.amount&&(t.amount=this._parseAmount(t.amount)),this._fromObject(t)}else if(typeof e=="object")this._fromObject(e);else throw new TypeError("Unrecognized data format.")};URI.fromString=function e(a){if(typeof a!="string")throw new TypeError("Expected a string");return new URI(a)};URI.fromObject=function e(a){return new URI(a)};URI.isValid=function(e,a){try{new URI(e,a)}catch{return!1}return!0};URI.parse=function(e){var a=URL$1.parse(e,!0);if(a.protocol!=="bitcoin:")throw new TypeError("Invalid bitcoin URI");var t=/[^:]*:\/?\/?([^?]*)/.exec(e);return a.query.address=t&&t[1]||void 0,a.query};URI.Members=["address","amount","message","label","r"];URI.prototype._fromObject=function(e){if(!Address.isValid(e.address))throw new TypeError("Invalid bitcoin address");this.address=new Address(e.address),this.network=this.address.network,this.amount=e.amount;for(var a in e)if(!(a==="address"||a==="amount")){if(/^req-/.exec(a)&&this.knownParams.indexOf(a)===-1)throw Error("Unknown required argument "+a);var t=URI.Members.indexOf(a)>-1?this:this.extras;t[a]=e[a]}};URI.prototype._parseAmount=function(e){if(e=Number(e),isNaN(e))throw new TypeError("Invalid amount");return Unit.fromBTC(e).toSatoshis()};URI.prototype.toObject=URI.prototype.toJSON=function e(){for(var a={},t=0;t<URI.Members.length;t++){var c=URI.Members[t];this.hasOwnProperty(c)&&typeof this[c]<"u"&&(a[c]=this[c].toString())}return _$1.extend(a,this.extras),a};URI.prototype.toString=function(){var e={};return this.amount&&(e.amount=Unit.fromSatoshis(this.amount).toBTC()),this.message&&(e.message=this.message),this.label&&(e.label=this.label),this.r&&(e.r=this.r),_$1.extend(e,this.extras),URL$1.format({protocol:"bitcoin:",host:this.address,query:e})};URI.prototype.inspect=function(){return"<URI: "+this.toString()+">"};var uri=URI;(function(e){var a=e.exports;a.version="v"+require$$0$6.version,a.versionGuard=function(t){if(t!==void 0){var c="More than one instance of bitcore-lib found. Please make sure to require bitcore-lib and check that submodules do not also include their own bitcore-lib dependency.";throw new Error(c)}},a.versionGuard(commonjsGlobal._bitcore),commonjsGlobal._bitcore=a.version,a.crypto={},a.crypto.BN=bn,a.crypto.ECDSA=requireEcdsa(),a.crypto.Hash=hashExports,a.crypto.Random=random,a.crypto.Point=point$1,a.crypto.Signature=signature$2,a.encoding={},a.encoding.Base58=base58,a.encoding.Base58Check=base58check,a.encoding.BufferReader=bufferreader,a.encoding.BufferWriter=bufferwriter,a.encoding.Varint=varint,a.util={},a.util.buffer=bufferExports,a.util.js=js,a.util.preconditions=preconditions,a.errors=errorsExports,a.Address=requireAddress(),a.Block=blockExports,a.MerkleBlock=merkleblock,a.BlockHeader=blockheader,a.HDPrivateKey=requireHdprivatekey(),a.HDPublicKey=requireHdpublickey(),a.Message=message,a.Networks=networks_1,a.Opcode=opcode,a.PrivateKey=requirePrivatekey(),a.PublicKey=requirePublickey(),a.Script=requireScript(),a.Transaction=requireTransaction(),a.URI=uri,a.Unit=unit,a.deps={},a.deps.bnjs=bnExports$2,a.deps.bs58=bs58$1,a.deps.Buffer=buffer$2.Buffer,a.deps.elliptic=requireElliptic(),a.deps._=lodashExports,a.Transaction.sighash=requireSighash()})(bitcoreLib);const bitcore$1=bitcoreLibExports;var src$1={},ecpair={},networks$1={};Object.defineProperty(networks$1,"__esModule",{value:!0});networks$1.testnet=networks$1.bitcoin=void 0;networks$1.bitcoin={messagePrefix:`Bitcoin Signed Message:
`,bech32:"bc",bip32:{public:76067358,private:76066276},pubKeyHash:0,scriptHash:5,wif:128};networks$1.testnet={messagePrefix:`Bitcoin Signed Message:
`,bech32:"tb",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239};var types$2={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.maybe=e.Boolean=e.Array=e.Buffer256bit=e.Network=e.typeforce=void 0,e.typeforce=typeforce_1,e.Network=e.typeforce.compile({messagePrefix:e.typeforce.oneOf(e.typeforce.Buffer,e.typeforce.String),bip32:{public:e.typeforce.UInt32,private:e.typeforce.UInt32},pubKeyHash:e.typeforce.UInt8,scriptHash:e.typeforce.UInt8,wif:e.typeforce.UInt8}),e.Buffer256bit=e.typeforce.BufferN(32),e.Array=e.typeforce.Array,e.Boolean=e.typeforce.Boolean,e.maybe=e.typeforce.maybe})(types$2);var bs58check=bs58check$4;function decodeRaw(e,a){if(a!==void 0&&e[0]!==a)throw new Error("Invalid network version");if(e.length===33)return{version:e[0],privateKey:e.slice(1,33),compressed:!1};if(e.length!==34)throw new Error("Invalid WIF length");if(e[33]!==1)throw new Error("Invalid compression flag");return{version:e[0],privateKey:e.slice(1,33),compressed:!0}}function encodeRaw(e,a,t){var c=new buffer$2.Buffer(t?34:33);return c.writeUInt8(e,0),a.copy(c,1),t&&(c[33]=1),c}function decode$1(e,a){return decodeRaw(bs58check.decode(e),a)}function encode$1(e,a,t){return typeof e=="number"?bs58check.encode(encodeRaw(e,a,t)):bs58check.encode(encodeRaw(e.version,e.privateKey,e.compressed))}var wif$1={decode:decode$1,decodeRaw,encode:encode$1,encodeRaw},testecc={};Object.defineProperty(testecc,"__esModule",{value:!0});testecc.testEcc=void 0;const h=e=>buffer$2.Buffer.from(e,"hex");function testEcc(e){assert$1(e.isPoint(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),assert$1(!e.isPoint(h("030000000000000000000000000000000000000000000000000000000000000005"))),assert$1(e.isPrivate(h("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),assert$1(e.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))),assert$1(!e.isPrivate(h("0000000000000000000000000000000000000000000000000000000000000000"))),assert$1(!e.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"))),assert$1(!e.isPrivate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364142"))),assert$1(buffer$2.Buffer.from(e.privateAdd(h("0000000000000000000000000000000000000000000000000000000000000001"),h("0000000000000000000000000000000000000000000000000000000000000000"))).equals(h("0000000000000000000000000000000000000000000000000000000000000001"))),assert$1(e.privateAdd(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"),h("0000000000000000000000000000000000000000000000000000000000000003"))===null),assert$1(buffer$2.Buffer.from(e.privateAdd(h("e211078564db65c3ce7704f08262b1f38f1ef412ad15b5ac2d76657a63b2c500"),h("b51fbb69051255d1becbd683de5848242a89c229348dd72896a87ada94ae8665"))).equals(h("9730c2ee69edbb958d42db7460bafa18fef9d955325aec99044c81c8282b0a24"))),assert$1(buffer$2.Buffer.from(e.privateNegate(h("0000000000000000000000000000000000000000000000000000000000000001"))).equals(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))),assert$1(buffer$2.Buffer.from(e.privateNegate(h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036413e"))).equals(h("0000000000000000000000000000000000000000000000000000000000000003"))),assert$1(buffer$2.Buffer.from(e.privateNegate(h("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h("4eede1bf775995d70a494f0a7bb6bc11e0b8cccd41cce8009ab1132c8b0a3792"))),assert$1(buffer$2.Buffer.from(e.pointCompress(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"),!0)).equals(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),assert$1(buffer$2.Buffer.from(e.pointCompress(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"),!1)).equals(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"))),assert$1(buffer$2.Buffer.from(e.pointCompress(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),!0)).equals(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),assert$1(buffer$2.Buffer.from(e.pointCompress(h("0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),!1)).equals(h("0479be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8"))),assert$1(buffer$2.Buffer.from(e.pointFromScalar(h("b1121e4088a66a28f5b6b0f5844943ecd9f610196d7bb83b25214b60452c09af"))).equals(h("02b07ba9dca9523b7ef4bd97703d43d20399eb698e194704791a25ce77a400df99"))),assert$1(e.xOnlyPointAddTweak(h("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))===null);let a=e.xOnlyPointAddTweak(h("1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b"),h("a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac"));assert$1(buffer$2.Buffer.from(a.xOnlyPubkey).equals(h("e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf"))&&a.parity===1),a=e.xOnlyPointAddTweak(h("2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991"),h("823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47")),assert$1(buffer$2.Buffer.from(a.xOnlyPubkey).equals(h("9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c"))&&a.parity===0),assert$1(buffer$2.Buffer.from(e.sign(h("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"),h("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140"))).equals(h("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))),assert$1(e.verify(h("5e9f0a0d593efdcf78ac923bc3313e4e7d408d574354ee2b3288c0da9fbba6ed"),h("0379be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"),h("54c4a33c6423d689378f160a7ff8b61330444abb58fb470f96ea16d99d4a2fed07082304410efa6b2943111b6a4e0aaa7b7db55a07e9861d1fb3cb1f421044a5"))),e.signSchnorr&&assert$1(buffer$2.Buffer.from(e.signSchnorr(h("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"),h("c90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b14e5c9"),h("c87aa53824b4d7ae2eb035a2b5bbbccc080e76cdc6d1692c4b0b62d798e6d906"))).equals(h("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7"))),e.verifySchnorr&&assert$1(e.verifySchnorr(h("7e2d58d8b3bcdf1abadec7829054f90dda9805aab56c77333024b9d0a508b75c"),h("dd308afec5777e13121fa72b9cc1b7cc0139715309b086c960e18fd969774eb8"),h("5831aaeed7b44bb74e5eab94ba9d4294c49bcf2a60728d8b4c200f50dd313c1bab745879a5ad954a72c45a91c3a51d3c7adea98d82f8481e0e1e03674a6f3fb7")))}testecc.testEcc=testEcc;function assert$1(e){if(!e)throw new Error("ecc library invalid")}Object.defineProperty(ecpair,"__esModule",{value:!0});ecpair.ECPairFactory=ecpair.networks=void 0;const networks=networks$1;ecpair.networks=networks;const types$1=types$2,randomBytes=requireBrowser(),wif=wif$1,testecc_1=testecc,isOptions=types$1.typeforce.maybe(types$1.typeforce.compile({compressed:types$1.maybe(types$1.Boolean),network:types$1.maybe(types$1.Network)})),toXOnly$2=e=>e.length===32?e:e.slice(1,33);function ECPairFactory$1(e){(0,testecc_1.testEcc)(e);function a(u){return e.isPoint(u)}function t(u,l){if(types$1.typeforce(types$1.Buffer256bit,u),!e.isPrivate(u))throw new TypeError("Private key not in range [1, n)");return types$1.typeforce(isOptions,l),new b(u,void 0,l)}function c(u,l){return types$1.typeforce(e.isPoint,u),types$1.typeforce(isOptions,l),new b(void 0,u,l)}function i(u,l){const x=wif.decode(u),g=x.version;if(types$1.Array(l)){if(l=l.filter(v=>g===v.wif).pop(),!l)throw new Error("Unknown network version")}else if(l=l||networks.bitcoin,g!==l.wif)throw new Error("Invalid network version");return t(x.privateKey,{compressed:x.compressed,network:l})}function o(u){types$1.typeforce(isOptions,u),u===void 0&&(u={});const l=u.rng||randomBytes;let x;do x=l(32),types$1.typeforce(types$1.Buffer256bit,x);while(!e.isPrivate(x));return t(x,u)}class b{__D;__Q;compressed;network;lowR;constructor(l,x,g){this.__D=l,this.__Q=x,this.lowR=!1,g===void 0&&(g={}),this.compressed=g.compressed===void 0?!0:g.compressed,this.network=g.network||networks.bitcoin,x!==void 0&&(this.__Q=buffer$2.Buffer.from(e.pointCompress(x,this.compressed)))}get privateKey(){return this.__D}get publicKey(){if(!this.__Q){const l=e.pointFromScalar(this.__D,this.compressed);this.__Q=buffer$2.Buffer.from(l)}return this.__Q}toWIF(){if(!this.__D)throw new Error("Missing private key");return wif.encode(this.network.wif,this.__D,this.compressed)}tweak(l){return this.privateKey?this.tweakFromPrivateKey(l):this.tweakFromPublicKey(l)}sign(l,x){if(!this.__D)throw new Error("Missing private key");if(x===void 0&&(x=this.lowR),x===!1)return buffer$2.Buffer.from(e.sign(l,this.__D));{let g=e.sign(l,this.__D);const v=buffer$2.Buffer.alloc(32,0);let E=0;for(;g[0]>127;)E++,v.writeUIntLE(E,0,6),g=e.sign(l,this.__D,v);return buffer$2.Buffer.from(g)}}signSchnorr(l){if(!this.privateKey)throw new Error("Missing private key");if(!e.signSchnorr)throw new Error("signSchnorr not supported by ecc library");return buffer$2.Buffer.from(e.signSchnorr(l,this.privateKey))}verify(l,x){return e.verify(l,this.publicKey,x)}verifySchnorr(l,x){if(!e.verifySchnorr)throw new Error("verifySchnorr not supported by ecc library");return e.verifySchnorr(l,this.publicKey.subarray(1,33),x)}tweakFromPublicKey(l){const x=toXOnly$2(this.publicKey),g=e.xOnlyPointAddTweak(x,l);if(!g||g.xOnlyPubkey===null)throw new Error("Cannot tweak public key!");const v=buffer$2.Buffer.from([g.parity===0?2:3]);return c(buffer$2.Buffer.concat([v,g.xOnlyPubkey]),{network:this.network,compressed:this.compressed})}tweakFromPrivateKey(l){const g=this.publicKey[0]===3||this.publicKey[0]===4&&(this.publicKey[64]&1)===1?e.privateNegate(this.privateKey):this.privateKey,v=e.privateAdd(g,l);if(!v)throw new Error("Invalid tweaked private key!");return t(buffer$2.Buffer.from(v),{network:this.network,compressed:this.compressed})}}return{isPoint:a,fromPrivateKey:t,fromPublicKey:c,fromWIF:i,makeRandom:o}}ecpair.ECPairFactory=ECPairFactory$1;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.networks=e.ECPairFactory=e.default=void 0;var a=ecpair;Object.defineProperty(e,"default",{enumerable:!0,get:function(){return a.ECPairFactory}}),Object.defineProperty(e,"ECPairFactory",{enumerable:!0,get:function(){return a.ECPairFactory}}),Object.defineProperty(e,"networks",{enumerable:!0,get:function(){return a.networks}})})(src$1);const ECPairFactory=getDefaultExportFromCjs(src$1);src$4.initEccLib(ecc);var ECPair$3=ECPairFactory(ecc),type$1="Simple Key Pair",toXOnly$1=function e(a){return a.length===32?a:a.slice(1,33)};function tapTweakHash$1(e,a){return src$4.crypto.taggedHash("TapTweak",buffer$2.Buffer.concat(a?[e,a]:[e]))}function tweakSigner$1(e,a){a===void 0&&(a={});var t=e.privateKey;if(!t)throw new Error("Private key is required for tweaking signer!");e.publicKey[0]===3&&(t=privateNegate_1(t));var c=privateAdd_1(t,tapTweakHash$1(toXOnly$1(e.publicKey),a.tweakHash));if(!c)throw new Error("Invalid tweaked private key!");return ECPair$3.fromPrivateKey(buffer$2.Buffer.from(c),{network:a.network})}var SimpleKeyring=function(e){_inheritsLoose(a,e);function a(c){var i;return i=e.call(this)||this,i.type=type$1,i.network=src$4.networks.bitcoin,i.wallets=[],c&&i.deserialize(c),i}var t=a.prototype;return t.serialize=function(){var c=_asyncToGenerator(regenerator.mark(function o(){return regenerator.wrap(function(u){for(;;)switch(u.prev=u.next){case 0:return u.abrupt("return",this.wallets.map(function(l){return l.privateKey.toString("hex")}));case 1:case"end":return u.stop()}},o,this)}));function i(){return c.apply(this,arguments)}return i}(),t.deserialize=function(){var c=_asyncToGenerator(regenerator.mark(function o(b){var u;return regenerator.wrap(function(x){for(;;)switch(x.prev=x.next){case 0:u=b,this.wallets=u.map(function(g){var v;return g.length===64?v=buffer$2.Buffer.from(g,"hex"):v=bs58check$4.decode(g).slice(1,33),ECPair$3.fromPrivateKey(v)});case 2:case"end":return x.stop()}},o,this)}));function i(o){return c.apply(this,arguments)}return i}(),t.addAccounts=function(){var c=_asyncToGenerator(regenerator.mark(function o(b){var u,l,x;return regenerator.wrap(function(v){for(;;)switch(v.prev=v.next){case 0:for(b===void 0&&(b=1),u=[],l=0;l<b;l++)u.push(ECPair$3.makeRandom());return this.wallets=this.wallets.concat(u),x=u.map(function(E){var S=E.publicKey;return S.toString("hex")}),v.abrupt("return",x);case 6:case"end":return v.stop()}},o,this)}));function i(o){return c.apply(this,arguments)}return i}(),t.getAccounts=function(){var c=_asyncToGenerator(regenerator.mark(function o(){return regenerator.wrap(function(u){for(;;)switch(u.prev=u.next){case 0:return u.abrupt("return",this.wallets.map(function(l){var x=l.publicKey;return x.toString("hex")}));case 1:case"end":return u.stop()}},o,this)}));function i(){return c.apply(this,arguments)}return i}(),t.signTransaction=function(){var c=_asyncToGenerator(regenerator.mark(function o(b,u,l){var x=this;return regenerator.wrap(function(v){for(;;)switch(v.prev=v.next){case 0:return u.forEach(function(E){var S=x._getPrivateKeyFor(E.publicKey);if(isTaprootInput_1(b.data.inputs[E.index])){var T=tweakSigner$1(S,l);b.signInput(E.index,T,E.sighashTypes)}else{var I=S;b.signInput(E.index,I,E.sighashTypes)}}),v.abrupt("return",b);case 2:case"end":return v.stop()}},o)}));function i(o,b,u){return c.apply(this,arguments)}return i}(),t.signMessage=function(){var c=_asyncToGenerator(regenerator.mark(function o(b,u){var l,x;return regenerator.wrap(function(v){for(;;)switch(v.prev=v.next){case 0:return l=this._getPrivateKeyFor(b),x=new bitcore$1.Message(u),v.abrupt("return",x.sign(new bitcore$1.PrivateKey(l.privateKey)));case 3:case"end":return v.stop()}},o,this)}));function i(o,b){return c.apply(this,arguments)}return i}(),t.verifyMessage=function(){var c=_asyncToGenerator(regenerator.mark(function o(b,u,l){var x,g,v,E,S,T;return regenerator.wrap(function(A){for(;;)switch(A.prev=A.next){case 0:if(x=new bitcore$1.Message(u),g=bitcore$1.crypto.Signature.fromCompact(buffer$2.Buffer.from(l,"base64")),v=x.magicHash(),E=new bitcore$1.crypto.ECDSA,E.hashbuf=v,E.sig=g,S=E.toPublicKey(),T=new bitcore$1.PublicKey(Object.assign({},S.toObject(),{compressed:!0})).toString(),T==b){A.next=10;break}return A.abrupt("return",!1);case 10:return A.abrupt("return",bitcore$1.crypto.ECDSA.verify(v,g,S));case 11:case"end":return A.stop()}},o)}));function i(o,b,u){return c.apply(this,arguments)}return i}(),t._getPrivateKeyFor=function(i){if(!i)throw new Error("Must specify publicKey.");var o=this._getWalletForAccount(i);return o},t.exportAccount=function(){var c=_asyncToGenerator(regenerator.mark(function o(b){var u;return regenerator.wrap(function(x){for(;;)switch(x.prev=x.next){case 0:return u=this._getWalletForAccount(b),x.abrupt("return",u.privateKey.toString("hex"));case 2:case"end":return x.stop()}},o,this)}));function i(o){return c.apply(this,arguments)}return i}(),t.removeAccount=function(i){if(!this.wallets.map(function(o){return o.publicKey.toString("hex")}).includes(i))throw new Error("PublicKey "+i+" not found in this keyring");this.wallets=this.wallets.filter(function(o){return o.publicKey.toString("hex")!==i})},t._getWalletForAccount=function(i){var o=this.wallets.find(function(b){return b.publicKey.toString("hex")==i});if(!o)throw new Error("Simple Keyring - Unable to find matching publicKey.");return o},a}(eventsExports.EventEmitter);SimpleKeyring.type=type$1;var bitcoreMnemonicExports={},bitcoreMnemonic={get exports(){return bitcoreMnemonicExports},set exports(e){bitcoreMnemonicExports=e}},unormExports={},unorm$1={get exports(){return unormExports},set exports(e){unormExports=e}};(function(e){(function(a){for(var t=[null,0,{}],c=10,i=44032,o=4352,b=4449,u=4519,l=19,x=21,g=28,v=x*g,E=l*v,S=function(X,F){this.codepoint=X,this.feature=F},T={},I=[],A=0;A<=255;++A)I[A]=0;function C(X,F,Z){var J=T[F];return J||(J=X(F,Z),J.feature&&++I[F>>8&255]>c&&(T[F]=J)),J}function O(X,F,Z){var J=F&65280,ce=S.udata[J]||{},re=ce[F];return re?new S(F,re):new S(F,t)}function R(X,F,Z){return Z?X(F,Z):new S(F,null)}function B(X,F,Z){var J;if(F<o||o+l<=F&&F<i||i+E<F)return X(F,Z);if(o<=F&&F<o+l){var ce={},re=(F-o)*x;for(J=0;J<x;++J)ce[b+J]=i+g*(J+re);return new S(F,[,,ce])}var ie=F-i,fe=ie%g,pe=[];if(fe!==0)pe[0]=[i+ie-fe,u+fe];else for(pe[0]=[o+Math.floor(ie/v),b+Math.floor(ie%v/g)],pe[2]={},J=1;J<g;++J)pe[2][u+J]=F+J;return new S(F,pe)}function M(X,F,Z){return F<60||13311<F&&F<42607?new S(F,t):X(F,Z)}var L=[M,C,R,B,O];S.fromCharCode=L.reduceRight(function(X,F){return function(Z,J){return F(X,Z,J)}},null),S.isHighSurrogate=function(X){return X>=55296&&X<=56319},S.isLowSurrogate=function(X){return X>=56320&&X<=57343},S.prototype.prepFeature=function(){this.feature||(this.feature=S.fromCharCode(this.codepoint,!0).feature)},S.prototype.toString=function(){if(this.codepoint<65536)return String.fromCharCode(this.codepoint);var X=this.codepoint-65536;return String.fromCharCode(Math.floor(X/1024)+55296,X%1024+56320)},S.prototype.getDecomp=function(){return this.prepFeature(),this.feature[0]||null},S.prototype.isCompatibility=function(){return this.prepFeature(),!!this.feature[1]&&this.feature[1]&1<<8},S.prototype.isExclude=function(){return this.prepFeature(),!!this.feature[1]&&this.feature[1]&1<<9},S.prototype.getCanonicalClass=function(){return this.prepFeature(),this.feature[1]?this.feature[1]&255:0},S.prototype.getComposite=function(X){if(this.prepFeature(),!this.feature[2])return null;var F=this.feature[2][X.codepoint];return F?S.fromCharCode(F):null};var ee=function(X){this.str=X,this.cursor=0};ee.prototype.next=function(){if(this.str&&this.cursor<this.str.length){var X=this.str.charCodeAt(this.cursor++),F;return S.isHighSurrogate(X)&&this.cursor<this.str.length&&S.isLowSurrogate(F=this.str.charCodeAt(this.cursor))&&(X=(X-55296)*1024+(F-56320)+65536,++this.cursor),S.fromCharCode(X)}else return this.str=null,null};var z=function(X,F){this.it=X,this.canonical=F,this.resBuf=[]};z.prototype.next=function(){function X(Z,J){var ce=J.getDecomp();if(ce&&!(Z&&J.isCompatibility())){for(var re=[],ie=0;ie<ce.length;++ie){var fe=X(Z,S.fromCharCode(ce[ie]));re=re.concat(fe)}return re}else return[J]}if(this.resBuf.length===0){var F=this.it.next();if(!F)return null;this.resBuf=X(this.canonical,F)}return this.resBuf.shift()};var oe=function(X){this.it=X,this.resBuf=[]};oe.prototype.next=function(){var X;if(this.resBuf.length===0)do{var F=this.it.next();if(!F)break;X=F.getCanonicalClass();var Z=this.resBuf.length;if(X!==0)for(;Z>0;--Z){var J=this.resBuf[Z-1],ce=J.getCanonicalClass();if(ce<=X)break}this.resBuf.splice(Z,0,F)}while(X!==0);return this.resBuf.shift()};var W=function(X){this.it=X,this.procBuf=[],this.resBuf=[],this.lastClass=null};W.prototype.next=function(){for(;this.resBuf.length===0;){var X=this.it.next();if(!X){this.resBuf=this.procBuf,this.procBuf=[];break}if(this.procBuf.length===0)this.lastClass=X.getCanonicalClass(),this.procBuf.push(X);else{var F=this.procBuf[0],Z=F.getComposite(X),J=X.getCanonicalClass();Z&&(this.lastClass<J||this.lastClass===0)?this.procBuf[0]=Z:(J===0&&(this.resBuf=this.procBuf,this.procBuf=[]),this.lastClass=J,this.procBuf.push(X))}}return this.resBuf.shift()};var P=function(X,F){switch(X){case"NFD":return new oe(new z(new ee(F),!0));case"NFKD":return new oe(new z(new ee(F),!1));case"NFC":return new W(new oe(new z(new ee(F),!0)));case"NFKC":return new W(new oe(new z(new ee(F),!1)))}throw X+" is invalid"},D=function(X,F){for(var Z=P(X,F),J="",ce;ce=Z.next();)J+=ce.toString();return J};function q(X){return D("NFD",X)}function Y(X){return D("NFKD",X)}function U(X){return D("NFC",X)}function j(X){return D("NFKC",X)}S.udata={0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8e3,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},5632:{71231:[,9],71350:[,9],71351:[,7]},5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},6144:{6313:[,228]},6400:{6457:[,222],6458:[,230],6459:[,220]},6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8e3:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13e3:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},42752:{42864:[[42863],256],43e3:[[294],256],43001:[[339],256]},43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},48128:{113822:[,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[,230],119363:[,230],119364:[,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],12e4:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195e3:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64e3:{64e3:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}};var Q={nfc:U,nfd:q,nfkc:j,nfkd:Y};e.exports=Q,Q.shimApplied=!1,String.prototype.normalize||(Object.defineProperty(String.prototype,"normalize",{enumerable:!1,configurable:!0,writable:!0,value:function(){var F=""+this,Z=arguments[0]===void 0?"NFC":arguments[0];if(this===null||this===void 0)throw new TypeError("Cannot call method on "+Object.prototype.toString.call(this));if(Z==="NFC")return Q.nfc(F);if(Z==="NFD")return Q.nfd(F);if(Z==="NFKC")return Q.nfkc(F);if(Z==="NFKD")return Q.nfkd(F);throw new RangeError("Invalid normalization form: "+Z)}}),Q.shimApplied=!0)})()})(unorm$1);var crypto$1=requireCryptoBrowserify();function pbkdf2$1(e,a,t,c){var i=64;if(c>(Math.pow(2,32)-1)*i)throw Error("Requested key length too long");if(typeof e!="string"&&!buffer$2.Buffer.isBuffer(e))throw new TypeError("key must a string or Buffer");if(typeof a!="string"&&!buffer$2.Buffer.isBuffer(a))throw new TypeError("salt must a string or Buffer");typeof e=="string"&&(e=buffer$2.Buffer.from(e)),typeof a=="string"&&(a=buffer$2.Buffer.from(a));var o=buffer$2.Buffer.alloc(c),b=buffer$2.Buffer.alloc(i),u=buffer$2.Buffer.alloc(i),l=buffer$2.Buffer.alloc(a.length+4),x=Math.ceil(c/i),g=c-(x-1)*i;a.copy(l,0,0,a.length);for(var v=1;v<=x;v++){l[a.length+0]=v>>24&255,l[a.length+1]=v>>16&255,l[a.length+2]=v>>8&255,l[a.length+3]=v>>0&255,b=crypto$1.createHmac("sha512",e).update(l).digest(),b.copy(u,0,0,i);for(var E=1;E<t;E++){b=crypto$1.createHmac("sha512",e).update(b).digest();for(var S=0;S<i;S++)u[S]^=b[S]}var T=(v-1)*i,I=v===x?g:i;u.copy(o,T,0,I)}return o}var pbkdf2_1$1=pbkdf2$1,spec={name:"Mnemonic",message:"Internal Error on bitcore-mnemonic module {0}",errors:[{name:"InvalidEntropy",message:"Entropy length must be an even multiple of 11 bits: {0}"},{name:"UnknownWordlist",message:"Could not detect the used word list: {0}"},{name:"InvalidMnemonic",message:"Mnemonic string is invalid: {0}"}]},errors$1=bitcoreLibExports.errors.extend(spec),chinese_1,hasRequiredChinese;function requireChinese(){if(hasRequiredChinese)return chinese_1;hasRequiredChinese=1;var e=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"];return chinese_1=e,chinese_1}var english_1,hasRequiredEnglish;function requireEnglish(){if(hasRequiredEnglish)return english_1;hasRequiredEnglish=1;var e=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];return english_1=e,english_1}var french_1,hasRequiredFrench;function requireFrench(){if(hasRequiredFrench)return french_1;hasRequiredFrench=1;var e=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"];return french_1=e,french_1}var italian_1,hasRequiredItalian;function requireItalian(){if(hasRequiredItalian)return italian_1;hasRequiredItalian=1;var e=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"];return italian_1=e,italian_1}var japanese_1,hasRequiredJapanese;function requireJapanese(){if(hasRequiredJapanese)return japanese_1;hasRequiredJapanese=1;var e=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"];return japanese_1=e,japanese_1}var korean_1,hasRequiredKorean;function requireKorean(){if(hasRequiredKorean)return korean_1;hasRequiredKorean=1;var e=["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"];return korean_1=e,korean_1}var spanish_1,hasRequiredSpanish;function requireSpanish(){if(hasRequiredSpanish)return spanish_1;hasRequiredSpanish=1;var e=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"];return spanish_1=e,spanish_1}var words,hasRequiredWords;function requireWords(){return hasRequiredWords||(hasRequiredWords=1,words={CHINESE:requireChinese(),ENGLISH:requireEnglish(),FRENCH:requireFrench(),ITALIAN:requireItalian(),JAPANESE:requireJapanese(),KOREAN:requireKorean(),SPANISH:requireSpanish()}),words}const bitcore=bitcoreLibExports,BN$2=bitcore.crypto.BN,unorm=unormExports,_=bitcore.deps._,pbkdf2=pbkdf2_1$1,errors=errors$1,Hash=bitcore.crypto.Hash,Random=bitcore.crypto.Random,$=bitcore.util.preconditions;var Mnemonic$1=function(e,a){if(!(this instanceof Mnemonic$1))return new Mnemonic$1(e,a);_.isArray(e)&&(a=e,e=null);var t,c,i;if(buffer$2.Buffer.isBuffer(e))i=e,t=i.length*8;else if(_.isString(e))c=unorm.nfkd(e);else if(_.isNumber(e))t=e;else if(e)throw new bitcore.errors.InvalidArgument("data","Must be a Buffer, a string or an integer");if(t=t||128,a=a||Mnemonic$1._getDictionary(c),c&&!a)throw new errors.UnknownWordlist(c);if(a=a||Mnemonic$1.Words.ENGLISH,i&&(c=Mnemonic$1._entropy2mnemonic(i,a)),c&&!Mnemonic$1.isValid(c,a))throw new errors.InvalidMnemonic(c);if(t%32!==0||t<128||t>256)throw new bitcore.errors.InvalidArgument("ENT","Values must be ENT > 128 and ENT < 256 and ENT % 32 == 0");c=c||Mnemonic$1._mnemonic(t,a),c=unorm.nfkd(c),Object.defineProperty(this,"wordlist",{configurable:!1,value:a}),Object.defineProperty(this,"phrase",{configurable:!1,value:c})};Mnemonic$1.Words=requireWords();Mnemonic$1.isValid=function(e,a){if(e=unorm.nfkd(e),a=a||Mnemonic$1._getDictionary(e),!a)return!1;for(var t=e.split(" "),c="",i=0;i<t.length;i++){var o=a.indexOf(t[i]);if(o<0)return!1;c=c+("00000000000"+o.toString(2)).slice(-11)}var b=c.length/33,u=c.slice(-b),l=c.slice(0,c.length-b),x=buffer$2.Buffer.alloc(l.length/8);for(i=0;i<l.length/8;i++)x.writeUInt8(parseInt(c.slice(i*8,(i+1)*8),2),i);var g=Mnemonic$1._entropyChecksum(x);return g===u};Mnemonic$1._belongsToWordlist=function(e,a){for(var t=unorm.nfkd(e).split(" "),c=0;c<t.length;c++){var i=a.indexOf(t[c]);if(i<0)return!1}return!0};Mnemonic$1._getDictionary=function(e){if(!e)return null;for(var a=Object.keys(Mnemonic$1.Words),t=0;t<a.length;t++){var c=a[t];if(Mnemonic$1._belongsToWordlist(e,Mnemonic$1.Words[c]))return Mnemonic$1.Words[c]}return null};Mnemonic$1.prototype.toSeed=function(e){return e=e||"",pbkdf2(unorm.nfkd(this.phrase),unorm.nfkd("mnemonic"+e),2048,64)};Mnemonic$1.fromSeed=function(e,a){return $.checkArgument(buffer$2.Buffer.isBuffer(e),"seed must be a Buffer."),$.checkArgument(_.isArray(a)||_.isString(a),"wordlist must be a string or an array."),new Mnemonic$1(e,a)};Mnemonic$1.prototype.toHDPrivateKey=function(e,a){var t=this.toSeed(e);return bitcore.HDPrivateKey.fromSeed(t,a)};Mnemonic$1.prototype.toString=function(){return this.phrase};Mnemonic$1.prototype.inspect=function(){return"<Mnemonic: "+this.toString()+" >"};Mnemonic$1._mnemonic=function(e,a){var t=Random.getRandomBuffer(e/8);return Mnemonic$1._entropy2mnemonic(t,a)};Mnemonic$1._entropy2mnemonic=function(e,a){for(var t="",c=0;c<e.length;c++)t=t+("00000000"+e[c].toString(2)).slice(-8);if(t=t+Mnemonic$1._entropyChecksum(e),t.length%11!==0)throw new errors.InvalidEntropy(t);var i=[];for(c=0;c<t.length/11;c++){var o=parseInt(t.slice(c*11,(c+1)*11),2);i.push(a[o])}var b;return a===Mnemonic$1.Words.JAPANESE?b=i.join("　"):b=i.join(" "),b};Mnemonic$1._entropyChecksum=function(e){for(var a=Hash.sha256(e),t=e.length*8,c=t/32,i=new BN$2(a.toString("hex"),16).toString(2);i.length%256!==0;)i="0"+i;var o=i.slice(0,c);return o};Mnemonic$1.bitcore=bitcore;var mnemonic=Mnemonic$1;(function(e){e.exports=mnemonic})(bitcoreMnemonic);const Mnemonic=getDefaultExportFromCjs(bitcoreMnemonicExports);function _createForOfIteratorHelperLoose(e,a){var t=typeof Symbol<"u"&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=_unsupportedIterableToArray(e))||a&&e&&typeof e.length=="number"){t&&(e=t);var c=0;return function(){return c>=e.length?{done:!0}:{done:!1,value:e[c++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(e,a){if(e){if(typeof e=="string")return _arrayLikeToArray(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);if(t==="Object"&&e.constructor&&(t=e.constructor.name),t==="Map"||t==="Set")return Array.from(e);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _arrayLikeToArray(e,a)}}function _arrayLikeToArray(e,a){(a==null||a>e.length)&&(a=e.length);for(var t=0,c=new Array(a);t<a;t++)c[t]=e[t];return c}src$4.initEccLib(ecc);var ECPair$2=ECPairFactory(ecc),hdPathString="m/44'/0'/0'/0",type="HD Key Tree",HdKeyring=function(e){_inheritsLoose(a,e);function a(c){var i;return i=e.call(this,null)||this,i.type=type,i.mnemonic=null,i.network=src$4.networks.bitcoin,i.hdPath=hdPathString,i.root=null,i.wallets=[],i._index2wallet={},i.activeIndexes=[],i.page=0,i.perPage=5,i.deserialize(c),i}var t=a.prototype;return t.serialize=function(){var c=_asyncToGenerator(regenerator.mark(function o(){return regenerator.wrap(function(u){for(;;)switch(u.prev=u.next){case 0:return u.abrupt("return",{mnemonic:this.mnemonic,activeIndexes:this.activeIndexes,hdPath:this.hdPath,passphrase:this.passphrase});case 1:case"end":return u.stop()}},o,this)}));function i(){return c.apply(this,arguments)}return i}(),t.deserialize=function(){var c=_asyncToGenerator(regenerator.mark(function o(b){var u;return regenerator.wrap(function(x){for(;;)switch(x.prev=x.next){case 0:if(b===void 0&&(b={}),!this.root){x.next=3;break}throw new Error("Btc-Hd-Keyring: Secret recovery phrase already provided");case 3:u=b,this.wallets=[],this.mnemonic=null,this.root=null,this.hdPath=u.hdPath||hdPathString,u.passphrase&&(this.passphrase=u.passphrase),u.mnemonic&&this.initFromMnemonic(u.mnemonic),u.activeIndexes&&this.activeAccounts(u.activeIndexes);case 11:case"end":return x.stop()}},o,this)}));function i(o){return c.apply(this,arguments)}return i}(),t.initFromMnemonic=function(i){if(this.root)throw new Error("Btc-Hd-Keyring: Secret recovery phrase already provided");this.mnemonic=i,this._index2wallet={},this.hdWallet=new Mnemonic(i),this.root=this.hdWallet.toHDPrivateKey(this.passphrase,this.network==src$4.networks.bitcoin?"livenet":"testnet").deriveChild(this.hdPath)},t.changeHdPath=function(i){this.hdPath=i,this.root=this.hdWallet.toHDPrivateKey(this.passphrase,this.network==src$4.networks.bitcoin?"livenet":"testnet").deriveChild(this.hdPath);var o=this.activeIndexes;this._index2wallet={},this.activeIndexes=[],this.wallets=[],this.activeAccounts(o)},t.getAccountByHdPath=function(i,o){var b=this.hdWallet.toHDPrivateKey(this.passphrase,this.network==src$4.networks.bitcoin?"livenet":"testnet").deriveChild(i),u=b.deriveChild(o),l=ECPair$2.fromPrivateKey(u.privateKey.toBuffer()),x=l.publicKey.toString("hex");return x},t.addAccounts=function(i){i===void 0&&(i=1),this.root||this.initFromMnemonic(new Mnemonic().toString());for(var o=i,b=0,u=[];o;){var l=this._addressFromIndex(b),x=l[1];this.wallets.includes(x)?b++:(this.wallets.push(x),u.push(x),this.activeIndexes.push(b),o--)}var g=u.map(function(v){return v.publicKey.toString("hex")});return Promise.resolve(g)},t.activeAccounts=function(i){for(var o=[],b=_createForOfIteratorHelperLoose(i),u;!(u=b()).done;){var l=u.value,x=this._addressFromIndex(l),g=x[0],v=x[1];this.wallets.push(v),this.activeIndexes.push(l),o.push(g)}return o},t.getFirstPage=function(){return this.page=0,this.__getPage(1)},t.getNextPage=function(){return this.__getPage(1)},t.getPreviousPage=function(){return this.__getPage(-1)},t.getAddresses=function(i,o){for(var b=i,u=o,l=[],x=b;x<u;x++){var g=this._addressFromIndex(x),v=g[0];l.push({address:v,index:x+1})}return l},t.__getPage=function(){var c=_asyncToGenerator(regenerator.mark(function o(b){var u,l,x,g,v,E;return regenerator.wrap(function(T){for(;;)switch(T.prev=T.next){case 0:for(this.page+=b,(!this.page||this.page<=0)&&(this.page=1),u=(this.page-1)*this.perPage,l=u+this.perPage,x=[],g=u;g<l;g++)v=this._addressFromIndex(g),E=v[0],x.push({address:E,index:g+1});return T.abrupt("return",x);case 7:case"end":return T.stop()}},o,this)}));function i(o){return c.apply(this,arguments)}return i}(),t.getAccounts=function(){var c=_asyncToGenerator(regenerator.mark(function o(){return regenerator.wrap(function(u){for(;;)switch(u.prev=u.next){case 0:return u.abrupt("return",this.wallets.map(function(l){return l.publicKey.toString("hex")}));case 1:case"end":return u.stop()}},o,this)}));function i(){return c.apply(this,arguments)}return i}(),t.getIndexByAddress=function(i){for(var o in this._index2wallet)if(this._index2wallet[o][0]===i)return Number(o);return null},t._addressFromIndex=function(i){if(!this._index2wallet[i]){var o=this.root.deriveChild(i),b=ECPair$2.fromPrivateKey(o.privateKey.toBuffer()),u=b.publicKey.toString("hex");this._index2wallet[i]=[u,b]}return this._index2wallet[i]},a}(SimpleKeyring);HdKeyring.type=type;function lowerCase(e){return e.toLowerCase()}var DEFAULT_SPLIT_REGEXP=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],DEFAULT_STRIP_REGEXP=/[^A-Z0-9]+/gi;function noCase(e,a){a===void 0&&(a={});for(var t=a.splitRegexp,c=t===void 0?DEFAULT_SPLIT_REGEXP:t,i=a.stripRegexp,o=i===void 0?DEFAULT_STRIP_REGEXP:i,b=a.transform,u=b===void 0?lowerCase:b,l=a.delimiter,x=l===void 0?" ":l,g=replace(replace(e,c,"$1\0$2"),o,"\0"),v=0,E=g.length;g.charAt(v)==="\0";)v++;for(;g.charAt(E-1)==="\0";)E--;return g.slice(v,E).split("\0").map(u).join(x)}function replace(e,a,t){return a instanceof RegExp?e.replace(a,t):a.reduce(function(c,i){return c.replace(i,t)},e)}function upperCaseFirst(e){return e.charAt(0).toUpperCase()+e.substr(1)}function capitalCaseTransform(e){return upperCaseFirst(e.toLowerCase())}function capitalCase(e,a){return a===void 0&&(a={}),noCase(e,__assign$3({delimiter:" ",transform:capitalCaseTransform},a))}const BRC20MainnetUnisatApi={async getAddressBrc20TokenBalances({address:e}){const a="/unisat-brc20-v1/indexer/address/"+e+"/brc20/summary";return(await request$5(a)).data.detail.map(c=>({ticker:c.ticker,overallBalance:bignumber(c.overallBalance),transferableBalance:bignumber(c.transferableBalance),availableBalance:bignumber(c.availableBalance)}))},async getAddressBrc20TokenTransferableInscriptions({address:e,ticker:a}){const t="/unisat-brc20-v1/indexer/address/"+e+"/brc20/"+a+"/transferable-inscriptions";return(await request$5(t)).data.detail.map(i=>({inscriptionId:i.inscriptionId,inscriptionNumber:i.inscriptionNumber,brc20:{op:i.data.op,tick:i.data.tick,amt:i.data.amt,lim:i.data.lim,dec:i.data.decimal}}))},async getAddressInscriptionUtxos({address:e}){const a="/unisat-brc20-v1/indexer/address/"+e+"/inscription-utxo-data",t=[];let c=0;const i=500;let o=i;for(;c<o;){const b=await request$5(a,{params:{cursor:c,size:i}});o=b.data.total,t.push(...b.data.utxo),c+=i}return t.map(b=>({txId:b.txid,outputIndex:b.vout,value:b.satoshi,scriptPk:b.scriptPk,inscriptions:b.inscriptions.map(u=>({inscriptionId:u.inscriptionId,inscriptionNumber:u.inscriptionNumber,offset:u.offset}))}))},async getInscriptionUtxo({inscriptionId:e}){const a="/unisat-brc20-v1/indexer/inscription/info/"+e,t=await request$5(a);return{txId:t.data.utxo.txid,outputIndex:t.data.utxo.vout,value:t.data.utxo.satoshi,scriptPk:t.data.utxo.scriptPk,inscriptions:t.data.utxo.inscriptions.map(c=>({inscriptionId:c.inscriptionId,inscriptionNumber:c.inscriptionNumber,offset:c.offset}))}},async getTokenInfo({ticker:e}){const a=`/unisat-brc20-v1/indexer/brc20/${e}/info`;return(await request$5(a)).data}},apiUrl$1="https://unisat.io/testnet/api",request$3=extend$1({timeout:6e4,headers:{"X-Client":"UniSat Wallet","X-Version":"1.1.19"}}),BRC20TestnetUnisatApi={async getAddressBrc20TokenBalances({address:e}){const a=apiUrl$1+"/v3/brc20/tokens",t=[];let c=0;const i=500;let o=i;for(;c<o;){const b=await request$3(a,{params:{address:e,cursor:c,size:i}});o=b.data.result.total,t.push(...b.data.result.list),c+=i}return t.map(b=>({ticker:b.ticker,overallBalance:bignumber(b.overallBalance),transferableBalance:bignumber(b.transferableBalance),availableBalance:bignumber(b.availableBalance)}))},async getAddressBrc20TokenTransferableInscriptions({address:e,ticker:a}){const t=apiUrl$1+"/v3/brc20/transferable-list";return(await request$3(t,{params:{address:e,ticker:a,cursor:0,size:100}})).data.result.list.map(i=>({inscriptionId:i.inscriptionId,inscriptionNumber:i.inscriptionNumber,brc20:{op:"transfer",tick:i.ticker,amt:i.amount}}))},async getAddressInscriptionUtxos({address:e}){const a=apiUrl$1+"/v3/address/inscriptions",t=[];let c=0;const i=500;let o=i;for(;c<o;){const u=await request$3(a,{params:{address:e,cursor:c,size:i}});o=u.data.result.total,t.push(...u.data.result.list),c+=i}const b=[];return t.forEach(u=>{const[l,x]=u.output.split(":"),g=Number(x);b.find(v=>v.txId==l&&v.outputIndex==g)?b.find(v=>v.txId==l&&v.outputIndex==g)?.inscriptions.push({inscriptionId:u.inscriptionId,inscriptionNumber:u.inscriptionNumber,offset:u.offset}):b.push({txId:l,outputIndex:g,value:u.outputValue,inscriptions:[{inscriptionId:u.inscriptionId,inscriptionNumber:u.inscriptionNumber,offset:u.offset}]})}),b},async getInscriptionUtxo({inscriptionId:e}){const a=apiUrl$1+"/v3/inscription/utxo",t=await request$3(a,{params:{inscriptionId:e},isCloseHumpToUnderline:!0});return{txId:t.data.result.txId,outputIndex:t.data.result.outputIndex,value:t.data.result.satoshis,scriptPk:t.data.result.scriptPk,inscriptions:t.data.result.inscriptions.map(c=>({inscriptionId:c.id,inscriptionNumber:c.num,offset:c.offset}))}},async getTokenInfo({ticker:e}){return{ticker:e,inscriptionNumber:348020,inscriptionId:"b61b0172d95e266c18aea0c624db987e971a5d6d4ebc2aaed85da4642d635735i0",max:"21000000",limit:"1000",decimal:18,txid:"b61b0172d95e266c18aea0c624db987e971a5d6d4ebc2aaed85da4642d635735"}}},BtcMainnetNCWApi={async getAddressBalance({address:e}){return(await request$5("/extension/various-chain-api/v1/account",{params:{account_address:e,chain:"btc-segwit"}})).data.balance},async getAddressUtxos({address:e}){const a="/extension/various-chain-api/v1/account",t=[];let c=1;const i=500;let o=i;for(;i*(c-1)<o;){const u=await request$5(a,{params:{account_address:e,chain:"btc-segwit",page_index:c,page_size:i}});o=u.data.unspentOutputCount,t.push(...u.data.utxo??[]),c++}return Object.values(t).map(u=>({txId:u.transactionHash,outputIndex:u.outputIndex??0,value:amountBtcToSatoshi(u.value)}))},async getFeeSummary(){return(await request$5("/extension/ncw-api/api/sdk/get_fees",{params:{currency:"btc"}})).data},async broadcast(e){const t=await request$5("/extension/various-chain-api/v1/transaction/broadcast",{method:"POST",data:{raw_data:e,chain:"btc-segwit"}});if(!t.data.hash)throw new Error("broadcast failed");return t.data.hash},async fetchTxStatus(e){const a=await request$5("/extension/various-chain-api/v1/transaction/detail",{params:{hash:e,chain:"btc-segwit"}});return a.data.length==0||a.data[0].blockId<=0?"pending":"success"}},apiUrl="https://unisat.io/testnet/api",request$2=extend$1({timeout:6e4,headers:{"X-Client":"UniSat Wallet","X-Version":"1.1.19"}}),BtcTestnetUnisatApi={async getAddressBalance({address:e}){const a=`${apiUrl}/v2/address/balance`,t=await request$2(a,{params:{address:e}});return Number(t.data.result.amount)},async getAddressUtxos({address:e}){const a=`${apiUrl}/v3/address/btc-utxo`,t=await request$2(a,{params:{address:e}});return Object.values(t.data.result).map(i=>({txId:i.txId,outputIndex:i.outputIndex,value:i.satoshis}))},async getFeeSummary(){return{fees:["3","2","1"],etas:["30 secs","2 mins","30 mins"],names:["fast","average","slow"]}},async broadcast(e){const a=`${apiUrl}/v3/tx/broadcast`;return(await request$2(a,{method:"POST",requestType:"json",data:{rawtx:e}})).data.result},async fetchTxStatus(e){return e?"success":"pending"}};function getBtcApi(e=NetworkType.MAINNET){return e===NetworkType.MAINNET?BtcMainnetNCWApi:BtcTestnetUnisatApi}function getBrc20Api(e=NetworkType.MAINNET){return e===NetworkType.MAINNET?BRC20MainnetUnisatApi:BRC20TestnetUnisatApi}src$4.initEccLib(ecc);const ECPair$1=src$1.ECPairFactory(ecc);function toXOnly(e){return e.length===32?e:e.subarray(1,33)}function tapTweakHash(e,a){return src$4.crypto.taggedHash("TapTweak",buffer$2.Buffer.concat(a?[e,a]:[e]))}function tweakSigner(e,a={}){let t=e.privateKey;if(!t)throw new Error("Private key is required for tweaking signer!");e.publicKey[0]===3&&(t=privateNegate_1(t));const c=privateAdd_1(t,tapTweakHash(toXOnly(e.publicKey),a.tweakHash));if(!c)throw new Error("Invalid tweaked private key!");return ECPair$1.fromPrivateKey(buffer$2.Buffer.from(c),{network:a.network})}src$4.initEccLib(ecc);src$1.ECPairFactory(ecc);const BTC_NETWORK={[NetworkType.MAINNET]:src$4.networks.bitcoin,[NetworkType.TESTNET]:src$4.networks.testnet};function publicKeyToAddress(e,a,t){const c=BTC_NETWORK[t];if(!e)return"";const i=buffer$2.Buffer.from(e,"hex");if(a===BtcAddressType.P2PKH){const{address:o}=src$4.payments.p2pkh({pubkey:i,network:c});return o||""}else if(a===BtcAddressType.P2WPKH||a===BtcAddressType.M44_P2WPKH){const{address:o}=src$4.payments.p2wpkh({pubkey:i,network:c});return o||""}else if(a===BtcAddressType.P2TR||a===BtcAddressType.M44_P2TR){const{address:o}=src$4.payments.p2tr({internalPubkey:i.slice(1,33),network:c});return o||""}else if(a===BtcAddressType.P2SH_P2WPKH){const o=src$4.payments.p2wpkh({pubkey:i,network:c}),{address:b}=src$4.payments.p2sh({pubkey:i,network:c,redeem:o});return b||""}else return""}function isValidAddress(e,a){let t;try{src$4.address.toOutputScript(e,a)}catch(c){t=c}return!t}async function gatherUtxosByAmount({utxos:e,amount:a}){const t=[];let c=0;return e.forEach(i=>{c<a&&(t.push(i),c+=i.value)}),assert$d(c>=a,"Not enough total balance in available UTXOs"),{gatheredUtxos:t,sumAmount:c}}async function addInputsToPsbt({network:e,addressType:a,keypair:t,inputUtxos:c,psbt:i}){return c.forEach(o=>{const b={hash:o.txId,index:o.outputIndex};let u;if(a===BtcAddressType.P2TR){const l=tweakSigner(t,{network:e});u=src$4.payments.p2tr({pubkey:toXOnly(l.publicKey),network:e}),b.tapInternalKey=toXOnly(t.publicKey)}else a===BtcAddressType.P2WPKH&&(u=src$4.payments.p2wpkh({pubkey:t.publicKey,network:e}));b.witnessUtxo={value:o.value,script:o.scriptPk?buffer$2.Buffer.from(o.scriptPk,"hex"):u.output},i.addInput(b)}),i}async function signPsbt({network:e,addressType:a,keypair:t,psbt:c}){if(a===BtcAddressType.P2TR){const i=tweakSigner(t,{network:e});c.signAllInputs(i)}else c.signAllInputs(t);return c.finalizeAllInputs(),c}function clamp(e,a,t){return Math.max(Math.min(e,t),a)}src$4.initEccLib(ecc);const ECPair=src$1.ECPairFactory(ecc),BtcService={async getNetwork(){const{chainId:e,chainType:a}=await WalletService.getWalletConfig();assert$d(e,"chainId cannot be empty"),assert$d(a,"chainType cannot be empty");const t=BtcNetworkTypeUtils.toNetworkType(e);return{network:BTC_NETWORK[t],networkType:t}},async getWalletInfo(){const{chainId:e,chainType:a,address:t}=await WalletService.getWalletSession();assert$d(e,"chainId cannot be empty"),assert$d(a,"chainType cannot be empty"),assert$d(t,"address cannot be empty");const c=BtcNetworkTypeUtils.toNetworkType(e),i=BTC_NETWORK[c],o=await WalletService.getCurrentWallet();assert$d(o,"wallet cannot be empty");const b=await NetworkService.getNetWorkUnsafe(e,a);WalletService.unlockCurrentWalletByPasswordOfSession();const u=await DefiCoreService.getAccountsFromMnemonic({addressType:b.addressType});assert$d(u,"no account found for wallet");const l=ECPair.fromPrivateKey(buffer$2.Buffer.from(u.privkey,"hex")),x=BtcAddressTypeUtils.toAddressType(b.addressType);return{network:i,networkType:c,keypair:l,address:t,addressType:x}},async verifyAddress({address:e}){const{networkType:a}=await this.getNetwork();return isValidAddress(e,BTC_NETWORK[a])},async verifyPrivateKey(e,a,t){const o=(await new SimpleKeyring([a]).getAccounts())[0];return{address:publicKeyToAddress(o,t,e),publicKey:buffer$2.Buffer.from(o,"hex").toString("base64"),algo:"secp256k1",publickeyHex:o}},async verifyMnemonic(e){const{networkType:a,mnemonic:t,addressType:c,accountIndex:i}=e,o=ADDRESS_TYPES.find(S=>S.value===c)?.hdPath;assert$d(o,`can not found hdPath for addressType:${c}`);const b=new HdKeyring({hdPath:o,mnemonic:t,activeIndexes:[Number(i)]}),u=b.root.toObject(),x=(await b.getAccounts())[0],g=publicKeyToAddress(x,c,a),v=await b.exportAccount(x);return{address:g,addressType:c,pubkey:b.root.publicKey.toBuffer().toString("base64"),algo:"secp256k1",privkey:v,privkeyBuffer:b.root.privateKey.toBuffer(),pubkeyBuffer:b.root.publicKey.toBuffer(),publicKey:x,rootKey:u}},async broadcast(e){const{networkType:a}=await this.getNetwork();return await getBtcApi(a).broadcast(e)},async getBrc20TokenInfo({ticker:e}){const{networkType:a}=await this.getNetwork();return getBrc20Api(a).getTokenInfo({ticker:e})},async getFeeRate(){const{networkType:e}=await this.getNetwork(),a=await getBtcApi(e).getFeeSummary();return a.names.map((t,c)=>({name:capitalCase(t),eta:a.etas[c],fee:a.fees[c]})).reverse()}};var tx={},any={},helpers={},__createBinding$4=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault$4=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar$4=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding$4(a,e,t);return __setModuleDefault$4(a,e),a},__importDefault$1=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(helpers,"__esModule",{value:!0});helpers.fromJsonTimestamp=helpers.fromTimestamp=helpers.toTimestamp=helpers.setPaginationParams=helpers.isObject=helpers.isSet=helpers.fromDuration=helpers.toDuration=helpers.omitDefault=helpers.base64FromBytes=helpers.bytesFromBase64=helpers.Long=void 0;const _m0$3=__importStar$4(minimalExports),long_1=__importDefault$1(long);helpers.Long=long_1.default;_m0$3.util.Long!==long_1.default&&(_m0$3.util.Long=long_1.default,_m0$3.configure());var globalThis$1=(()=>{if(typeof globalThis$1<"u")return globalThis$1;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof commonjsGlobal<"u")return commonjsGlobal;throw"Unable to locate global object"})();const atob$1=globalThis$1.atob||(e=>globalThis$1.Buffer.from(e,"base64").toString("binary"));function bytesFromBase64(e){const a=atob$1(e),t=new Uint8Array(a.length);for(let c=0;c<a.length;++c)t[c]=a.charCodeAt(c);return t}helpers.bytesFromBase64=bytesFromBase64;const btoa$1=globalThis$1.btoa||(e=>globalThis$1.Buffer.from(e,"binary").toString("base64"));function base64FromBytes(e){const a=[];return e.forEach(t=>{a.push(String.fromCharCode(t))}),btoa$1(a.join(""))}helpers.base64FromBytes=base64FromBytes;function omitDefault(e){if(typeof e=="string")return e===""?void 0:e;if(typeof e=="number")return e===0?void 0:e;if(long_1.default.isLong(e))return e.isZero()?void 0:e;throw new Error(`Got unsupported type ${typeof e}`)}helpers.omitDefault=omitDefault;function toDuration(e){return{seconds:long_1.default.fromNumber(Math.floor(parseInt(e)/1e9)),nanos:parseInt(e)%1e9}}helpers.toDuration=toDuration;function fromDuration(e){return(parseInt(e.seconds.toString())*1e9+e.nanos).toString()}helpers.fromDuration=fromDuration;function isSet(e){return e!=null}helpers.isSet=isSet;function isObject(e){return typeof e=="object"&&e!==null}helpers.isObject=isObject;const setPaginationParams=(e,a)=>(a&&(typeof a?.countTotal<"u"&&(e.params["pagination.count_total"]=a.countTotal),typeof a?.key<"u"&&(e.params["pagination.key"]=buffer$2.Buffer.from(a.key).toString("base64")),typeof a?.limit<"u"&&(e.params["pagination.limit"]=a.limit.toString()),typeof a?.offset<"u"&&(e.params["pagination.offset"]=a.offset.toString()),typeof a?.reverse<"u"&&(e.params["pagination.reverse"]=a.reverse)),e);helpers.setPaginationParams=setPaginationParams;function toTimestamp(e){const a=numberToLong(e.getTime()/1e3),t=e.getTime()%1e3*1e6;return{seconds:a,nanos:t}}helpers.toTimestamp=toTimestamp;function fromTimestamp(e){let a=e.seconds.toNumber()*1e3;return a+=e.nanos/1e6,new Date(a)}helpers.fromTimestamp=fromTimestamp;const timestampFromJSON=e=>({seconds:isSet(e.seconds)?long_1.default.fromValue(e.seconds):long_1.default.ZERO,nanos:isSet(e.nanos)?Number(e.nanos):0});function fromJsonTimestamp(e){return e instanceof Date?toTimestamp(e):typeof e=="string"?toTimestamp(new Date(e)):timestampFromJSON(e)}helpers.fromJsonTimestamp=fromJsonTimestamp;function numberToLong(e){return long_1.default.fromNumber(e)}var __createBinding$3=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault$3=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar$3=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding$3(a,e,t);return __setModuleDefault$3(a,e),a};Object.defineProperty(any,"__esModule",{value:!0});any.Any=any.protobufPackage=void 0;const _m0$2=__importStar$3(minimalExports),helpers_1$2=helpers;any.protobufPackage="google.protobuf";function createBaseAny(){return{typeUrl:"",value:new Uint8Array}}any.Any={encode(e,a=_m0$2.Writer.create()){return e.typeUrl!==""&&a.uint32(10).string(e.typeUrl),e.value.length!==0&&a.uint32(18).bytes(e.value),a},decode(e,a){const t=e instanceof _m0$2.Reader?e:new _m0$2.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseAny();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.typeUrl=t.string();break;case 2:i.value=t.bytes();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{typeUrl:(0,helpers_1$2.isSet)(e.typeUrl)?String(e.typeUrl):"",value:(0,helpers_1$2.isSet)(e.value)?(0,helpers_1$2.bytesFromBase64)(e.value):new Uint8Array}},toJSON(e){const a={};return e.typeUrl!==void 0&&(a.typeUrl=e.typeUrl),e.value!==void 0&&(a.value=(0,helpers_1$2.base64FromBytes)(e.value!==void 0?e.value:new Uint8Array)),a},fromPartial(e){const a=createBaseAny();return a.typeUrl=e.typeUrl??"",a.value=e.value??new Uint8Array,a}};var signing={},multisig={},__createBinding$2=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault$2=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar$2=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding$2(a,e,t);return __setModuleDefault$2(a,e),a};Object.defineProperty(multisig,"__esModule",{value:!0});multisig.CompactBitArray=multisig.MultiSignature=multisig.protobufPackage=void 0;const _m0$1=__importStar$2(minimalExports),helpers_1$1=helpers;multisig.protobufPackage="cosmos.crypto.multisig.v1beta1";function createBaseMultiSignature(){return{signatures:[]}}multisig.MultiSignature={encode(e,a=_m0$1.Writer.create()){for(const t of e.signatures)a.uint32(10).bytes(t);return a},decode(e,a){const t=e instanceof _m0$1.Reader?e:new _m0$1.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseMultiSignature();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.signatures.push(t.bytes());break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{signatures:Array.isArray(e?.signatures)?e.signatures.map(a=>(0,helpers_1$1.bytesFromBase64)(a)):[]}},toJSON(e){const a={};return e.signatures?a.signatures=e.signatures.map(t=>(0,helpers_1$1.base64FromBytes)(t!==void 0?t:new Uint8Array)):a.signatures=[],a},fromPartial(e){const a=createBaseMultiSignature();return a.signatures=e.signatures?.map(t=>t)||[],a}};function createBaseCompactBitArray(){return{extraBitsStored:0,elems:new Uint8Array}}multisig.CompactBitArray={encode(e,a=_m0$1.Writer.create()){return e.extraBitsStored!==0&&a.uint32(8).uint32(e.extraBitsStored),e.elems.length!==0&&a.uint32(18).bytes(e.elems),a},decode(e,a){const t=e instanceof _m0$1.Reader?e:new _m0$1.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseCompactBitArray();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.extraBitsStored=t.uint32();break;case 2:i.elems=t.bytes();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{extraBitsStored:(0,helpers_1$1.isSet)(e.extraBitsStored)?Number(e.extraBitsStored):0,elems:(0,helpers_1$1.isSet)(e.elems)?(0,helpers_1$1.bytesFromBase64)(e.elems):new Uint8Array}},toJSON(e){const a={};return e.extraBitsStored!==void 0&&(a.extraBitsStored=Math.round(e.extraBitsStored)),e.elems!==void 0&&(a.elems=(0,helpers_1$1.base64FromBytes)(e.elems!==void 0?e.elems:new Uint8Array)),a},fromPartial(e){const a=createBaseCompactBitArray();return a.extraBitsStored=e.extraBitsStored??0,a.elems=e.elems??new Uint8Array,a}};(function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(A,C,O,R){R===void 0&&(R=O);var B=Object.getOwnPropertyDescriptor(C,O);(!B||("get"in B?!C.__esModule:B.writable||B.configurable))&&(B={enumerable:!0,get:function(){return C[O]}}),Object.defineProperty(A,R,B)}:function(A,C,O,R){R===void 0&&(R=O),A[R]=C[O]}),t=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(A,C){Object.defineProperty(A,"default",{enumerable:!0,value:C})}:function(A,C){A.default=C}),c=commonjsGlobal&&commonjsGlobal.__importStar||function(A){if(A&&A.__esModule)return A;var C={};if(A!=null)for(var O in A)O!=="default"&&Object.prototype.hasOwnProperty.call(A,O)&&a(C,A,O);return t(C,A),C};Object.defineProperty(e,"__esModule",{value:!0}),e.SignatureDescriptor_Data_Multi=e.SignatureDescriptor_Data_Single=e.SignatureDescriptor_Data=e.SignatureDescriptor=e.SignatureDescriptors=e.signModeToJSON=e.signModeFromJSON=e.SignMode=e.protobufPackage=void 0;const i=multisig,o=any,b=c(minimalExports),u=helpers;e.protobufPackage="cosmos.tx.signing.v1beta1";var l;(function(A){A[A.SIGN_MODE_UNSPECIFIED=0]="SIGN_MODE_UNSPECIFIED",A[A.SIGN_MODE_DIRECT=1]="SIGN_MODE_DIRECT",A[A.SIGN_MODE_TEXTUAL=2]="SIGN_MODE_TEXTUAL",A[A.SIGN_MODE_LEGACY_AMINO_JSON=127]="SIGN_MODE_LEGACY_AMINO_JSON",A[A.SIGN_MODE_EIP_191=191]="SIGN_MODE_EIP_191",A[A.UNRECOGNIZED=-1]="UNRECOGNIZED"})(l=e.SignMode||(e.SignMode={}));function x(A){switch(A){case 0:case"SIGN_MODE_UNSPECIFIED":return l.SIGN_MODE_UNSPECIFIED;case 1:case"SIGN_MODE_DIRECT":return l.SIGN_MODE_DIRECT;case 2:case"SIGN_MODE_TEXTUAL":return l.SIGN_MODE_TEXTUAL;case 127:case"SIGN_MODE_LEGACY_AMINO_JSON":return l.SIGN_MODE_LEGACY_AMINO_JSON;case 191:case"SIGN_MODE_EIP_191":return l.SIGN_MODE_EIP_191;case-1:case"UNRECOGNIZED":default:return l.UNRECOGNIZED}}e.signModeFromJSON=x;function g(A){switch(A){case l.SIGN_MODE_UNSPECIFIED:return"SIGN_MODE_UNSPECIFIED";case l.SIGN_MODE_DIRECT:return"SIGN_MODE_DIRECT";case l.SIGN_MODE_TEXTUAL:return"SIGN_MODE_TEXTUAL";case l.SIGN_MODE_LEGACY_AMINO_JSON:return"SIGN_MODE_LEGACY_AMINO_JSON";case l.SIGN_MODE_EIP_191:return"SIGN_MODE_EIP_191";case l.UNRECOGNIZED:default:return"UNRECOGNIZED"}}e.signModeToJSON=g;function v(){return{signatures:[]}}e.SignatureDescriptors={encode(A,C=b.Writer.create()){for(const O of A.signatures)e.SignatureDescriptor.encode(O,C.uint32(10).fork()).ldelim();return C},decode(A,C){const O=A instanceof b.Reader?A:new b.Reader(A);let R=C===void 0?O.len:O.pos+C;const B=v();for(;O.pos<R;){const M=O.uint32();switch(M>>>3){case 1:B.signatures.push(e.SignatureDescriptor.decode(O,O.uint32()));break;default:O.skipType(M&7);break}}return B},fromJSON(A){return{signatures:Array.isArray(A?.signatures)?A.signatures.map(C=>e.SignatureDescriptor.fromJSON(C)):[]}},toJSON(A){const C={};return A.signatures?C.signatures=A.signatures.map(O=>O?e.SignatureDescriptor.toJSON(O):void 0):C.signatures=[],C},fromPartial(A){const C=v();return C.signatures=A.signatures?.map(O=>e.SignatureDescriptor.fromPartial(O))||[],C}};function E(){return{publicKey:void 0,data:void 0,sequence:u.Long.UZERO}}e.SignatureDescriptor={encode(A,C=b.Writer.create()){return A.publicKey!==void 0&&o.Any.encode(A.publicKey,C.uint32(10).fork()).ldelim(),A.data!==void 0&&e.SignatureDescriptor_Data.encode(A.data,C.uint32(18).fork()).ldelim(),A.sequence.isZero()||C.uint32(24).uint64(A.sequence),C},decode(A,C){const O=A instanceof b.Reader?A:new b.Reader(A);let R=C===void 0?O.len:O.pos+C;const B=E();for(;O.pos<R;){const M=O.uint32();switch(M>>>3){case 1:B.publicKey=o.Any.decode(O,O.uint32());break;case 2:B.data=e.SignatureDescriptor_Data.decode(O,O.uint32());break;case 3:B.sequence=O.uint64();break;default:O.skipType(M&7);break}}return B},fromJSON(A){return{publicKey:(0,u.isSet)(A.publicKey)?o.Any.fromJSON(A.publicKey):void 0,data:(0,u.isSet)(A.data)?e.SignatureDescriptor_Data.fromJSON(A.data):void 0,sequence:(0,u.isSet)(A.sequence)?u.Long.fromValue(A.sequence):u.Long.UZERO}},toJSON(A){const C={};return A.publicKey!==void 0&&(C.publicKey=A.publicKey?o.Any.toJSON(A.publicKey):void 0),A.data!==void 0&&(C.data=A.data?e.SignatureDescriptor_Data.toJSON(A.data):void 0),A.sequence!==void 0&&(C.sequence=(A.sequence||u.Long.UZERO).toString()),C},fromPartial(A){const C=E();return C.publicKey=A.publicKey!==void 0&&A.publicKey!==null?o.Any.fromPartial(A.publicKey):void 0,C.data=A.data!==void 0&&A.data!==null?e.SignatureDescriptor_Data.fromPartial(A.data):void 0,C.sequence=A.sequence!==void 0&&A.sequence!==null?u.Long.fromValue(A.sequence):u.Long.UZERO,C}};function S(){return{single:void 0,multi:void 0}}e.SignatureDescriptor_Data={encode(A,C=b.Writer.create()){return A.single!==void 0&&e.SignatureDescriptor_Data_Single.encode(A.single,C.uint32(10).fork()).ldelim(),A.multi!==void 0&&e.SignatureDescriptor_Data_Multi.encode(A.multi,C.uint32(18).fork()).ldelim(),C},decode(A,C){const O=A instanceof b.Reader?A:new b.Reader(A);let R=C===void 0?O.len:O.pos+C;const B=S();for(;O.pos<R;){const M=O.uint32();switch(M>>>3){case 1:B.single=e.SignatureDescriptor_Data_Single.decode(O,O.uint32());break;case 2:B.multi=e.SignatureDescriptor_Data_Multi.decode(O,O.uint32());break;default:O.skipType(M&7);break}}return B},fromJSON(A){return{single:(0,u.isSet)(A.single)?e.SignatureDescriptor_Data_Single.fromJSON(A.single):void 0,multi:(0,u.isSet)(A.multi)?e.SignatureDescriptor_Data_Multi.fromJSON(A.multi):void 0}},toJSON(A){const C={};return A.single!==void 0&&(C.single=A.single?e.SignatureDescriptor_Data_Single.toJSON(A.single):void 0),A.multi!==void 0&&(C.multi=A.multi?e.SignatureDescriptor_Data_Multi.toJSON(A.multi):void 0),C},fromPartial(A){const C=S();return C.single=A.single!==void 0&&A.single!==null?e.SignatureDescriptor_Data_Single.fromPartial(A.single):void 0,C.multi=A.multi!==void 0&&A.multi!==null?e.SignatureDescriptor_Data_Multi.fromPartial(A.multi):void 0,C}};function T(){return{mode:0,signature:new Uint8Array}}e.SignatureDescriptor_Data_Single={encode(A,C=b.Writer.create()){return A.mode!==0&&C.uint32(8).int32(A.mode),A.signature.length!==0&&C.uint32(18).bytes(A.signature),C},decode(A,C){const O=A instanceof b.Reader?A:new b.Reader(A);let R=C===void 0?O.len:O.pos+C;const B=T();for(;O.pos<R;){const M=O.uint32();switch(M>>>3){case 1:B.mode=O.int32();break;case 2:B.signature=O.bytes();break;default:O.skipType(M&7);break}}return B},fromJSON(A){return{mode:(0,u.isSet)(A.mode)?x(A.mode):0,signature:(0,u.isSet)(A.signature)?(0,u.bytesFromBase64)(A.signature):new Uint8Array}},toJSON(A){const C={};return A.mode!==void 0&&(C.mode=g(A.mode)),A.signature!==void 0&&(C.signature=(0,u.base64FromBytes)(A.signature!==void 0?A.signature:new Uint8Array)),C},fromPartial(A){const C=T();return C.mode=A.mode??0,C.signature=A.signature??new Uint8Array,C}};function I(){return{bitarray:void 0,signatures:[]}}e.SignatureDescriptor_Data_Multi={encode(A,C=b.Writer.create()){A.bitarray!==void 0&&i.CompactBitArray.encode(A.bitarray,C.uint32(10).fork()).ldelim();for(const O of A.signatures)e.SignatureDescriptor_Data.encode(O,C.uint32(18).fork()).ldelim();return C},decode(A,C){const O=A instanceof b.Reader?A:new b.Reader(A);let R=C===void 0?O.len:O.pos+C;const B=I();for(;O.pos<R;){const M=O.uint32();switch(M>>>3){case 1:B.bitarray=i.CompactBitArray.decode(O,O.uint32());break;case 2:B.signatures.push(e.SignatureDescriptor_Data.decode(O,O.uint32()));break;default:O.skipType(M&7);break}}return B},fromJSON(A){return{bitarray:(0,u.isSet)(A.bitarray)?i.CompactBitArray.fromJSON(A.bitarray):void 0,signatures:Array.isArray(A?.signatures)?A.signatures.map(C=>e.SignatureDescriptor_Data.fromJSON(C)):[]}},toJSON(A){const C={};return A.bitarray!==void 0&&(C.bitarray=A.bitarray?i.CompactBitArray.toJSON(A.bitarray):void 0),A.signatures?C.signatures=A.signatures.map(O=>O?e.SignatureDescriptor_Data.toJSON(O):void 0):C.signatures=[],C},fromPartial(A){const C=I();return C.bitarray=A.bitarray!==void 0&&A.bitarray!==null?i.CompactBitArray.fromPartial(A.bitarray):void 0,C.signatures=A.signatures?.map(O=>e.SignatureDescriptor_Data.fromPartial(O))||[],C}}})(signing);var coin={},__createBinding$1=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault$1=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar$1=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding$1(a,e,t);return __setModuleDefault$1(a,e),a};Object.defineProperty(coin,"__esModule",{value:!0});coin.DecProto=coin.IntProto=coin.DecCoin=coin.Coin=coin.protobufPackage=void 0;const _m0=__importStar$1(minimalExports),helpers_1=helpers;coin.protobufPackage="cosmos.base.v1beta1";function createBaseCoin(){return{denom:"",amount:""}}coin.Coin={encode(e,a=_m0.Writer.create()){return e.denom!==""&&a.uint32(10).string(e.denom),e.amount!==""&&a.uint32(18).string(e.amount),a},decode(e,a){const t=e instanceof _m0.Reader?e:new _m0.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseCoin();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.denom=t.string();break;case 2:i.amount=t.string();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{denom:(0,helpers_1.isSet)(e.denom)?String(e.denom):"",amount:(0,helpers_1.isSet)(e.amount)?String(e.amount):""}},toJSON(e){const a={};return e.denom!==void 0&&(a.denom=e.denom),e.amount!==void 0&&(a.amount=e.amount),a},fromPartial(e){const a=createBaseCoin();return a.denom=e.denom??"",a.amount=e.amount??"",a}};function createBaseDecCoin(){return{denom:"",amount:""}}coin.DecCoin={encode(e,a=_m0.Writer.create()){return e.denom!==""&&a.uint32(10).string(e.denom),e.amount!==""&&a.uint32(18).string(e.amount),a},decode(e,a){const t=e instanceof _m0.Reader?e:new _m0.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseDecCoin();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.denom=t.string();break;case 2:i.amount=t.string();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{denom:(0,helpers_1.isSet)(e.denom)?String(e.denom):"",amount:(0,helpers_1.isSet)(e.amount)?String(e.amount):""}},toJSON(e){const a={};return e.denom!==void 0&&(a.denom=e.denom),e.amount!==void 0&&(a.amount=e.amount),a},fromPartial(e){const a=createBaseDecCoin();return a.denom=e.denom??"",a.amount=e.amount??"",a}};function createBaseIntProto(){return{int:""}}coin.IntProto={encode(e,a=_m0.Writer.create()){return e.int!==""&&a.uint32(10).string(e.int),a},decode(e,a){const t=e instanceof _m0.Reader?e:new _m0.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseIntProto();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.int=t.string();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{int:(0,helpers_1.isSet)(e.int)?String(e.int):""}},toJSON(e){const a={};return e.int!==void 0&&(a.int=e.int),a},fromPartial(e){const a=createBaseIntProto();return a.int=e.int??"",a}};function createBaseDecProto(){return{dec:""}}coin.DecProto={encode(e,a=_m0.Writer.create()){return e.dec!==""&&a.uint32(10).string(e.dec),a},decode(e,a){const t=e instanceof _m0.Reader?e:new _m0.Reader(e);let c=a===void 0?t.len:t.pos+a;const i=createBaseDecProto();for(;t.pos<c;){const o=t.uint32();switch(o>>>3){case 1:i.dec=t.string();break;default:t.skipType(o&7);break}}return i},fromJSON(e){return{dec:(0,helpers_1.isSet)(e.dec)?String(e.dec):""}},toJSON(e){const a={};return e.dec!==void 0&&(a.dec=e.dec),a},fromPartial(e){const a=createBaseDecProto();return a.dec=e.dec??"",a}};(function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(B,M,L,ee){ee===void 0&&(ee=L);var z=Object.getOwnPropertyDescriptor(M,L);(!z||("get"in z?!M.__esModule:z.writable||z.configurable))&&(z={enumerable:!0,get:function(){return M[L]}}),Object.defineProperty(B,ee,z)}:function(B,M,L,ee){ee===void 0&&(ee=L),B[ee]=M[L]}),t=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(B,M){Object.defineProperty(B,"default",{enumerable:!0,value:M})}:function(B,M){B.default=M}),c=commonjsGlobal&&commonjsGlobal.__importStar||function(B){if(B&&B.__esModule)return B;var M={};if(B!=null)for(var L in B)L!=="default"&&Object.prototype.hasOwnProperty.call(B,L)&&a(M,B,L);return t(M,B),M};Object.defineProperty(e,"__esModule",{value:!0}),e.Fee=e.ModeInfo_Multi=e.ModeInfo_Single=e.ModeInfo=e.SignerInfo=e.AuthInfo=e.TxBody=e.SignDoc=e.TxRaw=e.Tx=e.protobufPackage=void 0;const i=any,o=signing,b=multisig,u=coin,l=c(minimalExports),x=helpers;e.protobufPackage="cosmos.tx.v1beta1";function g(){return{body:void 0,authInfo:void 0,signatures:[]}}e.Tx={encode(B,M=l.Writer.create()){B.body!==void 0&&e.TxBody.encode(B.body,M.uint32(10).fork()).ldelim(),B.authInfo!==void 0&&e.AuthInfo.encode(B.authInfo,M.uint32(18).fork()).ldelim();for(const L of B.signatures)M.uint32(26).bytes(L);return M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=g();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.body=e.TxBody.decode(L,L.uint32());break;case 2:z.authInfo=e.AuthInfo.decode(L,L.uint32());break;case 3:z.signatures.push(L.bytes());break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{body:(0,x.isSet)(B.body)?e.TxBody.fromJSON(B.body):void 0,authInfo:(0,x.isSet)(B.authInfo)?e.AuthInfo.fromJSON(B.authInfo):void 0,signatures:Array.isArray(B?.signatures)?B.signatures.map(M=>(0,x.bytesFromBase64)(M)):[]}},toJSON(B){const M={};return B.body!==void 0&&(M.body=B.body?e.TxBody.toJSON(B.body):void 0),B.authInfo!==void 0&&(M.authInfo=B.authInfo?e.AuthInfo.toJSON(B.authInfo):void 0),B.signatures?M.signatures=B.signatures.map(L=>(0,x.base64FromBytes)(L!==void 0?L:new Uint8Array)):M.signatures=[],M},fromPartial(B){const M=g();return M.body=B.body!==void 0&&B.body!==null?e.TxBody.fromPartial(B.body):void 0,M.authInfo=B.authInfo!==void 0&&B.authInfo!==null?e.AuthInfo.fromPartial(B.authInfo):void 0,M.signatures=B.signatures?.map(L=>L)||[],M}};function v(){return{bodyBytes:new Uint8Array,authInfoBytes:new Uint8Array,signatures:[]}}e.TxRaw={encode(B,M=l.Writer.create()){B.bodyBytes.length!==0&&M.uint32(10).bytes(B.bodyBytes),B.authInfoBytes.length!==0&&M.uint32(18).bytes(B.authInfoBytes);for(const L of B.signatures)M.uint32(26).bytes(L);return M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=v();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.bodyBytes=L.bytes();break;case 2:z.authInfoBytes=L.bytes();break;case 3:z.signatures.push(L.bytes());break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{bodyBytes:(0,x.isSet)(B.bodyBytes)?(0,x.bytesFromBase64)(B.bodyBytes):new Uint8Array,authInfoBytes:(0,x.isSet)(B.authInfoBytes)?(0,x.bytesFromBase64)(B.authInfoBytes):new Uint8Array,signatures:Array.isArray(B?.signatures)?B.signatures.map(M=>(0,x.bytesFromBase64)(M)):[]}},toJSON(B){const M={};return B.bodyBytes!==void 0&&(M.bodyBytes=(0,x.base64FromBytes)(B.bodyBytes!==void 0?B.bodyBytes:new Uint8Array)),B.authInfoBytes!==void 0&&(M.authInfoBytes=(0,x.base64FromBytes)(B.authInfoBytes!==void 0?B.authInfoBytes:new Uint8Array)),B.signatures?M.signatures=B.signatures.map(L=>(0,x.base64FromBytes)(L!==void 0?L:new Uint8Array)):M.signatures=[],M},fromPartial(B){const M=v();return M.bodyBytes=B.bodyBytes??new Uint8Array,M.authInfoBytes=B.authInfoBytes??new Uint8Array,M.signatures=B.signatures?.map(L=>L)||[],M}};function E(){return{bodyBytes:new Uint8Array,authInfoBytes:new Uint8Array,chainId:"",accountNumber:x.Long.UZERO}}e.SignDoc={encode(B,M=l.Writer.create()){return B.bodyBytes.length!==0&&M.uint32(10).bytes(B.bodyBytes),B.authInfoBytes.length!==0&&M.uint32(18).bytes(B.authInfoBytes),B.chainId!==""&&M.uint32(26).string(B.chainId),B.accountNumber.isZero()||M.uint32(32).uint64(B.accountNumber),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=E();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.bodyBytes=L.bytes();break;case 2:z.authInfoBytes=L.bytes();break;case 3:z.chainId=L.string();break;case 4:z.accountNumber=L.uint64();break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{bodyBytes:(0,x.isSet)(B.bodyBytes)?(0,x.bytesFromBase64)(B.bodyBytes):new Uint8Array,authInfoBytes:(0,x.isSet)(B.authInfoBytes)?(0,x.bytesFromBase64)(B.authInfoBytes):new Uint8Array,chainId:(0,x.isSet)(B.chainId)?String(B.chainId):"",accountNumber:(0,x.isSet)(B.accountNumber)?x.Long.fromValue(B.accountNumber):x.Long.UZERO}},toJSON(B){const M={};return B.bodyBytes!==void 0&&(M.bodyBytes=(0,x.base64FromBytes)(B.bodyBytes!==void 0?B.bodyBytes:new Uint8Array)),B.authInfoBytes!==void 0&&(M.authInfoBytes=(0,x.base64FromBytes)(B.authInfoBytes!==void 0?B.authInfoBytes:new Uint8Array)),B.chainId!==void 0&&(M.chainId=B.chainId),B.accountNumber!==void 0&&(M.accountNumber=(B.accountNumber||x.Long.UZERO).toString()),M},fromPartial(B){const M=E();return M.bodyBytes=B.bodyBytes??new Uint8Array,M.authInfoBytes=B.authInfoBytes??new Uint8Array,M.chainId=B.chainId??"",M.accountNumber=B.accountNumber!==void 0&&B.accountNumber!==null?x.Long.fromValue(B.accountNumber):x.Long.UZERO,M}};function S(){return{messages:[],memo:"",timeoutHeight:x.Long.UZERO,extensionOptions:[],nonCriticalExtensionOptions:[]}}e.TxBody={encode(B,M=l.Writer.create()){for(const L of B.messages)i.Any.encode(L,M.uint32(10).fork()).ldelim();B.memo!==""&&M.uint32(18).string(B.memo),B.timeoutHeight.isZero()||M.uint32(24).uint64(B.timeoutHeight);for(const L of B.extensionOptions)i.Any.encode(L,M.uint32(8186).fork()).ldelim();for(const L of B.nonCriticalExtensionOptions)i.Any.encode(L,M.uint32(16378).fork()).ldelim();return M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=S();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.messages.push(i.Any.decode(L,L.uint32()));break;case 2:z.memo=L.string();break;case 3:z.timeoutHeight=L.uint64();break;case 1023:z.extensionOptions.push(i.Any.decode(L,L.uint32()));break;case 2047:z.nonCriticalExtensionOptions.push(i.Any.decode(L,L.uint32()));break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{messages:Array.isArray(B?.messages)?B.messages.map(M=>i.Any.fromJSON(M)):[],memo:(0,x.isSet)(B.memo)?String(B.memo):"",timeoutHeight:(0,x.isSet)(B.timeoutHeight)?x.Long.fromValue(B.timeoutHeight):x.Long.UZERO,extensionOptions:Array.isArray(B?.extensionOptions)?B.extensionOptions.map(M=>i.Any.fromJSON(M)):[],nonCriticalExtensionOptions:Array.isArray(B?.nonCriticalExtensionOptions)?B.nonCriticalExtensionOptions.map(M=>i.Any.fromJSON(M)):[]}},toJSON(B){const M={};return B.messages?M.messages=B.messages.map(L=>L?i.Any.toJSON(L):void 0):M.messages=[],B.memo!==void 0&&(M.memo=B.memo),B.timeoutHeight!==void 0&&(M.timeoutHeight=(B.timeoutHeight||x.Long.UZERO).toString()),B.extensionOptions?M.extensionOptions=B.extensionOptions.map(L=>L?i.Any.toJSON(L):void 0):M.extensionOptions=[],B.nonCriticalExtensionOptions?M.nonCriticalExtensionOptions=B.nonCriticalExtensionOptions.map(L=>L?i.Any.toJSON(L):void 0):M.nonCriticalExtensionOptions=[],M},fromPartial(B){const M=S();return M.messages=B.messages?.map(L=>i.Any.fromPartial(L))||[],M.memo=B.memo??"",M.timeoutHeight=B.timeoutHeight!==void 0&&B.timeoutHeight!==null?x.Long.fromValue(B.timeoutHeight):x.Long.UZERO,M.extensionOptions=B.extensionOptions?.map(L=>i.Any.fromPartial(L))||[],M.nonCriticalExtensionOptions=B.nonCriticalExtensionOptions?.map(L=>i.Any.fromPartial(L))||[],M}};function T(){return{signerInfos:[],fee:void 0}}e.AuthInfo={encode(B,M=l.Writer.create()){for(const L of B.signerInfos)e.SignerInfo.encode(L,M.uint32(10).fork()).ldelim();return B.fee!==void 0&&e.Fee.encode(B.fee,M.uint32(18).fork()).ldelim(),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=T();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.signerInfos.push(e.SignerInfo.decode(L,L.uint32()));break;case 2:z.fee=e.Fee.decode(L,L.uint32());break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{signerInfos:Array.isArray(B?.signerInfos)?B.signerInfos.map(M=>e.SignerInfo.fromJSON(M)):[],fee:(0,x.isSet)(B.fee)?e.Fee.fromJSON(B.fee):void 0}},toJSON(B){const M={};return B.signerInfos?M.signerInfos=B.signerInfos.map(L=>L?e.SignerInfo.toJSON(L):void 0):M.signerInfos=[],B.fee!==void 0&&(M.fee=B.fee?e.Fee.toJSON(B.fee):void 0),M},fromPartial(B){const M=T();return M.signerInfos=B.signerInfos?.map(L=>e.SignerInfo.fromPartial(L))||[],M.fee=B.fee!==void 0&&B.fee!==null?e.Fee.fromPartial(B.fee):void 0,M}};function I(){return{publicKey:void 0,modeInfo:void 0,sequence:x.Long.UZERO}}e.SignerInfo={encode(B,M=l.Writer.create()){return B.publicKey!==void 0&&i.Any.encode(B.publicKey,M.uint32(10).fork()).ldelim(),B.modeInfo!==void 0&&e.ModeInfo.encode(B.modeInfo,M.uint32(18).fork()).ldelim(),B.sequence.isZero()||M.uint32(24).uint64(B.sequence),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=I();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.publicKey=i.Any.decode(L,L.uint32());break;case 2:z.modeInfo=e.ModeInfo.decode(L,L.uint32());break;case 3:z.sequence=L.uint64();break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{publicKey:(0,x.isSet)(B.publicKey)?i.Any.fromJSON(B.publicKey):void 0,modeInfo:(0,x.isSet)(B.modeInfo)?e.ModeInfo.fromJSON(B.modeInfo):void 0,sequence:(0,x.isSet)(B.sequence)?x.Long.fromValue(B.sequence):x.Long.UZERO}},toJSON(B){const M={};return B.publicKey!==void 0&&(M.publicKey=B.publicKey?i.Any.toJSON(B.publicKey):void 0),B.modeInfo!==void 0&&(M.modeInfo=B.modeInfo?e.ModeInfo.toJSON(B.modeInfo):void 0),B.sequence!==void 0&&(M.sequence=(B.sequence||x.Long.UZERO).toString()),M},fromPartial(B){const M=I();return M.publicKey=B.publicKey!==void 0&&B.publicKey!==null?i.Any.fromPartial(B.publicKey):void 0,M.modeInfo=B.modeInfo!==void 0&&B.modeInfo!==null?e.ModeInfo.fromPartial(B.modeInfo):void 0,M.sequence=B.sequence!==void 0&&B.sequence!==null?x.Long.fromValue(B.sequence):x.Long.UZERO,M}};function A(){return{single:void 0,multi:void 0}}e.ModeInfo={encode(B,M=l.Writer.create()){return B.single!==void 0&&e.ModeInfo_Single.encode(B.single,M.uint32(10).fork()).ldelim(),B.multi!==void 0&&e.ModeInfo_Multi.encode(B.multi,M.uint32(18).fork()).ldelim(),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=A();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.single=e.ModeInfo_Single.decode(L,L.uint32());break;case 2:z.multi=e.ModeInfo_Multi.decode(L,L.uint32());break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{single:(0,x.isSet)(B.single)?e.ModeInfo_Single.fromJSON(B.single):void 0,multi:(0,x.isSet)(B.multi)?e.ModeInfo_Multi.fromJSON(B.multi):void 0}},toJSON(B){const M={};return B.single!==void 0&&(M.single=B.single?e.ModeInfo_Single.toJSON(B.single):void 0),B.multi!==void 0&&(M.multi=B.multi?e.ModeInfo_Multi.toJSON(B.multi):void 0),M},fromPartial(B){const M=A();return M.single=B.single!==void 0&&B.single!==null?e.ModeInfo_Single.fromPartial(B.single):void 0,M.multi=B.multi!==void 0&&B.multi!==null?e.ModeInfo_Multi.fromPartial(B.multi):void 0,M}};function C(){return{mode:0}}e.ModeInfo_Single={encode(B,M=l.Writer.create()){return B.mode!==0&&M.uint32(8).int32(B.mode),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=C();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.mode=L.int32();break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{mode:(0,x.isSet)(B.mode)?(0,o.signModeFromJSON)(B.mode):0}},toJSON(B){const M={};return B.mode!==void 0&&(M.mode=(0,o.signModeToJSON)(B.mode)),M},fromPartial(B){const M=C();return M.mode=B.mode??0,M}};function O(){return{bitarray:void 0,modeInfos:[]}}e.ModeInfo_Multi={encode(B,M=l.Writer.create()){B.bitarray!==void 0&&b.CompactBitArray.encode(B.bitarray,M.uint32(10).fork()).ldelim();for(const L of B.modeInfos)e.ModeInfo.encode(L,M.uint32(18).fork()).ldelim();return M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=O();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.bitarray=b.CompactBitArray.decode(L,L.uint32());break;case 2:z.modeInfos.push(e.ModeInfo.decode(L,L.uint32()));break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{bitarray:(0,x.isSet)(B.bitarray)?b.CompactBitArray.fromJSON(B.bitarray):void 0,modeInfos:Array.isArray(B?.modeInfos)?B.modeInfos.map(M=>e.ModeInfo.fromJSON(M)):[]}},toJSON(B){const M={};return B.bitarray!==void 0&&(M.bitarray=B.bitarray?b.CompactBitArray.toJSON(B.bitarray):void 0),B.modeInfos?M.modeInfos=B.modeInfos.map(L=>L?e.ModeInfo.toJSON(L):void 0):M.modeInfos=[],M},fromPartial(B){const M=O();return M.bitarray=B.bitarray!==void 0&&B.bitarray!==null?b.CompactBitArray.fromPartial(B.bitarray):void 0,M.modeInfos=B.modeInfos?.map(L=>e.ModeInfo.fromPartial(L))||[],M}};function R(){return{amount:[],gasLimit:x.Long.UZERO,payer:"",granter:""}}e.Fee={encode(B,M=l.Writer.create()){for(const L of B.amount)u.Coin.encode(L,M.uint32(10).fork()).ldelim();return B.gasLimit.isZero()||M.uint32(16).uint64(B.gasLimit),B.payer!==""&&M.uint32(26).string(B.payer),B.granter!==""&&M.uint32(34).string(B.granter),M},decode(B,M){const L=B instanceof l.Reader?B:new l.Reader(B);let ee=M===void 0?L.len:L.pos+M;const z=R();for(;L.pos<ee;){const oe=L.uint32();switch(oe>>>3){case 1:z.amount.push(u.Coin.decode(L,L.uint32()));break;case 2:z.gasLimit=L.uint64();break;case 3:z.payer=L.string();break;case 4:z.granter=L.string();break;default:L.skipType(oe&7);break}}return z},fromJSON(B){return{amount:Array.isArray(B?.amount)?B.amount.map(M=>u.Coin.fromJSON(M)):[],gasLimit:(0,x.isSet)(B.gasLimit)?x.Long.fromValue(B.gasLimit):x.Long.UZERO,payer:(0,x.isSet)(B.payer)?String(B.payer):"",granter:(0,x.isSet)(B.granter)?String(B.granter):""}},toJSON(B){const M={};return B.amount?M.amount=B.amount.map(L=>L?u.Coin.toJSON(L):void 0):M.amount=[],B.gasLimit!==void 0&&(M.gasLimit=(B.gasLimit||x.Long.UZERO).toString()),B.payer!==void 0&&(M.payer=B.payer),B.granter!==void 0&&(M.granter=B.granter),M},fromPartial(B){const M=R();return M.amount=B.amount?.map(L=>u.Coin.fromPartial(L))||[],M.gasLimit=B.gasLimit!==void 0&&B.gasLimit!==null?x.Long.fromValue(B.gasLimit):x.Long.UZERO,M.payer=B.payer??"",M.granter=B.granter??"",M}}})(tx);class CosmosHttpClient{static create(a){const t=typeof a=="string";let c={};return t&&a.startsWith("https://ex-wallet.crypto.com")&&(c=new ClientAuthHeader().getAuthHeader()),{url:t?a:a.url,headers:{...t?{}:a.headers,...c}}}}const CosmosService={async verifyAddress(e){const{address:a,walletAddress:t}=e;return build.fromBech32(a)?.prefix===build.fromBech32(t)?.prefix},async getBalance({rpcUrl:e,address:a,denom:t=""}){const c=CosmosHttpClient.create(e),i=await build$1.StargateClient.connect(c),{amount:o}=await i.getBalance(a,t);return o},async getNetworkIndex(e){const{addressType:a}=e;return DefiCoreService.supportedECOSystemNetworkList().find(c=>c.addressType==a)?.chianIndex},async generateSinDocMsgFromLedger({address:e,rpcUrl:a,publicKey:t,memo:c,messages:i,sendFee:o}){const b=build.fromBase64(t),u={getAccounts:async()=>[{address:e,pubkey:b}],signAmino:async(v,E)=>{throw E}},l=CosmosHttpClient.create(a),g=await(await build$1.SigningStargateClient.connectWithSigner(l,u)).sign(e,i,o,c).catch(v=>v);return build.fromUtf8(build$2.serializeSignDoc(g))},async generateBroadcastDataFromLedger({address:e,rpcUrl:a,signature:t,messages:c,publicKey:i,sendFee:o,memo:b}){const u=build.fromBase64(i),l={getAccounts:async()=>[{address:e,pubkey:u}],signAmino:async(T,I)=>({signed:I,signature:build$2.encodeSecp256k1Signature(u,build$3.Secp256k1Signature.fromDer(build.fromHex(t)).toFixedLength())})},x=CosmosHttpClient.create(a),v=await(await build$1.SigningStargateClient.connectWithSigner(x,l)).sign(e,c,o,b),E=tx.TxRaw.encode(v).finish();return{txId:build.toHex(build$3.sha256(E)),txRaw:v,txRawOfBase64:build.toBase64(E)}},async signTransaction(e){const{privatekey:a,addressType:t,rpcUrl:c,from:i,messages:o,sendFee:b,memo:u=""}=e,l=Web3.utils.stripHexPrefix(a).padStart(64,"0"),x=await build$4.DirectSecp256k1Wallet.fromKey(build.fromHex(l),t),g=CosmosHttpClient.create(c),E=await(await build$1.SigningStargateClient.connectWithSigner(g,x)).sign(i,o,b,u),S=tx.TxRaw.encode(E).finish();return{txId:build.toHex(build$3.sha256(S)),txRaw:E,txRawOfBase64:build.toBase64(S)}},async broadcast(e){const{rpcUrl:a,txRaw:t,txId:c}=e,i=tx.TxRaw.encode(t).finish(),o=CosmosHttpClient.create(a),u=await(await build$5.Tendermint34Client.connect(o)).broadcastTxSync({tx:i});return u.code&&!c?Promise.reject(new Error(`Broadcasting transaction failed with code ${u.code} (codespace: ${u.codespace}). Log: ${u.log}`)):build.toHex(u.hash).toUpperCase()},async getAccounts(e){const{privatekey:a}=e,t=Web3.utils.stripHexPrefix(a).padStart(64,"0"),i=await(await build$4.DirectSecp256k1Wallet.fromKey(build.fromHex(t))).getAccounts();return assert$d.ok(i.length,"get account fail"),i},async signDirect(e){const{accountNumber:a,sequence:t,bodyBytes:c,privatekey:i,fee:o,gasLimit:b,chainId:u}=e,l=Web3.utils.stripHexPrefix(i).padStart(64,"0"),x=await build$4.DirectSecp256k1Wallet.fromKey(build.fromHex(l)),g=await x.getAccounts(),v={typeUrl:"/cosmos.crypto.secp256k1.PubKey",value:g[a].pubkey},E=build$4.makeSignDoc(build.fromHex(c),build$4.makeAuthInfoBytes([{pubkey:v,sequence:t}],o,b,void 0,void 0),u,a);return x.signDirect(g[0].address,E)},async signAmino(e){const{privatekey:a,address:t,signDoc:c}=e,i=Web3.utils.stripHexPrefix(a).padStart(64,"0");return(await build$2.Secp256k1Wallet.fromKey(build.fromHex(i))).signAmino(t,c)},async simulateTransaction({pubkey:e,rpcUrl:a,address:t,sendMsg:c,memo:i}){const o={getAccounts:async()=>[{address:t,pubkey:build.fromBase64(e)}]},b=CosmosHttpClient.create(a);return(await build$1.SigningStargateClient.connectWithSigner(b,o)).simulate(t,[c],i)},async verifyPrivateKey(e,a){const t=Web3.utils.stripHexPrefix(e).padStart(64,"0"),c=await build$4.DirectSecp256k1Wallet.fromKey(build.fromHex(t),a),[i]=await c.getAccounts();return{address:i.address,publicKey:buffer$2.Buffer.from(i?.pubkey).toString("base64"),algo:i?.algo}},async verifyMnemonic({mnemonic:e,addressType:a,accountIndex:t}){const i={cosmos:`m/44'/118'/0'/0/${t}`,cro:`m/44'/394'/0'/0/${t}`,tcro:`m/44'/1'/0'/0/${t}`}[a];assert$d.ok(i,"addressType is not support");const o=await build$4.DirectSecp256k1HdWallet.fromMnemonic(e,{hdPaths:[build$3.stringToPath(i)],prefix:a}),[b]=await o.getAccountsWithPrivkeys();return{address:b.address,addressType:a,pubkey:buffer$2.Buffer.from(b?.pubkey).toString("base64"),algo:b?.algo,privkey:hexValue(b.privkey),privkeyBuffer:buffer$2.Buffer.from(b.privkey),pubkeyBuffer:buffer$2.Buffer.from(b.pubkey)}}};var dist_browser$1={},crc32={};/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */(function(e){(function(a){a(typeof DO_NOT_EXPORT_CRC>"u"?e:{})})(function(a){a.version="1.2.2";function t(){for(var z=0,oe=new Array(256),W=0;W!=256;++W)z=W,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,z=z&1?-306674912^z>>>1:z>>>1,oe[W]=z;return typeof Int32Array<"u"?new Int32Array(oe):oe}var c=t();function i(z){var oe=0,W=0,P=0,D=typeof Int32Array<"u"?new Int32Array(4096):new Array(4096);for(P=0;P!=256;++P)D[P]=z[P];for(P=0;P!=256;++P)for(W=z[P],oe=256+P;oe<4096;oe+=256)W=D[oe]=W>>>8^z[W&255];var q=[];for(P=1;P!=16;++P)q[P-1]=typeof Int32Array<"u"?D.subarray(P*256,P*256+256):D.slice(P*256,P*256+256);return q}var o=i(c),b=o[0],u=o[1],l=o[2],x=o[3],g=o[4],v=o[5],E=o[6],S=o[7],T=o[8],I=o[9],A=o[10],C=o[11],O=o[12],R=o[13],B=o[14];function M(z,oe){for(var W=oe^-1,P=0,D=z.length;P<D;)W=W>>>8^c[(W^z.charCodeAt(P++))&255];return~W}function L(z,oe){for(var W=oe^-1,P=z.length-15,D=0;D<P;)W=B[z[D++]^W&255]^R[z[D++]^W>>8&255]^O[z[D++]^W>>16&255]^C[z[D++]^W>>>24]^A[z[D++]]^I[z[D++]]^T[z[D++]]^S[z[D++]]^E[z[D++]]^v[z[D++]]^g[z[D++]]^x[z[D++]]^l[z[D++]]^u[z[D++]]^b[z[D++]]^c[z[D++]];for(P+=15;D<P;)W=W>>>8^c[(W^z[D++])&255];return~W}function ee(z,oe){for(var W=oe^-1,P=0,D=z.length,q=0,Y=0;P<D;)q=z.charCodeAt(P++),q<128?W=W>>>8^c[(W^q)&255]:q<2048?(W=W>>>8^c[(W^(192|q>>6&31))&255],W=W>>>8^c[(W^(128|q&63))&255]):q>=55296&&q<57344?(q=(q&1023)+64,Y=z.charCodeAt(P++)&1023,W=W>>>8^c[(W^(240|q>>8&7))&255],W=W>>>8^c[(W^(128|q>>2&63))&255],W=W>>>8^c[(W^(128|Y>>6&15|(q&3)<<4))&255],W=W>>>8^c[(W^(128|Y&63))&255]):(W=W>>>8^c[(W^(224|q>>12&15))&255],W=W>>>8^c[(W^(128|q>>6&63))&255],W=W>>>8^c[(W^(128|q&63))&255]);return~W}a.table=c,a.bstr=M,a.buf=L,a.str=ee})})(crc32);var chains={};const name$I="mainnet",chainId$5=1,networkId$5=1,defaultHardfork$5="istanbul",consensus$6={type:"pow",algorithm:"ethash",ethash:{}},comment$I="The Ethereum main chain",url$I="https://ethstats.net/",genesis$5={hash:"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",timestamp:null,gasLimit:5e3,difficulty:17179869184,nonce:"0x0000000000000042",extraData:"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",stateRoot:"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544"},hardforks$6=[{name:"chainstart",block:0,forkHash:"0xfc64ec04"},{name:"homestead",block:115e4,forkHash:"0x97c2c34c"},{name:"dao",block:192e4,forkHash:"0x91d1f948"},{name:"tangerineWhistle",block:2463e3,forkHash:"0x7a64da13"},{name:"spuriousDragon",block:2675e3,forkHash:"0x3edd5b10"},{name:"byzantium",block:437e4,forkHash:"0xa00bc324"},{name:"constantinople",block:728e4,forkHash:"0x668db0af"},{name:"petersburg",block:728e4,forkHash:"0x668db0af"},{name:"istanbul",block:9069e3,forkHash:"0x879d6e30"},{name:"muirGlacier",block:92e5,forkHash:"0xe029e991"},{name:"berlin",block:12244e3,forkHash:"0x0eb440f6"},{name:"london",block:12965e3,forkHash:"0xb715077d"},{name:"arrowGlacier",block:13773e3,forkHash:"0x20c327fc"},{name:"grayGlacier",block:1505e4,forkHash:"0xf0afd0e3"},{name:"mergeForkIdTransition",block:null,forkHash:null},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes$5=[{ip:"18.138.108.67",port:30303,id:"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666",location:"ap-southeast-1-001",comment:"bootnode-aws-ap-southeast-1-001"},{ip:"3.209.45.79",port:30303,id:"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de",location:"us-east-1-001",comment:"bootnode-aws-us-east-1-001"},{ip:"34.255.23.113",port:30303,id:"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758",location:"eu-west-1-001",comment:"bootnode-aws-eu-west-1-001"},{ip:"35.158.244.151",port:30303,id:"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8",location:"eu-central-1-001",comment:"bootnode-aws-eu-central-1-001"},{ip:"52.187.207.27",port:30303,id:"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a",location:"australiaeast-001",comment:"bootnode-azure-australiaeast-001"},{ip:"191.234.162.198",port:30303,id:"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1",location:"brazilsouth-001",comment:"bootnode-azure-brazilsouth-001"},{ip:"52.231.165.108",port:30303,id:"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8",location:"koreasouth-001",comment:"bootnode-azure-koreasouth-001"},{ip:"104.42.217.25",port:30303,id:"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f",location:"westus-001",comment:"bootnode-azure-westus-001"}],dnsNetworks$4=["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"],require$$0$3={name:name$I,chainId:chainId$5,networkId:networkId$5,defaultHardfork:defaultHardfork$5,consensus:consensus$6,comment:comment$I,url:url$I,genesis:genesis$5,hardforks:hardforks$6,bootstrapNodes:bootstrapNodes$5,dnsNetworks:dnsNetworks$4},name$H="ropsten",chainId$4=3,networkId$4=3,defaultHardfork$4="istanbul",consensus$5={type:"pow",algorithm:"ethash",ethash:{}},comment$H="PoW test network",url$H="https://github.com/ethereum/ropsten",genesis$4={hash:"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d",timestamp:null,gasLimit:16777216,difficulty:1048576,nonce:"0x0000000000000042",extraData:"0x3535353535353535353535353535353535353535353535353535353535353535",stateRoot:"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b"},hardforks$5=[{name:"chainstart",block:0,forkHash:"0x30c7ddbc"},{name:"homestead",block:0,forkHash:"0x30c7ddbc"},{name:"tangerineWhistle",block:0,forkHash:"0x30c7ddbc"},{name:"spuriousDragon",block:10,forkHash:"0x63760190"},{name:"byzantium",block:17e5,forkHash:"0x3ea159c7"},{name:"constantinople",block:423e4,forkHash:"0x97b544f3"},{name:"petersburg",block:4939394,forkHash:"0xd6e2149b"},{name:"istanbul",block:6485846,forkHash:"0x4bc66396"},{name:"muirGlacier",block:7117117,forkHash:"0x6727ef90"},{name:"berlin",block:9812189,forkHash:"0xa157d377"},{name:"london",block:10499401,forkHash:"0x7119b6b3"},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes$4=[{ip:"52.176.7.10",port:30303,id:"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606",location:"",comment:"US-Azure geth"},{ip:"52.176.100.77",port:30303,id:"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c",location:"",comment:"US-Azure parity"},{ip:"52.232.243.152",port:30303,id:"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f",location:"",comment:"Parity"},{ip:"192.81.208.223",port:30303,id:"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09",location:"",comment:"@gpip"}],dnsNetworks$3=["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net"],require$$1$3={name:name$H,chainId:chainId$4,networkId:networkId$4,defaultHardfork:defaultHardfork$4,consensus:consensus$5,comment:comment$H,url:url$H,genesis:genesis$4,hardforks:hardforks$5,bootstrapNodes:bootstrapNodes$4,dnsNetworks:dnsNetworks$3},name$G="rinkeby",chainId$3=4,networkId$3=4,defaultHardfork$3="istanbul",consensus$4={type:"poa",algorithm:"clique",clique:{period:15,epoch:3e4}},comment$G="PoA test network",url$G="https://www.rinkeby.io",genesis$3={hash:"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177",timestamp:"0x58ee40ba",gasLimit:47e5,difficulty:1,nonce:"0x0000000000000000",extraData:"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",stateRoot:"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d"},hardforks$4=[{name:"chainstart",block:0,forkHash:"0x3b8e0691"},{name:"homestead",block:1,forkHash:"0x60949295"},{name:"tangerineWhistle",block:2,forkHash:"0x8bde40dd"},{name:"spuriousDragon",block:3,forkHash:"0xcb3a64bb"},{name:"byzantium",block:1035301,forkHash:"0x8d748b57"},{name:"constantinople",block:3660663,forkHash:"0xe49cab14"},{name:"petersburg",block:4321234,forkHash:"0xafec6b27"},{name:"istanbul",block:5435345,forkHash:"0xcbdb8838"},{name:"berlin",block:8290928,forkHash:"0x6910c8bd"},{name:"london",block:8897988,forkHash:"0x8e29f2f3"},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes$3=[{ip:"52.169.42.101",port:30303,id:"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf",location:"",comment:"IE"},{ip:"52.3.158.184",port:30303,id:"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8",location:"",comment:"INFURA"},{ip:"159.89.28.211",port:30303,id:"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6",location:"",comment:"AKASHA"}],dnsNetworks$2=["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net"],require$$2$3={name:name$G,chainId:chainId$3,networkId:networkId$3,defaultHardfork:defaultHardfork$3,consensus:consensus$4,comment:comment$G,url:url$G,genesis:genesis$3,hardforks:hardforks$4,bootstrapNodes:bootstrapNodes$3,dnsNetworks:dnsNetworks$2},name$F="kovan",chainId$2=42,networkId$2=42,defaultHardfork$2="istanbul",consensus$3={type:"poa",algorithm:"aura",aura:{}},comment$F="Parity PoA test network",url$F="https://kovan-testnet.github.io/website/",genesis$2={hash:"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9",timestamp:null,gasLimit:6e6,difficulty:131072,nonce:"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",extraData:"0x",stateRoot:"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2"},hardforks$3=[{name:"chainstart",block:0,forkHash:"0x010ffe56"},{name:"homestead",block:0,forkHash:"0x010ffe56"},{name:"tangerineWhistle",block:0,forkHash:"0x010ffe56"},{name:"spuriousDragon",block:0,forkHash:"0x010ffe56"},{name:"byzantium",block:5067e3,forkHash:"0x7f83c620"},{name:"constantinople",block:92e5,forkHash:"0xa94e3dc4"},{name:"petersburg",block:10255201,forkHash:"0x186874aa"},{name:"istanbul",block:14111141,forkHash:"0x7f6599a6"},{name:"berlin",block:24770900,forkHash:"0x1a0f10d9"},{name:"london",block:26741100,forkHash:"0x1ed20b71"},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes$2=[{ip:"116.203.116.241",port:30303,id:"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45",location:"",comment:"1"},{ip:"3.217.96.11",port:30303,id:"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0",location:"",comment:"2"},{ip:"108.61.170.124",port:30303,id:"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c",location:"",comment:"3"},{ip:"157.230.31.163",port:30303,id:"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0",location:"",comment:"4"}],require$$3$3={name:name$F,chainId:chainId$2,networkId:networkId$2,defaultHardfork:defaultHardfork$2,consensus:consensus$3,comment:comment$F,url:url$F,genesis:genesis$2,hardforks:hardforks$3,bootstrapNodes:bootstrapNodes$2},name$E="goerli",chainId$1=5,networkId$1=5,defaultHardfork$1="istanbul",consensus$2={type:"poa",algorithm:"clique",clique:{period:15,epoch:3e4}},comment$E="Cross-client PoA test network",url$E="https://github.com/goerli/testnet",genesis$1={hash:"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a",timestamp:"0x5c51a607",gasLimit:10485760,difficulty:1,nonce:"0x0000000000000000",extraData:"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",stateRoot:"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008"},hardforks$2=[{name:"chainstart",block:0,forkHash:"0xa3f5ab08"},{name:"homestead",block:0,forkHash:"0xa3f5ab08"},{name:"tangerineWhistle",block:0,forkHash:"0xa3f5ab08"},{name:"spuriousDragon",block:0,forkHash:"0xa3f5ab08"},{name:"byzantium",block:0,forkHash:"0xa3f5ab08"},{name:"constantinople",block:0,forkHash:"0xa3f5ab08"},{name:"petersburg",block:0,forkHash:"0xa3f5ab08"},{name:"istanbul",block:1561651,forkHash:"0xc25efa5c"},{name:"berlin",block:4460644,forkHash:"0x757a1c47"},{name:"london",block:5062605,forkHash:"0xb8c6299d"},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes$1=[{ip:"51.141.78.53",port:30303,id:"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a",location:"",comment:"Upstream bootnode 1"},{ip:"13.93.54.137",port:30303,id:"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b",location:"",comment:"Upstream bootnode 2"},{ip:"94.237.54.114",port:30313,id:"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291",location:"",comment:"Upstream bootnode 3"},{ip:"18.218.250.66",port:30313,id:"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949",location:"",comment:"Upstream bootnode 4"},{ip:"3.11.147.67",port:30303,id:"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91",location:"",comment:"Ethereum Foundation bootnode"},{ip:"51.15.116.226",port:30303,id:"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd",location:"",comment:"Goerli Initiative bootnode"},{ip:"51.15.119.157",port:30303,id:"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33",location:"",comment:"Goerli Initiative bootnode"},{ip:"51.15.119.157",port:40303,id:"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd",location:"",comment:"Goerli Initiative bootnode"}],dnsNetworks$1=["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"],require$$4$3={name:name$E,chainId:chainId$1,networkId:networkId$1,defaultHardfork:defaultHardfork$1,consensus:consensus$2,comment:comment$E,url:url$E,genesis:genesis$1,hardforks:hardforks$2,bootstrapNodes:bootstrapNodes$1,dnsNetworks:dnsNetworks$1},name$D="sepolia",chainId=11155111,networkId=11155111,defaultHardfork="istanbul",consensus$1={type:"pow",algorithm:"ethash",ethash:{}},comment$D="PoW test network to replace Ropsten",url$D="https://github.com/ethereum/go-ethereum/pull/23730",genesis={hash:"0x25a5cc106eea7138acab33231d7160d69cb777ee0c2c553fcddf5138993e6dd9",timestamp:"0x6159af19",gasLimit:3e7,difficulty:131072,nonce:"0x0000000000000000",extraData:"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521",stateRoot:"0x5eb6e371a698b8d68f665192350ffcecbbbf322916f4b51bd79bb6887da3f494"},hardforks$1=[{name:"chainstart",block:0,forkHash:"0xfe3366e7"},{name:"homestead",block:0,forkHash:"0xfe3366e7"},{name:"tangerineWhistle",block:0,forkHash:"0xfe3366e7"},{name:"spuriousDragon",block:0,forkHash:"0xfe3366e7"},{name:"byzantium",block:0,forkHash:"0xfe3366e7"},{name:"constantinople",block:0,forkHash:"0xfe3366e7"},{name:"petersburg",block:0,forkHash:"0xfe3366e7"},{name:"istanbul",block:0,forkHash:"0xfe3366e7"},{name:"muirGlacier",block:0,forkHash:"0xfe3366e7"},{name:"berlin",block:0,forkHash:"0xfe3366e7"},{name:"london",block:0,forkHash:"0xfe3366e7"},{name:"merge",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes=[{ip:"18.168.182.86",port:30303,id:"9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066",location:"",comment:"geth"},{ip:"52.14.151.177",port:30303,id:"ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7",location:"",comment:"besu"}],dnsNetworks=[],require$$5$3={name:name$D,chainId,networkId,defaultHardfork,consensus:consensus$1,comment:comment$D,url:url$D,genesis,hardforks:hardforks$1,bootstrapNodes,dnsNetworks};var __values$1=commonjsGlobal&&commonjsGlobal.__values||function(e){var a=typeof Symbol=="function"&&Symbol.iterator,t=a&&e[a],c=0;if(t)return t.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&c>=e.length&&(e=void 0),{value:e&&e[c++],done:!e}}};throw new TypeError(a?"Object is not iterable.":"Symbol.iterator is not defined.")},__importDefault=commonjsGlobal&&commonjsGlobal.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(chains,"__esModule",{value:!0});chains.chains=chains._getInitializedChains=void 0;var mainnet_json_1=__importDefault(require$$0$3),ropsten_json_1=__importDefault(require$$1$3),rinkeby_json_1=__importDefault(require$$2$3),kovan_json_1=__importDefault(require$$3$3),goerli_json_1=__importDefault(require$$4$3),sepolia_json_1=__importDefault(require$$5$3);function _getInitializedChains(e){var a,t,c={1:"mainnet",3:"ropsten",4:"rinkeby",42:"kovan",5:"goerli",11155111:"sepolia"},i={mainnet:mainnet_json_1.default,ropsten:ropsten_json_1.default,rinkeby:rinkeby_json_1.default,kovan:kovan_json_1.default,goerli:goerli_json_1.default,sepolia:sepolia_json_1.default};if(e)try{for(var o=__values$1(e),b=o.next();!b.done;b=o.next()){var u=b.value,l=u.name;c[u.chainId.toString()]=l,i[l]=u}}catch(x){a={error:x}}finally{try{b&&!b.done&&(t=o.return)&&t.call(o)}finally{if(a)throw a.error}}return i.names=c,i}chains._getInitializedChains=_getInitializedChains;chains.chains=_getInitializedChains();var hardforks={};const name$C="chainstart",comment$C="Start of the Ethereum main chain",url$C="",status$C="",gasConfig$x={minGasLimit:{v:5e3,d:"Minimum the gas limit may ever be"},gasLimitBoundDivisor:{v:1024,d:"The bound divisor of the gas limit, used in update calculations"},maxRefundQuotient:{v:2,d:"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},gasPrices$x={base:{v:2,d:"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},tierStep:{v:[0,2,3,5,8,10,20],d:"Once per operation, for a selection of them"},exp:{v:10,d:"Base fee of the EXP opcode"},expByte:{v:10,d:"Times ceil(log256(exponent)) for the EXP instruction"},sha3:{v:30,d:"Base fee of the SHA3 opcode"},sha3Word:{v:6,d:"Once per word of the SHA3 operation's data"},sload:{v:50,d:"Base fee of the SLOAD opcode"},sstoreSet:{v:2e4,d:"Once per SSTORE operation if the zeroness changes from zero"},sstoreReset:{v:5e3,d:"Once per SSTORE operation if the zeroness does not change from zero"},sstoreRefund:{v:15e3,d:"Once per SSTORE operation if the zeroness changes to zero"},jumpdest:{v:1,d:"Base fee of the JUMPDEST opcode"},log:{v:375,d:"Base fee of the LOG opcode"},logData:{v:8,d:"Per byte in a LOG* operation's data"},logTopic:{v:375,d:"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},create:{v:32e3,d:"Base fee of the CREATE opcode"},call:{v:40,d:"Base fee of the CALL opcode"},callStipend:{v:2300,d:"Free gas given at beginning of call"},callValueTransfer:{v:9e3,d:"Paid for CALL when the value transfor is non-zero"},callNewAccount:{v:25e3,d:"Paid for CALL when the destination address didn't exist prior"},selfdestructRefund:{v:24e3,d:"Refunded following a selfdestruct operation"},memory:{v:3,d:"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},quadCoeffDiv:{v:512,d:"Divisor for the quadratic particle of the memory cost equation"},createData:{v:200,d:""},tx:{v:21e3,d:"Per transaction. NOTE: Not payable on data of calls between transactions"},txCreation:{v:32e3,d:"The cost of creating a contract via tx"},txDataZero:{v:4,d:"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},txDataNonZero:{v:68,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},copy:{v:3,d:"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},ecRecover:{v:3e3,d:""},sha256:{v:60,d:""},sha256Word:{v:12,d:""},ripemd160:{v:600,d:""},ripemd160Word:{v:120,d:""},identity:{v:15,d:""},identityWord:{v:3,d:""},stop:{v:0,d:"Base fee of the STOP opcode"},add:{v:3,d:"Base fee of the ADD opcode"},mul:{v:5,d:"Base fee of the MUL opcode"},sub:{v:3,d:"Base fee of the SUB opcode"},div:{v:5,d:"Base fee of the DIV opcode"},sdiv:{v:5,d:"Base fee of the SDIV opcode"},mod:{v:5,d:"Base fee of the MOD opcode"},smod:{v:5,d:"Base fee of the SMOD opcode"},addmod:{v:8,d:"Base fee of the ADDMOD opcode"},mulmod:{v:8,d:"Base fee of the MULMOD opcode"},signextend:{v:5,d:"Base fee of the SIGNEXTEND opcode"},lt:{v:3,d:"Base fee of the LT opcode"},gt:{v:3,d:"Base fee of the GT opcode"},slt:{v:3,d:"Base fee of the SLT opcode"},sgt:{v:3,d:"Base fee of the SGT opcode"},eq:{v:3,d:"Base fee of the EQ opcode"},iszero:{v:3,d:"Base fee of the ISZERO opcode"},and:{v:3,d:"Base fee of the AND opcode"},or:{v:3,d:"Base fee of the OR opcode"},xor:{v:3,d:"Base fee of the XOR opcode"},not:{v:3,d:"Base fee of the NOT opcode"},byte:{v:3,d:"Base fee of the BYTE opcode"},address:{v:2,d:"Base fee of the ADDRESS opcode"},balance:{v:20,d:"Base fee of the BALANCE opcode"},origin:{v:2,d:"Base fee of the ORIGIN opcode"},caller:{v:2,d:"Base fee of the CALLER opcode"},callvalue:{v:2,d:"Base fee of the CALLVALUE opcode"},calldataload:{v:3,d:"Base fee of the CALLDATALOAD opcode"},calldatasize:{v:2,d:"Base fee of the CALLDATASIZE opcode"},calldatacopy:{v:3,d:"Base fee of the CALLDATACOPY opcode"},codesize:{v:2,d:"Base fee of the CODESIZE opcode"},codecopy:{v:3,d:"Base fee of the CODECOPY opcode"},gasprice:{v:2,d:"Base fee of the GASPRICE opcode"},extcodesize:{v:20,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:20,d:"Base fee of the EXTCODECOPY opcode"},blockhash:{v:20,d:"Base fee of the BLOCKHASH opcode"},coinbase:{v:2,d:"Base fee of the COINBASE opcode"},timestamp:{v:2,d:"Base fee of the TIMESTAMP opcode"},number:{v:2,d:"Base fee of the NUMBER opcode"},difficulty:{v:2,d:"Base fee of the DIFFICULTY opcode"},gaslimit:{v:2,d:"Base fee of the GASLIMIT opcode"},pop:{v:2,d:"Base fee of the POP opcode"},mload:{v:3,d:"Base fee of the MLOAD opcode"},mstore:{v:3,d:"Base fee of the MSTORE opcode"},mstore8:{v:3,d:"Base fee of the MSTORE8 opcode"},sstore:{v:0,d:"Base fee of the SSTORE opcode"},jump:{v:8,d:"Base fee of the JUMP opcode"},jumpi:{v:10,d:"Base fee of the JUMPI opcode"},pc:{v:2,d:"Base fee of the PC opcode"},msize:{v:2,d:"Base fee of the MSIZE opcode"},gas:{v:2,d:"Base fee of the GAS opcode"},push:{v:3,d:"Base fee of the PUSH opcode"},dup:{v:3,d:"Base fee of the DUP opcode"},swap:{v:3,d:"Base fee of the SWAP opcode"},callcode:{v:40,d:"Base fee of the CALLCODE opcode"},return:{v:0,d:"Base fee of the RETURN opcode"},invalid:{v:0,d:"Base fee of the INVALID opcode"},selfdestruct:{v:0,d:"Base fee of the SELFDESTRUCT opcode"}},vm$x={stackLimit:{v:1024,d:"Maximum size of VM stack allowed"},callCreateDepth:{v:1024,d:"Maximum depth of call/create stack"},maxExtraDataSize:{v:32,d:"Maximum size extra data may be after Genesis"}},pow$x={minimumDifficulty:{v:131072,d:"The minimum that the difficulty may ever be"},difficultyBoundDivisor:{v:2048,d:"The bound divisor of the difficulty, used in the update calculations"},durationLimit:{v:13,d:"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},epochDuration:{v:3e4,d:"Duration between proof-of-work epochs"},timebombPeriod:{v:1e5,d:"Exponential difficulty timebomb period"},minerReward:{v:"5000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:0,d:"the amount of blocks to delay the difficulty bomb with"}},require$$0$2={name:name$C,comment:comment$C,url:url$C,status:status$C,gasConfig:gasConfig$x,gasPrices:gasPrices$x,vm:vm$x,pow:pow$x},name$B="homestead",comment$B="Homestead hardfork with protocol and network changes",url$B="https://eips.ethereum.org/EIPS/eip-606",status$B="Final",gasConfig$w={},gasPrices$w={delegatecall:{v:40,d:"Base fee of the DELEGATECALL opcode"}},vm$w={},pow$w={},require$$1$2={name:name$B,comment:comment$B,url:url$B,status:status$B,gasConfig:gasConfig$w,gasPrices:gasPrices$w,vm:vm$w,pow:pow$w},name$A="dao",comment$A="DAO rescue hardfork",url$A="https://eips.ethereum.org/EIPS/eip-779",status$A="Final",gasConfig$v={},gasPrices$v={},vm$v={},pow$v={},require$$2$2={name:name$A,comment:comment$A,url:url$A,status:status$A,gasConfig:gasConfig$v,gasPrices:gasPrices$v,vm:vm$v,pow:pow$v},name$z="tangerineWhistle",comment$z="Hardfork with gas cost changes for IO-heavy operations",url$z="https://eips.ethereum.org/EIPS/eip-608",status$z="Final",gasConfig$u={},gasPrices$u={sload:{v:200,d:"Once per SLOAD operation"},call:{v:700,d:"Once per CALL operation & message call transaction"},extcodesize:{v:700,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:700,d:"Base fee of the EXTCODECOPY opcode"},balance:{v:400,d:"Base fee of the BALANCE opcode"},delegatecall:{v:700,d:"Base fee of the DELEGATECALL opcode"},callcode:{v:700,d:"Base fee of the CALLCODE opcode"},selfdestruct:{v:5e3,d:"Base fee of the SELFDESTRUCT opcode"}},vm$u={},pow$u={},require$$3$2={name:name$z,comment:comment$z,url:url$z,status:status$z,gasConfig:gasConfig$u,gasPrices:gasPrices$u,vm:vm$u,pow:pow$u},name$y="spuriousDragon",comment$y="HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",url$y="https://eips.ethereum.org/EIPS/eip-607",status$y="Final",gasConfig$t={},gasPrices$t={expByte:{v:50,d:"Times ceil(log256(exponent)) for the EXP instruction"}},vm$t={maxCodeSize:{v:24576,d:"Maximum length of contract code"}},pow$t={},require$$4$2={name:name$y,comment:comment$y,url:url$y,status:status$y,gasConfig:gasConfig$t,gasPrices:gasPrices$t,vm:vm$t,pow:pow$t},name$x="byzantium",comment$x="Hardfork with new precompiles, instructions and other protocol changes",url$x="https://eips.ethereum.org/EIPS/eip-609",status$x="Final",gasConfig$s={},gasPrices$s={modexpGquaddivisor:{v:20,d:"Gquaddivisor from modexp precompile for gas calculation"},ecAdd:{v:500,d:"Gas costs for curve addition precompile"},ecMul:{v:4e4,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:1e5,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:8e4,d:"Gas costs regarding curve pairing precompile input length"},revert:{v:0,d:"Base fee of the REVERT opcode"},staticcall:{v:700,d:"Base fee of the STATICCALL opcode"},returndatasize:{v:2,d:"Base fee of the RETURNDATASIZE opcode"},returndatacopy:{v:3,d:"Base fee of the RETURNDATACOPY opcode"}},vm$s={},pow$s={minerReward:{v:"3000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:3e6,d:"the amount of blocks to delay the difficulty bomb with"}},require$$5$2={name:name$x,comment:comment$x,url:url$x,status:status$x,gasConfig:gasConfig$s,gasPrices:gasPrices$s,vm:vm$s,pow:pow$s},name$w="constantinople",comment$w="Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",url$w="https://eips.ethereum.org/EIPS/eip-1013",status$w="Final",gasConfig$r={},gasPrices$r={netSstoreNoopGas:{v:200,d:"Once per SSTORE operation if the value doesn't change"},netSstoreInitGas:{v:2e4,d:"Once per SSTORE operation from clean zero"},netSstoreCleanGas:{v:5e3,d:"Once per SSTORE operation from clean non-zero"},netSstoreDirtyGas:{v:200,d:"Once per SSTORE operation from dirty"},netSstoreClearRefund:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},netSstoreResetRefund:{v:4800,d:"Once per SSTORE operation for resetting to the original non-zero value"},netSstoreResetClearRefund:{v:19800,d:"Once per SSTORE operation for resetting to the original zero value"},shl:{v:3,d:"Base fee of the SHL opcode"},shr:{v:3,d:"Base fee of the SHR opcode"},sar:{v:3,d:"Base fee of the SAR opcode"},extcodehash:{v:400,d:"Base fee of the EXTCODEHASH opcode"},create2:{v:32e3,d:"Base fee of the CREATE2 opcode"}},vm$r={},pow$r={minerReward:{v:"2000000000000000000",d:"The amount a miner gets rewarded for mining a block"},difficultyBombDelay:{v:5e6,d:"the amount of blocks to delay the difficulty bomb with"}},require$$6$3={name:name$w,comment:comment$w,url:url$w,status:status$w,gasConfig:gasConfig$r,gasPrices:gasPrices$r,vm:vm$r,pow:pow$r},name$v="petersburg",comment$v="Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",url$v="https://eips.ethereum.org/EIPS/eip-1716",status$v="Final",gasConfig$q={},gasPrices$q={netSstoreNoopGas:{v:null,d:"Removed along EIP-1283"},netSstoreInitGas:{v:null,d:"Removed along EIP-1283"},netSstoreCleanGas:{v:null,d:"Removed along EIP-1283"},netSstoreDirtyGas:{v:null,d:"Removed along EIP-1283"},netSstoreClearRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetClearRefund:{v:null,d:"Removed along EIP-1283"}},vm$q={},pow$q={},require$$7$3={name:name$v,comment:comment$v,url:url$v,status:status$v,gasConfig:gasConfig$q,gasPrices:gasPrices$q,vm:vm$q,pow:pow$q},name$u="istanbul",comment$u="HF targeted for December 2019 following the Constantinople/Petersburg HF",url$u="https://eips.ethereum.org/EIPS/eip-1679",status$u="Final",gasConfig$p={},gasPrices$p={blake2Round:{v:1,d:"Gas cost per round for the Blake2 F precompile"},ecAdd:{v:150,d:"Gas costs for curve addition precompile"},ecMul:{v:6e3,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:45e3,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:34e3,d:"Gas costs regarding curve pairing precompile input length"},txDataNonZero:{v:16,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},sstoreSentryGasEIP2200:{v:2300,d:"Minimum gas required to be present for an SSTORE call, not consumed"},sstoreNoopGasEIP2200:{v:800,d:"Once per SSTORE operation if the value doesn't change"},sstoreDirtyGasEIP2200:{v:800,d:"Once per SSTORE operation if a dirty value is changed"},sstoreInitGasEIP2200:{v:2e4,d:"Once per SSTORE operation from clean zero to non-zero"},sstoreInitRefundEIP2200:{v:19200,d:"Once per SSTORE operation for resetting to the original zero value"},sstoreCleanGasEIP2200:{v:5e3,d:"Once per SSTORE operation from clean non-zero to something else"},sstoreCleanRefundEIP2200:{v:4200,d:"Once per SSTORE operation for resetting to the original non-zero value"},sstoreClearRefundEIP2200:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},balance:{v:700,d:"Base fee of the BALANCE opcode"},extcodehash:{v:700,d:"Base fee of the EXTCODEHASH opcode"},chainid:{v:2,d:"Base fee of the CHAINID opcode"},selfbalance:{v:5,d:"Base fee of the SELFBALANCE opcode"},sload:{v:800,d:"Base fee of the SLOAD opcode"}},vm$p={},pow$p={},require$$8$3={name:name$u,comment:comment$u,url:url$u,status:status$u,gasConfig:gasConfig$p,gasPrices:gasPrices$p,vm:vm$p,pow:pow$p},name$t="muirGlacier",comment$t="HF to delay the difficulty bomb",url$t="https://eips.ethereum.org/EIPS/eip-2384",status$t="Final",gasConfig$o={},gasPrices$o={},vm$o={},pow$o={difficultyBombDelay:{v:9e6,d:"the amount of blocks to delay the difficulty bomb with"}},require$$9$3={name:name$t,comment:comment$t,url:url$t,status:status$t,gasConfig:gasConfig$o,gasPrices:gasPrices$o,vm:vm$o,pow:pow$o},name$s="berlin",comment$s="HF targeted for July 2020 following the Muir Glacier HF",url$s="https://eips.ethereum.org/EIPS/eip-2070",status$s="Final",eips$7=[2565,2929,2718,2930],require$$10$2={name:name$s,comment:comment$s,url:url$s,status:status$s,eips:eips$7},name$r="london",comment$r="HF targeted for July 2021 following the Berlin fork",url$r="https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",status$r="Final",eips$6=[1559,3198,3529,3541],require$$11$2={name:name$r,comment:comment$r,url:url$r,status:status$r,eips:eips$6},name$q="shanghai",comment$q="Next feature hardfork after the merge hardfork",url$q="https://github.com/ethereum/pm/issues/356",status$q="Pre-Draft",eips$5=[],require$$12$1={name:name$q,comment:comment$q,url:url$q,status:status$q,eips:eips$5},name$p="arrowGlacier",comment$p="HF to delay the difficulty bomb",url$p="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",status$p="Final",eips$4=[4345],gasConfig$n={},gasPrices$n={},vm$n={},pow$n={},require$$13$1={name:name$p,comment:comment$p,url:url$p,status:status$p,eips:eips$4,gasConfig:gasConfig$n,gasPrices:gasPrices$n,vm:vm$n,pow:pow$n},name$o="grayGlacier",comment$o="Delaying the difficulty bomb to Mid September 2022",url$o="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",status$o="Draft",eips$3=[5133],gasConfig$m={},gasPrices$m={},vm$m={},pow$m={},require$$14$1={name:name$o,comment:comment$o,url:url$o,status:status$o,eips:eips$3,gasConfig:gasConfig$m,gasPrices:gasPrices$m,vm:vm$m,pow:pow$m},name$n="mergeForkIdTransition",comment$n="Pre-merge hardfork to fork off non-upgraded clients",url$n="https://eips.ethereum.org/EIPS/eip-3675",status$n="Draft",eips$2=[],require$$15$1={name:name$n,comment:comment$n,url:url$n,status:status$n,eips:eips$2},name$m="merge",comment$m="Hardfork to upgrade the consensus mechanism to Proof-of-Stake",url$m="https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",status$m="Draft",consensus={type:"pos",algorithm:"casper",casper:{}},eips$1=[3675,4399],require$$16$1={name:name$m,comment:comment$m,url:url$m,status:status$m,consensus,eips:eips$1};Object.defineProperty(hardforks,"__esModule",{value:!0});hardforks.hardforks=void 0;hardforks.hardforks=[["chainstart",require$$0$2],["homestead",require$$1$2],["dao",require$$2$2],["tangerineWhistle",require$$3$2],["spuriousDragon",require$$4$2],["byzantium",require$$5$2],["constantinople",require$$6$3],["petersburg",require$$7$3],["istanbul",require$$8$3],["muirGlacier",require$$9$3],["berlin",require$$10$2],["london",require$$11$2],["shanghai",require$$12$1],["arrowGlacier",require$$13$1],["grayGlacier",require$$14$1],["mergeForkIdTransition",require$$15$1],["merge",require$$16$1]];var eips={};const name$l="EIP-1153",number$f=1153,comment$l="Transient Storage",url$l="https://eips.ethereum.org/EIPS/eip-1153",status$l="Review",minimumHardfork$l="chainstart",requiredEIPs$d=[],gasConfig$l={},gasPrices$l={tstore:{v:100,d:"Base fee of the TSTORE opcode"},tload:{v:100,d:"Base fee of the TLOAD opcode"}},vm$l={},pow$l={},require$$0$1={name:name$l,number:number$f,comment:comment$l,url:url$l,status:status$l,minimumHardfork:minimumHardfork$l,requiredEIPs:requiredEIPs$d,gasConfig:gasConfig$l,gasPrices:gasPrices$l,vm:vm$l,pow:pow$l},name$k="EIP-1559",number$e=1559,comment$k="Fee market change for ETH 1.0 chain",url$k="https://eips.ethereum.org/EIPS/eip-1559",status$k="Final",minimumHardfork$k="berlin",requiredEIPs$c=[2930],gasConfig$k={baseFeeMaxChangeDenominator:{v:8,d:"Maximum base fee change denominator"},elasticityMultiplier:{v:2,d:"Maximum block gas target elasticity"},initialBaseFee:{v:1e9,d:"Initial base fee on first EIP1559 block"}},gasPrices$k={},vm$k={},pow$k={},require$$1$1={name:name$k,number:number$e,comment:comment$k,url:url$k,status:status$k,minimumHardfork:minimumHardfork$k,requiredEIPs:requiredEIPs$c,gasConfig:gasConfig$k,gasPrices:gasPrices$k,vm:vm$k,pow:pow$k},name$j="EIP-2315",number$d=2315,comment$j="Simple subroutines for the EVM",url$j="https://eips.ethereum.org/EIPS/eip-2315",status$j="Draft",minimumHardfork$j="istanbul",gasConfig$j={},gasPrices$j={beginsub:{v:2,d:"Base fee of the BEGINSUB opcode"},returnsub:{v:5,d:"Base fee of the RETURNSUB opcode"},jumpsub:{v:10,d:"Base fee of the JUMPSUB opcode"}},vm$j={},pow$j={},require$$2$1={name:name$j,number:number$d,comment:comment$j,url:url$j,status:status$j,minimumHardfork:minimumHardfork$j,gasConfig:gasConfig$j,gasPrices:gasPrices$j,vm:vm$j,pow:pow$j},name$i="EIP-2537",number$c=2537,comment$i="BLS12-381 precompiles",url$i="https://eips.ethereum.org/EIPS/eip-2537",status$i="Draft",minimumHardfork$i="chainstart",gasConfig$i={},gasPrices$i={Bls12381G1AddGas:{v:600,d:"Gas cost of a single BLS12-381 G1 addition precompile-call"},Bls12381G1MulGas:{v:12e3,d:"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},Bls12381G2AddGas:{v:4500,d:"Gas cost of a single BLS12-381 G2 addition precompile-call"},Bls12381G2MulGas:{v:55e3,d:"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},Bls12381PairingBaseGas:{v:115e3,d:"Base gas cost of BLS12-381 pairing check"},Bls12381PairingPerPairGas:{v:23e3,d:"Per-pair gas cost of BLS12-381 pairing check"},Bls12381MapG1Gas:{v:5500,d:"Gas cost of BLS12-381 map field element to G1"},Bls12381MapG2Gas:{v:11e4,d:"Gas cost of BLS12-381 map field element to G2"},Bls12381MultiExpGasDiscount:{v:[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],d:"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},vm$i={},pow$i={},require$$3$1={name:name$i,number:number$c,comment:comment$i,url:url$i,status:status$i,minimumHardfork:minimumHardfork$i,gasConfig:gasConfig$i,gasPrices:gasPrices$i,vm:vm$i,pow:pow$i},name$h="EIP-2565",number$b=2565,comment$h="ModExp gas cost",url$h="https://eips.ethereum.org/EIPS/eip-2565",status$h="Final",minimumHardfork$h="byzantium",gasConfig$h={},gasPrices$h={modexpGquaddivisor:{v:3,d:"Gquaddivisor from modexp precompile for gas calculation"}},vm$h={},pow$h={},require$$4$1={name:name$h,number:number$b,comment:comment$h,url:url$h,status:status$h,minimumHardfork:minimumHardfork$h,gasConfig:gasConfig$h,gasPrices:gasPrices$h,vm:vm$h,pow:pow$h},name$g="EIP-2718",comment$g="Typed Transaction Envelope",url$g="https://eips.ethereum.org/EIPS/eip-2718",status$g="Final",minimumHardfork$g="chainstart",gasConfig$g={},gasPrices$g={},vm$g={},pow$g={},require$$5$1={name:name$g,comment:comment$g,url:url$g,status:status$g,minimumHardfork:minimumHardfork$g,gasConfig:gasConfig$g,gasPrices:gasPrices$g,vm:vm$g,pow:pow$g},name$f="EIP-2929",comment$f="Gas cost increases for state access opcodes",url$f="https://eips.ethereum.org/EIPS/eip-2929",status$f="Final",minimumHardfork$f="chainstart",gasConfig$f={},gasPrices$f={coldsload:{v:2100,d:"Gas cost of the first read of storage from a given location (per transaction)"},coldaccountaccess:{v:2600,d:"Gas cost of the first read of a given address (per transaction)"},warmstorageread:{v:100,d:"Gas cost of reading storage locations which have already loaded 'cold'"},sstoreCleanGasEIP2200:{v:2900,d:"Once per SSTORE operation from clean non-zero to something else"},sstoreNoopGasEIP2200:{v:100,d:"Once per SSTORE operation if the value doesn't change"},sstoreDirtyGasEIP2200:{v:100,d:"Once per SSTORE operation if a dirty value is changed"},sstoreInitRefundEIP2200:{v:19900,d:"Once per SSTORE operation for resetting to the original zero value"},sstoreCleanRefundEIP2200:{v:4900,d:"Once per SSTORE operation for resetting to the original non-zero value"},call:{v:0,d:"Base fee of the CALL opcode"},callcode:{v:0,d:"Base fee of the CALLCODE opcode"},delegatecall:{v:0,d:"Base fee of the DELEGATECALL opcode"},staticcall:{v:0,d:"Base fee of the STATICCALL opcode"},balance:{v:0,d:"Base fee of the BALANCE opcode"},extcodesize:{v:0,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:0,d:"Base fee of the EXTCODECOPY opcode"},extcodehash:{v:0,d:"Base fee of the EXTCODEHASH opcode"},sload:{v:0,d:"Base fee of the SLOAD opcode"},sstore:{v:0,d:"Base fee of the SSTORE opcode"}},vm$f={},pow$f={},require$$6$2={name:name$f,comment:comment$f,url:url$f,status:status$f,minimumHardfork:minimumHardfork$f,gasConfig:gasConfig$f,gasPrices:gasPrices$f,vm:vm$f,pow:pow$f},name$e="EIP-2930",comment$e="Optional access lists",url$e="https://eips.ethereum.org/EIPS/eip-2930",status$e="Final",minimumHardfork$e="istanbul",requiredEIPs$b=[2718,2929],gasConfig$e={},gasPrices$e={accessListStorageKeyCost:{v:1900,d:"Gas cost per storage key in an Access List transaction"},accessListAddressCost:{v:2400,d:"Gas cost per storage key in an Access List transaction"}},vm$e={},pow$e={},require$$7$2={name:name$e,comment:comment$e,url:url$e,status:status$e,minimumHardfork:minimumHardfork$e,requiredEIPs:requiredEIPs$b,gasConfig:gasConfig$e,gasPrices:gasPrices$e,vm:vm$e,pow:pow$e},name$d="EIP-3198",number$a=3198,comment$d="BASEFEE opcode",url$d="https://eips.ethereum.org/EIPS/eip-3198",status$d="Final",minimumHardfork$d="london",gasConfig$d={},gasPrices$d={basefee:{v:2,d:"Gas cost of the BASEFEE opcode"}},vm$d={},pow$d={},require$$8$2={name:name$d,number:number$a,comment:comment$d,url:url$d,status:status$d,minimumHardfork:minimumHardfork$d,gasConfig:gasConfig$d,gasPrices:gasPrices$d,vm:vm$d,pow:pow$d},name$c="EIP-3529",comment$c="Reduction in refunds",url$c="https://eips.ethereum.org/EIPS/eip-3529",status$c="Final",minimumHardfork$c="berlin",requiredEIPs$a=[2929],gasConfig$c={maxRefundQuotient:{v:5,d:"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},gasPrices$c={selfdestructRefund:{v:0,d:"Refunded following a selfdestruct operation"},sstoreClearRefundEIP2200:{v:4800,d:"Once per SSTORE operation for clearing an originally existing storage slot"}},vm$c={},pow$c={},require$$9$2={name:name$c,comment:comment$c,url:url$c,status:status$c,minimumHardfork:minimumHardfork$c,requiredEIPs:requiredEIPs$a,gasConfig:gasConfig$c,gasPrices:gasPrices$c,vm:vm$c,pow:pow$c},name$b="EIP-3540",number$9=3540,comment$b="EVM Object Format (EOF) v1",url$b="https://eips.ethereum.org/EIPS/eip-3540",status$b="Review",minimumHardfork$b="london",requiredEIPs$9=[3541],gasConfig$b={},gasPrices$b={},vm$b={},pow$b={},require$$10$1={name:name$b,number:number$9,comment:comment$b,url:url$b,status:status$b,minimumHardfork:minimumHardfork$b,requiredEIPs:requiredEIPs$9,gasConfig:gasConfig$b,gasPrices:gasPrices$b,vm:vm$b,pow:pow$b},name$a="EIP-3541",comment$a="Reject new contracts starting with the 0xEF byte",url$a="https://eips.ethereum.org/EIPS/eip-3541",status$a="Final",minimumHardfork$a="berlin",requiredEIPs$8=[],gasConfig$a={},gasPrices$a={},vm$a={},pow$a={},require$$11$1={name:name$a,comment:comment$a,url:url$a,status:status$a,minimumHardfork:minimumHardfork$a,requiredEIPs:requiredEIPs$8,gasConfig:gasConfig$a,gasPrices:gasPrices$a,vm:vm$a,pow:pow$a},name$9="EIP-3554",comment$9="Reduction in refunds",url$9="Difficulty Bomb Delay to December 1st 2021",status$9="Final",minimumHardfork$9="muirGlacier",requiredEIPs$7=[],gasConfig$9={},gasPrices$9={},vm$9={},pow$9={difficultyBombDelay:{v:95e5,d:"the amount of blocks to delay the difficulty bomb with"}},require$$12={name:name$9,comment:comment$9,url:url$9,status:status$9,minimumHardfork:minimumHardfork$9,requiredEIPs:requiredEIPs$7,gasConfig:gasConfig$9,gasPrices:gasPrices$9,vm:vm$9,pow:pow$9},name$8="EIP-3607",number$8=3607,comment$8="Reject transactions from senders with deployed code",url$8="https://eips.ethereum.org/EIPS/eip-3607",status$8="Final",minimumHardfork$8="chainstart",requiredEIPs$6=[],gasConfig$8={},gasPrices$8={},vm$8={},pow$8={},require$$13={name:name$8,number:number$8,comment:comment$8,url:url$8,status:status$8,minimumHardfork:minimumHardfork$8,requiredEIPs:requiredEIPs$6,gasConfig:gasConfig$8,gasPrices:gasPrices$8,vm:vm$8,pow:pow$8},name$7="EIP-3651",number$7=3198,comment$7="Warm COINBASE",url$7="https://eips.ethereum.org/EIPS/eip-3651",status$7="Review",minimumHardfork$7="london",requiredEIPs$5=[2929],gasConfig$7={},gasPrices$7={},vm$7={},pow$7={},require$$14={name:name$7,number:number$7,comment:comment$7,url:url$7,status:status$7,minimumHardfork:minimumHardfork$7,requiredEIPs:requiredEIPs$5,gasConfig:gasConfig$7,gasPrices:gasPrices$7,vm:vm$7,pow:pow$7},name$6="EIP-3670",number$6=3670,comment$6="EOF - Code Validation",url$6="https://eips.ethereum.org/EIPS/eip-3670",status$6="Review",minimumHardfork$6="london",requiredEIPs$4=[3540],gasConfig$6={},gasPrices$6={},vm$6={},pow$6={},require$$15={name:name$6,number:number$6,comment:comment$6,url:url$6,status:status$6,minimumHardfork:minimumHardfork$6,requiredEIPs:requiredEIPs$4,gasConfig:gasConfig$6,gasPrices:gasPrices$6,vm:vm$6,pow:pow$6},name$5="EIP-3675",number$5=3675,comment$5="Upgrade consensus to Proof-of-Stake",url$5="https://eips.ethereum.org/EIPS/eip-3675",status$5="Review",minimumHardfork$5="london",requiredEIPs$3=[],gasConfig$5={},gasPrices$5={},vm$5={},pow$5={},require$$16={name:name$5,number:number$5,comment:comment$5,url:url$5,status:status$5,minimumHardfork:minimumHardfork$5,requiredEIPs:requiredEIPs$3,gasConfig:gasConfig$5,gasPrices:gasPrices$5,vm:vm$5,pow:pow$5},name$4="EIP-3855",number$4=3855,comment$4="PUSH0 instruction",url$4="https://eips.ethereum.org/EIPS/eip-3855",status$4="Review",minimumHardfork$4="chainstart",requiredEIPs$2=[],gasConfig$4={},gasPrices$4={push0:{v:2,d:"Base fee of the PUSH0 opcode"}},vm$4={},pow$4={},require$$17={name:name$4,number:number$4,comment:comment$4,url:url$4,status:status$4,minimumHardfork:minimumHardfork$4,requiredEIPs:requiredEIPs$2,gasConfig:gasConfig$4,gasPrices:gasPrices$4,vm:vm$4,pow:pow$4},name$3="EIP-3860",number$3=3860,comment$3="Limit and meter initcode",url$3="https://eips.ethereum.org/EIPS/eip-3860",status$3="Review",minimumHardfork$3="spuriousDragon",requiredEIPs$1=[],gasConfig$3={},gasPrices$3={initCodeWordCost:{v:2,d:"Gas to pay for each word (32 bytes) of initcode when creating a contract"}},vm$3={maxInitCodeSize:{v:49152,d:"Maximum length of initialization code when creating a contract"}},pow$3={},require$$18={name:name$3,number:number$3,comment:comment$3,url:url$3,status:status$3,minimumHardfork:minimumHardfork$3,requiredEIPs:requiredEIPs$1,gasConfig:gasConfig$3,gasPrices:gasPrices$3,vm:vm$3,pow:pow$3},name$2="EIP-4345",number$2=4345,comment$2="Difficulty Bomb Delay to June 2022",url$2="https://eips.ethereum.org/EIPS/eip-4345",status$2="Final",minimumHardfork$2="london",gasConfig$2={},gasPrices$2={},vm$2={},pow$2={difficultyBombDelay:{v:107e5,d:"the amount of blocks to delay the difficulty bomb with"}},require$$19={name:name$2,number:number$2,comment:comment$2,url:url$2,status:status$2,minimumHardfork:minimumHardfork$2,gasConfig:gasConfig$2,gasPrices:gasPrices$2,vm:vm$2,pow:pow$2},name$1="EIP-4399",number$1=4399,comment$1="Supplant DIFFICULTY opcode with PREVRANDAO",url$1="https://eips.ethereum.org/EIPS/eip-4399",status$1="Review",minimumHardfork$1="london",requiredEIPs=[],gasConfig$1={},gasPrices$1={},vm$1={},pow$1={},require$$20={name:name$1,number:number$1,comment:comment$1,url:url$1,status:status$1,minimumHardfork:minimumHardfork$1,requiredEIPs,gasConfig:gasConfig$1,gasPrices:gasPrices$1,vm:vm$1,pow:pow$1},name="EIP-5133",number=5133,comment="Delaying Difficulty Bomb to mid-September 2022",url="https://eips.ethereum.org/EIPS/eip-5133",status="Draft",minimumHardfork="grayGlacier",gasConfig={},gasPrices={},vm={},pow={difficultyBombDelay:{v:114e5,d:"the amount of blocks to delay the difficulty bomb with"}},require$$21={name,number,comment,url,status,minimumHardfork,gasConfig,gasPrices,vm,pow};Object.defineProperty(eips,"__esModule",{value:!0});eips.EIPs=void 0;eips.EIPs={1153:require$$0$1,1559:require$$1$1,2315:require$$2$1,2537:require$$3$1,2565:require$$4$1,2718:require$$5$1,2929:require$$6$2,2930:require$$7$2,3198:require$$8$2,3529:require$$9$2,3540:require$$10$1,3541:require$$11$1,3554:require$$12,3607:require$$13,3651:require$$14,3670:require$$15,3675:require$$16,3855:require$$17,3860:require$$18,4345:require$$19,4399:require$$20,5133:require$$21};const require$$6$1={"0x000d836201318ec6899a67540690382780743280":"0xad78ebc5ac6200000","0x001762430ea9c3a26e5749afdb70da5f78ddbb8c":"0xad78ebc5ac6200000","0x001d14804b399c6ef80e64576f657660804fec0b":"0xe3aeb5737240a00000","0x0032403587947b9f15622a68d104d54d33dbd1cd":"0x433874f632cc60000","0x00497e92cdc0e0b963d752b2296acb87da828b24":"0xa8f649fe7c6180000","0x004bfbe1546bc6c65b5c7eaa55304b38bbfec6d3":"0x6c6b935b8bbd400000","0x005a9c03f69d17d66cbb8ad721008a9ebbb836fb":"0x6c6b935b8bbd400000","0x005d0ee8155ec0a6ff6808552ca5f16bb5be323a":"0xaadec983fcff40000","0x007622d84a234bb8b078230fcf84b67ae9a8acae":"0x25e1cc519952f80000","0x007b9fc31905b4994b04c9e2cfdc5e2770503f42":"0x6c5db2a4d815dc0000","0x007f4a23ca00cd043d25c2888c1aa5688f81a344":"0x29f0a95bfbf7290000","0x008639dabbe3aeac887b5dc0e43e13bcd287d76c":"0x10d0e3c87d6e2c0000","0x0089508679abf8c71bf6781687120e3e6a84584d":"0x6194049f30f7200000","0x008fc7cbadffbd0d7fe44f8dfd60a79d721a1c9c":"0x3635c9adc5dea00000","0x009560a3de627868f91fa8bfe1c1b7afaf08186b":"0x1c67f5f7baa0b00000","0x00969747f7a5b30645fe00e44901435ace24cc37":"0x5c283d410394100000","0x009a6d7db326679b77c90391a7476d238f3ba33e":"0xada55474b81340000","0x009eef0a0886056e3f69211853b9b7457f3782e4":"0xa2a878069b28e00000","0x009fdbf44e1f4a6362b769c39a475f95a96c2bc7":"0x1e931283ccc8500000","0x00a5797f52c9d58f189f36b1d45d1bf6041f2f6b":"0x127d1b3461acd1a0000","0x00aa5381b2138ebeffc191d5d8c391753b7098d2":"0x35abb09ffedeb68000","0x00aada25ea2286709abb422d41923fd380cd04c7":"0x233df3299f61720000","0x00acbfb2f25a5485c739ef70a44eeeeb7c65a66f":"0x56bc75e2d63100000","0x00acc6f082a442828764d11f58d6894ae408f073":"0xcb49b44ba602d800000","0x00b277b099a8e866ca0ec65bcb87284fd142a582":"0x6acb3df27e1f880000","0x00bdd4013aa31c04616c2bc9785f2788f915679b":"0xb9f65d00f63c0000","0x00c27d63fde24b92ee8a1e7ed5d26d8dc5c83b03":"0x6c6b935b8bbd400000","0x00c40fe2095423509b9fd9b754323158af2310f3":"0x0","0x00d75ed60c774f8b3a5a5173fb1833ad7105a2d9":"0x6cb7e74867d5e60000","0x00d78d89b35f472716eceafebf600527d3a1f969":"0x5e0549c9632e1d80000","0x00dae27b350bae20c5652124af5d8b5cba001ec1":"0x22b1c8c1227a00000","0x00dc01cbf44978a42e8de8e436edf94205cfb6ec":"0x4f0febbcda8cb40000","0x00e681bc2d10db62de85848324492250348e90bf":"0x43c33c1937564800000","0x00f463e137dcf625fbf3bca39eca98d2b968cf7f":"0x14061b9d77a5e980000","0x010007394b8b7565a1658af88ce463499135d6b7":"0x56bc75e2d63100000","0x010df1df4bed23760d2d1c03781586ddf7918e54":"0x340aad21b3b700000","0x010f4a98dfa1d9799bf5c796fb550efbe7ecd877":"0x1b2f292236292c70000","0x01155057002f6b0d18acb9388d3bc8129f8f7a20":"0x48a43c54602f700000","0x01226e0ad8d62277b162621c62c928e96e0b9a8c":"0x6c6b935b8bbd400000","0x0126e12ebc17035f35c0e9d11dd148393c405d7a":"0x6c660645aa47180000","0x012f396a2b5eb83559bac515e5210df2c8c362ba":"0xad78ebc5ac6200000","0x0134ff38155fabae94fd35c4ffe1d79de7ef9c59":"0x35659ef93f0fc40000","0x0136a5af6c3299c6b5f005fdaddb148c070b299b":"0x11aa9ac15f1280000","0x01488ad3da603c4cdd6cb0b7a1e30d2a30c8fc38":"0xad78ebc5ac6200000","0x014974a1f46bf204944a853111e52f1602617def":"0x6c6b935b8bbd400000","0x014b7f67b14f5d983d87014f570c8b993b9872b5":"0xad78ebc5ac6200000","0x0151fa5d17a2dce2d7f1eb39ef7fe2ad213d5d89":"0xd8d726b7177a800000","0x01577afd4e50890247c9b10d44af73229aec884f":"0x24dce54d34a1a00000","0x015f097d9acddcddafaf2a107eb93a40fc94b04c":"0x43c33c1937564800000","0x0169c1c210eae845e56840412e1f65993ea90fb4":"0x6c6b935b8bbd400000","0x016b60bb6d67928c29fd0313c666da8f1698d9c5":"0x6c6b935b8bbd400000","0x016c85e1613b900fa357b8283b120e65aefcdd08":"0x2b5d9784a97cd50000","0x018492488ba1a292342247b31855a55905fef269":"0x796e3ea3f8ab00000","0x018f20a27b27ec441af723fd9099f2cbb79d6263":"0x75792a8abdef7c0000","0x0191eb547e7bf6976b9b1b577546761de65622e2":"0x6c6b4c4da6ddbe0000","0x019d709579ff4bc09fdcdde431dc1447d2c260bc":"0x1158e460913d00000","0x01a25a5f5af0169b30864c3be4d7563ccd44f09e":"0x4d853c8f8908980000","0x01a7d9fa7d0eb1185c67e54da83c2e75db69e39f":"0x19d4addd0d8bc960000","0x01a818135a414210c37c62b625aca1a54611ac36":"0xe18398e7601900000","0x01b1cae91a3b9559afb33cdc6d689442fdbfe037":"0xad78ebc5ac6200000","0x01b5b5bc5a117fa08b34ed1db9440608597ac548":"0xad78ebc5ac6200000","0x01bbc14f67af0639aab1441e6a08d4ce7162090f":"0x46fcf68ff8be060000","0x01d03815c61f416b71a2610a2daba59ff6a6de5b":"0x205dfe50b81c82e0000","0x01d599ee0d5f8c38ab2d392e2c65b74c3ce31820":"0x1ba5abf9e779380000","0x01e40521122530d9ac91113c06a0190b6d63850b":"0x487a9a304539440000","0x01e6415d587b065490f1ed7f21d6e0f386ee6747":"0x6c6b935b8bbd400000","0x01e864d354741b423e6f42851724468c74f5aa9c":"0x43c33c1937564800000","0x01ed5fba8d2eab673aec042d30e4e8a611d8c55a":"0x6c6b935b8bbd400000","0x01fb8ec12425a04f813e46c54c05748ca6b29aa9":"0xe15730385467c0000","0x01ff1eb1dead50a7f2f9638fdee6eccf3a7b2ac8":"0x2086ac351052600000","0x020362c3ade878ca90d6b2d889a4cc5510eed5f3":"0x3888e8b311adb38000","0x0203ae01d4c41cae1865e04b1f5b53cdfaecae31":"0x3689cdceb28cd70000","0x02089361a3fe7451fb1f87f01a2d866653dc0b07":"0x22ac74832b5040000","0x021f69043de88c4917ca10f1842897eec0589c7c":"0x6b44cfb81487f40000","0x02290fb5f9a517f82845acdeca0fc846039be233":"0x6c6b935b8bbd400000","0x0239b4f21f8e05cd01512b2be7a0e18a6d974607":"0x3635c9adc5dea00000","0x02477212ffdd75e5155651b76506b1646671a1eb":"0x5f68e8131ecf800000","0x024a098ae702bef5406c9c22b78bd4eb2cc7a293":"0xd8d726b7177a800000","0x024bdd2c7bfd500ee7404f7fb3e9fb31dd20fbd1":"0x9c2007651b2500000","0x025367960304beee34591118e9ac2d1358d8021a":"0x6c6b935b8bbd400000","0x0256149f5b5063bea14e15661ffb58f9b459a957":"0x2629f66e0c53000000","0x02603d7a3bb297c67c877e5d34fbd5b913d4c63a":"0x1158e460913d00000","0x0261ad3a172abf1315f0ffec3270986a8409cb25":"0xb08213bcf8ffe0000","0x026432af37dc5113f1f46d480a4de0b28052237e":"0x1349b786e40bfc0000","0x0266ab1c6b0216230b9395443d5fa75e684568c6":"0x3635c9adc5dea00000","0x02751dc68cb5bd737027abf7ddb77390cd77c16b":"0x1158e460913d00000","0x02778e390fa17510a3428af2870c4273547d386c":"0x36c3c66170c0d720000","0x02ade5db22f8b758ee1443626c64ec2f32aa0a15":"0x43c33c1937564800000","0x02af2459a93d0b3f4d062636236cd4b29e3bcecf":"0x678a932062e4180000","0x02b1af72339b2a2256389fd64607de24f0de600a":"0x6c6b935b8bbd400000","0x02b643d6fabd437a851accbe79abb7fde126dccf":"0x18650127cc3dc800000","0x02b6d65cb00b7b36e1fb5ed3632c4cb20a894130":"0x43c33c1937564800000","0x02b7b1d6b34ce053a40eb65cd4a4f7dddd0e9f30":"0x252248deb6e6940000","0x02c9f7940a7b8b7a410bf83dc9c22333d4275dd3":"0x10f0cf064dd59200000","0x02d4a30968a39e2b3498c3a6a4ed45c1c6646822":"0x6c6b935b8bbd400000","0x02dfcb17a1b87441036374b762a5d3418b1cb4d4":"0x48b02ba9d1ba460000","0x02e4cb22be46258a40e16d4338d802fffd00c151":"0x149696eaceba810000","0x02e816afc1b5c0f39852131959d946eb3b07b5ad":"0x3635c9adc5dea00000","0x02f7f67209b16a17550c694c72583819c80b54ad":"0x5559306a78a700000","0x030973807b2f426914ad00181270acd27b8ff61f":"0x121ea68c114e5100000","0x03097923ba155e16d82f3ad3f6b815540884b92c":"0x62a992e53a0af00000","0x030fb3401f72bd3418b7d1da75bf8c519dd707dc":"0xa2a15d09519be00000","0x031e25db516b0f099faebfd94f890cf96660836b":"0x6c6b935b8bbd400000","0x0328510c09dbcd85194a98d67c33ac49f2f94d60":"0x2544faa778090e00000","0x0329188f080657ab3a2afa522467178279832085":"0xbbf510ddfcb260000","0x03317826d1f70aa4bddfa09be0c4105552d2358b":"0x21a754a6dc5280000","0x03337012ae1d7ff3ee7f697c403e7780188bf0ef":"0xad78ebc5ac6200000","0x03377c0e556b640103289a6189e1aeae63493467":"0x43c33c1937564800000","0x0349634dc2a9e80c3f7721ee2b5046aeaaedfbb5":"0xd8d726b7177a800000","0x0355bcacbd21441e95adeedc30c17218c8a408ce":"0x15af1d78b58c400000","0x036eeff5ba90a6879a14dff4c5043b18ca0460c9":"0x56bc75e2d63100000","0x03714b41d2a6f751008ef8dd4d2b29aecab8f36e":"0x14542ba12a337c00000","0x0372e852582e0934344a0fed2178304df25d4628":"0x43c33c1937564800000","0x0372ee5508bf8163ed284e5eef94ce4d7367e522":"0x56bc75e2d63100000","0x037dd056e7fdbd641db5b6bea2a8780a83fae180":"0x796e3ea3f8ab00000","0x038323b184cff7a82ae2e1bda7793fe4319ca0bf":"0x43c33c1937564800000","0x038779ca2dbe663e63db3fe75683ea0ec62e2383":"0x5a87e7d7f5f6580000","0x038e45eadd3d88b87fe4dab066680522f0dfc8f9":"0x21e19e0c9bab2400000","0x0392549a727f81655429cb928b529f25df4d1385":"0x16c43a0eea0740000","0x0394b90fadb8604f86f43fc1e35d3124b32a5989":"0x296aa140278e700000","0x039e7a4ebc284e2ccd42b1bdd60bd6511c0f7706":"0xf015f25736420000","0x039ef1ce52fe7963f166d5a275c4b1069fe3a832":"0x15af39e4aab2740000","0x03a26cfc4c18316f70d59e9e1a79ee3e8b962f4c":"0x6c6b935b8bbd400000","0x03aa622881236dd0f4940c24c324ff8b7b7e2186":"0xad78ebc5ac62000000","0x03af7ad9d5223cf7c8c13f20df67ebe5ffc5bb41":"0xad78ebc5ac6200000","0x03b0f17cd4469ddccfb7da697e82a91a5f9e7774":"0x1158e460913d00000","0x03b41b51f41df20dd279bae18c12775f77ad771c":"0x3635c9adc5dea00000","0x03be5b4629aefbbcab9de26d39576cb7f691d764":"0xadf30ba70c8970000","0x03c647a9f929b0781fe9ae01caa3e183e876777e":"0x182ab7c20ce5240000","0x03c91d92943603e752203e05340e566013b90045":"0x2b7cc2e9c3225c0000","0x03cb4c4f4516c4ff79a1b6244fbf572e1c7fea79":"0x9489237adb9a500000","0x03cb98d7acd817de9d886d22fab3f1b57d92a608":"0x56bc75e2d631000000","0x03cc9d2d21f86b84ac8ceaf971dba78a90e62570":"0x57473d05dabae80000","0x03d1724fd00e54aabcd2de2a91e8462b1049dd3a":"0x8f1d5c1cae37400000","0x03dedfcd0b3c2e17c705da248790ef98a6bd5751":"0x487a9a304539440000","0x03e8b084537557e709eae2e1e1a5a6bce1ef8314":"0x1158e460913d00000","0x03ea6d26d080e57aee3926b18e8ed73a4e5b2826":"0xad78ebc5ac6200000","0x03eb3cb860f6028da554d344a2bb5a500ae8b86f":"0x6c6b935b8bbd400000","0x03ebc63fda6660a465045e235fbe6e5cf195735f":"0x7b06ce87fdd680000","0x03ef6ad20ff7bd4f002bac58d47544cf879ae728":"0x175c758d0b96e5c0000","0x03f7b92008813ae0a676eb212814afab35221069":"0x6c6b935b8bbd400000","0x041170f581de80e58b2a045c8f7c1493b001b7cb":"0x303c74a1a336940000","0x0413d0cf78c001898a378b918cd6e498ea773c4d":"0xf2dc7d47f15600000","0x04241b41ecbd0bfdf1295e9d4fa59ea09e6c6186":"0x655f769450bc780000","0x043707071e2ae21eed977891dc79cd5d8ee1c2da":"0x6c6b935b8bbd400000","0x044e853144e3364495e7a69fa1d46abea3ac0964":"0x2ab2254b1dc9a8000","0x0455dcec8a7fc4461bfd7f37456fce3f4c3caac7":"0x15af1d78b58c400000","0x045ed7f6d9ee9f252e073268db022c6326adfc5b":"0x56bc75e2d63100000","0x046377f864b0143f282174a892a73d3ec8ec6132":"0xa5aa85009e39c0000","0x0469e8c440450b0e512626fe817e6754a8152830":"0x6c6b935b8bbd400000","0x046d274b1af615fb505a764ad8dda770b1db2f3d":"0x6c6b935b8bbd400000","0x047d5a26d7ad8f8e70600f70a398ddaa1c2db26f":"0x14542ba12a337c00000","0x047e87c8f7d1fce3b01353a85862a948ac049f3e":"0x50c5e761a444080000","0x047f9bf1529daf87d407175e6f171b5e59e9ff3e":"0x233c8fe42703e80000","0x04852732b4c652f6c2e58eb36587e60a62da14db":"0x43c33c1937564800000","0x048a8970ea4145c64d5517b8de5b46d0595aad06":"0x43c33c1937564800000","0x049c5d4bc6f25d4e456c697b52a07811ccd19fb1":"0x104400a2470e680000","0x04a1cada1cc751082ff8da928e3cfa000820a9e9":"0x22b1c8c1227a00000","0x04a80afad53ef1f84165cfd852b0fdf1b1c24ba8":"0x324e964b3eca80000","0x04aafc8ae5ce6f4903c89d7fac9cb19512224777":"0x1b1ae4d6e2ef500000","0x04ba4bb87140022c214a6fac42db5a16dd954045":"0x3635c9adc5dea00000","0x04ba8a3f03f08b895095994dda619edaacee3e7a":"0x6c6b935b8bbd400000","0x04c2c64bb54c3eccd05585e10ec6f99a0cdb01a3":"0x56bc75e2d63100000","0x04ce45f600db18a9d0851b29d9393ebdaafe3dc5":"0x1158e460913d00000","0x04d6b8d4da867407bb997749debbcdc0b358538a":"0x3635c9adc5dea00000","0x04d73896cf6593a691972a13a6e4871ff2c42b13":"0x6c6b935b8bbd400000","0x04d82af9e01a936d97f8f85940b970f9d4db9936":"0xad78ebc5ac6200000","0x04e5f5bc7c923fd1e31735e72ef968fd67110c6e":"0x57551dbc8e624c0000","0x04eca501630abce35218b174956b891ba25efb23":"0x36369ed7747d260000","0x0505a08e22a109015a22f685305354662a5531d5":"0x8cf23f909c0fa00000","0x0514954c3c2fb657f9a06f510ea22748f027cdd3":"0x15af1d78b58c400000","0x051633080d07a557adde319261b074997f14692d":"0x13a6b2b564871a00000","0x0517448dada761cc5ba4033ee881c83037036400":"0x6c4fd1ee246e780000","0x051d424276b21239665186133d653bb8b1862f89":"0x3635c9adc5dea00000","0x0521bc3a9f8711fecb10f50797d71083e341eb9d":"0x1158e460913d00000","0x05236d4c90d065f9e3938358aaffd777b86aec49":"0x1b1ae4d6e2ef500000","0x052a58e035f1fe9cdd169bcf20970345d12b9c51":"0x50c5e761a444080000","0x052eab1f61b6d45517283f41d1441824878749d0":"0xd8d726b7177a800000","0x05336e9a722728d963e7a1cf2759fd0274530fca":"0x31a2443f888a798000","0x053471cd9a41925b3904a5a8ffca3659e034be23":"0xad201a6794ff80000","0x05361d8eb6941d4e90fb7e1418a95a32d5257732":"0x1158e460913d00000","0x05423a54c8d0f9707e704173d923b946edc8e700":"0x6ea03c2bf8ba58000","0x05440c5b073b529b4829209dff88090e07c4f6f5":"0x45d29737e22f200000","0x055ab658c6f0ed4f875ed6742e4bc7292d1abbf0":"0x486cb9799191e0000","0x055bd02caf19d6202bbcdc836d187bd1c01cf261":"0x56bc75e2d63100000","0x055eac4f1ad3f58f0bd024d68ea60dbe01c6afb3":"0x56bc75e2d63100000","0x05665155cc49cbf6aabdd5ae92cbfaad82b8c0c1":"0x15af1d78b58c400000","0x056686078fb6bcf9ba0a8a8dc63a906f5feac0ea":"0x1b181e4bf2343c0000","0x05696b73916bd3033e05521e3211dfec026e98e4":"0x6c6b935b8bbd400000","0x056b1546894f9a85e203fb336db569b16c25e04f":"0x92edb09ff08d88000","0x057949e1ca0570469e4ce3c690ae613a6b01c559":"0xad78ebc5ac6200000","0x057dd29f2d19aa3da42327ea50bce86ff5c911d9":"0xd8d726b7177a800000","0x057f7f81cd7a406fc45994408b5049912c566463":"0x5c283d410394100000","0x05915d4e225a668162aee7d6c25fcfc6ed18db03":"0x398c37279259e0000","0x0596a27dc3ee115fce2f94b481bc207a9e261525":"0x3635c9adc5dea00000","0x05a830724302bc0f6ebdaa1ebeeeb46e6ce00b39":"0x556f64c1fe7fa0000","0x05ae7fd4bbcc80ca11a90a1ec7a301f7cccc83db":"0x3154c9729d05780000","0x05bb64a916be66f460f5e3b64332110d209e19ae":"0xe3aeb5737240a00000","0x05bf4fcfe772e45b826443852e6c351350ce72a2":"0x1b1ae4d6e2ef5000000","0x05c64004a9a826e94e5e4ee267fa2a7632dd4e6f":"0x36dc42ebff90b7f8000","0x05c736d365aa37b5c0be9c12c8ad5cd903c32cf9":"0x1455e7b800a86880000","0x05cb6c3b0072d3116761b532b218443b53e8f6c5":"0x1e02c3d7fca9b6280000","0x05d0f4d728ebe82e84bf597515ad41b60bf28b39":"0xe3aeb5737240a00000","0x05d68dad61d3bbdfb3f779265c49474aff3fcd30":"0x222c55dc1519d8000","0x05e671de55afec964b074de574d5158d5d21b0a3":"0xd5967be4fc3f100000","0x05e97b09492cd68f63b12b892ed1d11d152c0eca":"0x3708baed3d68900000","0x05f3631f5664bdad5d0132c8388d36d7d8920918":"0x1158e460913d00000","0x0609d83a6ce1ffc9b690f3e9a81e983e8bdc4d9d":"0xed2b525841adfc00000","0x061ea4877cd08944eb64c2966e9db8dedcfec06b":"0x3635c9adc5dea00000","0x0625d06056968b002206ff91980140242bfaa499":"0x3635c9adc5dea00000","0x0628bfbe5535782fb588406bc96660a49b011af5":"0x52663ccab1e1c00000","0x0631d18bbbbd30d9e1732bf36edae2ce8901ab80":"0xa3f98855ec39900000","0x0631dc40d74e5095e3729eddf49544ecd4396f67":"0x8ac7230489e800000","0x063759dd1c4e362eb19398951ff9f8fad1d31068":"0x21e19e0c9bab2400000","0x065ff575fd9c16d3cb6fd68ffc8f483fc32ec835":"0xad78ebc5ac6200000","0x06618e9d5762df62028601a81d4487d6a0ecb80e":"0x487a9a304539440000","0x066647cfc85d23d37605573d208ca154b244d76c":"0x21e19e0c9bab2400000","0x0678654ac6761db904a2f7e8595ec1eaac734308":"0x2f98b29c2818f80000","0x06860a93525955ff624940fadcffb8e149fd599c":"0x6c68ccd09b022c0000","0x068ce8bd6e902a45cb83b51541b40f39c4469712":"0x11c0f9bad4a46e00000","0x068e29b3f191c812a6393918f71ab933ae6847f2":"0x6c6acc67d7b1d40000","0x068e655766b944fb263619658740b850c94afa31":"0x1e87f85809dc00000","0x06964e2d17e9189f88a8203936b40ac96e533c06":"0xfc936392801c0000","0x06994cd83aa2640a97b2600b41339d1e0d3ede6c":"0xd8d726b7177a80000","0x069ed0ab7aa77de571f16106051d92afe195f2d0":"0xad78ebc5ac6200000","0x06ac26ad92cb859bd5905ddce4266aa0ec50a9c5":"0x2a034919dfbfbc0000","0x06b0c1e37f5a5ec4bbf50840548f9d3ac0288897":"0xd8d882e1928e7d0000","0x06b0ff834073cce1cbc9ea557ea87b605963e8b4":"0x1043561a8829300000","0x06b106649aa8c421ddcd1b8c32cd0418cf30da1f":"0x878678326eac9000000","0x06b5ede6fdf1d6e9a34721379aeaa17c713dd82a":"0x6c6b935b8bbd400000","0x06cbfa08cdd4fba737bac407be8224f4eef35828":"0x202be5e8382e8b8000","0x06d6cb308481c336a6e1a225a912f6e6355940a1":"0x5f68e8131ecf800000","0x06dc7f18cee7edab5b795337b1df6a9e8bd8ae59":"0x15af1d78b58c400000","0x06f68de3d739db41121eacf779aada3de8762107":"0x18493fba64ef00000","0x06f7dc8d1b9462cef6feb13368a7e3974b097f9f":"0x6c6b935b8bbd400000","0x0701f9f147ec486856f5e1b71de9f117e99e2105":"0x965da717fd5b80000","0x070d5d364cb7bbf822fc2ca91a35bdd441b215d5":"0x6c6b935b8bbd400000","0x071dd90d14d41f4ff7c413c24238d3359cd61a07":"0x7b53f79e888dac00000","0x0726c42e00f45404836eb1e280d073e7059687f5":"0x58003e3fb947a38000","0x0727be0a2a00212048b5520fbefb953ebc9d54a0":"0x21e19e0c9bab2400000","0x0729a8a4a5ba23f579d0025b1ad0f8a0d35cdfd2":"0x20dd68aaf3289100000","0x0729b4b47c09eb16158464c8aa7fd9690b438839":"0x6c68ccd09b022c0000","0x0734a0a81c9562f4d9e9e10a8503da15db46d76e":"0xfc936392801c0000","0x073c67e09b5c713c5221c8a0c7f3f74466c347b0":"0x41bad155e6512200000","0x073f1ed1c9c3e9c52a9b0249a5c1caa0571fdf05":"0x3d0ff0b013b800000","0x0748713145ef83c3f0ef4d31d823786f7e9cc689":"0xf3f20b8dfa69d00000","0x075d15e2d33d8b4fa7dba8b9e607f04a261e340b":"0x678a932062e4180000","0x076561a856455d7ef86e63f87c73dbb628a55f45":"0x30ca024f987b900000","0x076ee99d3548623a03b5f99859d2d785a1778d48":"0xad78ebc5ac6200000","0x0770b43dbae4b1f35a927b4fa8124d3866caf97b":"0x37193ea7ef5b470000","0x0770c61be78772230cb5a3bb2429a72614a0b336":"0x16ee0a299b713418000","0x07723e3c30e8b731ee456a291ee0e798b0204a77":"0x6c6b935b8bbd400000","0x0773eeacc050f74720b4a1bd57895b1cceeb495d":"0x21e19e0c9bab2400000","0x07800d2f8068e448c79a4f69b1f15ef682aae5f6":"0x41bad155e6512200000","0x07a8dadec142571a7d53a4297051786d072cba55":"0x13b6da1139bda8000","0x07af938c1237a27c9030094dcf240750246e3d2c":"0x1b1ae4d6e2ef500000","0x07b1a306cb4312df66482c2cae72d1e061400fcd":"0x43c33c1937564800000","0x07b7a57033f8f11330e4665e185d234e83ec140b":"0xea7ee92a0c9a0b8000","0x07bc2cc8eedc01970700efc9c4fb36735e98cd71":"0xd8d726b7177a800000","0x07d41217badca5e0e60327d845a3464f0f27f84a":"0xd8d726b7177a800000","0x07d4334ec385e8aa54eedaeadb30022f0cdfa4ab":"0x8e91d520f2eb790000","0x07dae622630d1136381933d2ad6b22b839d82102":"0xad78ebc5ac6200000","0x07dc2bf83bc6af19a842ffea661af5b41b67fda1":"0x5150ae84a8cdf00000","0x07dc8c8b927adbedfa8f5d639b4352351f2f36d2":"0x110aed3b5530db0000","0x07ddd0422c86ef65bf0c7fc3452862b1228b08b8":"0x6ff5d2aa8f9fcf0000","0x07e1162ceae3cf21a3f62d105990302e307f4e3b":"0x52f103edb66ba80000","0x07e2b4cdeed9d087b12e556d9e770c13c099615f":"0x243d4d18229ca20000","0x07feef54c136850829badc4b49c3f2a73c89fb9e":"0x6685ac1bfe32c0000","0x080546508a3d2682c8b9884f13637b8847b44db3":"0x6c6b935b8bbd400000","0x08090876baadfee65c3d363ba55312748cfa873d":"0x5c2a99371cffe10000","0x08166f02313feae18bb044e7877c808b55b5bf58":"0x6acb3df27e1f880000","0x0829d0f7bb7c446cfbb0deadb2394d9db7249a87":"0x22ca3587cf4eb0000","0x08306de51981e7aca1856859b7c778696a6b69f9":"0xad78ebc5ac62000000","0x0837539b5f6a522a482cdcd3a9bb7043af39bdd2":"0x14542ba12a337c00000","0x0838a7768d9c2aca8ba279adfee4b1f491e326f1":"0xad78ebc5ac6200000","0x08411652c871713609af0062a8a1281bf1bbcfd9":"0x4be4e7267b6ae00000","0x084d103254759b343cb2b9c2d8ff9e1ac5f14596":"0x19bff2ff57968c00000","0x08504f05643fab5919f5eea55925d7a3ed7d807a":"0x1158e460913d00000","0x085b4ab75d8362d914435cedee1daa2b1ee1a23b":"0xd255d112e103a00000","0x085ba65febe23eefc2c802666ab1262382cfc494":"0x15af1d78b58c400000","0x087498c0464668f31150f4d3c4bcdda5221ba102":"0x1158e460913d00000","0x0877eeaeab78d5c00e83c32b2d98fa79ad51482f":"0x17d22d71da62260000","0x08936a37df85b3a158cafd9de021f58137681347":"0xfc936392801c0000","0x08a9a44e1f41de3dbba7a363a3ab412c124cd15e":"0xad78ebc5ac6200000","0x08b7bdcf944d5570838be70460243a8694485858":"0x6c6b935b8bbd400000","0x08b84536b74c8c01543da88b84d78bb95747d822":"0xad78ebc5ac6200000","0x08c2f236ac4adcd3fda9fbc6e4532253f9da3bec":"0x1158e460913d00000","0x08c802f87758349fa03e6bc2e2fd0791197eea9a":"0x6c6b935b8bbd400000","0x08c9f1bfb689fdf804d769f82123360215aff93b":"0x6acb3df27e1f880000","0x08cac8952641d8fc526ec1ab4f2df826a5e7710f":"0x1043561a8829300000","0x08ccda50e4b26a0ffc0ef92e9205310706bec2c7":"0x149756c3857c6000000","0x08d0864dc32f9acb36bf4ea447e8dd6726906a15":"0x6c6e59e67c78540000","0x08d4267feb15da9700f7ccc3c84a8918bf17cfde":"0x61093d7c2c6d380000","0x08d4311c9c1bbaf87fabe1a1d01463828d5d98ce":"0x130ee8e7179044400000","0x08d54e83ad486a934cfaeae283a33efd227c0e99":"0x38530583245edc0000","0x08d97eadfcb7b064e1ccd9c8979fbee5e77a9719":"0xe6c5da8d67ac18000","0x08da3a7a0f452161cfbcec311bb68ebfdee17e88":"0x6c6b935b8bbd400000","0x08e38ee0ce48c9ca645c1019f73b5355581c56e6":"0x56bc75e2d631000000","0x08ef3fa4c43ccdc57b22a4b9b2331a82e53818f2":"0xd8d726b7177a800000","0x0909648c18a3ce5bae7a047ec2f868d24cdda81d":"0xcf152640c5c8300000","0x090cd67b60e81d54e7b5f6078f3e021ba65b9a1e":"0x3635c9adc5dea00000","0x090cebef292c3eb081a05fd8aaf7d39bf07b89d4":"0xd8d726b7177a800000","0x090fa9367bda57d0d3253a0a8ff76ce0b8e19a73":"0x3635c9adc5dea00000","0x09146ea3885176f07782e1fe30dce3ce24c49e1f":"0x1158e460913d00000","0x0921605f99164e3bcc28f31caece78973182561d":"0x2b07692a9065a80000","0x09261f9acb451c3788844f0c1451a35bad5098e3":"0x1d5ad27502920600000","0x0927220492194b2eda9fc4bbe38f25d681dfd36c":"0x14542ba12a337c00000","0x092acb624b08c05510189bbbe21e6524d644ccad":"0xfc936392801c0000","0x092e815558402d67f90d6bfe6da0b2fffa91455a":"0x340aad21b3b700000","0x095030e4b82692dcf8b8d0912494b9b378ec9328":"0x48a43c54602f700000","0x095270cc42141dd998ad2862dbd1fe9b44e7e650":"0x410d586a20a4c00000","0x095457f8ef8e2bdc362196b9a9125da09c67e3ab":"0xad78ebc5ac6200000","0x0954a8cb5d321fc3351a7523a617d0f58da676a7":"0x87d9bc7aa498e80000","0x095b0ea2b218d82e0aea7c2889238a39c9bf9077":"0x43c33c1937564800000","0x095b949de3333a377d5019d893754a5e4656ff97":"0x126e72a69a50d00000","0x095e0174829f34c3781be1a5e38d1541ea439b7f":"0x14542ba12a337c00000","0x095f5a51d06f6340d80b6d29ea2e88118ad730fe":"0x6c6e59e67c78540000","0x0968ee5a378f8cadb3bafdbed1d19aaacf936711":"0x3635c9adc5dea00000","0x0977bfba038a44fb49b03970d8d8cf2cb61f8b25":"0x16c4abbebea0100000","0x097da12cfc1f7c1a2464def08c29bed5e2f851e9":"0x1158e460913d00000","0x097ecda22567c2d91cb03f8c5215c22e9dcda949":"0x11651ac3e7a758000","0x0989c200440b878991b69d6095dfe69e33a22e70":"0x678a932062e4180000","0x0990e81cd785599ea236bd1966cf526302c35b9c":"0x3635c9adc5dea00000","0x0998d8273115b56af43c505e087aff0676ed3659":"0xd8d6eddf2d2e180000","0x09a025316f967fa8b9a1d60700063f5a68001caa":"0x21221a99b93ec0000","0x09a928d528ec1b3e25ffc83e218c1e0afe8928c7":"0xfc936392801c0000","0x09ae49e37f121df5dc158cfde806f173a06b0c7f":"0xd8309e26aba1d00000","0x09afa73bc047ef46b977fd9763f87286a6be68c6":"0x1b2fb5e8f06a660000","0x09b4668696f86a080f8bebb91db8e6f87015915a":"0x238ff7b34f60010000","0x09b59b8698a7fbd3d2f8c73a008988de3e406b2b":"0x878678326eac9000000","0x09b7a988d13ff89186736f03fdf46175b53d16e0":"0x14542ba12a337c00000","0x09c177f1ae442411ddacf187d46db956148360e7":"0x1e52e336cde22180000","0x09c88f917e4d6ad473fa12e98ea3c4472a5ed6da":"0x21e19e0c9bab2400000","0x09d0b8cd077c69d9f32d9cca43b3c208a21ed48b":"0x821d221b5291f8000","0x09d6cefd75b0c4b3f8f1d687a522c96123f1f539":"0x14542ba12a337c00000","0x09e437d448861228a232b62ee8d37965a904ed9c":"0x498cf401df8842e8000","0x09ee12b1b42b05af9cf207d5fcac255b2ec411f2":"0x331cddd47e0fe8000","0x09f3f601f605441140586ce0656fa24aa5b1d9ae":"0x5373776fe8c4540000","0x09f9575be57d004793c7a4eb84b71587f97cbb6a":"0xad78ebc5ac6200000","0x0a0650861f785ed8e4bf1005c450bbd06eb48fb6":"0xa6413b79144e7e0000","0x0a06fad7dcd7a492cbc053eeabde6934b39d8637":"0x1158e460913d00000","0x0a077db13ffeb09484c217709d5886b8bf9c5a8b":"0xd8d726b7177a800000","0x0a0ecda6636f7716ef1973614687fd89a820a706":"0x155bd9307f9fe80000","0x0a29a8a4d5fd950075ffb34d77afeb2d823bd689":"0xad78ebc5ac6200000","0x0a2ade95b2e8c66d8ae6f0ba64ca57d783be6d44":"0xd8d726b7177a800000","0x0a2b4fc5d81ace67dc4bba03f7b455413d46fe3d":"0xaadec983fcff40000","0x0a2dcb7a671701dbb8f495728088265873356c8e":"0x83f16ce08a06c0000","0x0a3de155d5ecd8e81c1ff9bbf0378301f8d4c623":"0xd8d726b7177a800000","0x0a47ad9059a249fc936b2662353da6905f75c2b9":"0x6c6b935b8bbd400000","0x0a48296f7631708c95d2b74975bc4ab88ac1392a":"0x10f0cf064dd59200000","0x0a4a011995c681bc999fdd79754e9a324ae3b379":"0x8c19ab06eb89af60000","0x0a58fddd71898de773a74fdae45e7bd84ef43646":"0x1158e460913d00000","0x0a5b79d8f23b6483dbe2bdaa62b1064cc76366ae":"0x6ac882100952c78000","0x0a652e2a8b77bd97a790d0e91361c98890dbb04e":"0x3635c9adc5dea00000","0x0a6ebe723b6ed1f9a86a69ddda68dc47465c2b1b":"0x403d2db599d5e40000","0x0a77e7f72b437b574f00128b21f2ac265133528c":"0x6c6b935b8bbd400000","0x0a917f3b5cb0b883047fd9b6593dbcd557f453b9":"0x3635c9adc5dea00000","0x0a931b449ea8f12cdbd5e2c8cc76bad2c27c0639":"0x13f9e8c79fe058000","0x0a9804137803ba6868d93a55f9985fcd540451e4":"0xb98bc829a6f90000","0x0a9ab2638b1cfd654d25dab018a0aebddf85fd55":"0x12e8cb5fe4c4a8000","0x0ab366e6e7d5abbce6b44a438d69a1cabb90d133":"0x1158e460913d000000","0x0ab4281ebb318590abb89a81df07fa3af904258a":"0x1b1ae4d6e2ef500000","0x0ab59d390702c9c059db148eb4f3fcfa7d04c7e7":"0xfc936392801c0000","0x0abfb39b11486d79572866195ba26c630b6784db":"0x19ba8737f96928f00000","0x0aca9a5626913b08cfc9a66d40508dce52b60f87":"0x678a932062e4180000","0x0ad3e44d3c001fa290b393617030544108ac6eb9":"0x6abda0bc30b2df8000","0x0aec2e426ed6cc0cf3c249c1897eac47a7faa9bd":"0xad78ebc5ac6200000","0x0af65f14784e55a6f95667fd73252a1c94072d2a":"0xa763b8e02d44f8000","0x0af6c8d539c96d50259e1ba6719e9c8060f388c2":"0x3635c9adc5dea00000","0x0b06390f2437b20ec4a3d3431b3279c6583e5ed7":"0xa844a7424d9c80000","0x0b0b3862112aeec3a03492b1b05f440eca54256e":"0xd8d726b7177a800000","0x0b0e055b28cbd03dc5ff44aa64f3dce04f5e63fb":"0x6c6b935b8bbd400000","0x0b119df99c6b8de58a1e2c3f297a6744bf552277":"0x6c6b935b8bbd400000","0x0b14891999a65c9ef73308efe3100ca1b20e8192":"0x2b5e3af16b18800000","0x0b2113504534642a1daf102eee10b9ebde76e261":"0x942cdd7c95f2bd8000","0x0b288a5a8b75f3dc4191eb0457e1c83dbd204d25":"0x10714e77bb43ab40000","0x0b369e002e1b4c7913fcf00f2d5e19c58165478f":"0x37f6516288c340000","0x0b43bd2391025581d8956ce42a072579cbbfcb14":"0x104e70464b1580000","0x0b507cf553568daaf65504ae4eaa17a8ea3cdbf5":"0x6c6b935b8bbd400000","0x0b5d66b13c87b392e94d91d5f76c0d450a552843":"0x6c6b935b8bbd400000","0x0b5e2011ebc25a007f21362960498afb8af280fb":"0x6c6b935b8bbd400000","0x0b649da3b96a102cdc6db652a0c07d65b1e443e6":"0x6c6b935b8bbd400000","0x0b6920a64b363b8d5d90802494cf564b547c430d":"0x410d586a20a4c00000","0x0b701101a4109f9cb360dc57b77442673d5e5983":"0x6c6b935b8bbd400000","0x0b71f554122469ef978e2f1fefd7cbb410982772":"0xd255d112e103a00000","0x0b7bb342f01bc9888e6a9af4a887cbf4c2dd2caf":"0x3635c9adc5dea000000","0x0b7d339371e5be6727e6e331b5821fa24bdb9d5a":"0x2e7f81868262010000","0x0b7fc9ddf70576f6330669eaaa71b6a831e99528":"0x796e3ea3f8ab00000","0x0b80fc70282cbdd5fde35bf78984db3bdb120188":"0x3638021cecdab00000","0x0b924df007e9c0878417cfe63b976ea1a382a897":"0x22b1c8c1227a00000","0x0b93fca4a4f09cac20db60e065edcccc11e0a5b6":"0xad78ebc5ac6200000","0x0b9df80fbe232009dacf0aa8cac59376e2476203":"0x6c6b935b8bbd400000","0x0ba6e46af25a13f57169255a34a4dac7ce12be04":"0x1b1ae4d6e2ef500000","0x0ba8705bf55cf219c0956b5e3fc01c4474a6cdc1":"0x525e0595d4d6b8000","0x0baf6ecdb91acb3606a8357c0bc4f45cfd2d7e6f":"0x3635c9adc5dea00000","0x0bb05f7224bb5804856556c07eeadbed87ba8f7c":"0x15be6174e1912e0000","0x0bb0c12682a2f15c9b5741b2385cbe41f034068e":"0x5150ae84a8cdf00000","0x0bb25ca7d188e71e4d693d7b170717d6f8f0a70a":"0x124302a82fadd70000","0x0bb2650ea01aca755bc0c017b64b1ab5a66d82e3":"0x487a9a304539440000","0x0bb54c72fd6610bfa4363397e020384b022b0c49":"0x487a9a304539440000","0x0bb7160aba293762f8734f3e0326ffc9a4cac190":"0x3635c9adc5dea00000","0x0bc95cb32dbb574c832fa8174a81356d38bc92ac":"0x6c6b935b8bbd400000","0x0bd67dbde07a856ebd893b5edc4f3a5be4202616":"0x6c6b935b8bbd400000","0x0bdbc54cc8bdbbb402a08911e2232a5460ce866b":"0xa2a15d09519be00000","0x0bdd58b96e7c916dd2fb30356f2aebfaaf1d8630":"0x6c6b935b8bbd400000","0x0be1bcb90343fae5303173f461bd914a4839056c":"0x14542ba12a337c00000","0x0be1fdf626ee6189102d70d13b31012c95cd1cd6":"0x6c6b935b8bbd400000","0x0be2b94ad950a2a62640c35bfccd6c67dae450f6":"0x692ae8897081d00000","0x0be6a09e4307fe48d412b8d1a1a8284dce486261":"0x40fbff85c0138300000","0x0befb54707f61b2c9fb04715ab026e1bb72042bd":"0xd8d726b7177a800000","0x0bf064428f83626722a7b5b26a9ab20421a7723e":"0x73f75d1a085ba0000","0x0bfbb6925dc75e52cf2684224bbe0550fea685d3":"0x6acb3df27e1f880000","0x0c088006c64b30c4ddafbc36cb5f05469eb62834":"0x6c6b935b8bbd400000","0x0c2073ba44d3ddbdb639c04e191039a71716237f":"0x4d853c8f8908980000","0x0c222c7c41c9b048efcce0a232434362e12d673b":"0x21e8359697677380000","0x0c2808b951ed9e872d7b32790fcc5994ae41ffdc":"0x15996e5b3cd6b3c00000","0x0c28847e4f09dfce5f9b25af7c4e530f59c880fe":"0x3635c9adc5dea00000","0x0c2d5c920538e953caaf24f0737f554cc6927742":"0x3635c9adc5dea00000","0x0c30cacc3f72269f8b4f04cf073d2b05a83d9ad1":"0x6c7974123f64a40000","0x0c3239e2e841242db989a61518c22247e8c55208":"0xe4af6471734640000","0x0c480de9f7461002908b49f60fc61e2b62d3140b":"0x21e19e0c9bab2400000","0x0c48ae62d1539788eba013d75ea60b64eeba4e80":"0x77fbdc43e030998000","0x0c5589a7a89b9ad15b02751930415948a875fbef":"0x6d499ec6c63380000","0x0c67033dd8ee7f0c8ae534d42a51f7d9d4f7978f":"0xad78ebc5ac6200000","0x0c6845bf41d5ee273c3ee6b5b0d69f6fd5eabbf7":"0xa2a1b9682e58090000","0x0c7f869f8e90d53fdc03e8b2819b016b9d18eb26":"0x43c33c1937564800000","0x0c8692eeff2a53d6d1688ed56a9ddbbd68dabba1":"0x6c6b935b8bbd400000","0x0c8f66c6017bce5b20347204b602b743bad78d60":"0x6c6b935b8bbd400000","0x0c8fd7775e54a6d9c9a3bf890e761f6577693ff0":"0x215f835bc769da80000","0x0c925ad5eb352c8ef76d0c222d115b0791b962a1":"0xac635d7fa34e300000","0x0c967e3061b87a753e84507eb60986782c8f3013":"0x56bc75e2d63100000","0x0ca12ab0b9666cf0cec6671a15292f2653476ab2":"0x2c7827c42d22d07c0000","0x0ca670eb2c8b96cba379217f5929c2b892f39ef6":"0x6c6b935b8bbd400000","0x0cae108e6db99b9e637876b064c6303eda8a65c8":"0xa2a15d09519be00000","0x0cbd921dbe121563b98a6871fecb14f1cc7e88d7":"0xad78ebc5ac6200000","0x0cbf8770f0d1082e5c20c5aead34e5fca9ae7ae2":"0x3635c9adc5dea00000","0x0cc67f8273e1bae0867fd42e8b8193d72679dbf8":"0x1b1ae4d6e2ef500000","0x0cd6a141918d126b106d9f2ebf69e102de4d3277":"0x1158e460913d00000","0x0cda12bf72d461bbc479eb92e6491d057e6b5ad1":"0x21e19e0c9bab2400000","0x0cdc960b998c141998160dc179b36c15d28470ed":"0x1b1b6bd7af64c70000","0x0cfb172335b16c87d519cd1475530d20577f5e0e":"0x152d02c7e14af6800000","0x0d1f2a57713ebc6e94de29846e8844d376665763":"0x10f0cf064dd59200000","0x0d3265d3e7bdb93d5e8e8b1ca47f210a793ecc8e":"0xad78ebc5ac6200000","0x0d35408f226566116fb8acdaa9e2c9d59b76683f":"0x32f51edbaaa3300000","0x0d551ec1a2133c981d5fc6a8c8173f9e7c4f47af":"0x6c6b935b8bbd400000","0x0d5d98565c647ca5f177a2adb9d3022fac287f21":"0xad78ebc5ac6200000","0x0d658014a199061cf6b39433140303c20ffd4e5a":"0x1bc85dc2a89bb200000","0x0d678706d037187f3e22e6f69b99a592d11ebc59":"0x55a6e79ccd1d300000","0x0d69100c395ce6c5eaadf95d05d872837ededd21":"0x15af1d78b58c400000","0x0d747ee5969bf79d57381d6fe3a2406cd0d8ce27":"0x152d02c7e14af6800000","0x0d8023929d917234ae40512b1aabb5e8a4512771":"0x805e99fdcc5d00000","0x0d8aab8f74ea862cdf766805009d3f3e42d8d00b":"0x13b80b99c5185700000","0x0d8c40a79e18994ff99ec251ee10d088c3912e80":"0x63664fcd2bbc40000","0x0d8ed7d0d15638330ed7e4eaccab8a458d75737e":"0x6c6b935b8bbd400000","0x0d92582fdba05eabc3e51538c56db8813785b328":"0xa5aa85009e39c0000","0x0d9443a79468a5bbf7c13c6e225d1de91aee07df":"0x3cb71f51fc5580000","0x0d9a825ff2bcd397cbad5b711d9dcc95f1cc112d":"0x2b5e3af16b188000000","0x0d9d3f9bc4a4c6efbd59679b69826bc1f63d9916":"0x2086ac351052600000","0x0da532c910e3ac0dfb14db61cd739a93353fd05f":"0x4878be1ffaf95d0000","0x0da7401262384e2e8b4b26dd154799b55145efa0":"0x1043561a8829300000","0x0dae3ee5b915b36487f9161f19846d101433318a":"0x678a932062e4180000","0x0dbd417c372b8b0d01bcd944706bd32e60ae28d1":"0x126e72a69a50d00000","0x0dc100b107011c7fc0a1339612a16ccec3285208":"0x6c6b935b8bbd400000","0x0dcf9d8c9804459f647c14138ed50fad563b4154":"0x960db77681e940000","0x0dcfe837ea1cf28c65fccec3bef1f84e59d150c0":"0xad78ebc5ac6200000","0x0dd4e674bbadb1b0dc824498713dce3b5156da29":"0x93739534d28680000","0x0dfbd4817050d91d9d625c02053cf61a3ee28572":"0x126e72a69a50d00000","0x0e024e7f029c6aaf3a8b910f5e080873b85795aa":"0x3635c9adc5dea00000","0x0e09646c99af438e99fa274cb2f9c856cb65f736":"0x678a932062e4180000","0x0e0c9d005ea016c295cd795cc9213e87febc33eb":"0xabbcd4ef377580000","0x0e0d6633db1e0c7f234a6df163a10e0ab39c200f":"0xad78ebc5ac6200000","0x0e11d77a8977fac30d268445e531149b31541a24":"0x6c6b935b8bbd400000","0x0e123d7da6d1e6fac2dcadd27029240bb39052fe":"0x3635c9adc5dea00000","0x0e1801e70b6262861b1134ccbc391f568afc92f7":"0xd8d726b7177a800000","0x0e2094ac1654a46ba1c4d3a40bb8c17da7f39688":"0x13683f7f3c15d80000","0x0e21af1b8dbf27fcf63f37e047b87a825cbe7c27":"0xa2a15d09519be00000","0x0e2e504a2d1122b5a9feee5cb1451bf4c2ace87b":"0xd5967be4fc3f100000","0x0e2f8e28a681f77c583bd0ecde16634bdd7e00cd":"0x52738f659bca20000","0x0e320219838e859b2f9f18b72e3d4073ca50b37d":"0x6c6b935b8bbd400000","0x0e33fcbbc003510be35785b52a9c5d216bc005f4":"0x65ea3db75546600000","0x0e3696cf1f4217b163d1bc12a5ea730f1c32a14a":"0xd8d726b7177a800000","0x0e390f44053ddfcef0d608b35e4d9c2cbe9871bb":"0x6acb3df27e1f880000","0x0e3a28c1dfafb0505bdce19fe025f506a6d01ceb":"0x6c6b935b8bbd400000","0x0e3dd7d4e429fe3930a6414035f52bdc599d784d":"0x22ca3587cf4eb0000","0x0e4765790352656bc656682c24fc5ef3e76a23c7":"0x286d7fc0cb4f50000","0x0e498800447177b8c8afc3fdfa7f69f4051bb629":"0x7405b69b8de5610000","0x0e6baaa3deb989f289620076668618e9ac332865":"0xad78ebc5ac6200000","0x0e6cd664ad9c1ed64bf98749f40644b626e3792c":"0xcb49b44ba602d800000","0x0e6dfd553b2e873d2aec15bd5fbb3f8472d8d394":"0x28a857425466f800000","0x0e6ec313376271dff55423ab5422cc3a8b06b22b":"0xd8d726b7177a800000","0x0e6ece99111cad1961c748ed3df51edd69d2a3b1":"0x152d02c7e14af6800000","0x0e83b850481ab44d49e0a229a2e464902c69539b":"0x56bc75e2d63100000","0x0e89eddd3fa0d71d8ab0ff8da5580686e3d4f74f":"0x6c6b935b8bbd400000","0x0e9096d343c060db581a120112b278607ec6e52b":"0x1158e460913d00000","0x0e9c511864a177f49be78202773f60489fe04e52":"0x14542ba12a337c00000","0x0ea2a210312b3e867ee0d1cc682ce1d666f18ed5":"0x21e19e0c9bab2400000","0x0eb189ef2c2d5762a963d6b7bdf9698ea8e7b48a":"0x487a9a304539440000","0x0eb5b662a1c718608fd52f0c25f9378830178519":"0x14a37281a612e740000","0x0ec46696ffac1f58005fa8439824f08eed1df89b":"0x21e19e0c9bab2400000","0x0ec50aa823f465b9464b0bc0c4a57724a555f5d6":"0xc83d1426ac7b1f00000","0x0ec5308b31282e218fc9e759d4fec5db3708cec4":"0x3643aa647986040000","0x0eccf617844fd61fba62cb0e445b7ac68bcc1fbe":"0x14fe4fe63565c60000","0x0ed3bb3a4eb554cfca97947d575507cdfd6d21d8":"0x1db3205fcc23d58000","0x0ed76c2c3b5d50ff8fb50b3eeacd681590be1c2d":"0x56bc75e2d63100000","0x0eda80f4ed074aea697aeddf283b63dbca3dc4da":"0x6c6b935b8bbd400000","0x0edd4b580ff10fe06c4a03116239ef96622bae35":"0xaadec983fcff40000","0x0ee391f03c765b11d69026fd1ab35395dc3802a0":"0xad78ebc5ac6200000","0x0ee414940487fd24e390378285c5d7b9334d8b65":"0x914878a8c05ee00000","0x0ef54ac7264d2254abbb5f8b41adde875157db7c":"0x22b1c8c1227a00000","0x0ef85b49d08a75198692914eddb4b22cf5fa4450":"0x6cae30621d47200000","0x0efd1789eb1244a3dede0f5de582d8963cb1f39f":"0x5150ae84a8cdf00000","0x0f042c9c2fb18766f836bb59f735f27dc329fe3c":"0x21e19e0c9bab2400000","0x0f049a8bdfd761de8ec02cee2829c4005b23c06b":"0xda933d8d8c6700000","0x0f05f120c89e9fbc93d4ab0c5e2b4a0df092b424":"0x65a4da25d3016c00000","0x0f127bbf8e311caea2ba502a33feced3f730ba42":"0xa31062beeed700000","0x0f1c249cd962b00fd114a9349f6a6cc778d76c4d":"0x6c6b935b8bbd400000","0x0f206e1a1da7207ea518b112418baa8b06260328":"0x2086ac351052600000","0x0f24105abbdaa03fa6309ef6c188e51f714a6e59":"0xad78ebc5ac6200000","0x0f26480a150961b8e30750713a94ee6f2e47fc00":"0x3635c9adc5dea00000","0x0f2d8daf04b5414a0261f549ff6477b80f2f1d07":"0x2a5a058fc295ed000000","0x0f2fb884c8aaff6f543ac6228bd08e4f60b0a5fd":"0xaa7da485136b840000","0x0f32d9cb4d0fdaa0150656bb608dcc43ed7d9301":"0x28df8bf440db790000","0x0f3665d48e9f1419cd984fc7fa92788710c8f2e4":"0x6c6b935b8bbd400000","0x0f3a1023cac04dbf44f5a5fa6a9cf8508cd4fddf":"0x62a992e53a0af00000","0x0f4073c1b99df60a1549d69789c7318d9403a814":"0x43c33c1937564800000","0x0f46c81db780c1674ac73d314f06539ee56ebc83":"0x215f835bc769da80000","0x0f4f94b9191bb7bb556aaad7c74ddb288417a50b":"0x4be4e7267b6ae00000","0x0f6000de1578619320aba5e392706b131fb1de6f":"0x1b1ab319f5ec750000","0x0f6e840a3f2a24647d8e43e09d45c7c335df4248":"0x878678326eac900000","0x0f7515ff0e808f695e0c20485ff96ed2f7b79310":"0x3638221660a5aa8000","0x0f789e30397c53bf256fc364e6ef39f853504114":"0xc55325ca7415e00000","0x0f7b61c59b016322e8226cafaee9d9e76d50a1b3":"0xd8d726b7177a800000","0x0f7bea4ef3f73ae0233df1e100718cbe29310bb0":"0x6c6b935b8bbd400000","0x0f7bf6373f771a4601762c4dae5fbbf4fedd9cc9":"0x6c6b935b8bbd400000","0x0f832a93df9d7f74cd0fb8546b7198bf5377d925":"0x7c0860e5a80dc0000","0x0f83461ba224bb1e8fdd9dae535172b735acb4e0":"0xad78ebc5ac6200000","0x0f85e42b1df321a4b3e835b50c00b06173968436":"0x35659ef93f0fc40000","0x0f88aac9346cb0e7347fba70905475ba8b3e5ece":"0x21e19e0c9bab2400000","0x0f929cf895db017af79f3ead2216b1bd69c37dc7":"0x6c6b935b8bbd400000","0x0fa010ce0c731d3b628e36b91f571300e49dbeab":"0x36330322d5238c0000","0x0fa5d8c5b3f294efd495ab69d768f81872508548":"0x6c6b935b8bbd400000","0x0fa6c7b0973d0bae2940540e247d3627e37ca347":"0x3635c9adc5dea00000","0x0fad05507cdc8f24b2be4cb7fa5d927ddb911b88":"0xa2df13f441f0098000","0x0fb5d2c673bfb1ddca141b9894fd6d3f05da6720":"0x56bc75e2d63100000","0x0fc9a0e34145fbfdd2c9d2a499b617d7a02969b9":"0x9c2007651b2500000","0x0fcfc4065008cfd323305f6286b57a4dd7eee23b":"0x43c33c1937564800000","0x0fdd65402395df9bd19fee4507ef5345f745104c":"0x10f0cf064dd59200000","0x0fec4ee0d7ca180290b6bd20f9992342f60ff68d":"0x12207f0edce9718000","0x0fee81ac331efd8f81161c57382bb4507bb9ebec":"0x15af880d8cdb830000","0x0ffea06d7113fb6aec2869f4a9dfb09007facef4":"0xc384681b1e1740000","0x10097198b4e7ee91ff82cc2f3bd95fed73c540c0":"0x6c6b935b8bbd400000","0x100b4d0977fcbad4debd5e64a0497aeae5168fab":"0x110c9073b5245a0000","0x101a0a64f9afcc448a8a130d4dfcbee89537d854":"0x337fe5feaf2d1800000","0x102c477d69aadba9a0b0f62b7459e17fbb1c1561":"0x6c6b935b8bbd400000","0x1031e0ecb54985ae21af1793950dc811888fde7c":"0x1158e460913d00000","0x10346414bec6d3dcc44e50e54d54c2b8c3734e3e":"0xd8d726b7177a800000","0x10389858b800e8c0ec32f51ed61a355946cc409b":"0xad78ebc5ac6200000","0x1059cbc63e36c43e88f30008aca7ce058eeaa096":"0x152d02c7e14af6800000","0x106ed5c719b5261477890425ae7551dc59bd255c":"0x2896a58c95be5880000","0x10711c3dda32317885f0a2fd8ae92e82069b0d0b":"0xd8d726b7177a800000","0x107379d4c467464f235bc18e55938aad3e688ad7":"0x2b5e3af16b1880000","0x1076212d4f758c8ec7121c1c7d74254926459284":"0x7695b59b5c17b4c0000","0x1078d7f61b0e56c74ee6635b2e1819ef1e3d8785":"0x3635c9adc5dea00000","0x107a03cf0842dbdeb0618fb587ca69189ec92ff5":"0x6acb3df27e1f880000","0x1080c1d8358a15bc84dac8253c6883319020df2c":"0x90f534608a72880000","0x108a2b7c336f784779d8b54d02a8d31d9a139c0a":"0x21e19e0c9bab2400000","0x108ba7c2895c50e072dc6f964932d50c282d3034":"0x1b1ae4d6e2ef500000","0x108fe8ee2a13da487b22c6ab6d582ea71064d98c":"0x15ac56edc4d12c0000","0x1091176be19b9964a8f72e0ece6bf8e3cfad6e9c":"0x21f2f6f0fc3c6100000","0x1098c774c20ca1daac5ddb620365316d353f109c":"0x56bc75e2d63100000","0x1098cc20ef84bad5146639c4cd1ca6c3996cb99b":"0xfc936392801c0000","0x10a1c42dc1ba746986b985a522a73c93eae64c63":"0x3635c9adc5dea00000","0x10a93457496f1108cd98e140a1ecdbae5e6de171":"0x15a99062d416180000","0x10b5b34d1248fcf017f8c8ffc408ce899ceef92f":"0xe7eeba3410b740000","0x10cf560964ff83c1c9674c783c0f73fcd89943fc":"0x878678326eac9000000","0x10d32416722ca4e648630548ead91edd79c06aff":"0x56bc75e2d63100000","0x10d945334ecde47beb9ca3816c173dfbbd0b5333":"0x4be4e7267b6ae00000","0x10df681506e34930ac7a5c67a54c3e89ce92b981":"0x74c1fab8adb4540000","0x10e1e3377885c42d7df218522ee7766887c05e6a":"0x1043c43cde1d398000","0x10e390ad2ba33d82b37388d09c4544c6b0225de5":"0xad78ebc5ac6200000","0x10f4bff0caa5027c0a6a2dcfc952824de2940909":"0x6c6b935b8bbd400000","0x11001b89ed873e3aaec1155634b4681643986323":"0x3635c9adc5dea00000","0x110237cf9117e767922fc4a1b78d7964da82df20":"0xd5967be4fc3f100000","0x1111e5dbf45e6f906d62866f1708101788ddd571":"0x467be6533ec2e40000","0x11172b278ddd44eea2fdf4cb1d16962391c453d9":"0xc62f3d9bfd4895f00000","0x112634b4ec30ff786e024159f796a57939ea144e":"0x6c6acc67d7b1d40000","0x11306c7d57588637780fc9fde8e98ecb008f0164":"0x6c6acc67d7b1d40000","0x113612bc3ba0ee4898b49dd20233905f2f458f62":"0x2f6f10780d22cc00000","0x11415fab61e0dfd4b90676141a557a869ba0bde9":"0x6f05b59d3b20000000","0x114cbbbf6fb52ac414be7ec61f7bb71495ce1dfa":"0xa2a15d09519be00000","0x114cfefe50170dd97ae08f0a44544978c599548d":"0x2ec887e7a14a1c0000","0x116108c12084612eeda7a93ddcf8d2602e279e5c":"0x6c6b935b8bbd400000","0x1164caaa8cc5977afe1fad8a7d6028ce2d57299b":"0x15af1d78b58c400000","0x11675a25554607a3b6c92a9ee8f36f75edd3e336":"0x8a9aba557e36c0000","0x116a09df66cb150e97578e297fb06e13040c893c":"0x6c6b935b8bbd400000","0x116fef5e601642c918cb89160fc2293ba71da936":"0x2b7cc2e9c3225c0000","0x1178501ff94add1c5881fe886136f6dfdbe61a94":"0x890b0c2e14fb80000","0x1179c60dbd068b150b074da4be23033b20c68558":"0x24dce54d34a1a00000","0x117d9aa3c4d13bee12c7500f09f5dd1c66c46504":"0xb2ad30490b2780000","0x117db836377fe15455e02c2ebda40b1ceb551b19":"0x14542ba12a337c00000","0x118c18b2dce170e8f445753ba5d7513cb7636d2d":"0x1dd0c885f9a0d800000","0x118fbd753b9792395aef7a4d78d263cdcaabd4f7":"0x36330322d5238c0000","0x11928378d27d55c520ceedf24ceb1e822d890df0":"0x1b1ae4d6e2ef5000000","0x119aa64d5b7d181dae9d3cb449955c89c1f963fa":"0x25f273933db5700000","0x11c0358aa6479de21866fe21071924b65e70f8b9":"0x7b53f79e888dac00000","0x11d2247a221e70c2d66d17ee138d38c55ffb8640":"0x21e19e0c9bab2400000","0x11d7844a471ef89a8d877555583ceebd1439ea26":"0x22369e6ba80c6880000","0x11dd6185d9a8d73ddfdaa71e9b7774431c4dfec2":"0x3635c9adc5dea00000","0x11e7997edd904503d77da6038ab0a4c834bbd563":"0x150894e849b3900000","0x11ec00f849b6319cf51aa8dd8f66b35529c0be77":"0x6c6b935b8bbd400000","0x11efb8a20451161b644a8ccebbc1d343a3bbcb52":"0xad78ebc5ac62000000","0x11fefb5dc1a4598aa712640c517775dfa1d91f8c":"0x21e19e0c9bab2400000","0x120f9de6e0af7ec02a07c609ca8447f157e6344c":"0xe7eeba3410b740000","0x1210f80bdb826c175462ab0716e69e46c24ad076":"0x56bc75e2d63100000","0x12134e7f6b017bf48e855a399ca58e2e892fa5c8":"0x3635c9adc5dea00000","0x12173074980153aeaa4b0dcbc7132eadcec21b64":"0xd02ab486cedc00000","0x121f855b70149ac83473b9706fb44d47828b983b":"0x4be4e7267b6ae00000","0x1227e10a4dbf9caca31b1780239f557615fc35c1":"0xad78ebc5ac6200000","0x122dcfd81addb97d1a0e4925c4b549806e9f3beb":"0x522035cc6e01210000","0x122f56122549d168a5c5e267f52662e5c5cce5c8":"0xa076407d3f7440000","0x12316fc7f178eac22eb2b25aedeadf3d75d00177":"0x43c33be05f6bfb98000","0x123759f333e13e3069e2034b4f05398918119d36":"0x43c33c1937564800000","0x125cc5e4d56b2bcc2ee1c709fb9e68fb177440bd":"0x6c6b935b8bbd400000","0x12632388b2765ee4452b50161d1fffd91ab81f4a":"0x281d901f4fdd100000","0x126897a311a14ad43b78e0920100c4426bfd6bdd":"0x34c726893f2d948000","0x126d91f7ad86debb0557c612ca276eb7f96d00a1":"0x56bc75e2d63100000","0x127d3fc5003bf63c0d83e93957836515fd279045":"0x610c9222e6e750000","0x127db1cadf1b771cbd7475e1b272690f558c8565":"0x2f6f10780d22cc00000","0x1284f0cee9d2ff2989b65574d06ffd9ab0f7b805":"0x15af1d78b58c400000","0x128b908fe743a434203de294c441c7e20a86ea67":"0x26ab14e0c0e13c0000","0x1293c78c7d6a443b9d74b0ba5ee7bb47fd418588":"0x16a6502f15a1e540000","0x1296acded1e063af39fe8ba0b4b63df789f70517":"0x56bf91b1a65eb0000","0x12aa7d86ddfbad301692feac8a08f841cb215c37":"0x76d41c62494840000","0x12afbcba1427a6a39e7ba4849f7ab1c4358ac31b":"0x43c33c1937564800000","0x12b5e28945bb2969f9c64c63cc05b6f1f8d6f4d5":"0x1a29e86913b74050000","0x12cf8b0e465213211a5b53dfb0dd271a282c12c9":"0xd2f13f7789f00000","0x12d20790b7d3dbd88c81a279b812039e8a603bd0":"0x56f985d38644b80000","0x12d60d65b7d9fc48840be5f891c745ce76ee501e":"0x485e5388d0c76840000","0x12d91a92d74fc861a729646db192a125b79f5374":"0xfc936392801c0000","0x12e9a4ad2ad57484dd700565bddb46423bd9bd31":"0x43c30fb0884a96c0000","0x12f32c0a1f2daab676fe69abd9e018352d4ccd45":"0x2b5e3af16b1880000","0x12f460ae646cd2780fd35c50a6af4b9accfa85c6":"0x3635c9adc5dea00000","0x12ffc1128605cb0c13709a7290506f2690977193":"0xb50fcfafebecb00000","0x13032446e7d610aa00ec8c56c9b574d36ca1c016":"0x6c6b935b8bbd400000","0x131c792c197d18bd045d7024937c1f84b60f4438":"0xd8d726b7177a800000","0x131df8d330eb7cc7147d0a55576f05de8d26a8b7":"0xa31062beeed700000","0x131faed12561bb7aee04e5185af802b1c3438d9b":"0xbdf3c4bb0328c0000","0x1321b605026f4ffb296a3e0edcb390c9c85608b7":"0x6c6b935b8bbd400000","0x1321ccf29739b974e5a516f18f3a843671e39642":"0xd8d726b7177a800000","0x1327d759d56e0ab87af37ecf63fe01f310be100a":"0x23bc3cdb68a1800000","0x1329dd19cd4baa9fc64310efeceab22117251f12":"0xad78ebc5ac6200000","0x13371f92a56ea8381e43059a95128bdc4d43c5a6":"0x3635c9adc5dea00000","0x133c490fa5bf7f372888e607d958fab7f955bae1":"0x55a6e79ccd1d300000","0x133e4f15e1e39c53435930aaedf3e0fe56fde843":"0x1158e460913d00000","0x134163be9fbbe1c5696ee255e90b13254395c318":"0xad78ebc5ac6200000","0x135cecd955e5798370769230159303d9b1839f66":"0x10f0cf064dd59200000","0x135d1719bf03e3f866312479fe338118cd387e70":"0x6c6b935b8bbd400000","0x135eb8c0e9e101deedec11f2ecdb66ae1aae8867":"0x43c33c1937564800000","0x1360e87df24c69ee6d51c76e73767ffe19a2131c":"0x4fcc1a89027f00000","0x136c834bf111326d207395295b2e583ea7f33572":"0x56bc75e2d63100000","0x136d4b662bbd1080cfe4445b0fa213864435b7f1":"0xd8d726b7177a800000","0x136f4907cab41e27084b9845069ff2fd0c9ade79":"0xd8d726b7177a800000","0x1374facd7b3f8d68649d60d4550ee69ff0484133":"0xe9ed6e11172da0000","0x137cf341e8516c815814ebcd73e6569af14cf7bc":"0x3635c9adc5dea00000","0x13848b46ea75beb7eaa85f59d866d77fd24cf21a":"0xa968163f0a57b400000","0x139d3531c9922ad56269f6309aa789fb2485f98c":"0xd8d726b7177a800000","0x139e479764b499d666208c4a8a047a97043163dd":"0x2077212aff6df00000","0x13a5eecb38305df94971ef2d9e179ae6cebab337":"0x11e3ab8395c6e80000","0x13acada8980affc7504921be84eb4944c8fbb2bd":"0x56d2aa3a5c09a00000","0x13b9b10715714c09cfd610cf9c9846051cb1d513":"0x6acb3df27e1f880000","0x13ce332dff65a6ab933897588aa23e000980fa82":"0xe020536f028f00000","0x13d67a7e25f2b12cdb85585009f8acc49b967301":"0x6c6acc67d7b1d40000","0x13dee03e3799952d0738843d4be8fc0a803fb20e":"0x6c6b935b8bbd400000","0x13e02fb448d6c84ae17db310ad286d056160da95":"0x6c6b935b8bbd400000","0x13e321728c9c57628058e93fc866a032dd0bda90":"0x26bcca23fe2ea20000","0x13ec812284026e409bc066dfebf9d5a4a2bf801e":"0x57473d05dabae80000","0x140129eaa766b5a29f5b3af2574e4409f8f6d3f1":"0x15af1d78b58c4000000","0x140518a3194bad1350b8949e650565debe6db315":"0x6c6b935b8bbd400000","0x1406854d149e081ac09cb4ca560da463f3123059":"0x487a9a304539440000","0x140ca28ff33b9f66d7f1fc0078f8c1eef69a1bc0":"0x56bc75e2d631000000","0x140fba58dbc04803d84c2130f01978f9e0c73129":"0x15af1d78b58c400000","0x141a5e39ee2f680a600fbf6fa297de90f3225cdd":"0x21e19e0c9bab2400000","0x14254ea126b52d0142da0a7e188ce255d8c47178":"0x2a034919dfbfbc0000","0x142b87c5043ffb5a91df18c2e109ced6fe4a71db":"0xad78ebc5ac6200000","0x143c639752caeecf6a997d39709fc8f19878c7e8":"0x6acb3df27e1f880000","0x143d536b8b1cb84f56a39e0bc81fd5442bcacce1":"0x56bc75e2d63100000","0x143f5f1658d9e578f4f3d95f80c0b1bd3933cbda":"0x50c5e761a444080000","0x14410fb310711be074a80883c635d0ef6afb2539":"0x6c6b935b8bbd400000","0x144b19f1f66cbe318347e48d84b14039466c5909":"0x6c6b935b8bbd400000","0x145250b06e4fa7cb2749422eb817bdda8b54de5f":"0xbdf3c4bb0328c0000","0x145e0600e2a927b2dd8d379356b45a2e7d51d3ae":"0x8a02ab400bb2cb8000","0x145e1de0147911ccd880875fbbea61f6a142d11d":"0xd8d726b7177a800000","0x1463a873555bc0397e575c2471cf77fa9db146e0":"0x21e19e0c9bab2400000","0x1479a9ec7480b74b5db8fc499be352da7f84ee9c":"0x3635c9adc5dea00000","0x147af46ae9ccd18bb35ca01b353b51990e49dce1":"0xd8d726b7177a800000","0x147f4210ab5804940a0b7db8c14c28396b62a6bf":"0x6c6b935b8bbd400000","0x14830704e99aaad5c55e1f502b27b22c12c91933":"0x219c3a7b1966300000","0x149b6dbde632c19f5af47cb493114bebd9b03c1f":"0x28a857425466f800000","0x149ba10f0da2725dc704733e87f5a524ca88515e":"0x1ab2cf7c9f87e200000","0x14a7352066364404db50f0d0d78d754a22198ef4":"0x65ea3db75546600000","0x14ab164b3b524c82d6abfbc0de831126ae8d1375":"0x6c6b935b8bbd400000","0x14b1603ec62b20022033eec4d6d6655ac24a015a":"0x2b5e3af16b1880000","0x14c63ba2dcb1dd4df33ddab11c4f0007fa96a62d":"0x34841b6057afab00000","0x14cdddbc8b09e6675a9e9e05091cb92238c39e1e":"0x11478b7c30abc300000","0x14d00aad39a0a7d19ca05350f7b03727f08dd82e":"0x1b1ae4d6e2ef500000","0x14eec09bf03e352bd6ff1b1e876be664ceffd0cf":"0x116dc3a8994b30000","0x14f221159518783bc4a706676fc4f3c5ee405829":"0xad78ebc5ac6200000","0x14fcd1391e7d732f41766cdacd84fa1deb9ffdd2":"0x6c6b935b8bbd400000","0x150e3dbcbcfc84ccf89b73427763a565c23e60d0":"0x22b1c8c1227a00000","0x1518627b88351fede796d3f3083364fbd4887b0c":"0x3635c9adc5dea000000","0x15224ad1c0face46f9f556e4774a3025ad06bd52":"0xb98bc829a6f90000","0x152f2bd229ddf3cb0fdaf455c183209c0e1e39a2":"0x6c6b935b8bbd400000","0x152f4e860ef3ee806a502777a1b8dbc91a907668":"0x2086ac351052600000","0x153c08aa8b96a611ef63c0253e2a4334829e579d":"0x155bd9307f9fe80000","0x153cf2842cb9de876c276fa64767d1a8ecf573bb":"0x6c6b935b8bbd400000","0x153ef58a1e2e7a3eb6b459a80ab2a547c94182a2":"0x14542ba12a337c000000","0x154459fa2f21318e3434449789d826cdc1570ce5":"0x6c6b935b8bbd400000","0x1547b9bf7ad66274f3413827231ba405ee8c88c1":"0x3a9d5baa4abf1d00000","0x1548b770a5118ede87dba2f690337f616de683ab":"0x1c995685e0bf870000","0x15528350e0d9670a2ea27f7b4a33b9c0f9621d21":"0xd8d8583fa2d52f0000","0x155b3779bb6d56342e2fda817b5b2d81c7f41327":"0x2b8aa3a076c9c0000","0x1565af837ef3b0bd4e2b23568d5023cd34b16498":"0x1551e9724ac4ba0000","0x15669180dee29598869b08a721c7d24c4c0ee63f":"0x3635c9adc5dea00000","0x1572cdfab72a01ce968e78f5b5448da29853fbdd":"0x112626c49060fa60000","0x157559adc55764cc6df79323092534e3d6645a66":"0x14542ba12a337c00000","0x1578bdbc371b4d243845330556fff2d5ef4dff67":"0x56bc75e2d63100000","0x157eb3d3113bd3b597714d3a954edd018982a5cb":"0x6c6b935b8bbd400000","0x1584a2c066b7a455dbd6ae2807a7334e83c35fa5":"0x70c1cc73b00c80000","0x15874686b6733d10d703c9f9bec6c52eb8628d67":"0x6c6b935b8bbd400000","0x158a0d619253bf4432b5cd02c7b862f7c2b75636":"0x75bac7c5b12188000","0x1598127982f2f8ad3b6b8fc3cf27bf617801ba2b":"0x960db77681e940000","0x159adce27aa10b47236429a34a5ac42cad5b6416":"0x6bf90a96edbfa718000","0x15a0aec37ff9ff3d5409f2a4f0c1212aaccb0296":"0x3635c9adc5dea00000","0x15aa530dc36958b4edb38eee6dd9e3c77d4c9145":"0x6c6b935b8bbd400000","0x15acb61568ec4af7ea2819386181b116a6c5ee70":"0x690836c0af5f5600000","0x15b96f30c23b8664e7490651066b00c4391fbf84":"0x1642e9df4876290000","0x15c7edb8118ee27b342285eb5926b47a855bc7a5":"0x1158e460913d00000","0x15d99468507aa0413fb60dca2adc7f569cb36b54":"0x6c6b935b8bbd400000","0x15dbb48c98309764f99ced3692dcca35ee306bac":"0x1fc3842bd1f071c00000","0x15dcafcc2bace7b55b54c01a1c514626bf61ebd8":"0x1fd933494aa5fe00000","0x15e3b584056b62c973cf5eb096f1733e54c15c91":"0x32c75a0223ddf30000","0x15ebd1c7cad2aff19275c657c4d808d010efa0f5":"0xadf30ba70c8970000","0x15ee0fc63ebf1b1fc49d7bb38f8863823a2e17d2":"0x678a932062e4180000","0x15f1b352110d68901d8f67aac46a6cfafe031477":"0xad78ebc5ac6200000","0x15f2b7b16432ee50a5f55b41232f6334ed58bdc0":"0x15af1d78b58c400000","0x16019a4dafab43f4d9bf4163fae0847d848afca2":"0x15bc70139f74a0000","0x160226efe7b53a8af462d117a0108089bdecc2d1":"0xadf30ba70c8970000","0x160ceb6f980e04315f53c4fc988b2bf69e284d7d":"0x10910d4cdc9f60000","0x161caf5a972ace8379a6d0a04ae6e163fe21df2b":"0x152d02c7e14af6800000","0x161d26ef6759ba5b9f20fdcd66f16132c352415e":"0x6c6b935b8bbd400000","0x162110f29eac5f7d02b543d8dcd5bb59a5e33b73":"0x6c6b935b8bbd400000","0x162ba503276214b509f97586bd842110d103d517":"0x1e7ffd8895c22680000","0x162d76c2e6514a3afb6fe3d3cb93a35c5ae783f1":"0x6c6b935b8bbd400000","0x163bad4a122b457d64e8150a413eae4d07023e6b":"0x104e70464b1580000","0x163cc8be227646cb09719159f28ed09c5dc0dce0":"0x487a9a304539440000","0x163dca73d7d6ea3f3e6062322a8734180c0b78ef":"0x9f742003cb7dfc0000","0x164d7aac3eecbaeca1ad5191b753f173fe12ec33":"0x285652b8a468690000","0x16526c9edf943efa4f6d0f0bae81e18b31c54079":"0x35659ef93f0fc40000","0x165305b787322e25dc6ad0cefe6c6f334678d569":"0x6c6b935b8bbd400000","0x1665ab1739d71119ee6132abbd926a279fe67948":"0x56bc75e2d63100000","0x166bf6dab22d841b486c38e7ba6ab33a1487ed8c":"0x43c33c1937564800000","0x167699f48a78c615512515739958993312574f07":"0x21d3bd55e803c0000","0x1678c5f2a522393225196361894f53cc752fe2f3":"0x68f365aea1e4400000","0x167ce7de65e84708595a525497a3eb5e5a665073":"0x1f314773666fc40000","0x167e3e3ae2003348459392f7dfce44af7c21ad59":"0x1b1ae4d6e2ef500000","0x1680cec5021ee93050f8ae127251839e74c1f1fd":"0x2c61461e5d743d68000","0x16816aac0ede0d2d3cd442da79e063880f0f1d67":"0x6c6b935b8bbd400000","0x168b5019b818691644835fe69bf229e17112d52c":"0x5ede20f01a459800000","0x168bdec818eafc6d2992e5ef54aa0e1601e3c561":"0x3637507a30abeb0000","0x168d30e53fa681092b52e9bae15a0dcb41a8c9bb":"0x56bc75e2d63100000","0x169bbefc41cfd7d7cbb8dfc63020e9fb06d49546":"0x6c6b935b8bbd400000","0x16a58e985dccd707a594d193e7cca78b5d027849":"0x49b9ca9a6943400000","0x16a9e9b73ae98b864d1728798b8766dbc6ea8d12":"0x33e7b44b0db5040000","0x16aa52cb0b554723e7060f21f327b0a68315fea3":"0xd8d726b7177a80000","0x16abb8b021a710bdc78ea53494b20614ff4eafe8":"0x890b0c2e14fb80000","0x16afa787fc9f94bdff6976b1a42f430a8bf6fb0f":"0x6c6b935b8bbd400000","0x16bae5d24eff91778cd98b4d3a1cc3162f44aa77":"0x15be6174e1912e0000","0x16bc40215abbd9ae5d280b95b8010b4514ff1292":"0xad78ebc5ac6200000","0x16be75e98a995a395222d00bd79ff4b6e638e191":"0x79f905c6fd34e800000","0x16c1bf5b7dc9c83c179efacbcf2eb174e3561cb3":"0x3635c9adc5dea00000","0x16c7b31e8c376282ac2271728c31c95e35d952c3":"0x6c6b935b8bbd400000","0x16f313cf8ad000914a0a176dc6a4342b79ec2538":"0x6c6b935b8bbd400000","0x16ffac84032940f0121a09668b858a7e79ffa3bb":"0xd24ada6e1087110000","0x1703b4b292b8a9deddede81bb25d89179f6446b6":"0x42b65a455e8b1680000","0x17049311101d817efb1d65910f663662a699c98c":"0x6c68ccd09b022c0000","0x1704cefcfb1331ec7a78388b29393e85c1af7916":"0x15af1d78b58c400000","0x170a88a8997f92d238370f1affdee6347050b013":"0xa2ac77351488300000","0x17108dab2c50f99de110e1b3b3b4cd82f5df28e7":"0x35203b67bccad00000","0x17125b59ac51cee029e4bd78d7f5947d1ea49bb2":"0x4a89f54ef0121c00000","0x171ad9a04bedc8b861e8ed4bddf5717813b1bb48":"0x15af1d78b58c400000","0x171ca02a8b6d62bf4ca47e906914079861972cb2":"0xad78ebc5ac6200000","0x1722c4cbe70a94b6559d425084caeed4d6e66e21":"0xd8d726b7177a800000","0x17580b766f7453525ca4c6a88b01b50570ea088c":"0x56bc75e2d63100000","0x17589a6c006a54cad70103123aae0a82135fdeb4":"0xd8d726b7177a800000","0x175a183a3a235ffbb03ba835675267229417a091":"0x3635c9adc5dea000000","0x175feeea2aa4e0efda12e1588d2f483290ede81a":"0xad78ebc5ac6200000","0x1765361c2ec2f83616ce8363aae21025f2566f40":"0x10f0cf064dd59200000","0x1767525c5f5a22ed80e9d4d7710f0362d29efa33":"0x15af1d78b58c400000","0x17762560e82a93b3f522e0e524adb8612c3a7470":"0x3635c9adc5dea00000","0x177dae78bc0113d8d39c4402f2a641ae2a105ab8":"0x6292425620b4480000","0x1784948bf99848c89e445638504dd698271b5924":"0x1474c410d87baee0000","0x1788da9b57fd05edc4ff99e7fef301519c8a0a1e":"0x6c6b935b8bbd400000","0x178eaf6b8554c45dfde16b78ce0c157f2ee31351":"0x1158e460913d000000","0x17961d633bcf20a7b029a7d94b7df4da2ec5427f":"0xc6ff070f1938b8000","0x1796bcc97b8abc717f4b4a7c6b1036ea2182639f":"0x1341f91cd8e3510000","0x17993d312aa1106957868f6a55a5e8f12f77c843":"0x1865e814f4142e8000","0x179a825e0f1f6e985309668465cffed436f6aea9":"0x1158e460913d00000","0x17b2d6cf65c6f4a347ddc6572655354d8a412b29":"0x6c6b935b8bbd400000","0x17b807afa3ddd647e723542e7b52fee39527f306":"0x15af40ffa7fc010000","0x17c0478657e1d3d17aaa331dd429cecf91f8ae5d":"0x3634fb9f1489a70000","0x17c0fef6986cfb2e4041f9979d9940b69dff3de2":"0xd8d726b7177a800000","0x17d4918dfac15d77c47f9ed400a850190d64f151":"0x6c6b935b8bbd400000","0x17d521a8d9779023f7164d233c3b6420ffd223ed":"0x1158e460913d00000","0x17d931d4c56294dcbe77c8655be4695f006d4a3c":"0x6c6b935b8bbd400000","0x17df49518d73b129f0da36b1c9b40cb66420fdc7":"0x21e19e0c9bab2400000","0x17e4a0e52bac3ee44efe0954e753d4b85d644e05":"0x6c6b935b8bbd400000","0x17e584e810e567702c61d55d434b34cdb5ee30f6":"0x10f0cf064dd59200000","0x17e82e7078dc4fd9e879fb8a50667f53a5c54591":"0xad78ebc5ac6200000","0x17e86f3b5b30c0ba59f2b2e858425ba89f0a10b0":"0x6c6b935b8bbd400000","0x17ee9f54d4ddc84d670eff11e54a659fd72f4455":"0x3635c9adc5dea000000","0x17ef4acc1bf147e326749d10e677dcffd76f9e06":"0x87751f4e0e1b5300000","0x17f14632a7e2820be6e8f6df823558283dadab2d":"0x6c6b935b8bbd400000","0x17f523f117bc9fe978aa481eb4f5561711371bc8":"0x6c69f73e29134e0000","0x17fd9b551a98cb61c2e07fbf41d3e8c9a530cba5":"0x1768c308193048000","0x180478a655d78d0f3b0c4f202b61485bc4002fd5":"0x6c6b935b8bbd400000","0x18136c9df167aa17b6f18e22a702c88f4bc28245":"0xd8d726b7177a800000","0x1815279dff9952da3be8f77249dbe22243377be7":"0x1017cb76e7b26640000","0x181fbba852a7f50178b1c7f03ed9e58d54162929":"0x241a9b4f617a280000","0x1827039f09570294088fddf047165c33e696a492":"0x205b4dfa1ee74780000","0x182db85293f606e88988c3704cb3f0c0bbbfca5a":"0x73f75d1a085ba0000","0x1848003c25bfd4aa90e7fcb5d7b16bcd0cffc0d8":"0x3635c9adc5dea00000","0x184a4f0beb71ffd558a6b6e8f228b78796c4cf3e":"0x28a857425466f800000","0x184d86f3466ae6683b19729982e7a7e1a48347b2":"0x21e19e0c9bab2400000","0x1851a063ccdb30549077f1d139e72de7971197d5":"0x6c6b935b8bbd400000","0x185546e8768d506873818ac9751c1f12116a3bef":"0xad78ebc5ac6200000","0x1858cf11aea79f5398ad2bb22267b5a3c952ea74":"0x215f835bc769da80000","0x185a7fc4ace368d233e620b2a45935661292bdf2":"0x43c33c1937564800000","0x1864a3c7b48155448c54c88c708f166709736d31":"0x73f75d1a085ba0000","0x186afdc085f2a3dce4615edffbadf71a11780f50":"0xad78ebc5ac6200000","0x186b95f8e5effddcc94f1a315bf0295d3b1ea588":"0x6c6acc67d7b1d40000","0x187d9f0c07f8eb74faaad15ebc7b80447417f782":"0x1158e460913d00000","0x1895a0eb4a4372722fcbc5afe6936f289c88a419":"0x3154c9729d05780000","0x1899f69f653b05a5a6e81f480711d09bbf97588c":"0x69fb133df750ac0000","0x18a6d2fc52be73084023c91802f05bc24a4be09f":"0x6c6b935b8bbd400000","0x18b0407cdad4ce52600623bd5e1f6a81ab61f026":"0x1151ccf0c654c68000","0x18b8bcf98321da61fb4e3eacc1ec5417272dc27e":"0x2fb474098f67c00000","0x18c6723a6753299cb914477d04a3bd218df8c775":"0x3635c9adc5dea00000","0x18e113d8177c691a61be785852fa5bb47aeebdaf":"0x487a9a304539440000","0x18e4ce47483b53040adbab35172c01ef64506e0c":"0x1e7e4171bf4d3a00000","0x18e53243981aabc8767da10c73449f1391560eaa":"0x14542ba12a337c00000","0x18fa8625c9dc843c78c7ab259ff87c9599e07f10":"0x3635c9adc5dea00000","0x18fb09188f27f1038e654031924f628a2106703d":"0x6c6b935b8bbd400000","0x18fccf62d2c3395453b7587b9e26f5cff9eb7482":"0x3635c9adc5dea00000","0x191313525238a21c767457a91374f02200c55448":"0x64f5fdf494f780000","0x1914f1eb95d1277e93b6e61b668b7d77f13a11a1":"0x34957444b840e80000","0x1923cfc68b13ea7e2055803645c1e320156bd88d":"0x487a9a304539440000","0x19336a236ded755872411f2e0491d83e3e00159e":"0x32f51edbaaa3300000","0x1933e334c40f3acbad0c0b851158206924beca3a":"0x1995eaf01b896188000","0x1937c5c515057553ccbd46d5866455ce66290284":"0xd3c21bcecceda1000000","0x193ac65183651800e23580f8f0ead3bb597eb8a4":"0x2b62abcfb910a0000","0x193d37ed347d1c2f4e35350d9a444bc57ca4db43":"0x340aad21b3b700000","0x1940dc9364a852165f47414e27f5002445a4f143":"0x24c2dff6a3c7c480000","0x1945fe377fe6d4b71e3e791f6f17db243c9b8b0f":"0x7679e7beb988360000","0x194a6bb302b8aba7a5b579df93e0df1574967625":"0x1b1ae4d6e2ef500000","0x194cebb4929882bf3b4bf9864c2b1b0f62c283f9":"0x1ef861531f74aa0000","0x194ff44aefc17bd20efd7a204c47d1620c86db5d":"0xa29909687f6aa40000","0x194ffe78bbf5d20dd18a1f01da552e00b7b11db1":"0x17b7883c06916600000","0x1953313e2ad746239cb2270f48af34d8bb9c4465":"0x6c6b935b8bbd400000","0x19571a2b8f81c6bcf66ab3a10083295617150003":"0x1ab2cf7c9f87e20000","0x19687daa39c368139b6e7be60dc1753a9f0cbea3":"0x1b1ae4d6e2ef5000000","0x196c02210a450ab0b36370655f717aa87bd1c004":"0xe10ace157dbc00000","0x196e85df7e732b4a8f0ed03623f4db9db0b8fa31":"0x125b92f5cef248000","0x19732bf973055dbd91a4533adaa2149a91d38380":"0x6c6b935b8bbd400000","0x197672fd39d6f246ce66a790d13aa922d70ea109":"0x3635c9adc5dea00000","0x19798cbda715ea9a9b9d6aab942c55121e98bf91":"0x410d586a20a4c00000","0x198bfcf1b07ae308fa2c02069ac9dafe7135fb47":"0x1158e460913d00000","0x198ef1ec325a96cc354c7266a038be8b5c558f67":"0x80d1e4373e7f21da0000","0x19918aa09e7d494e98ffa5db50350892f7156ac6":"0x21e19e0c9bab2400000","0x19b36b0c87ea664ed80318dc77b688dde87d95a5":"0x699f499802303d0000","0x19df9445a81c1b3d804aeaeb6f6e204e4236663f":"0x206d94e6a49878000","0x19e5dea3370a2c746aae34a37c531f41da264e83":"0xad78ebc5ac6200000","0x19e7f3eb7bf67f3599209ebe08b62ad3327f8cde":"0x6c6b935b8bbd400000","0x19e94e620050aad766b9e1bad931238312d4bf49":"0x81e32df972abf00000","0x19ecf2abf40c9e857b252fe1dbfd3d4c5d8f816e":"0x6c6b935b8bbd400000","0x19f5caf4c40e6908813c0745b0aea9586d9dd931":"0x23fed9e1fa2b600000","0x19f643e1a8fa04ae16006028138333a59a96de87":"0x1158e460913d00000","0x19f99f2c0b46ce8906875dc9f90ae104dae35594":"0xf4575a5d4d162a0000","0x19ff244fcfe3d4fa2f4fd99f87e55bb315b81eb6":"0xad78ebc5ac6200000","0x1a04cec420ad432215246d77fe178d339ed0b595":"0x11216185c29f700000","0x1a04d5389eb006f9ce880c30d15353f8d11c4b31":"0x39d84b2186dc9100000","0x1a0841b92a7f7075569dc4627e6b76cab05ade91":"0x52663ccab1e1c00000","0x1a085d43ec92414ea27b914fe767b6d46b1eef44":"0x641e8a13563d8f80000","0x1a09fdc2c7a20e23574b97c69e93deba67d37220":"0x6c4fd1ee246e780000","0x1a0a1ddfb031e5c8cc1d46cf05842d50fddc7130":"0x3635c9adc5dea00000","0x1a1c9a26e0e02418a5cf687da75a275c622c9440":"0x10f0cf064dd59200000","0x1a201b4327cea7f399046246a3c87e6e03a3cda8":"0x3635c9adc5dea00000","0x1a2434cc774422d48d53d59c5d562cce8407c94b":"0x1a055690d9db80000","0x1a25e1c5bc7e5f50ec16f8885f210ea1b938800e":"0xd8d726b7177a800000","0x1a2694ec07cf5e4d68ba40f3e7a14c53f3038c6e":"0x3636cd06e2db3a8000","0x1a3520453582c718a21c42375bc50773255253e1":"0x2ad373ce668e980000","0x1a376e1b2d2f590769bb858d4575320d4e149970":"0x106712576391d180000","0x1a3a330e4fcb69dbef5e6901783bf50fd1c15342":"0xe3aeb5737240a00000","0x1a4ec6a0ae7f5a9427d23db9724c0d0cffb2ab2f":"0x9b41fbf9e0aec0000","0x1a505e62a74e87e577473e4f3afa16bedd3cfa52":"0x1b1ae4d6e2ef500000","0x1a5ee533acbfb3a2d76d5b685277b796c56a052b":"0x6c6b935b8bbd400000","0x1a644a50cbc2aee823bd2bf243e825be4d47df02":"0x56be03ca3e47d8000","0x1a7044e2383f8708305b495bd1176b92e7ef043a":"0xad78ebc5ac6200000","0x1a79c7f4039c67a39d7513884cdc0e2c34222490":"0x1158e460913d00000","0x1a89899cbebdbb64bb26a195a63c08491fcd9eee":"0x6c6b935b8bbd400000","0x1a8a5ce414de9cd172937e37f2d59cff71ce57a0":"0x21e19e0c9bab2400000","0x1a95a8a8082e4652e4170df9271cb4bb4305f0b2":"0x2b5e3af16b1880000","0x1a95c9b7546b5d1786c3858fb1236446bc0ca4ce":"0x6acb3df27e1f880000","0x1a987e3f83de75a42f1bde7c997c19217b4a5f24":"0x6c6b935b8bbd400000","0x1a9e702f385dcd105e8b9fa428eea21c57ff528a":"0x4be4e7267b6ae00000","0x1aa1021f550af158c747668dd13b463160f95a40":"0x4fb0591b9b30380000","0x1aa27699cada8dc3a76f7933aa66c71919040e88":"0x15af1d78b58c400000","0x1aa40270d21e5cde86b6316d1ac3c533494b79ed":"0x1158e460913d00000","0x1ab53a11bcc63ddfaa40a02b9e186496cdbb8aff":"0x6c3f2aac800c000000","0x1abc4e253b080aeb437984ab05bca0979aa43e1c":"0x3635c9adc5dea00000","0x1ac089c3bc4d82f06a20051a9d732dc0e734cb61":"0x25f69d63a6ce0e0000","0x1ad4563ea5786be1159935abb0f1d5879c3e7372":"0x14542ba12a337c00000","0x1ad72d20a76e7fcc6b764058f48d417d496fa6cd":"0x6c6b935b8bbd400000","0x1adaf4abfa867db17f99af6abebf707a3cf55df6":"0x14542ba12a337c00000","0x1af60343360e0b2d75255210375720df21db5c7d":"0x3635c9adc5dea00000","0x1afcc585896cd0ede129ee2de5c19ea811540b64":"0xaf2aba0c8e5bef8000","0x1b05ea6a6ac8af7cb6a8b911a8cce8fe1a2acfc8":"0x6c6b935b8bbd400000","0x1b0b31afff4b6df3653a94d7c87978ae35f34aae":"0x133910453fa9840000","0x1b0d076817e8d68ee2df4e1da1c1142d198c4435":"0x54069233bf7f780000","0x1b130d6fa51d5c48ec8d1d52dc8a227be8735c8a":"0x6c6b935b8bbd400000","0x1b23cb8663554871fbbe0d9e60397efb6faedc3e":"0xad78ebc5ac6200000","0x1b2639588b55c344b023e8de5fd4087b1f040361":"0x5150ae84a8cdf00000","0x1b3920d001c43e72b24e7ca46f0fd6e0c20a5ff2":"0x6c6b935b8bbd400000","0x1b3cb81e51011b549d78bf720b0d924ac763a7c2":"0x7695a92c20d6fe000000","0x1b43232ccd4880d6f46fa751a96cd82473315841":"0x4563918244f400000","0x1b4bbcb18165211b265b280716cb3f1f212176e8":"0x199ad37d03d0608000","0x1b4d07acd38183a61bb2783d2b7b178dd502ac8d":"0xad78ebc5ac6200000","0x1b636b7a496f044d7359596e353a104616436f6b":"0x1388ea95c33f1d0000","0x1b6495891240e64e594493c2662171db5e30ce13":"0x95887d695ed580000","0x1b6610fb68bad6ed1cfaa0bbe33a24eb2e96fafb":"0x83d6c7aab63600000","0x1b799033ef6dc7127822f74542bb22dbfc09a308":"0x56bc75e2d63100000","0x1b7ed974b6e234ce81247498429a5bd4a0a2d139":"0x6c6b935b8bbd400000","0x1b826fb3c012b0d159e294ba5b8a499ff3c0e03c":"0x6c6b935b8bbd400000","0x1b8aa0160cd79f005f88510a714913d70ad3be33":"0xaeffb83079ad00000","0x1b8bd6d2eca20185a78e7d98e8e185678dac4830":"0x3894f0e6f9b9f700000","0x1b9b2dc2960e4cb9408f7405827c9b59071612fd":"0x3635c9adc5dea00000","0x1ba9228d388727f389150ea03b73c82de8eb2e09":"0x18974fbe177c9280000","0x1ba9f7997e5387b6b2aa0135ac2452fe36b4c20d":"0x2e141ea081ca080000","0x1bba03ff6b4ad5bf18184acb21b188a399e9eb4a":"0x61093d7c2c6d380000","0x1bbc199e586790be87afedc849c04726745c5d7b":"0xd8d726b7177a800000","0x1bbc60bcc80e5cdc35c5416a1f0a40a83dae867b":"0x6c6b935b8bbd400000","0x1bc44c8761231ba1f11f5faa40fa669a013e12ce":"0xb0952c45aeaad0000","0x1bcf3441a866bdbe963009ce33c81cbb0261b02c":"0x9ddc1e3b901180000","0x1bd28cd5c78aee51357c95c1ef9235e7c18bc854":"0x6c6b935b8bbd400000","0x1bd8ebaa7674bb18e19198db244f570313075f43":"0x821ab0d4414980000","0x1bd909ac0d4a1102ec98dcf2cca96a0adcd7a951":"0x11651ac3e7a758000","0x1be3542c3613687465f15a70aeeb81662b65cca8":"0x6c6b935b8bbd400000","0x1bea4df5122fafdeb3607eddda1ea4ffdb9abf2a":"0x12c1b6eed03d280000","0x1bec4d02ce85fc48feb62489841d85b170586a9b":"0x821ab0d44149800000","0x1bf974d9904f45ce81a845e11ef4cbcf27af719e":"0x56bc75e2d63100000","0x1c045649cd53dc23541f8ed4d341812808d5dd9c":"0x17b7883c06916600000","0x1c128bd6cda5fca27575e4b43b3253c8c4172afe":"0x6c6b935b8bbd400000","0x1c13d38637b9a47ce79d37a86f50fb409c060728":"0x487a9a304539440000","0x1c2010bd662df417f2a271879afb13ef4c88a3ae":"0xd8d726b7177a800000","0x1c257ad4a55105ea3b58ed374b198da266c85f63":"0x21e19e0c9bab2400000","0x1c2e3607e127caca0fbd5c5948adad7dd830b285":"0x42bf06b78ed3b500000","0x1c356cfdb95febb714633b28d5c132dd84a9b436":"0x15af1d78b58c40000","0x1c35aab688a0cd8ef82e76541ba7ac39527f743b":"0x1b1ae4d6e2ef500000","0x1c3ef05dae9dcbd489f3024408669de244c52a02":"0x43c33c1937564800000","0x1c4af0e863d2656c8635bc6ffec8dd9928908cb5":"0x6c6b935b8bbd400000","0x1c601993789207f965bb865cbb4cd657cce76fc0":"0x5541a7037503f0000","0x1c63fa9e2cbbf23c49fcdef1cbabfe6e0d1e14c1":"0x3635c9adc5dea00000","0x1c6702b3b05a5114bdbcaeca25531aeeb34835f4":"0x58556bead45dcae0000","0x1c68a66138783a63c98cc675a9ec77af4598d35e":"0x2b746f48f0f120000","0x1c73d00b6e25d8eb9c1ff4ad827b6b9e9cf6d20c":"0xad78ebc5ac6200000","0x1c751e7f24df9d94a637a5dedeffc58277b5db19":"0xae8e7a0bb575d00000","0x1c7cb2fe6bf3e09cbcdc187af38fa8f5053a70b6":"0x21c84f742d0cead8000","0x1c89060f987c518fa079ec2c0a5ebfa30f5d20f7":"0x80bfbefcb5f0bc00000","0x1c94d636e684eb155895ce6db4a2588fba1d001b":"0x6c6b935b8bbd400000","0x1c99fe9bb6c6d1066d912099547fd1f4809eacd9":"0x6c6b935b8bbd400000","0x1cb450920078aab2317c7db3b38af7dd298b2d41":"0x126e72a69a50d00000","0x1cb5f33b4d488936d13e3161da33a1da7df70d1b":"0xad78ebc5ac6200000","0x1cb6b2d7cfc559b7f41e6f56ab95c7c958cd0e4c":"0x487a9a304539440000","0x1cc1d3c14f0fb8640e36724dc43229d2ea7a1e48":"0x5c283d410394100000","0x1cc90876004109cd79a3dea866cb840ac364ba1b":"0x6c6b935b8bbd400000","0x1cd1f0a314cbb200de0a0cb1ef97e920709d97c2":"0x6c6b935b8bbd400000","0x1cda411bd5163baeca1e558563601ce720e24ee1":"0xfc936392801c0000","0x1ce81d31a7923022e125bf48a3e03693b98dc9dd":"0x6c6b935b8bbd400000","0x1cebf0985d7f680aaa915c44cc62edb49eab269e":"0x3635c9adc5dea00000","0x1ced6715f862b1ff86058201fcce5082b36e62b2":"0x16a5e60bee273b10000","0x1cf04cb14380059efd3f238b65d5beb86afa14d8":"0x1158e460913d00000","0x1cf105ab23023b554c583e86d7921179ee83169f":"0x6acb3df27e1f880000","0x1cf2eb7a8ccac2adeaef0ee87347d535d3b94058":"0x6c6b935b8bbd400000","0x1cfcf7517f0c08459720942b647ad192aa9c8828":"0x2b5e3af16b18800000","0x1d09ad2412691cc581c1ab36b6f9434cd4f08b54":"0x17b7883c06916600000","0x1d157c5876c5cad553c912caf6ce2d5277e05c73":"0x6c6b935b8bbd400000","0x1d2615f8b6ca5012b663bdd094b0c5137c778ddf":"0x21e19e0c9bab2400000","0x1d29c7aab42b2048d2b25225d498dba67a03fbb2":"0xad78ebc5ac6200000","0x1d341fa5a3a1bd051f7db807b6db2fc7ba4f9b45":"0xfc936392801c0000","0x1d344e962567cb27e44db9f2fac7b68df1c1e6f7":"0x692ae8897081d00000","0x1d36683063b7e9eb99462dabd569bddce71686f2":"0x3635c9adc5dea00000","0x1d37616b793f94911838ac8e19ee9449df921ec4":"0x5150ae84a8cdf00000","0x1d395b30adda1cf21f091a4f4a7b753371189441":"0x152d02c7e14af6800000","0x1d45586eb803ca2190650bf748a2b174312bb507":"0x4be4e7267b6ae00000","0x1d572edd2d87ca271a6714c15a3b37761dcca005":"0x6ebd52a8ddd390000","0x1d633097a85225a1ff4321b12988fdd55c2b3844":"0xd8d726b7177a800000","0x1d69c83d28ff0474ceebeacb3ad227a144ece7a3":"0x128cc03920a62d28000","0x1d96bcd58457bbf1d3c2a46ffaf16dbf7d836859":"0x9497209d8467e8000","0x1d9e6aaf8019a05f230e5def05af5d889bd4d0f2":"0x73f75d1a085ba0000","0x1dab172effa6fbee534c94b17e794edac54f55f8":"0x6acb3df27e1f880000","0x1db9ac9a9eaeec0a523757050c71f47278c72d50":"0x487a9a304539440000","0x1dbe8e1c2b8a009f85f1ad3ce80d2e05350ee39c":"0x7570d6e9ebbe40000","0x1dc7f7dad85df53f1271152403f4e1e4fdb3afa0":"0xad78ebc5ac6200000","0x1dcebcb7656df5dcaa3368a055d22f9ed6cdd940":"0x1b181e4bf2343c0000","0x1dd77441844afe9cc18f15d8c77bccfb655ee034":"0x106eb45579944880000","0x1ddefefd35ab8f658b2471e54790bc17af98dea4":"0x3635c9adc5dea00000","0x1deec01abe5c0d952de9106c3dc30639d85005d6":"0x6c6b935b8bbd400000","0x1df6911672679bb0ef3509038c0c27e394fdfe30":"0x1d460162f516f00000","0x1dfaee077212f1beaf0e6f2f1840537ae154ad86":"0x3635c9adc5dea00000","0x1e060dc6c5f1cb8cc7e1452e02ee167508b56542":"0x2b14f02c864c77e0000","0x1e13ec51142cebb7a26083412c3ce35144ba56a1":"0x10f0cf064dd59200000","0x1e1a4828119be309bd88236e4d482b504dc55711":"0xa030dcebbd2f4c0000","0x1e1aed85b86c6562cb8fa1eb6f8f3bc9dcae6e79":"0xf4d2dd84259b240000","0x1e1c6351776ac31091397ecf16002d979a1b2d51":"0x4be4e7267b6ae00000","0x1e1d7a5f2468b94ea826982dbf2125793c6e4a5a":"0x3634f48417401a0000","0x1e210e7047886daa52aaf70f4b991dac68e3025e":"0xad78ebc5ac6200000","0x1e2bf4ba8e5ef18d37de6d6ad636c4cae489d0cc":"0x6c6b935b8bbd400000","0x1e2fe4e4a77d141ff49a0c7fbc95b0a2b283eeeb":"0x6c6b935b8bbd400000","0x1e33d1c2fb5e084f2f1d54bc5267727fec3f985d":"0x1b1ae4d6e2ef500000","0x1e381adcf801a3bf9fd7bfac9ccc2b8482ad5e66":"0x208972c0010d740000","0x1e3badb1b6e1380e27039c576ae6222e963a5b53":"0x43c33c1937564800000","0x1e484d0621f0f5331b35d5408d9aae4eb1acf21e":"0x1158e460913d00000","0x1e5800227d4dcf75e30f5595c5bed3f72e341e3b":"0xd75dace73417e0000","0x1e596a81b357c6f24970cc313df6dbdaabd0d09e":"0x6c6b935b8bbd400000","0x1e6915ebd9a19c81b692ad99b1218a592c1ac7b1":"0xd8d726b7177a800000","0x1e6e0153fc161bc05e656bbb144c7187bf4fe84d":"0x6c6b935b8bbd400000","0x1e706655e284dcf0bb37fe075d613a18dc12ff4a":"0xed43bf1eee82ac0000","0x1e783e522ab7df0acaac9eeed3593039e5ac7579":"0x2b1446dd6aefe41c0000","0x1e7b5e4d1f572becf2c00fc90cb4767b4a6e33d4":"0x61fc6107593e10000","0x1e8e689b02917cdc29245d0c9c68b094b41a9ed6":"0x6c6b935b8bbd400000","0x1ea334b5750807ea74aac5ab8694ec5f28aa77cf":"0x1ab2cf7c9f87e20000","0x1ea4715504c6af107b0194f4f7b1cb6fcccd6f4b":"0x20043197e0b0270000","0x1ea492bce1ad107e337f4bd4a7ac9a7babcccdab":"0x56bc75e2d63100000","0x1ea6bf2f15ae9c1dbc64daa7f8ea4d0d81aad3eb":"0xe3aeb5737240a00000","0x1eb4bf73156a82a0a6822080c6edf49c469af8b9":"0x678a932062e4180000","0x1ebacb7844fdc322f805904fbf1962802db1537c":"0x21e19e0c9bab2400000","0x1ec4ec4b77bf19d091a868e6f49154180541f90e":"0x6c6b935b8bbd400000","0x1ed06ee51662a86c634588fb62dc43c8f27e7c17":"0xad78ebc5ac6200000","0x1ed8bb3f06778b039e9961d81cb71a73e6787c8e":"0x6c6b935b8bbd400000","0x1eda084e796500ba14c5121c0d90846f66e4be62":"0x1cfdd7468216e80000","0x1eee6cbee4fe96ad615a9cf5857a647940df8c78":"0x10d3aa536e2940000","0x1ef2dcbfe0a500411d956eb8c8939c3d6cfe669d":"0x2a1129d09367200000","0x1ef5c9c73650cfbbde5c885531d427c7c3fe5544":"0x14542ba12a337c00000","0x1f0412bfedcd964e837d092c71a5fcbaf30126e2":"0x1158e460913d00000","0x1f174f40a0447234e66653914d75bc003e5690dc":"0x8ac7230489e800000","0x1f2186ded23e0cf9521694e4e164593e690a9685":"0x1043561a8829300000","0x1f2afc0aed11bfc71e77a907657b36ea76e3fb99":"0xd8d726b7177a800000","0x1f3959fc291110e88232c36b7667fc78a379613f":"0xfc936392801c0000","0x1f3da68fe87eaf43a829ab6d7ec5a6e009b204fb":"0x1e1601758c2c7e0000","0x1f49b86d0d3945590698a6aaf1673c37755ca80d":"0x25f273933db5700000","0x1f5f3b34bd134b2781afe5a0424ac5846cdefd11":"0x55de6a779bbac0000","0x1f6f0030349752061c96072bc3d6eb3549208d6b":"0x14b8de1eb88db8000","0x1f7d8e86d6eeb02545aad90e91327bd369d7d2f3":"0x1158e460913d00000","0x1f8116bd0af5570eaf0c56c49c7ab5e37a580458":"0x6c6b935b8bbd400000","0x1f88f8a1338fc7c10976abcd3fb8d38554b5ec9c":"0xb9f65d00f63c0000","0x1f9c3268458da301a2be5ab08257f77bb5a98aa4":"0xad78ebc5ac6200000","0x1fa2319fed8c2d462adf2e17feec6a6f30516e95":"0x6cae30621d4720000","0x1fb463a0389983df7d593f7bdd6d78497fed8879":"0x1158e460913d00000","0x1fb7bd310d95f2a6d9baaf8a8a430a9a04453a8b":"0xa2a15d09519be00000","0x1fcc7ce6a8485895a3199e16481f72e1f762defe":"0x3635c9adc5dea00000","0x1fcfd1d57f872290560cb62d600e1defbefccc1c":"0x50c5e761a444080000","0x1fd296be03ad737c92f9c6869e8d80a71c5714aa":"0xb98bc829a6f90000","0x1fddd85fc98be9c4045961f40f93805ecc4549e5":"0x8e3f50b173c100000","0x2001bef77b66f51e1599b02fb110194a0099b78d":"0x6c6b935b8bbd400000","0x200264a09f8c68e3e6629795280f56254f8640d0":"0x1158e460913d00000","0x2003717907a72560f4307f1beecc5436f43d21e7":"0x1b1ae4d6e2ef500000","0x200dfc0b71e359b2b465440a36a6cdc352773007":"0x5150ae84a8cdf00000","0x20134cbff88bfadc466b52eceaa79857891d831e":"0x3635c9adc5dea00000","0x2014261f01089f53795630ba9dd24f9a34c2d942":"0x487a9a304539440000","0x2016895df32c8ed5478269468423aea7b7fbce50":"0x1158e460913d00000","0x20181c4b41f6f972b66958215f19f570c15ddff1":"0x56bc75e2d631000000","0x201864a8f784c2277b0b7c9ee734f7b377eab648":"0xf2281400d1d5ec0000","0x2020b81ae53926ace9f7d7415a050c031d585f20":"0x127f19e83eb3480000","0x203c6283f20df7bc86542fdfb4e763ecdbbbeef5":"0x54b40b1f852bda00000","0x204ac98867a7c9c7ed711cb82f28a878caf69b48":"0x14542ba12a337c00000","0x205237c4be146fba99478f3a7dad17b09138da95":"0x6c6b935b8bbd400000","0x2053ac97548a0c4e8b80bc72590cd6a098fe7516":"0xa2325753b460c0000","0x205f5166f12440d85762c967d3ae86184f8f4d98":"0x177224aa844c720000","0x205fc843e19a4913d1881eb69b69c0fa3be5c50b":"0x20dd68aaf3289100000","0x206482ee6f138a778fe1ad62b180ce856fbb23e6":"0x6c6b935b8bbd400000","0x2066774d822793ff25f1760909479cf62491bf88":"0xbae3ac685cb72e00000","0x206d55d5792a514ec108e090599f2a065e501185":"0xadf30ba70c8970000","0x20707e425d2a11d2c89f391b2b809f556c592421":"0x6c6b935b8bbd400000","0x207ef80b5d60b6fbffc51f3a64b8c72036a5abbd":"0x16a6502f15a1e540000","0x20824ba1dbebbef9846ef3d0f6c1b017e6912ec4":"0x184b26e4daf1d350000","0x2084fce505d97bebf1ad8c5ff6826fc645371fb2":"0x1a055690d9db80000","0x208c45732c0a378f17ac8324926d459ba8b658b4":"0xa030dcebbd2f4c0000","0x209377b6ad3fe101c9685b3576545c6b1684e73c":"0x62a992e53a0af00000","0x209e8e29d33beae8fb6baa783d133e1d9ec1bc0b":"0x2d43f3ebfafb2c0000","0x20a15256d50ce058bf0eac43aa533aa16ec9b380":"0x1158e460913d00000","0x20a29c5079e26b3f18318bb2e50e8e8b346e5be8":"0x1b1ab319f5ec750000","0x20a81680e465f88790f0074f60b4f35f5d1e6aa5":"0x456180278f0c778000","0x20b9a9e6bd8880d9994ae00dd0b9282a0beab816":"0x1b1ae4d6e2ef500000","0x20c284ba10a20830fc3d699ec97d2dfa27e1b95e":"0x6c6b935b8bbd400000","0x20d1417f99c569e3beb095856530fe12d0fceaaa":"0x4015f94b1183698000","0x20dd8fcbb46ea46fe381a68b8ca0ea5be21fe9a5":"0x6c6b935b8bbd400000","0x20ff3ede8cadb5c37b48cb14580fb65e23090a7b":"0x8e4d316827686400000","0x2100381d60a5b54adc09d19683a8f6d5bb4bfbcb":"0x21e19e0c9bab2400000","0x2118c116ab0cdf6fd11d54a4309307b477c3fc0f":"0x21e19e0c9bab2400000","0x211b29cefc79ae976744fdebcebd3cbb32c51303":"0x2f6f10780d22cc00000","0x21206ce22ea480e85940d31314e0d64f4e4d3a04":"0x3635c9adc5dea00000","0x2132c0516a2e17174ac547c43b7b0020d1eb4c59":"0x35659ef93f0fc40000","0x21408b4d7a2c0e6eca4143f2cacdbbccba121bd8":"0x43c33c1937564800000","0x214b743955a512de6e0d886a8cbd0282bee6d2a2":"0x6c6b935b8bbd400000","0x214c89c5bd8e7d22bc574bb35e48950211c6f776":"0x10654f258fd358000","0x21546914dfd3af2add41b0ff3e83ffda7414e1e0":"0x14395e7385a502e0000","0x21582e99e502cbf3d3c23bdffb76e901ac6d56b2":"0x56bc75e2d63100000","0x2159240813a73095a7ebf7c3b3743e8028ae5f09":"0x6c6b935b8bbd400000","0x2160b4c02cac0a81de9108de434590a8bfe68735":"0x6acb3df27e1f880000","0x216e41864ef98f060da08ecae19ad1166a17d036":"0x1369fb96128ac480000","0x21846f2fdf5a41ed8df36e5ed8544df75988ece3":"0x6c6acc67d7b1d40000","0x21a6db6527467bc6dad54bc16e9fe2953b6794ed":"0x2f6f10780d22cc00000","0x21a6feb6ab11c766fdd977f8df4121155f47a1c0":"0x319cf38f100580000","0x21b182f2da2b384493cf5f35f83d9d1ee14f2a21":"0x6c6b935b8bbd400000","0x21bfe1b45cacde6274fd8608d9a178bf3eeb6edc":"0x6cee06ddbe15ec0000","0x21c07380484f6cbc8724ad32bc864c3b5ad500b7":"0x3635c9adc5dea00000","0x21c3a8bba267c8cca27b1a9afabad86f607af708":"0x1e4a36c49d998300000","0x21ce6d5b9018cec04ad6967944bea39e8030b6b8":"0x1158e460913d00000","0x21d02705f3f64905d80ed9147913ea8c7307d695":"0x49edb1c09887360000","0x21d13f0c4024e967d9470791b50f22de3afecf1b":"0xf15ad35e2e31e50000","0x21dbdb817a0d8404c6bdd61504374e9c43c9210e":"0x21e18b9e9ab45e48000","0x21df1ec24b4e4bfe79b0c095cebae198f291fbd1":"0x43c33c1937564800000","0x21df2dcdaf74b2bf803404dd4de6a35eabec1bbd":"0x177224aa844c7200000","0x21e219c89ca8ac14ae4cba6130eeb77d9e6d3962":"0x2acd9faaa038ee0000","0x21e5d2bae995ccfd08a5c16bb524e1f630448f82":"0x97c9ce4cf6d5c00000","0x21e5d77320304c201c1e53b261a123d0a1063e81":"0x4b6fa9d33dd460000","0x21eae6feffa9fbf4cd874f4739ace530ccbe5937":"0x10f0cf064dd59200000","0x21ecb2dfa65779c7592d041cd2105a81f4fd4e46":"0x3635c9adc5dea00000","0x21efbca09b3580b98e73f5b2f7f4dc0bf02c529c":"0x6c6b935b8bbd400000","0x21fd0bade5f4ef7474d058b7f3d854cb1300524e":"0x1158e460913d00000","0x21fd47c5256012198fa5abf131c06d6aa1965f75":"0x1ab2cf7c9f87e200000","0x21fd6c5d97f9c600b76821ddd4e776350fce2be0":"0x6c6ad382d4fb610000","0x220dc68df019b6b0ccbffb784b5a5ab4b15d4060":"0xd5967be4fc3f100000","0x220e2b92c0f6c902b513d9f1e6fab6a8b0def3d7":"0x2b5e3af16b18800000","0x22561c5931143536309c17e832587b625c390b9a":"0xd8d726b7177a800000","0x2257fca16a6e5c2a647c3c29f36ce229ab93b17e":"0xd8d726b7177a800000","0x225d35faedb391c7bc2db7fa9071160405996d00":"0x91854fc1862630000","0x225f9eb3fb6ff3e9e3c8447e14a66e8d4f3779f6":"0x6c6b935b8bbd400000","0x2272186ef27dcbe2f5fc373050fdae7f2ace2316":"0x368c8623a8b4d100000","0x2273bad7bc4e487622d175ef7a66988b6a93c4ee":"0x1158e460913d00000","0x2276264bec8526c0c0f270677abaf4f0e441e167":"0x3635c9adc5dea00000","0x228242f8336eecd8242e1f000f41937e71dffbbf":"0x10f0cf064dd59200000","0x22842ab830da509913f81dd1f04f10af9edd1c55":"0x6c6b935b8bbd400000","0x22944fbca9b57963084eb84df7c85fb9bcdfb856":"0xfc118fef90ba388000","0x229cc4711b62755ea296445ac3b77fc633821cf2":"0x223e8b05219328000","0x229e430de2b74f442651ddcdb70176bc054cad54":"0xbbf981bc4aaa8000","0x229f4f1a2a4f540774505b4707a81de44410255b":"0x6c6b935b8bbd400000","0x229ff80bf5708009a9f739e0f8b560914016d5a6":"0x1211ecb56d13488000","0x22a25812ab56dcc423175ed1d8adacce33cd1810":"0x6449e84e47a8a80000","0x22b96ab2cad55db100b53001f9e4db378104c807":"0x21e19e0c9bab2400000","0x22bdffc240a88ff7431af3bff50e14da37d5183e":"0x3635c9adc5dea00000","0x22ce349159eeb144ef06ff2636588aef79f62832":"0xa31062beeed700000","0x22db559f2c3c1475a2e6ffe83a5979599196a7fa":"0x3635c9adc5dea00000","0x22e15158b5ee3e86eb0332e3e6a9ac6cd9b55ecd":"0x8ac7230489e800000","0x22e2488e2da26a49ae84c01bd54b21f2947891c6":"0x5dc892aa1131c80000","0x22e512149a18d369b73c71efa43e86c9edabaf1d":"0x4ee02e6714615c0000","0x22eb7db0ba56b0f8b816ccb206e615d929185b0d":"0x45d29737e22f20000","0x22eed327f8eb1d1338a3cb7b0f8a4baa5907cd95":"0x1455d5f4877088000","0x22f004df8de9e6ebf523ccace457accb26f97281":"0x21e19e0c9bab2400000","0x22f2dcff5ad78c3eb6850b5cb951127b659522e6":"0xbe202d6a0eda0000","0x22f3c779dd79023ea92a78b65c1a1780f62d5c4a":"0x6acb3df27e1f880000","0x22fe884d9037291b4d52e6285ae68dea0be9ffb5":"0x6c6b935b8bbd400000","0x2306df931a940d58c01665fa4d0800802c02edfe":"0x3635c9adc5dea00000","0x2309d34091445b3232590bd70f4f10025b2c9509":"0x21e19e0c9bab2400000","0x23120046f6832102a752a76656691c863e17e59c":"0x11e0e4f8a50bd40000","0x231a15acc199c89fa9cb22441cc70330bdcce617":"0x1b1ae4d6e2ef500000","0x231d94155dbcfe2a93a319b6171f63b20bd2b6fa":"0xcf147bb906e2f80000","0x232832cd5977e00a4c30d0163f2e24f088a6cb09":"0xa2a15d09519be00000","0x232c6d03b5b6e6711efff190e49c28eef36c82b0":"0x487a9a304539440000","0x232cb1cd49993c144a3f88b3611e233569a86bd6":"0x34c606c42d0ac600000","0x232ce782506225fd9860a2edc14a7a3047736da2":"0x1158e460913d00000","0x232f525d55859b7d4e608d20487faadb00293135":"0xd8d726b7177a800000","0x2334c590c7a48769103045c5b6534c8a3469f44a":"0x3b199073df72dc00000","0x23376ecabf746ce53321cf42c86649b92b67b2ff":"0x6c6b935b8bbd400000","0x23378f42926d0184b793b0c827a6dd3e3d334fcd":"0x30927f74c9de00000","0x233842b1d0692fd11140cf5acda4bf9630bae5f8":"0x6c6b935b8bbd400000","0x2339e9492870afea2537f389ac2f838302a33c06":"0x6c6b935b8bbd400000","0x233bdddd5da94852f4ade8d212885682d9076bc6":"0xd8d726b7177a800000","0x234f46bab73fe45d31bf87f0a1e0466199f2ebac":"0x1a4aba225c20740000","0x23551f56975fe92b31fa469c49ea66ee6662f41e":"0x678a932062e4180000","0x23569542c97d566018c907acfcf391d14067e87e":"0x6c6b935b8bbd400000","0x235fa66c025ef5540070ebcf0d372d8177c467ab":"0x7129e1cdf373ee00000","0x2372c4c1c9939f7aaf6cfac04090f00474840a09":"0x21e19e0c9bab2400000","0x23730c357a91026e44b1d0e2fc2a51d071d8d77b":"0xd8d726b7177a800000","0x2376ada90333b1d181084c97e645e810aa5b76f1":"0x28a857425466f80000","0x2378fd4382511e968ed192106737d324f454b535":"0x3635c9adc5dea00000","0x2382a9d48ec83ea3652890fd0ee79c907b5b2dc1":"0x73f75d1a085ba0000","0x2383c222e67e969190d3219ef14da37850e26c55":"0x6c6b935b8bbd400000","0x238a6b7635252f5244486c0af0a73a207385e039":"0x4a4491bd6dcd280000","0x239a733e6b855ac592d663156186a8a174d2449e":"0x58be3758b241f60000","0x23ab09e73f87aa0f3be0139df0c8eb6be5634f95":"0x1b1ae4d6e2ef5000000","0x23abd9e93e7957e5b636be6579051c15e5ce0b0e":"0x3a3c8f7cbf42c380000","0x23b1c4917fbd93ee3d48389306957384a5496cbf":"0xd8d8583fa2d52f0000","0x23ba3864da583dab56f420873c37679690e02f00":"0x21342520d5fec200000","0x23c55aeb5739876f0ac8d7ebea13be729685f000":"0x487a9a304539440000","0x23c99ba087448e19c9701df66e0cab52368331fa":"0x6c6b935b8bbd400000","0x23ccc3c6acd85c2e460c4ffdd82bc75dc849ea14":"0xd8d726b7177a800000","0x23cd2598a20e149ead2ad69379576ecedb60e38e":"0x6c6b935b8bbd400000","0x23df8f48ee009256ea797e1fa369beebcf6bc663":"0x7cd3fac26d19818000","0x23e2c6a8be8e0acfa5c4df5e36058bb7cbac5a81":"0x6c6b935b8bbd400000","0x23ea669e3564819a83b0c26c00a16d9e826f6c46":"0x4d8d6ca968ca130000","0x23eb6fd85671a9063ab7678ebe265a20f61a02b3":"0x6c6b935b8bbd400000","0x23f9ecf3e5dddca38815d3e59ed34b5b90b4a353":"0xb1781a3f0bb200000","0x23fa7eb51a48229598f97e762be0869652dffc66":"0x3635c9adc5dea00000","0x240305727313d01e73542c775ff59d11cd35f819":"0x141885666807f5c8000","0x24046b91da9b61b629cb8b8ec0c351a07e0703e4":"0x6c6b935b8bbd400000","0x240e559e274aaef0c258998c979f671d1173b88b":"0xd8d726b7177a800000","0x241361559feef80ef137302153bd9ed2f25db3ef":"0x43c33c1937564800000","0x243b3bca6a299359e886ce33a30341fafe4d573d":"0x43c33c1937564800000","0x243c84d12420570cc4ef3baba1c959c283249520":"0x7f1f6993a853040000","0x24434a3e32e54ecf272fe3470b5f6f512f675520":"0x14061b9d77a5e980000","0x2448596f91c09baa30bc96106a2d37b5705e5d28":"0x6c6b935b8bbd400000","0x24586ec5451735eeaaeb470dc8736aae752f82e5":"0xf43fc2c04ee00000","0x2458d6555ff98a129cce4037953d00206eff4287":"0xaadec983fcff40000","0x246291165b59332df5f18ce5c98856fae95897d6":"0x5c283d410394100000","0x2467c6a5c696ede9a1e542bf1ad06bcc4b06aca0":"0x100bd33fb98ba0000","0x2476b2bb751ce748e1a4c4ff7b230be0c15d2245":"0xd8d726b7177a800000","0x247a0a11c57f0383b949de540b66dee68604b0a1":"0x39fbae8d042dd00000","0x2487c3c4be86a2723d917c06b458550170c3edba":"0x3635c9adc5dea00000","0x2489ac126934d4d6a94df08743da7b7691e9798e":"0x3635c9adc5dea00000","0x249db29dbc19d1235da7298a04081c315742e9ac":"0x61acff81a78ad40000","0x24a4eb36a7e498c36f99975c1a8d729fd6b305d7":"0xdfc78210eb2c80000","0x24a750eae5874711116dd7d47b7186ce990d3103":"0xad78ebc5ac6200000","0x24aa1151bb765fa3a89ca50eb6e1b1c706417fd4":"0xa80d24677efef00000","0x24aca08d5be85ebb9f3132dfc1b620824edfedf9":"0xfc936392801c0000","0x24b2be118b16d8b2174769d17b4cf84f07ca946d":"0x6c6b935b8bbd400000","0x24b8b446debd1947955dd084f2c544933346d3ad":"0xea696d904039bd8000","0x24b95ebef79500baa0eda72e77f877415df75c33":"0x3154c9729d05780000","0x24b9e6644f6ba4cde126270d81f6ab60f286dff4":"0x73f75d1a085ba0000","0x24bd5904059091d2f9e12d6a26a010ca22ab14e8":"0x65ea3db75546600000","0x24c0c88b54a3544709828ab4ab06840559f6c5e2":"0x90f534608a72880000","0x24c117d1d2b3a97ab11a4679c99a774a9eade8d1":"0x3635c9adc5dea00000","0x24cff0e9336a9f80f9b1cb968caf6b1d1c4932a4":"0xada55474b81340000","0x24daaaddf7b06bbcea9b80590085a88567682b4e":"0x114b2015d2bbd00000","0x24dcc24bd9c7210ceacfb30da98ae04a4d7b8ab9":"0x3635c9adc5dea00000","0x24f7450ddbf18b020feb1a2032d9d54b633edf37":"0x2b5e3af16b1880000","0x24fc73d20793098e09ddab5798506224fa1e1850":"0xad78ebc5ac6200000","0x24fd9a6c874c2fab3ff36e9afbf8ce0d32c7de92":"0x487a9a304539440000","0x250a40cef3202397f240469548beb5626af4f23c":"0x503b203e9fba20000","0x250a69430776f6347703f9529783955a6197b682":"0x692ae8897081d00000","0x250eb7c66f869ddf49da85f3393e980c029aa434":"0xd8d726b7177a800000","0x25106ab6755df86d6b63a187703b0cfea0e594a0":"0x17c405ad41db40000","0x25185f325acf2d64500698f65c769ddf68301602":"0x10f0cf064dd59200000","0x251c12722c6879227992a304eb3576cd18434ea5":"0x6c6b935b8bbd400000","0x251e6838f7cec5b383c1d90146341274daf8e502":"0x7ff1ccb7561df0000","0x25259d975a21d83ae30e33f800f53f37dfa01938":"0x1158e460913d00000","0x25287b815f5c82380a73b0b13fbaf982be24c4d3":"0x22b1c8c1227a00000","0x252b6555afdc80f2d96d972d17db84ea5ad521ac":"0x1ab2cf7c9f87e200000","0x2538532936813c91e653284f017c80c3b8f8a36f":"0x6c8754c8f30c080000","0x253e32b74ea4490ab92606fda0aa257bf23dcb8b":"0x21e19e0c9bab2400000","0x253f1e742a2cec86b0d7b306e5eacb6ccb2f8554":"0x43e5ede1f878c200000","0x2541314a0b408e95a694444977712a50713591ab":"0x589e1a5df4d7b50000","0x254c1ecc630c2877de8095f0a8dba1e8bf1f550c":"0x5c283d410394100000","0x255abc8d08a096a88f3d6ab55fbc7352bddcb9ce":"0x4743682313ede8000","0x255bdd6474cc8262f26a22c38f45940e1ceea69b":"0xd8d726b7177a800000","0x2560b09b89a4ae6849ed5a3c9958426631714466":"0x5c283d410394100000","0x2561a138dcf83bd813e0e7f108642be3de3d6f05":"0x3634f48417401a0000","0x2561ec0f379218fe5ed4e028a3f744aa41754c72":"0xb98bc829a6f90000","0x256292a191bdda34c4da6b6bd69147bf75e2a9ab":"0xc2ff2e0dfb038000","0x25697ef20cccaa70d32d376f8272d9c1070c3d78":"0xad78ebc5ac6200000","0x256fa150cc87b5056a07d004efc84524739e62b5":"0xad78ebc5ac6200000","0x25721c87b0dc21377c7200e524b14a22f0af69fb":"0xd8d726b7177a800000","0x258939bbf00c9de9af5338f5d714abf6d0c1c671":"0x54069233bf7f780000","0x2590126870e0bde8a663ab040a72a5573d8d41c2":"0x10f0cf064dd59200000","0x259ec4d265f3ab536b7c70fa97aca142692c13fc":"0x11b1b5bea89f80000","0x25a500eeec7a662a841552b5168b707b0de21e9e":"0x21f2f6f0fc3c6100000","0x25a5a44d38a2f44c6a9db9cdbc6b1e2e97abb509":"0x39992648a23c8a00000","0x25a74c2ac75dc8baa8b31a9c7cb4b7829b2456da":"0x6c6b935b8bbd400000","0x25adb8f96f39492c9bb47c5edc88624e46075697":"0x5a9940bc56879500000","0x25aee68d09afb71d8817f3f184ec562f7897b734":"0x6c6b935b8bbd400000","0x25b0533b81d02a617b9229c7ec5d6f2f672e5b5a":"0x3635c9adc5dea00000","0x25b78c9fad85b43343f0bfcd0fac11c9949ca5eb":"0x6c6b935b8bbd400000","0x25bc49ef288cd165e525c661a812cf84fbec8f33":"0x125921aebda9d00000","0x25bdfa3ee26f3849617b230062588a97e3cae701":"0x3635e619bb04d40000","0x25c1a37ee5f08265a1e10d3d90d5472955f97806":"0x62a992e53a0af00000","0x25c6e74ff1d928df98137af4df8430df24f07cd7":"0x15245655b102580000","0x25cfc4e25c35c13b69f7e77dbfb08baf58756b8d":"0x878678326eac9000000","0x25dad495a11a86b9eeece1eeec805e57f157faff":"0x3635c9adc5dea000000","0x25e037f00a18270ba5ec3420229ddb0a2ce38fa2":"0x21e19e0c9bab2400000","0x25e661c939863acc044e6f17b5698cce379ec3cc":"0x4a4491bd6dcd280000","0x26048fe84d9b010a62e731627e49bc2eb73f408f":"0xd8d726b7177a800000","0x2606c3b3b4ca1b091498602cb1978bf3b95221c0":"0x15af1d78b58c400000","0x260a230e4465077e0b14ee4442a482d5b0c914bf":"0x5af606a06b5b118000","0x260df8943a8c9a5dba7945327fd7e0837c11ad07":"0xad78ebc5ac6200000","0x2614f42d5da844377578e6b448dc24305bef2b03":"0x6c6b935b8bbd400000","0x2615100ea7e25bba9bca746058afbbb4ffbe4244":"0x1b1ae4d6e2ef500000","0x261575e9cf59c8226fa7aaf91de86fb70f5ac3ae":"0x1043a4436a523f0000","0x261e0fa64c51137465eecf5b90f197f7937fdb05":"0x3cfc82e37e9a7400000","0x262a8bfd7d9dc5dd3ad78161b6bb560824373655":"0x3f6a8384072b760000","0x262aed4bc0f4a4b2c6fb35793e835a49189cdfec":"0x21e19e0c9bab2400000","0x262dc1364ccf6df85c43268ee182554dae692e29":"0x10b202fec74ced80000","0x263814309de4e635cf585e0d365477fc40e66cf7":"0x7ea28327577080000","0x2639eee9873ceec26fcc9454b548b9e7c54aa65c":"0x3635c9adc5dea00000","0x263e57dacbe0149f82fe65a2664898866ff5b463":"0x80bfbefcb5f0bc00000","0x26475419c06d5f147aa597248eb46cf7befa64a5":"0x58e7926ee858a00000","0x264cc8086a8710f91b21720905912cd7964ae868":"0x1731790534df20000","0x265383d68b52d034161bfab01ae1b047942fbc32":"0x47271dee20d745c0000","0x2659facb1e83436553b5b42989adb8075f9953ed":"0x1976576771a5e0000","0x266f2da7f0085ef3f3fa09baee232b93c744db2e":"0xcb49b44ba602d800000","0x267148fd72c54f620a592fb92799319cc4532b5c":"0x1639e49bba16280000","0x26784ade91c8a83a8e39658c8d8277413ccc9954":"0x14542ba12a337c00000","0x267a7e6e82e1b91d51deddb644f0e96dbb1f7f7e":"0x1158e460913d00000","0x2680713d40808e2a50ed013150a2a694b96a7f1d":"0x61093d7c2c6d380000","0x2697b339813b0c2d964b2471eb1c606f4ecb9616":"0x3e8ef795d890c80000","0x26a68eab905a8b3dce00e317308225dab1b9f6b8":"0x6b56051582a9700000","0x26b11d066588ce74a572a85a6328739212aa8b40":"0x6c6b935b8bbd400000","0x26babf42b267fdcf3861fdd4236a5e474848b358":"0x3635c9adc5dea00000","0x26c0054b700d3a7c2dcbe275689d4f4cad16a335":"0x6c6b935b8bbd400000","0x26c2ffc30efdc5273e76183a16c2698d6e531286":"0x2a1129d09367200000","0x26c99f8849c9802b83c861217fd07a9e84cdb79d":"0x1043561a8829300000","0x26cfffd052152bb3f957b478d5f98b233a7c2b92":"0xd8d726b7177a800000","0x26d4a16891f52922789217fcd886f7fce296d400":"0x6c6b935b8bbd400000","0x26d4ec17d5ceb2c894bdc59d0a6a695dad2b43cc":"0x9f1f78761d341a0000","0x26e801b62c827191dd68d31a011990947fd0ebe0":"0x1158e460913d00000","0x26e9e2ad729702626417ef25de0dc800f7a779b3":"0x3635c9adc5dea00000","0x26f9f7cefd7e394b9d3924412bf2c2831faf1f85":"0xd8d726b7177a800000","0x26fe174cbf526650e0cd009bd6126502ce8e684d":"0x277017338a30ae00000","0x26ff0a51e7cece8400276978dbd6236ef162c0e6":"0x152e185627540a500000","0x27101a0f56d39a88c5a84f9b324cdde33e5cb68c":"0x6c6b935b8bbd400000","0x27144ca9a7771a836ad50f803f64d869b2ae2b20":"0xd8d726b7177a800000","0x27146913563aa745e2588430d9348e86ea7c3510":"0x15af1d78b58c400000","0x271d3d481cb88e7671ad216949b6365e06303de0":"0xd8d726b7177a800000","0x2720f9ca426ef2f2cbd2fecd39920c4f1a89e16d":"0x6c6b935b8bbd400000","0x272a131a5a656a7a3aca35c8bd202222a7592258":"0x90f534608a72880000","0x2744ff67464121e35afc2922177164fa2fcb0267":"0x56bc75e2d63100000","0x274a3d771a3d709796fbc4d5f48fce2fe38c79d6":"0x1158e460913d00000","0x274d69170fe7141401882b886ac4618c6ae40edb":"0x33c5499031720c0000","0x27521deb3b6ef1416ea4c781a2e5d7b36ee81c61":"0x6c6b935b8bbd400000","0x275875ff4fbb0cf3a430213127487f7608d04cba":"0x1b1c010e766d580000","0x276a006e3028ecd44cdb62ba0a77ce94ebd9f10f":"0x6194049f30f7200000","0x276b0521b0e68b277df0bb32f3fd48326350bfb2":"0x2b5e3af16b1880000","0x276fd7d24f8f883f5a7a28295bf17151c7a84b03":"0x6c6b935b8bbd400000","0x2770f14efb165ddeba79c10bb0af31c31e59334c":"0xa2a15d09519be00000","0x277677aba1e52c3b53bfa2071d4e859a0af7e8e1":"0x3635c9adc5dea00000","0x27824666d278d70423f03dfe1dc7a3f02f43e2b5":"0x3636c25e66ece70000","0x27830c5f6023afaaf79745676c204a0faccda0ba":"0xd02ab486cedc00000","0x2784903f1d7c1b5cd901f8875d14a79b3cbe2a56":"0x4bda7e9d74ad5500000","0x278c0bde630ec393b1e7267fc9d7d97019e4145b":"0x6c6b935b8bbd400000","0x27987110221a880826adb2e7ab5eca78c6e31aec":"0xd8d726b7177a800000","0x27ac073be79ce657a93aa693ee43bf0fa41fef04":"0xa968163f0a57b400000","0x27b1694eafa165ebd7cc7bc99e74814a951419dc":"0x2b5e3af16b18800000","0x27b62816e1e3b8d19b79d1513d5dfa855b0c3a2a":"0x56af5c1fd69508000","0x27bf943c1633fe32f8bcccdb6302b407a5724e44":"0x32f84c6df408c08000","0x27bf9f44ba7d05c33540c3a53bb02cbbffe7c3c6":"0x6c6b935b8bbd400000","0x27c2d7ca504daa3d9066dc09137dc42f3aaab452":"0x2086ac351052600000","0x27d158ac3d3e1109ab6e570e90e85d3892cd7680":"0x56bc75e2d63100000","0x27e63989ca1e903bc620cf1b9c3f67b9e2ae6581":"0x487a9a304539440000","0x27f03cf1abc5e1b51dbc444b289e542c9ddfb0e6":"0x10f0cf064dd59200000","0x27fc85a49cff90dbcfdadc9ddd40d6b9a2210a6c":"0x56bc75e2d63100000","0x2805415e1d7fdec6dedfb89e521d10592d743c10":"0x56bc75e2d63100000","0x28073efc17d05cab3195c2db332b61984777a612":"0x3635c9adc5dea00000","0x281250a29121270a4ee5d78d24feafe82c70ba3a":"0x3635c9adc5dea00000","0x2813d263fc5ff2479e970595d6b6b560f8d6d6d1":"0x6c6b935b8bbd400000","0x282e80a554875a56799fa0a97f5510e795974c4e":"0x3635c9adc5dea00000","0x283396ce3cac398bcbe7227f323e78ff96d08767":"0x15af1d78b58c400000","0x28349f7ef974ea55fe36a1583b34cec3c45065f0":"0xcb633d49e65590000","0x2836123046b284e5ef102bfd22b1765e508116ad":"0x1653fbb5c427e40000","0x283c2314283c92d4b064f0aef9bb5246a7007f39":"0xad78ebc5ac6200000","0x283e11203749b1fa4f32febb71e49d135919382a":"0x3635c9adc5dea00000","0x283e6252b4efcf4654391acb75f903c59b78c5fb":"0x28a857425466f800000","0x28510e6eff1fc829b6576f4328bc3938ec7a6580":"0x21e19e0c9bab2400000","0x2858acacaf21ea81cab7598fdbd86b452e9e8e15":"0x241a9b4f617a280000","0x285ae51b9500c58d541365d97569f14bb2a3709b":"0x6c6b935b8bbd400000","0x2866b81decb02ee70ae250cee5cdc77b59d7b679":"0x6c6b935b8bbd400000","0x286906b6bd4972e3c71655e04baf36260c7cb153":"0x126e72a69a50d00000","0x286b186d61ea1fd78d9930fe12b06537b05c3d51":"0x3635c9adc5dea00000","0x2874f3e2985d5f7b406627e17baa772b01abcc9e":"0x146050410765f380000","0x287cf9d0902ef819a7a5f149445bf1775ee8c47c":"0x3635c9adc5dea000000","0x28818e18b610001321b31df6fe7d2815cdadc9f5":"0x3635c9adc5dea00000","0x28868324337e11ba106cb481da962f3a8453808d":"0x6c6b935b8bbd400000","0x28904bb7c4302943b709b14d7970e42b8324e1a1":"0x21f97846a072d7e0000","0x2895e80999d406ad592e2b262737d35f7db4b699":"0x692ae8897081d00000","0x28967280214e218a120c5dda37041b111ea36d74":"0xad78ebc5ac6200000","0x28a3da09a8194819ae199f2e6d9d1304817e28a5":"0x6c6b935b8bbd400000","0x28ab165ffb69eda0c549ae38e9826f5f7f92f853":"0x464df6d7c844590000","0x28b77585cb3d55a199ab291d3a18c68fe89a848a":"0x6a4076cf7995a00000","0x28d4ebf41e3d3c451e943bdd7e1f175fae932a3d":"0x14542ba12a337c00000","0x28d7e5866f1d85fd1ceb32bfbe1dfc36db434566":"0x1864231c610351c0000","0x28d8c35fb7eea622582135e3ad47a227c9a663bd":"0xfc936392801c0000","0x28e4af30cd93f686a122ad7bb19f8a8785eee342":"0x71e53b706cc7b40000","0x28eaea78cd4d95faecfb68836eafe83520f3bbb7":"0xad78ebc5ac6200000","0x28efae6356509edface89fc61a7fdcdb39eea8e5":"0x121ea68c114e5100000","0x28fa2580f9ebe420f3e5eefdd371638e3b7af499":"0x14542ba12a337c00000","0x2901f8077f34190bb47a8e227fa29b30ce113b31":"0x56bc75e2d63100000","0x2905b192e83ce659aa355b9d0c204e3e95f9bb9a":"0x75235c1d00393e8000","0x290a56d41f6e9efbdcea0342e0b7929a8cdfcb05":"0x12a5f58168ee600000","0x2915624bcb679137b8dae9ab57d11b4905eaee4b":"0x1158e460913d00000","0x291efe0081dce8c14799f7b2a43619c0c3b3fc1f":"0x410d586a20a4c00000","0x291f929ca59b54f8443e3d4d75d95dee243cef78":"0x1b1a089237073d0000","0x29298ccbdff689f87fe41aa6e98fdfb53deaf37a":"0x4315c32d71a9e600000","0x292f228b0a94748c8eec612d246f989363e08f08":"0xa076407d3f7440000","0x293384c42b6f8f2905ce52b7205c2274376c612b":"0x4be4e7267b6ae00000","0x2934c0df7bbc172b6c186b0b72547ace8bf75454":"0x340aad21b3b700000","0x293c2306df3604ae4fda0d207aba736f67de0792":"0xad78ebc5ac6200000","0x2949fd1def5c76a286b3872424809a07db3966f3":"0x11bd906daa0c9438000","0x294f494b3f2e143c2ffc9738cbfd9501850b874e":"0x796e3ea3f8ab000000","0x2955c357fd8f75d5159a3dfa69c5b87a359dea8c":"0x6c6b935b8bbd400000","0x2961fb391c61957cb5c9e407dda29338d3b92c80":"0x3634fb9f1489a70000","0x29681d9912ddd07eaabb88d05d90f766e862417d":"0x3635c9adc5dea00000","0x296b71c0015819c242a7861e6ff7eded8a5f71e3":"0x6c68ccd09b022c0000","0x296d66b521571a4e4103a7f562c511e6aa732d81":"0x243d4d18229ca20000","0x296f00de1dc3bb01d47a8ccd1e5d1dd9a1eb7791":"0x3635c9adc5dea00000","0x297385e88634465685c231a314a0d5dcd146af01":"0x54069233bf7f780000","0x29763dd6da9a7c161173888321eba6b63c8fb845":"0x11c7ea162e78200000","0x2979741174a8c1ea0b7f9edf658177859417f512":"0x1901966c8496838000","0x297a88921b5fca10e5bb9ded60025437ae221694":"0xad78ebc5ac6200000","0x297d5dbe222f2fb52531acbd0b013dc446ac7368":"0x43c33c1937564800000","0x29824e94cc4348bc963279dcdf47391715324cd3":"0x692ae8897081d00000","0x2982d76a15f847dd41f1922af368fe678d0e681e":"0x56bc75e2d63100000","0x298887bab57c5ba4f0615229d7525fa113b7ea89":"0x22b1c8c1227a00000","0x298ec76b440d8807b3f78b5f90979bee42ed43db":"0x65a4da25d3016c00000","0x299368609042a858d1ecdf1fc0ada5eaceca29cf":"0x6c6b935b8bbd400000","0x299e0bca55e069de8504e89aca6eca21d38a9a5d":"0x302379bf2ca2e0000","0x29ac2b458454a36c7e96c73a8667222a12242c71":"0xd8d726b7177a800000","0x29adcf83b6b20ac6a434abb1993cbd05c60ea2e4":"0x21e19e0c9bab2400000","0x29aef48de8c9fbad4b9e4ca970797a5533eb722d":"0x21e19e0c9bab2400000","0x29b3f561ee7a6e25941e98a5325b78adc79785f3":"0x56bc75e2d63100000","0x29bdc4f28de0180f433c2694eb74f5504ce94337":"0x6c6b935b8bbd400000","0x29cc804d922be91f5909f348b0aaa5d21b607830":"0xd8d726b7177a800000","0x29da3e35b23bb1f72f8e2258cf7f553359d24bac":"0x43c33c1937564800000","0x29e67990e1b6d52e1055ffe049c53195a81542cf":"0x43c33c1937564800000","0x29eaae82761762f4d2db53a9c68b0f6b0b6d4e66":"0x6c6b935b8bbd400000","0x29eb7eefdae9feb449c63ff5f279d67510eb1422":"0x10d3aa536e2940000","0x29f0edc60338e7112085a1d114da8c42ce8f55d6":"0xa05a7f0fd825780000","0x29f8fba4c30772b057edbbe62ae7420c390572e1":"0x3635c9adc5dea00000","0x29f9286c0e738d1721a691c6b95ab3d9a797ede8":"0x2a5a058fc295ed000000","0x2a085e25b64862f5e68d768e2b0f7a8529858eee":"0x6b883acd5766cd0000","0x2a2ab6b74c7af1d9476bb5bcb4524797bedc3552":"0x3635c9adc5dea00000","0x2a39190a4fde83dfb3ddcb4c5fbb83ac6c49755c":"0x3635c9adc5dea00000","0x2a400dff8594de7228b4fd15c32322b75bb87da8":"0x531a17f607a2d0000","0x2a44a7218fe44d65a1b4b7a7d9b1c2c52c8c3e34":"0xd2d06c305a1eb578000","0x2a46d353777176ff8e83ffa8001f4f70f9733aa5":"0x5bf0ba6634f680000","0x2a595f16eee4cb0c17d9a2d939b3c10f6c677243":"0x3ba1910bf341b00000","0x2a59e47ea5d8f0e7c028a3e8e093a49c1b50b9a3":"0x6c6b935b8bbd400000","0x2a5ba9e34cd58da54c9a2712663a3be274c8e47b":"0xaadec983fcff40000","0x2a5e3a40d2cd0325766de73a3d671896b362c73b":"0x152d02c7e14af6800000","0x2a63590efe9986c3fee09b0a0a338b15bed91f21":"0x15e1c4e05ee26d00000","0x2a67660a1368efcd626ef36b2b1b601980941c05":"0x73f75d1a085ba0000","0x2a742b8910941e0932830a1d9692cfd28494cf40":"0x1b1ab319f5ec750000","0x2a746cd44027af3ebd37c378c85ef7f754ab5f28":"0x155bd9307f9fe80000","0x2a81d27cb6d4770ff4f3c4a3ba18e5e57f07517c":"0x6c6b935b8bbd400000","0x2a91a9fed41b7d0e5cd2d83158d3e8a41a9a2d71":"0x692ae8897081d00000","0x2a9c57fe7b6b138a920d676f3c76b6c2a0eef699":"0x1fd933494aa5fe00000","0x2a9c96c19151ffcbe29a4616d0c52b3933b4659f":"0x3c1379b8765e18000","0x2aa192777ca5b978b6b2c2ff800ac1860f753f47":"0x12290f15180bdc0000","0x2aaa35274d742546670b7426264521032af4f4c3":"0x21e19e0c9bab2400000","0x2aaea1f1046f30f109faec1c63ef5c7594eb08da":"0xd8d726b7177a800000","0x2ab97e8d59eee648ab6caf8696f89937143864d6":"0xcf152640c5c8300000","0x2abce1808940cd4ef5b5e05285f82df7a9ab5e03":"0x21342520d5fec200000","0x2abdf1a637ef6c42a7e2fe217773d677e804ebdd":"0x10f0cf064dd59200000","0x2ac1f8d7bf721f3cfe74d20fea9b87a28aaa982c":"0x8ba52e6fc45e40000","0x2acc9c1a32240b4d5b2f777a2ea052b42fc1271c":"0x8d807ee14d836100000","0x2ad6c9d10c261819a1a0ca2c48d8c7b2a71728df":"0x3635c9adc5dea00000","0x2ae53866fc2d14d572ab73b4a065a1188267f527":"0x1b1ae4d6e2ef5000000","0x2ae73a79aea0278533accf21070922b1613f8f32":"0xa7e94bbeae701a8000","0x2ae82dab92a66389eea1abb901d1d57f5a7cca0b":"0x6c6b935b8bbd400000","0x2aec809df9325b9f483996e99f7331097f08aa0e":"0xd8d726b7177a800000","0x2aed2ce531c056b0097efc3c6de10c4762004ed9":"0x2356953ab7ddc380000","0x2afb058c3d31032b353bf24f09ae20d54de57dbe":"0x3ba1910bf341b00000","0x2b0362633614bfcb583569438ecc4ea57b1d337e":"0x43c33c1937564800000","0x2b101e822cd962962a06800a2c08d3b15d82b735":"0x83d6c7aab63600000","0x2b129c26b75dde127f8320bd0f63410c92a9f876":"0x77432217e683600000","0x2b241f037337eb4acc61849bd272ac133f7cdf4b":"0x500b6bca962ab8400000","0x2b3a68db6b0cae8a7c7a476bdfcfbd6205e10687":"0x821ab0d44149800000","0x2b3cf97311ff30f460945a9d8099f4a88e26d456":"0x6c6b935b8bbd400000","0x2b49fba29830360fcdb6da23bbfea5c0bbac5281":"0x1158e460913d00000","0x2b4f4507bb6b9817942ce433781b708fbcd166fd":"0xfc936392801c0000","0x2b5016e2457387956562587115aa8759d8695fdf":"0x2a5a058fc295ed000000","0x2b5c60e84535eeb4d580de127a12eb2677ccb392":"0x43c33c1937564800000","0x2b5ced9987c0765f900e49cf9da2d9f9c1138855":"0x15af1d78b58c400000","0x2b5f4b3f1e11707a227aa5e69fa49dded33fb321":"0x14542ba12a337c00000","0x2b68306ba7f8daaf73f4c644ef7d2743c0f26856":"0x2ee182ca17ddd00000","0x2b6ed29a95753c3ad948348e3e7b1a251080ffb9":"0x34f086f3b33b68400000","0x2b701d16c0d3cc1e4cd85445e6ad02eea4ac012d":"0x2086ac351052600000","0x2b717cd432a323a4659039848d3b87de26fc9546":"0x69e10de76676d0800000","0x2b74c373d04bfb0fd60a18a01a88fbe84770e58c":"0x22b1c8c1227a00000","0x2b77a4d88c0d56a3dbe3bae04a05f4fcd1b757e1":"0x1043561a8829300000","0x2b8488bd2d3c197a3d26151815b5a798d27168dc":"0x16a1f9f5fd7d9600000","0x2b8a0dee5cb0e1e97e15cfca6e19ad21f995efad":"0x1b55438d9a249b0000","0x2b8fe4166e23d11963c0932b8ade8e0145ea0770":"0x92896529baddc880000","0x2b99b42e4f42619ee36baa7e4af2d65eacfcba35":"0x878678326eac9000000","0x2bab0fbe28d58420b52036770a12f9952aea6911":"0xcf152640c5c8300000","0x2bade91d154517620fd4b439ac97157a4102a9f7":"0xd8d726b7177a800000","0x2baf8d6e221174124820ee492b9459ec4fadafbb":"0x6c6b935b8bbd400000","0x2bafbf9e9ed2c219f7f2791374e7d05cb06777e7":"0xbed1d0263d9f00000","0x2bb366b9edcb0da680f0e10b3b6e28748190d6c3":"0x13a62d7b57640640000","0x2bb6f578adfbe7b2a116b3554facf9969813c319":"0x19127a1391ea2a00000","0x2bbe62eac80ca7f4d6fdee7e7d8e28b63acf770e":"0x81e32df972abf00000","0x2bbe672a1857508f630f2a5edb563d9e9de92815":"0x6c6b935b8bbd400000","0x2bc429d618a66a4cf82dbb2d824e9356effa126a":"0x6c6acc67d7b1d40000","0x2bd252e0d732ff1d7c78f0a02e6cb25423cf1b1a":"0x90f534608a72880000","0x2bdd03bebbee273b6ca1059b34999a5bbd61bb79":"0x1158e460913d00000","0x2c04115c3e52961b0dc0b0bf31fba4546f5966fd":"0xad78ebc5ac6200000","0x2c06dd922b61514aafedd84488c0c28e6dcf0e99":"0x152d02c7e14af6800000","0x2c0cc3f951482cc8a2925815684eb9f94e060200":"0x14542ba12a337c00000","0x2c0ee134d8b36145b47beee7af8d2738dbda08e8":"0xae56f730e6d840000","0x2c0f5b9df43625798e7e03c1a5fd6a6d091af82b":"0x1b0fcaab200300000","0x2c128c95d957215101f043dd8fc582456d41016d":"0x2d43f3ebfafb2c0000","0x2c1800f35fa02d3eb6ff5b25285f5e4add13b38d":"0x3122d3adafde100000","0x2c1c19114e3d6de27851484b8d2715e50f8a1065":"0x56bc75e2d63100000","0x2c1cc6e18c152488ba11c2cc1bcefa2df306abd1":"0x5a87e7d7f5f6580000","0x2c1df8a76f48f6b54bcf9caf56f0ee1cf57ab33d":"0x2247f750089da580000","0x2c2147947ae33fb098b489a5c16bfff9abcd4e2a":"0xad78ebc5ac6200000","0x2c234f505ca8dcc77d9b7e01d257c318cc19396d":"0x56bc75e2d63100000","0x2c2428e4a66974edc822d5dbfb241b2728075158":"0x6c6b935b8bbd400000","0x2c2d15ff39561c1b72eda1cc027ffef23743a144":"0xd480ed9ef32b400000","0x2c2db28c3309375eea3c6d72cd6d0eec145afcc0":"0x6c6b935b8bbd400000","0x2c424ee47f583cdce07ae318b6fad462381d4d2b":"0xd8d726b7177a800000","0x2c4b470307a059854055d91ec3794d80b53d0f4a":"0x43c33c1937564800000","0x2c52c984102ee0cd3e31821b84d408930efa1ac7":"0x6c6b935b8bbd400000","0x2c5a2d0abda03bbe215781b4ff296c8c61bdbaf6":"0x1a8e56f48c0228000","0x2c5b7d7b195a371bf9abddb42fe04f2f1d9a9910":"0xad78ebc5ac6200000","0x2c5df866666a194b26cebb407e4a1fd73e208d5e":"0x3635c9adc5dea00000","0x2c603ff0fe93616c43573ef279bfea40888d6ae7":"0x100f4b6d66757900000","0x2c6846a1aa999a2246a287056000ba4dcba8e63d":"0x21f2f6f0fc3c6100000","0x2c6afcd4037c1ed14fa74ff6758e0945a185a8e8":"0xf43fc2c04ee00000","0x2c6b699d9ead349f067f45711a074a641db6a897":"0x1158e460913d00000","0x2c6f5c124cc789f8bb398e3f889751bc4b602d9e":"0x159f20bed00f00000","0x2c83aeb02fcf067d65a47082fd977833ab1cec91":"0x8273823258ac00000","0x2c89f5fdca3d155409b638b98a742e55eb4652b7":"0x14dbb2195ca228900000","0x2c964849b1f69cc7cea4442538ed87fdf16cfc8f":"0x6c6b935b8bbd400000","0x2c9fa72c95f37d08e9a36009e7a4b07f29bad41a":"0xdf6eb0b2d3ca0000","0x2caf6bf4ec7d5a19c5e0897a5eeb011dcece4210":"0x7934835a031160000","0x2cb4c3c16bb1c55e7c6b7a19b127a1ac9390cc09":"0xb82794a9244f0c8000","0x2cb5495a505336c2465410d1cae095b8e1ba5cdd":"0x43c33c1937564800000","0x2cb615073a40dcdb99faa848572e987b3b056efb":"0x2b58addb89a2580000","0x2cba6d5d0dc204ea8a25ada2e26f5675bd5f2fdc":"0x4823ef7ddb9af38000","0x2cbb0c73df91b91740b6693b774a7d05177e8e58":"0x6449e84e47a8a80000","0x2ccb66494d0af689abf9483d365d782444e7dead":"0x3635c9adc5dea00000","0x2ccc1f1cb5f4a8002e186b20885d9dbc030c0894":"0x6c6b935b8bbd400000","0x2ccf80e21898125eb4e807cd82e09b9d28592f6e":"0x6c6b935b8bbd400000","0x2cd19694d1926a0fa9189edebafc671cf1b2caa5":"0x3635c9adc5dea00000","0x2cd39334ac7eac797257abe3736195f5b4b5ce0f":"0x56b47785e37260000","0x2cd79eb52027b12c18828e3eaab2969bfcd287e9":"0x1158e460913d00000","0x2cd87866568dd81ad47d9d3ad0846e5a65507373":"0x15af1d78b58c400000","0x2cdb3944650616e47cb182e060322fa1487978ce":"0x62a992e53a0af00000","0x2ce11a92fad024ff2b3e87e3b542e6c60dcbd996":"0xd8d726b7177a800000","0x2d0326b23f0409c0c0e9236863a133075a94ba18":"0xb679be75be6ae0000","0x2d0dec51a6e87330a6a8fa2a0f65d88d4abcdf73":"0xa076407d3f7440000","0x2d23766b6f6b05737dad80a419c40eda4d77103e":"0xcf152640c5c8300000","0x2d2b032359b363964fc11a518263bfd05431e867":"0x81c1df7629e700000","0x2d3480bf0865074a72c7759ee5137b4d70c51ce9":"0xad78ebc5ac6200000","0x2d35a9df62757f7ffad1049afb06ca4afc464c51":"0x1158e460913d00000","0x2d40558b06f90a3923145592123b6774e46e31f4":"0x3635c9adc5dea00000","0x2d426912d059fad9740b2e390a2eeac0546ff01b":"0x4be4e7267b6ae00000","0x2d532df4c63911d1ce91f6d1fcbff7960f78a885":"0x5a85968a5878da8000","0x2d5391e938b34858cf965b840531d5efda410b09":"0x4be4e7267b6ae00000","0x2d5b42fc59ebda0dfd66ae914bc28c1b0a6ef83a":"0x2bc8b59fdcd836638000","0x2d5d7335acb0362b47dfa3a8a4d3f5949544d380":"0xad78ebc5ac6200000","0x2d61bfc56873923c2b00095dc3eaa0f590d8ae0f":"0x46566dff8ce55600000","0x2d6511fd7a3800b26854c7ec39c0dcb5f4c4e8e8":"0x15adddba2f9e770000","0x2d7d5c40ddafc450b04a74a4dabc2bb5d665002e":"0x6c6b935b8bbd400000","0x2d89a8006a4f137a20dc2bec46fe2eb312ea9654":"0xad78ebc5ac6200000","0x2d8c52329f38d2a2fa9cbaf5c583daf1490bb11c":"0x1158e460913d00000","0x2d8e061892a5dcce21966ae1bb0788fd3e8ba059":"0xd8e5ce617f2d50000","0x2d8e5bb8d3521695c77e7c834e0291bfacee7408":"0x6acb3df27e1f880000","0x2d90b415a38e2e19cdd02ff3ad81a97af7cbf672":"0x5f3c7f64131e40000","0x2d9bad6f1ee02a70f1f13def5cccb27a9a274031":"0x61093d7c2c6d380000","0x2d9c5fecd2b44fbb6a1ec732ea059f4f1f9d2b5c":"0x36ca32661d1aa70000","0x2da617695009cc57d26ad490b32a5dfbeb934e5e":"0x43c33c1937564800000","0x2da76b7c39b420e388ba2c1020b0856b0270648a":"0x6c6b935b8bbd400000","0x2dc79d6e7f55bce2e2d0c02ad07ceca8bb529354":"0x55a6e79ccd1d300000","0x2dca0e449ab646dbdfd393a96662960bcab5ae1e":"0x878678326eac9000000","0x2dd325fdffb97b19995284afa5abdb574a1df16a":"0x1b1ae4d6e2ef500000","0x2dd578f7407dfbd548d05e95ccc39c485429626a":"0xe3aeb5737240a00000","0x2dd8eeef87194abc2ce7585da1e35b7cea780cb7":"0x3635c6204739d98000","0x2ddf40905769bcc426cb2c2938ffe077e1e89d98":"0xa2a15d09519be00000","0x2de0964400c282bdd78a919c6bf77c6b5f796179":"0xad78ebc5ac6200000","0x2de31afd189a13a76ff6fe73ead9f74bb5c4a629":"0x14542ba12a337c00000","0x2dec98329d1f96c3a59caa7981755452d4da49d5":"0xad78ebc5ac6200000","0x2dee90a28f192d676a8773232b56f18f239e2fad":"0x3efa7e747b6d1ad0000","0x2e0880a34596230720f05ac8f065af8681dcb6c2":"0x152d02c7e14af6800000","0x2e0c57b47150f95aa6a7e16ab9b1cbf54328979a":"0x56bc75e2d63100000","0x2e10910ba6e0bc17e055556614cb87090f4d7e5b":"0xad78ebc5ac6200000","0x2e24b597873bb141bdb237ea8a5ab747799af02d":"0x43c33c1937564800000","0x2e2810dee44ae4dff3d86342ab126657d653c336":"0xad78ebc5ac6200000","0x2e2cbd7ad82547b4f5ff8b3ab56f942a6445a3b0":"0xad78ebc5ac6200000","0x2e2d7ea66b9f47d8cc52c01c52b6e191bc7d4786":"0xd8d4602c26bf6c0000","0x2e439348df8a4277b22a768457d1158e97c40904":"0x2a1e9ff26fbf410000","0x2e46fcee6a3bb145b594a243a3913fce5dad6fba":"0x21e19e0c9bab2400000","0x2e47f287f498233713850d3126823cc67dcee255":"0xca9d9ea558b40000","0x2e4ee1ae996aa0a1d92428d06652a6bea6d2d15d":"0x6c6b935b8bbd400000","0x2e52912bc10ea39d54e293f7aed6b99a0f4c73be":"0x15af1d78b58c400000","0x2e619f57abc1e987aa936ae3a2264962e7eb2d9a":"0x28fb9b8a8a53500000","0x2e64a8d71111a22f4c5de1e039b336f68d398a7c":"0x6c6b935b8bbd400000","0x2e6933543d4f2cc00b5350bd8068ba9243d6beb0":"0x6c6b935b8bbd400000","0x2e7e05e29edda7e4ae25c5173543efd71f6d3d80":"0x14542ba12a337c00000","0x2e7f465520ec35cc23d68e75651bb6689544a196":"0x38ec5b721a1a268000","0x2e8eb30a716e5fe15c74233e039bfb1106e81d12":"0x56bc75e2d63100000","0x2e9824b5c132111bca24ddfba7e575a5cd7296c1":"0x3a484516e6d7ffe0000","0x2ea5fee63f337a376e4b918ea82148f94d48a626":"0x650f8e0dd293c50000","0x2eaf4e2a46b789ccc288c8d1d9294e3fb0853896":"0x6c6b935b8bbd400000","0x2eaff9f8f8113064d3957ac6d6e11eee42c8195d":"0x6acb3df27e1f880000","0x2eba0c6ee5a1145c1c573984963a605d880a7a20":"0x1b1ae4d6e2ef500000","0x2ec95822eb887bc113b4712a4dfd7f13b097b5e7":"0x3635c9adc5dea00000","0x2eca6a3c5d9f449d0956bd43fa7b4d7be8435958":"0x6c6bda69709cc20000","0x2ecac504b233866eb5a4a99e7bd2901359e43b3d":"0x43c33c1937564800000","0x2eebf59432b52892f9380bd140aa99dcf8ad0c0f":"0x83d6c7aab63600000","0x2eeed50471a1a2bf53ee30b1232e6e9d80ef866d":"0x1158e460913d00000","0x2eef6b1417d7b10ecfc19b123a8a89e73e526c58":"0x2086ac351052600000","0x2ef869f0350b57d53478d701e3fee529bc911c75":"0x2b5e3af16b1880000","0x2ef9e465716acacfb8c8252fa8e7bc7969ebf6e4":"0x959eb1c0e4ae200000","0x2efc4c647dac6acac35577ad221758fef6616faa":"0x1b1ae4d6e2ef5000000","0x2f13657526b177cad547c3908c840eff647b45d9":"0x3f76849cf1ee2c8000","0x2f187d5a704d5a338c5b2876a090dce964284e29":"0xd8d726b7177a800000","0x2f2523cc834f0086052402626296675186a8e582":"0x3635c9adc5dea000000","0x2f282abbb6d4a3c3cd3b5ca812f7643e80305f06":"0x6449e84e47a8a80000","0x2f2bba1b1796821a766fce64b84f28ec68f15aea":"0x1158e460913d00000","0x2f315d9016e8ee5f536681202f9084b032544d4d":"0x383cd12b9e863c0000","0x2f4da753430fc09e73acbccdcde9da647f2b5d37":"0xad78ebc5ac6200000","0x2f5080b83f7e2dc0a1dd11b092ad042bff788f4c":"0xb4f8fb79231d2b8000","0x2f61efa5819d705f2b1e4ee754aeb8a819506a75":"0x4f2591f896a6500000","0x2f66bfbf2262efcc8d2bd0444fc5b0696298ff1e":"0x21ad935f79f76d00000","0x2f6dce1330c59ef921602154572d4d4bacbd048a":"0x3635c9adc5dea00000","0x2f7d3290851be5c6b4b43f7d4574329f61a792c3":"0x56bc75e2d63100000","0x2f853817afd3b8f3b86e9f60ee77b5d97773c0e3":"0x4eaeea44e368b90000","0x2fa491fb5920a6574ebd289f39c1b2430d2d9a6a":"0x6c6b935b8bbd400000","0x2fb566c94bbba4e3cb67cdda7d5fad7131539102":"0x6c6b935b8bbd400000","0x2fbb504a5dc527d3e3eb0085e2fc3c7dd538cb7a":"0x43c2b18aec3c0a8000","0x2fbc85798a583598b522166d6e9dda121d627dbc":"0xad78ebc5ac6200000","0x2fbcef3384d420e4bf61a0669990bc7054f1a5af":"0x6c6b935b8bbd400000","0x2fc82ef076932341264f617a0c80dd571e6ae939":"0x18424f5f0b1b4e00000","0x2fdd9b79df8df530ad63c20e62af431ae99216b8":"0x1236efcbcbb340000","0x2fe0023f5722650f3a8ac01009125e74e3f82e9b":"0xa2a15d09519be00000","0x2fe0cc424b53a31f0916be08ec81c50bf8eab0c1":"0x2086ac351052600000","0x2fe13a8d0785de8758a5e41876c36e916cf75074":"0xd8d726b7177a800000","0x2fea1b2f834f02fc54333f8a809f0438e5870aa9":"0x11854d0f9cee40000","0x2fee36a49ee50ecf716f1047915646779f8ba03f":"0x394222c4da86d70000","0x2fef81478a4b2e8098db5ff387ba2153f4e22b79":"0x3627e8f712373c0000","0x2ff160c44f72a299b5ec2d71e28ce5446d2fcbaf":"0x138400eca364a00000","0x2ff1ca55fd9cec1b1fe9f0a9abb74c513c1e2aaa":"0xa2a15d09519be00000","0x2ff5cab12c0d957fd333f382eeb75107a64cb8e8":"0x21e19e0c9bab2400000","0x2ff830cf55fb00d5a0e03514fecd44314bd6d9f1":"0x21e19e0c9bab2400000","0x2ffe93ec1a5636e9ee34af70dff52682e6ff7079":"0x6c6b935b8bbd400000","0x30037988702671acbe892c03fe5788aa98af287a":"0x97c9ce4cf6d5c00000","0x30248d58e414b20fed3a6c482b59d9d8f5a4b7e2":"0x340aad21b3b700000","0x303139bc596403d5d3931f774c66c4ba467454db":"0x5c25e14aea283f0000","0x30380087786965149e81423b15e313ba32c5c783":"0xfc936392801c0000","0x303a30ac4286ae17cf483dad7b870c6bd64d7b4a":"0x1b1ae4d6e2ef500000","0x303fbaebbe46b35b6e5b74946a5f99bc1585cae7":"0x2f9ac0695f5bba0000","0x3041445a33ba158741160d9c344eb88e5c306f94":"0x340aad21b3b700000","0x30480164bcd84974ebc0d90c9b9afab626cd1c73":"0x2b5e3af16b18800000","0x304ec69a74545721d7316aef4dcfb41ac59ee2f0":"0xad78ebc5ac6200000","0x30511832918d8034a7bee72ef2bfee440ecbbcf6":"0x368c8623a8b4d100000","0x30513fca9f36fd788cfea7a340e86df98294a244":"0x183b5f03b1479c0000","0x3055efd26029e0d11b930df4f53b162c8c3fd2ce":"0x1b1a089237073d0000","0x305d26c10bdc103f6b9c21272eb7cb2d9108c47e":"0x1b1ae4d6e2ef500000","0x305f78d618b990b4295bac8a2dfa262884f804ea":"0xd8d726b7177a800000","0x3064899a963c4779cbf613cd6980846af1e6ec65":"0x17b773ce6e5df0a0000","0x30730466b8eb6dc90d5496aa76a3472d7dbe0bbe":"0x6c68ccd09b022c0000","0x30742ccdf4abbcd005681f8159345c9e79054b1a":"0x243d4d18229ca20000","0x3083ef0ed4c4401196774a95cf4edc83edc1484f":"0x23ffb7ed6565d6400000","0x308dd21cebe755126704b48c0f0dc234c60ba9b1":"0xad78ebc5ac6200000","0x3090f8130ec44466afadb36ed3c926133963677b":"0xd8d726b7177a800000","0x309544b6232c3dd737f945a03193d19b5f3f65b9":"0x3af342f67ef6c80000","0x3096dca34108085bcf04ae72b94574a13e1a3e1d":"0xad78ebc5ac6200000","0x3098b65db93ecacaf7353c48808390a223d57684":"0x186484cf7bb6a48000","0x30a9da72574c51e7ee0904ba1f73a6b7b83b9b9d":"0x11854d0f9cee40000","0x30acd858875fa24eef0d572fc7d62aad0ebddc35":"0x15af1d78b58c400000","0x30b66150f1a63457023fdd45d0cc6cb54e0c0f06":"0x3635c9adc5dea00000","0x30bb4357cd6910c86d2238bf727cbe8156680e62":"0x56bf91b1a65eb0000","0x30bf61b2d877fe10635126326fa189e4b0b1c3b0":"0x37b48985a5d7e60000","0x30c01142907acb1565f70438b9980ae731818738":"0x6c6b935b8bbd400000","0x30c26a8e971baa1855d633ba703f028cc7873140":"0x21e19e0c9bab2400000","0x30db6b9b107e62102f434a9dd0960c2021f5ce4c":"0x2083179b6e42530000","0x30e33358fc21c85006e40f32357dc8895940aaf0":"0x678a932062e4180000","0x30e60900cacc7203f314dc604347255167fc2a0f":"0x6c6b935b8bbd400000","0x30e789b3d2465e946e6210fa5b35de4e8c93085f":"0x6c6b935b8bbd400000","0x30e9698cf1e08a9d048bd8d8048f28be7ed9409f":"0x16a6502f15a1e540000","0x30e9d5a0088f1ddb2fd380e2a049192266c51cbf":"0xaacacd9b9e22b0000","0x30eac740e4f02cb56eef0526e5d300322600d03e":"0x6acb3df27e1f880000","0x30ec9392244a2108c987bc5cdde0ed9f837a817b":"0x549925f6c9c5250000","0x30ed11b77bc17e5e6694c8bc5b6e4798f68d9ca7":"0x1e6fb3421fe0299e0000","0x30f7d025d16f7bee105580486f9f561c7bae3fef":"0x1b1ae4d6e2ef500000","0x30fbe5885f9fcce9ea5edb82ed4a1196dd259aed":"0x119e47f21381f400000","0x31047d703f63b93424fbbd6e2f1f9e74de13e709":"0x9a8166f7e6b2a78000","0x31313ffd635bf2f3324841a88c07ed146144ceeb":"0x6acb3df27e1f880000","0x3159e90c48a915904adfe292b22fa5fd5e72796b":"0x36afe98f2606100000","0x315db7439fa1d5b423afa7dd7198c1cf74c918bc":"0x2086ac351052600000","0x315ef2da620fd330d12ee55de5f329a696e0a968":"0x821ab0d4414980000","0x316e92a91bbda68b9e2f98b3c048934e3cc0b416":"0x6c6b935b8bbd400000","0x316eb4e47df71b42e16d6fe46825b7327baf3124":"0xd8d726b7177a800000","0x3171877e9d820cc618fc0919b29efd333fda4934":"0x3635c9adc5dea00000","0x317cf4a23cb191cdc56312c29d15e210b3b9b784":"0x7ce66c50e28400000","0x318b2ea5f0aaa879c4d5e548ac9d92a0c67487b7":"0xad78ebc5ac6200000","0x318c76ecfd8af68d70555352e1f601e35988042d":"0x1b31192e68c7f00000","0x318f1f8bd220b0558b95fb33100ffdbb640d7ca6":"0xd8d726b7177a800000","0x31aa3b1ebe8c4dbcb6a708b1d74831e60e497660":"0x15af1d78b58c400000","0x31ab088966ecc7229258f6098fce68cf39b38485":"0x3635c9adc5dea00000","0x31ad4d9946ef09d8e988d946b1227f9141901736":"0x4d853c8f89089800000","0x31b43b015d0081643c6cda46a7073a6dfdbca825":"0xa97916520cd18e80000","0x31ccc616b3118268e75d9ab8996c8858ebd7f3c3":"0x15ae0f771ca1520000","0x31d81d526c195e3f10b5c6db52b5e59afbe0a995":"0xe4fbc69449f200000","0x31e9c00f0c206a4e4e7e0522170dc81e88f3eb70":"0x918ddc3a42a3d40000","0x31ea12d49a35a740780ddeeaece84c0835b26270":"0xad78ebc5ac6200000","0x31ea6eab19d00764e9a95e183f2b1b22fc7dc40f":"0x1158e460913d00000","0x31eb123c95c82bf685ace7a75a1881a289efca10":"0x31e009607371bd0000","0x31ed858788bda4d5270992221cc04206ec62610d":"0x3fc0474948f3600000","0x31f006f3494ed6c16eb92aaf9044fa8abb5fd5a3":"0x1b1ae4d6e2ef500000","0x3201259caf734ad7581c561051ba0bca7fd6946b":"0x261dd1ce2f2088800000","0x32034e8581d9484e8af42a28df190132ec29c466":"0xbb9125542263900000","0x322021022678a0166d204b3aaa7ad4ec4b88b7d0":"0x15af1d78b58c400000","0x3225c1ca5f2a9c88156bb7d9cdc44a326653c214":"0x15af1d78b58c400000","0x322788b5e29bf4f5f55ae1ddb32085fda91b8ebe":"0xad78ebc5ac6200000","0x322d6f9a140d213f4c80cd051afe25c620bf4c7d":"0x1158e460913d00000","0x322e5c43b0f524389655a9b3ff24f2d4db3da10f":"0xfc13b69b3e7e680000","0x323486ca64b375474fb2b759a9e7a135859bd9f6":"0x15af1d78b58c400000","0x323749a3b971959e46c8b4822dcafaf7aaf9bd6e":"0x11671a5b245700000","0x323aad41df4b6fc8fece8c93958aa901fa680843":"0x34957444b840e80000","0x323b3cfe3ee62bbde2a261e53cb3ecc05810f2c6":"0x2eb8eb1a172dcb80000","0x323fca5ed77f699f9d9930f5ceeff8e56f59f03c":"0x487a9a304539440000","0x32485c818728c197fea487fbb6e829159eba8370":"0x3921b413bc4ec08000","0x3250e3e858c26adeccadf36a5663c22aa84c4170":"0x10f0cf064dd59200000","0x3259bd2fddfbbc6fbad3b6e874f0bbc02cda18b5":"0x2846056495b0d188000","0x3275496fd4dd8931fd69fb0a0b04c4d1ff879ef5":"0x182d7e4cfda0380000","0x327bb49e754f6fb4f733c6e06f3989b4f65d4bee":"0x1158e460913d00000","0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d":"0x487a9a304539440000","0x3283eb7f9137dd39bed55ffe6b8dc845f3e1a079":"0x3970ae92155780000","0x32860997d730b2d83b73241a25d3667d51c908ef":"0x1b1a089237073d0000","0x3286d1bc657a312c8847d93cb3cb7950f2b0c6e3":"0x43c33c1937564800000","0x32a20d028e2c6218b9d95b445c771524636a22ef":"0x202fefbf2d7c2f00000","0x32a70691255c9fc9791a4f75c8b81f388e0a2503":"0x35659ef93f0fc40000","0x32b7feebc5c59bf65e861c4c0be42a7611a5541a":"0x77e9aaa8525c100000","0x32ba9a7d0423e03a525fe2ebeb661d2085778bd8":"0x43c33c1937564800000","0x32bb2e9693e4e085344d2f0dbd46a283e3a087fd":"0x15af1d78b58c400000","0x32c2fde2b6aabb80e5aea2b949a217f3cb092283":"0x1306160afdf20378000","0x32d950d5e93ea1d5b48db4714f867b0320b31c0f":"0x3708baed3d68900000","0x32dbb6716c54e83165829a4abb36757849b6e47d":"0x3635c9adc5dea00000","0x32eb64be1b5dede408c6bdefbe6e405c16b7ed02":"0x6acb3df27e1f880000","0x32ef5cdc671df5562a901aee5db716b9be76dcf6":"0x6c6b935b8bbd400000","0x32f29e8727a74c6b4301e3ffff0687c1b870dae9":"0x3635c9adc5dea00000","0x32fa0e86cd087dd68d693190f32d93310909ed53":"0xd8d726b7177a800000","0x32fbeed6f626fcdfd51acafb730b9eeff612f564":"0x6c6b935b8bbd400000","0x3300fb149aded65bcba6c04e9cd6b7a03b893bb1":"0xfc936392801c0000","0x3301d9ca2f3bfe026279cd6819f79a293d98156e":"0xa968163f0a57b400000","0x3308b03466c27a17dfe1aafceb81e16d2934566f":"0x39992648a23c8a00000","0x331a1c26cc6994cdd3c14bece276ffff4b9df77c":"0xfa7aeddf4f068000","0x3326b88de806184454c40b27f309d9dd6dcfb978":"0x3ca5c66d9bc44300000","0x3329eb3baf4345d600ced40e6e9975656f113742":"0x10f08eda8e555098000","0x33320dd90f2baa110dd334872a998f148426453c":"0x36356633ebd8ea0000","0x3336c3ef6e8b50ee90e037b164b7a8ea5faac65d":"0xec8a3a71c22540000","0x33380c6fff5acd2651309629db9a71bf3f20c5ba":"0x368c8623a8b4d100000","0x333ad1596401e05aea2d36ca47318ef4cd2cb3df":"0x9dc05cce28c2b80000","0x334340ee4b9cdc81f850a75116d50ee9b69825bf":"0x6c6b935b8bbd400000","0x33481e856ebed48ea708a27426ef28e867f57cd1":"0xad78ebc5ac6200000","0x33565ba9da2c03e778ce12294f081dfe81064d24":"0x3635c9adc5dea000000","0x33581cee233088c0860d944e0cf1ceabb8261c2e":"0xb98bc829a6f90000","0x335858f749f169cabcfe52b796e3c11ec47ea3c2":"0xad78ebc5ac6200000","0x335e22025b7a77c3a074c78b8e3dfe071341946e":"0x227ca730ab3f6ac0000","0x33629bd52f0e107bc071176c64df108f64777d49":"0x1cfdd7468216e8000","0x337b3bdf86d713dbd07b5dbfcc022b7a7b1946ae":"0xd7c198710e66b00000","0x337cfe1157a5c6912010dd561533791769c2b6a6":"0x3635c9adc5dea00000","0x33b336f5ba5edb7b1ccc7eb1a0d984c1231d0edc":"0x6c6b935b8bbd400000","0x33c407133b84b3ca4c3ded1f4658900c38101624":"0x97c9ce4cf6d5c00000","0x33d172ab075c51db1cd40a8ca8dbff0d93b843bb":"0x136780510d12de38000","0x33e9b71823952e1f66958c278fc28b1196a6c5a4":"0x56bc75e2d63100000","0x33ea6b7855e05b07ab80dab1e14de9b649e99b6c":"0x1cd6fbad57dbd00000","0x33f15223310d44de8b6636685f3a4c3d9c5655a5":"0xd9462c6cb4b5a0000","0x33f4a6471eb1bca6a9f85b3b4872e10755c82be1":"0x6c6b935b8bbd400000","0x33fb577a4d214fe010d32cca7c3eeda63f87ceef":"0x3635c9adc5dea00000","0x33fd718f0b91b5cec88a5dc15eecf0ecefa4ef3d":"0x177224aa844c720000","0x341480cc8cb476f8d01ff30812e7c70e05afaf5d":"0x6c6b935b8bbd400000","0x34272d5e7574315dcae9abbd317bac90289d4765":"0x62a992e53a0af00000","0x3430a16381f869f6ea5423915855e800883525a9":"0x3ca5c66d9bc44300000","0x34318625818ec13f11835ae97353ce377d6f590a":"0x52663ccab1e1c00000","0x34393c5d91b9de597203e75bac4309b5fa3d28c3":"0xa844a7424d9c80000","0x3439998b247cb4bf8bc80a6d2b3527f1dfe9a6d2":"0x796e3ea3f8ab00000","0x34437d1465640b136cb5841c3f934f9ba0b7097d":"0x960db77681e940000","0x344a8db086faed4efc37131b3a22b0782dad7095":"0x1b1ae4d6e2ef500000","0x34664d220fa7f37958024a3332d684bcc6d4c8bd":"0x21e19e0c9bab2400000","0x3466f67e39636c01f43b3a21a0e8529325c08624":"0x2db1167650acd80000","0x3485361ee6bf06ef6508ccd23d94641f814d3e2f":"0x6c6b935b8bbd400000","0x3485f621256433b98a4200dad857efe55937ec98":"0x6c6b935b8bbd400000","0x34958a46d30e30b273ecc6e5d358a212e5307e8c":"0x6c6b935b8bbd400000","0x3497dd66fd118071a78c2cb36e40b6651cc82598":"0x5f1016b5076d00000","0x349a816b17ab3d27bbc0ae0051f6a070be1ff29d":"0x21e19e0c9bab2400000","0x349d2c918fd09e2807318e66ce432909176bd50b":"0x3cb71f51fc55800000","0x34a0431fff5ead927f3c69649616dc6e97945f6f":"0x15af1d78b58c400000","0x34a85d6d243fb1dfb7d1d2d44f536e947a4cee9e":"0x43c33c1937564800000","0x34a901a69f036bcf9f7843c0ba01b426e8c3dc2b":"0xd8d726b7177a800000","0x34b454416e9fb4274e6addf853428a0198d62ee1":"0x161042779f1ffc0000","0x34c8e5f1330fcb4b14ca75cb2580a4b93d204e36":"0x6c6b935b8bbd400000","0x34e2849bea583ab0cc37975190f322b395055582":"0x1a5c5e857fdf2b20000","0x34fa7792bad8bbd7ff64056214a33eb6600c1ea8":"0x2b5e3af16b1880000","0x34ff26eb60a8d1a95a489fae136ee91d4e58084c":"0x2086ac351052600000","0x34ff582952ff24458f7b13d51f0b4f987022c1fe":"0x9806de3da6e9780000","0x35106ba94e8563d4b3cb3c5c692c10e604b7ced8":"0x6c6b935b8bbd400000","0x35145f620397c69cb8e00962961f0f4886643989":"0x14542ba12a337c00000","0x35147430c3106500e79fa2f502462e94703c23b1":"0x6c6acc67d7b1d40000","0x351787843505f8e4eff46566cce6a59f4d1c5fe7":"0x1f5718987664b480000","0x351f16e5e0735af56751b0e225b2421171394090":"0x2d4ca05e2b43ca80000","0x3524a000234ebaaf0789a134a2a417383ce5282a":"0x1317955947d8e2c0000","0x3526eece1a6bdc3ee7b400fe935b48463f31bed7":"0x477879b6d14300000","0x352a785f4a921632504ce5d015f83c49aa838d6d":"0xe9e7e0fb35b7780000","0x352d29a26e8a41818181746467f582e6e84012e0":"0x14542ba12a337c00000","0x352e77c861696ef96ad54934f894aa8ea35151dd":"0x3635c9adc5dea00000","0x352f25babf4a690673e35195efa8f79d05848aad":"0xe253c39be6e7dc00000","0x3536453322c1466cb905af5c335ca8db74bff1e6":"0x183b5f03b1479c0000","0x353dbec42f92b50f975129b93c4c997375f09073":"0x6c5db2a4d815dc0000","0x3540c7bd7a8442d5bee21a2180a1c4edff1649e0":"0x432eac4c6f05b98000","0x3549bd40bbbc2b30095cac8be2c07a0588e0aed6":"0x1158e460913d00000","0x3552a496eba67f12be6eedab360cd13661dc7480":"0x1043561a8829300000","0x3554947b7b947b0040da52ca180925c6d3b88ffe":"0x39fbae8d042dd0000","0x355c0c39f5d5700b41d375b3f17851dcd52401f9":"0xd7b3b7ba5abf4c0000","0x355ccfe0e77d557b971be1a558bc02df9eee0594":"0x5f5cb1afc865280000","0x3571cf7ad304ecaee595792f4bbfa484418549d6":"0x13bcd0d892d9e160000","0x3575c770668a9d179f1ef768c293f80166e2aa3d":"0x19b21248a3ef280000","0x357a02c0a9dfe287de447fb67a70ec5b62366647":"0x1731790534df20000","0x35855ec641ab9e081ed0c2a6dcd81354d0244a87":"0x4127abe993a7aa8000","0x3588895ac9fbafec012092dc05c0c302d90740fa":"0xa2a15d09519be00000","0x3599493ce65772cf93e98af1195ec0955dc98002":"0x5151590c67b3280000","0x35a08081799173e001cc5bd46a02406dc95d1787":"0x21e19e0c9bab2400000","0x35a549e8fd6c368d6dcca6d2e7d18e4db95f5284":"0x1b1a089237073d0000","0x35a6885083c899dabbf530ed6c12f4dd3a204cf5":"0xad78ebc5ac6200000","0x35aaa0465d1c260c420fa30e2629869fb6559207":"0x263781e0e087c80000","0x35ac1d3ed7464fa3db14e7729213ceaa378c095e":"0x52663ccab1e1c00000","0x35af040a0cc2337a76af288154c7561e1a233349":"0x3635c9adc5dea00000","0x35b03ea4245736f57b85d2eb79628f036ddcd705":"0xd8d726b7177a800000","0x35bd246865fab490ac087ac1f1d4f2c10d0cda03":"0x15af1d78b58c400000","0x35bf6688522f35467a7f75302314c02ba176800e":"0x3af418202d954e00000","0x35c8adc11125432b3b77acd64625fe58ebee9d66":"0x6c6b935b8bbd400000","0x35d2970f49dcc81ea9ee707e9c8a0ab2a8bb7463":"0x4e1003b28d92800000","0x35e096120deaa5c1ecb1645e2ccb8b4edbd9299a":"0x1b1ae4d6e2ef500000","0x35ea2163a38cdf9a123f82a5ec00258dae0bc767":"0xd8d726b7177a800000","0x35f1da127b83376f1b88c82a3359f67a5e67dd50":"0x678a932062e4180000","0x35f2949cf78bc219bb4f01907cf3b4b3d3865482":"0xfb5c86c92e4340000","0x35f5860149e4bbc04b8ac5b272be55ad1aca58e0":"0xad78ebc5ac6200000","0x3602458da86f6d6a9d9eb03daf97fe5619d442fa":"0x6c6b935b8bbd400000","0x3605372d93a9010988018f9f315d032ed1880fa1":"0x1b1bcf51896a7d0000","0x3616d448985f5d32aefa8b93a993e094bd854986":"0xb227f63be813c0000","0x3616fb46c81578c9c8eb4d3bf880451a88379d7d":"0xad78ebc5ac6200000","0x361c75931696bc3d427d93e76c77fd13b241f6f4":"0x1dc5d8fc266dd60000","0x361d9ed80b5bd27cf9f1226f26753258ee5f9b3f":"0xbf6914ba7d72c20000","0x361f3ba9ed956b770f257d3672fe1ff9f7b0240c":"0x2086ac351052600000","0x36227cdfa0fd3b9d7e6a744685f5be9aa366a7f0":"0xac2730ee9c6c18000","0x362fbcb10662370a068fc2652602a2577937cce6":"0xad78ebc5ac6200000","0x3630c5e565ceaa8a0f0ffe32875eae2a6ce63c19":"0x937722b3774d00000","0x36339f84a5c2b44ce53dfdb6d4f97df78212a7df":"0x116f18b81715a00000","0x36343aeca07b6ed58a0e62fa4ecb498a124fc971":"0x1043561a8829300000","0x366175403481e0ab15bb514615cbb989ebc68f82":"0x6c6b935b8bbd400000","0x36726f3b885a24f92996da81625ec8ad16d8cbe6":"0x53af75d18148578000","0x3673954399f6dfbe671818259bb278e2e92ee315":"0x2a5a058fc295ed000000","0x36758e049cd98bcea12277a676f9297362890023":"0xd8d726b7177a800000","0x367f59cc82795329384e41e1283115e791f26a01":"0x6c6b935b8bbd400000","0x36810ff9d213a271eda2b8aa798be654fa4bbe06":"0x6c6b935b8bbd400000","0x368c5414b56b8455171fbf076220c1cba4b5ca31":"0x1e3ef911e83d720000","0x3690246ba3c80679e22eac4412a1aefce6d7cd82":"0x43c33c1937564800000","0x36928b55bc861509d51c8cf1d546bfec6e3e90af":"0x6acb3df27e1f880000","0x369822f5578b40dd1f4471706b22cd971352da6b":"0x12c1b6eed03d280000","0x369ef761195f3a373e24ece6cd22520fe0b9e86e":"0x1cffafc94db2088000","0x36a08fd6fd1ac17ce15ed57eefb12a2be28188bf":"0x487a9a304539440000","0x36a0e61e1be47fa87e30d32888ee0330901ca991":"0x1158e460913d00000","0x36b2c85e3aeeebb70d63c4a4730ce2e8e88a3624":"0x21e19e0c9bab2400000","0x36bf43ff35df90908824336c9b31ce33067e2f50":"0x49721510c1c1e9480000","0x36bfe1fa3b7b70c172eb042f6819a8972595413e":"0x3635c9adc5dea00000","0x36c510bf8d6e569bf2f37d47265dbcb502ff2bce":"0x65a4da25d3016c00000","0x36d85dc3683156e63bf880a9fab7788cf8143a27":"0x43c33c1937564800000","0x36df8f883c1273ec8a171f7a33cfd649b1fe6075":"0xc52484ac416890000","0x36e156610cd8ff64e780d89d0054385ca76755aa":"0x2f6f10780d22cc00000","0x36fec62c2c425e219b18448ad757009d8c54026f":"0x15af1d78b58c400000","0x3700e3027424d939dbde5d42fb78f6c4dbec1a8f":"0x22b1c8c1227a00000","0x3702e704cc21617439ad4ea27a5714f2fda1e932":"0x3635c9adc5dea00000","0x3703350c4d6fe337342cddc65bf1e2386bf3f9b2":"0x6d8121a194d1100000","0x3708e59de6b4055088782902e0579c7201a8bf50":"0x2a5a058fc295ed000000","0x3712367e5e55a96d5a19168f6eb2bc7e9971f869":"0x3635c9adc5dea00000","0x37195a635dcc62f56a718049d47e8f9f96832891":"0x6acb3df27e1f880000","0x3727341f26c12001e378405ee38b2d8464ec7140":"0x6c6b935b8bbd400000","0x372e453a6b629f27678cc8aeb5e57ce85ec0aef9":"0xad78ebc5ac6200000","0x3734cb187491ede713ae5b3b2d12284af46b8101":"0xa2a15d09519be00000","0x3737216ee91f177732fb58fa4097267207e2cf55":"0x52663ccab1e1c00000","0x373c547e0cb5ce632e1c5ad66155720c01c40995":"0xfe54dcdce6c55a0000","0x376cd7577383e902951b60a2017ba7ea29e33576":"0x6c6b935b8bbd400000","0x378ea1dc8edc19bae82638029ea8752ce98bcfcd":"0x6c6b935b8bbd400000","0x378f37243f3ff0bef5e1dc85eb4308d9340c29f9":"0x6c6e59e67c78540000","0x37959c20b7e9931d72f5a8ae869dafddad3b6d5c":"0xad78ebc5ac6200000","0x379a7f755a81a17edb7daaa28afc665dfa6be63a":"0x15af1d78b58c40000","0x379c7166849bc24a02d6535e2def13daeef8aa8d":"0x56bc75e2d63100000","0x37a05aceb9395c8635a39a7c5d266ae610d10bf2":"0x65a4da25d3016c00000","0x37a10451f36166cf643dd2de6c1cbba8a011cfa3":"0x14998f32ac78700000","0x37a7a6ff4ea3d60ec307ca516a48d3053bb79cbb":"0x6c6b935b8bbd400000","0x37ab66083a4fa23848b886f9e66d79cdc150cc70":"0x12be22ffb5ec00380000","0x37ac29bda93f497bc4aeaab935452c431510341e":"0x35659ef93f0fc40000","0x37b8beac7b1ca38829d61ab552c766f48a10c32f":"0x15af1d78b58c400000","0x37bbc47212d82fcb5ee08f5225ecc2041ad2da7d":"0xb1cf24ddd0b1400000","0x37cb868d2c3f95b257611eb34a4188d58b749802":"0x6c6b935b8bbd400000","0x37d980a12ee3bf23cc5cdb63b4ae45691f74c837":"0x6c6b935b8bbd400000","0x37e169a93808d8035698f815c7235613c1e659f2":"0x3635c9adc5dea00000","0x37eada93c475ded2f7e15e7787d400470fa52062":"0xad78ebc5ac6200000","0x37fac1e6bc122e936dfb84de0c4bef6e0d60c2d7":"0x6c6b935b8bbd400000","0x3807eff43aa97c76910a19752dd715ee0182d94e":"0xd90156f6fc2fb0000","0x3815b0743f94fc8cc8654fd9d597ed7d8b77c57e":"0x2809d429d896750000","0x381db4c8465df446a4ce15bf81d47e2f17c980bf":"0x6c6b935b8bbd4000000","0x38202c5cd7078d4f887673ab07109ad8ada89720":"0x3635c9adc5dea00000","0x3821862493242c0aeb84b90de05d250c1e50c074":"0x11776c58e946dc0000","0x382591e7217b435e8e884cdbf415fe377a6fe29e":"0x1b2df9d219f57980000","0x382ba76db41b75606dd48a48f0137e9174e031b6":"0x1158e460913d00000","0x3831757eae7557cb8a37a4b10644b63e4d3b3c75":"0xad78ebc5ac6200000","0x383304dd7a5720b29c1a10f60342219f48032f80":"0x12f939c99edab800000","0x383a7c899ee18bc214969870bc7482f6d8f3570e":"0x21e19e0c9bab2400000","0x38430e931d93be01b4c3ef0dc535f1e0a9610063":"0x21e19e0c9bab2400000","0x38439aaa24e3636f3a18e020ea1da7e145160d86":"0x8cf23f909c0fa00000","0x38458e0685573cb4d28f53098829904570179266":"0x22b1c8c1227a00000","0x3847667038f33b01c1cc795d8daf5475eff5a0d4":"0x277b9bf4246c410000","0x38643babea6011316cc797d9b093c897a17bdae7":"0x1220bb7445daa00000","0x38695fc7e1367ceb163ebb053751f9f68ddb07a0":"0x6c6b935b8bbd400000","0x3872f48dc5e3f817bc6b2ad2d030fc5e0471193d":"0xd8d726b7177a800000","0x387eeafd6b4009deaf8bd5b85a72983a8dcc3487":"0xd8d726b7177a800000","0x3881defae1c07b3ce04c78abe26b0cdc8d73f010":"0xad78ebc5ac6200000","0x3883becc08b9be68ad3b0836aac3b620dc0017ef":"0x6c6b935b8bbd400000","0x3885fee67107dc3a3c741ee290c98918c9b99397":"0x1158e460913d00000","0x3887192c7f705006b630091276b39ac680448d6b":"0x340aad21b3b700000","0x38898bbb4553e00bbfd0cf268b2fc464d154add5":"0x1158e460913d000000","0x388bdcdae794fc44082e667501344118ea96cd96":"0x5a87e7d7f5f6580000","0x388c85a9b9207d8146033fe38143f6d34b595c47":"0xad78ebc5ac6200000","0x3896ad743579d38e2302454d1fb6e2ab69e01bfd":"0x65ea3db75546600000","0x38a3dccf2fcfe0c91a2624bd0cbf88ee4a076c33":"0x6c6b935b8bbd400000","0x38a744efa6d5c2137defef8ef9187b649eee1c78":"0xd8d726b7177a800000","0x38ac664ee8e0795e4275cb852bcba6a479ad9c8d":"0x1158e460913d00000","0x38b2197106123387a0d4de368431a8bacdda30e2":"0x1158e460913d00000","0x38b3965c21fa893931079beacfffaf153678b6eb":"0x93c6a0a51e2670000","0x38b403fb1fb7c14559a2d6f6564a5552bca39aff":"0x6c6b935b8bbd400000","0x38b50146e71916a5448de12a4d742135dcf39833":"0x6d190c475169a200000","0x38bf2a1f7a69de0e2546adb808b36335645da9ff":"0x6c700439d9b5600000","0x38c10b90c859cbb7815692f99dae520ab5febf5e":"0x2c9e4966fa5cf240000","0x38c7851f5ffd4cee98df30f3b25597af8a6ca263":"0x8ead3a2f7d7e180000","0x38d2e9154964b41c8d50a7487d391e7ee2c3d3c2":"0xbdbc41e0348b300000","0x38da1ba2de9e2c954b092dd9d81204fd016ba016":"0x2268ed01f34b3300000","0x38df0c4abe7ded5fe068eadf154ac691774324a4":"0x61093d7c2c6d380000","0x38e2af73393ea98a1d993a74df5cd754b98d529a":"0x61093d7c2c6d380000","0x38e46de4453c38e941e7930f43304f94bb7b2be8":"0x6cb7e74867d5e60000","0x38e7dba8fd4f1f850dbc2649d8e84f0952e3eb3c":"0x2b5e3af16b1880000","0x38e8a31af2d265e31a9fff2d8f46286d1245a467":"0x1158e460913d00000","0x38ea6f5b5a7b88417551b4123dc127dfe9342da6":"0x15af1d78b58c400000","0x38eec6e217f4d41aa920e424b9525197041cd4c6":"0xf00d25eb922e670000","0x38f387e1a4ed4a73106ef2b462e474e2e3143ad0":"0x14542ba12a337c00000","0x391161b0e43c302066e8a68d2ce7e199ecdb1d57":"0xd8d726b7177a800000","0x3915eab5ab2e5977d075dec47d96b68b4b5cf515":"0xd07018185120f400000","0x391a77405c09a72b5e8436237aaaf95d68da1709":"0x2a9264af3d1b90000","0x391f20176d12360d724d51470a90703675594a4d":"0x56bc75e2d631000000","0x392433d2ce83d3fb4a7602cca3faca4ec140a4b0":"0x2c3c465ca58ec0000","0x393f783b5cdb86221bf0294fb714959c7b45899c":"0x14061b9d77a5e980000","0x393ff4255e5c658f2e7f10ecbd292572671bc2d2":"0x6c6b935b8bbd400000","0x394132600f4155e07f4d45bc3eb8d9fb72dcd784":"0x9f6e92edea07d40000","0x3951e48e3c869e6b72a143b6a45068cdb9d466d0":"0x1158e460913d00000","0x3954bdfe0bf587c695a305d9244c3d5bdddac9bb":"0x410278327f985608000","0x395d6d255520a8db29abc47d83a5db8a1a7df087":"0x56bc75e2d63100000","0x39636b25811b176abfcfeeca64bc87452f1fdff4":"0x15af1d78b58c400000","0x3969b4f71bb8751ede43c016363a7a614f76118e":"0x6c6b935b8bbd400000","0x39782ffe06ac78822a3c3a8afe305e50a56188ce":"0x21e19e0c9bab2400000","0x397a6ef8763a18f00fac217e055c0d3094101011":"0x6c6b935b8bbd400000","0x397cdb8c80c67950b18d654229610e93bfa6ee1a":"0x3f95c8e08215210000","0x39824f8bced176fd3ea22ec6a493d0ccc33fc147":"0xd8d726b7177a800000","0x39936c2719450b9420cc2522cf91db01f227c1c1":"0x1b1ae4d6e2ef500000","0x3995e096b08a5a726800fcd17d9c64c64e088d2b":"0xad78ebc5ac6200000","0x399aa6f5d078cb0970882bc9992006f8fbdf3471":"0x3635c9adc5dea00000","0x39aa05e56d7d32385421cf9336e90d3d15a9f859":"0x168d28e3f00280000","0x39aaf0854db6eb39bc7b2e43846a76171c0445de":"0x6449e84e47a8a80000","0x39b1c471ae94e12164452e811fbbe2b3cd7275ac":"0x6c6b935b8bbd400000","0x39b299327490d72f9a9edff11b83afd0e9d3c450":"0xad78ebc5ac6200000","0x39bac68d947859f59e9226089c96d62e9fbe3cde":"0x22b1c8c1227a00000","0x39bfd978689bec048fc776aa15247f5e1d7c39a2":"0x43c33c1937564800000","0x39c773367c8825d3596c686f42bf0d14319e3f84":"0x73f75d1a085ba0000","0x39d4a931402c0c79c457186f24df8729cf957031":"0xd8d726b7177a800000","0x39d6caca22bccd6a72f87ee7d6b59e0bde21d719":"0x6c8754c8f30c080000","0x39e0db4d60568c800b8c5500026c2594f5768960":"0x3635c9adc5dea00000","0x39ee4fe00fbced647068d4f57c01cb22a80bccd1":"0x14542ba12a337c00000","0x39f198331e4b21c1b760a3155f4ab2fe00a74619":"0x6c6b935b8bbd400000","0x39f44663d92561091b82a70dcf593d754005973a":"0xad78b2edc21598000","0x3a035594c747476d42d1ee966c36224cdd224993":"0x134af74569f9c50000","0x3a04572847d31e81f7765ca5bfc9d557159f3683":"0x7362d0dabeafd8000","0x3a06e3bb1edcfd0c44c3074de0bb606b049894a2":"0x21e19e0c9bab2400000","0x3a10888b7e149cae272c01302c327d0af01a0b24":"0xebec21ee1da40000","0x3a3108c1e680a33b336c21131334409d97e5adec":"0x1158e460913d00000","0x3a368efe4ad786e26395ec9fc6ad698cae29fe01":"0x2245899675f9f40000","0x3a3dd104cd7eb04f21932fd433ea7affd39369f5":"0x13614f23e242260000","0x3a4297da3c555e46c073669d0478fce75f2f790e":"0x6ac5c62d9486070000","0x3a476bd2c9e664c63ab266aa4c6e4a4825f516c3":"0xad78ebc5ac6200000","0x3a48e0a7098b06a905802b87545731118e89f439":"0x6c6b935b8bbd400000","0x3a4da78dce05aeb87de9aead9185726da1926798":"0xad78ebc5ac6200000","0x3a59a08246a8206f8d58f70bb1f0d35c5bcc71bd":"0xa076407d3f7440000","0x3a72d635aadeee4382349db98a1813a4cfeb3df1":"0x2a5a058fc295ed000000","0x3a7db224acae17de7798797d82cdf8253017dfa8":"0x10f0cf064dd59200000","0x3a805fa0f7387f73055b7858ca8519edd93d634f":"0x6449e84e47a8a80000","0x3a84e950ed410e51b7e8801049ab2634b285fea1":"0x3f52fdaa822d2c80000","0x3a86ee94862b743dd34f410969d94e2c5652d4ad":"0xaede69ad30e810000","0x3a9132b7093d3ec42e1e4fb8cb31ecdd43ae773c":"0x6c6b935b8bbd400000","0x3a9960266df6492063538a99f487c950a3a5ec9e":"0x5150ae84a8cdf000000","0x3a9b111029ce1f20c9109c7a74eeeef34f4f2eb2":"0xd8d726b7177a800000","0x3a9e5441d44b243be55b75027a1ceb9eacf50df2":"0x3635c9adc5dea00000","0x3aa07a34a1afc8967d3d1383b96b62cf96d5fa90":"0x43c33c1937564800000","0x3aa42c21b9b31c3e27ccd17e099af679cdf56907":"0x1b1ae4d6e2ef5000000","0x3aa948ea02397755effb2f9dc9392df1058f7e33":"0x2e141ea081ca080000","0x3aadf98b61e5c896e7d100a3391d3250225d61df":"0xcaf67003701680000","0x3aae4872fd9093cbcad1406f1e8078bab50359e2":"0x222c8eb3ff6640000","0x3abb8adfc604f48d5984811d7f1d52fef6758270":"0xf29719b66f110c0000","0x3ac2f0ff1612e4a1c346d53382abf6d8a25baa53":"0x6c6b935b8bbd400000","0x3ac9dc7a436ae98fd01c7a9621aa8e9d0b8b531d":"0x61093d7c2c6d380000","0x3ad06149b21c55ff867cc3fb9740d2bcc7101231":"0x29b76432b94451200000","0x3ad70243d88bf0400f57c8c1fd57811848af162a":"0x2e9ee5c38653f00000","0x3ad915d550b723415620f5a9b5b88a85f382f035":"0x3635c9adc5dea00000","0x3ae160e3cd60ae31b9d6742d68e14e76bd96c517":"0x1a055690d9db80000","0x3ae62bd271a760637fad79c31c94ff62b4cd12f7":"0x6c6b935b8bbd400000","0x3aea4e82d2400248f99871a41ca257060d3a221b":"0x3635c9adc5dea00000","0x3af65b3e28895a4a001153391d1e69c31fb9db39":"0xd5967be4fc3f100000","0x3b07db5a357f5af2484cbc9d77d73b1fd0519fc7":"0x1b1ae4d6e2ef500000","0x3b0accaf4b607cfe61d17334c214b75cdefdbd89":"0x6c6b935b8bbd400000","0x3b13631a1b89cb566548899a1d60915cdcc4205b":"0x6c6b935b8bbd400000","0x3b159099075207c6807663b1f0f7eda54ac8cce3":"0x6ac4e65b69f92d8000","0x3b1937d5e793b89b63fb8eb5f1b1c9ca6ba0fa8e":"0x6c6b935b8bbd400000","0x3b22da2a0271c8efe102532773636a69b1c17e09":"0x1b36a6444a3e180000","0x3b22dea3c25f1b59c7bd27bb91d3a3eaecef3984":"0x56bc75e2d63100000","0x3b2367f8494b5fe18d683c055d89999c9f3d1b34":"0x21e19e0c9bab2400000","0x3b2c45990e21474451cf4f59f01955b331c7d7c9":"0x6c6b935b8bbd400000","0x3b4100e30a73b0c734b18ffa8426d19b19312f1a":"0xbb5d1aa700afd900000","0x3b42a66d979f582834747a8b60428e9b4eeccd23":"0x21a1c790fadc580000","0x3b4768fd71e2db2cbe7fa050483c27b4eb931df3":"0x6c6b935b8bbd400000","0x3b566a8afad19682dc2ce8679a3ce444a5b0fd4f":"0x6c6b935b8bbd400000","0x3b5c251d7fd7893ba209fe541cecd0ce253a990d":"0x65a4da25d3016c00000","0x3b5e8b3c77f792decb7a8985df916efb490aac23":"0x6c6b935b8bbd400000","0x3b6e814f770748a7c3997806347605480a3fd509":"0x6c6b935b8bbd400000","0x3b7b4f53c45655f3dc5f017edc23b16f9bc536fa":"0x56bc75e2d63100000","0x3b7b8e27de33d3ce7961b98d19a52fe79f6c25be":"0x152d02c7e14af6800000","0x3b7c77dbe95dc2602ce3269a9545d04965fefdbd":"0x6c6b935b8bbd400000","0x3b8098533f7d9bdcd307dbb23e1777ca18418936":"0x6c6b935b8bbd400000","0x3b93b16136f11eaf10996c95990d3b2739ccea5f":"0x21e19e0c9bab2400000","0x3bab4b01a7c84ba13feea9b0bb191b77a3aadca3":"0xad78ebc5ac6200000","0x3bb53598cc20e2055dc553b049404ac9b7dd1e83":"0x21571df77c00be0000","0x3bbc13d04accc0707aebdcaef087d0b87e0b5ee3":"0xbed1d0263d9f000000","0x3bc6e3ee7a56ce8f14a37532590f63716b9966e8":"0x6c6b935b8bbd400000","0x3bc85d6c735b9cda4bba5f48b24b13e70630307b":"0x6acb3df27e1f880000","0x3bd624b548cb659736907ed8aa3c0c705e24b575":"0x6c6b935b8bbd400000","0x3bd9a06d1bd36c4edd27fc0d1f5b088ddae3c72a":"0x1b1a7a420ba00d0000","0x3bddbc8134f77d55597fc97c26d26698090604eb":"0xbe202d6a0eda0000","0x3bf86ed8a3153ec933786a02ac090301855e576b":"0x5f4a8c8375d155400000","0x3bfbd3847c17a61cf3f17b52f8eba1b960b3f39f":"0xa2a15d09519be00000","0x3c03bbc023e1e93fa3a3a6e428cf0cd8f95e1ec6":"0x52663ccab1e1c00000","0x3c0c3defac9cea7acc319a96c30b8e1fedab4574":"0x692ae8897081d00000","0x3c15b3511df6f0342e7348cc89af39a168b7730f":"0x3635c9adc5dea00000","0x3c1f91f301f4b565bca24751aa1f761322709ddd":"0x61093d7c2c6d380000","0x3c286cfb30146e5fd790c2c8541552578de334d8":"0x2291b11aa306e8c0000","0x3c322e611fdb820d47c6f8fc64b6fad74ca95f5e":"0xd258ece1b13150000","0x3c5a241459c6abbf630239c98a30d20b8b3ac561":"0x88b23acffd9900000","0x3c79c863c3d372b3ff0c6f452734a7f97042d706":"0x98a7d9b8314c00000","0x3c83c1701db0388b68210d00f5717cd9bd322c6a":"0x65a4da25d3016c00000","0x3c860e2e663f46db53427b29fe3ea5e5bf62bbcc":"0x556f64c1fe7fa0000","0x3c869c09696523ced824a070414605bb76231ff2":"0x3635c9adc5dea00000","0x3c925619c9b33144463f0537d896358706c520b0":"0x6c6b935b8bbd400000","0x3c98594bf68b57351e8814ae9e6dfd2d254aa06f":"0x1043561a8829300000","0x3cadeb3d3eed3f62311d52553e70df4afce56f23":"0xd8d726b7177a800000","0x3caedb5319fe806543c56e5021d372f71be9062e":"0x878678326eac9000000","0x3cafaf5e62505615068af8eb22a13ad8a9e55070":"0x6c660645aa47180000","0x3cb179cb4801a99b95c3b0c324a2bdc101a65360":"0x168d28e3f00280000","0x3cb561ce86424b359891e364ec925ffeff277df7":"0xad78ebc5ac6200000","0x3ccb71aa6880cb0b84012d90e60740ec06acd78f":"0x6c6b935b8bbd400000","0x3ccef88679573947e94997798a1e327e08603a65":"0x2bc916d69f3b020000","0x3cd1d9731bd548c1dd6fcea61beb75d91754f7d3":"0x1161d01b215cae48000","0x3cd3a6e93579c56d494171fc533e7a90e6f59464":"0x6c6b935b8bbd400000","0x3cd6b7593cbee77830a8b19d0801958fcd4bc57a":"0x1b1ae4d6e2ef500000","0x3cd7f7c7c2353780cde081eeec45822b25f2860c":"0xad78ebc5ac6200000","0x3ce1dc97fcd7b7c4d3a18a49d6f2a5c1b1a906d7":"0xad78ebc5ac6200000","0x3cea302a472a940379dd398a24eafdbadf88ad79":"0xa2a15d09519be00000","0x3ceca96bb1cdc214029cbc5e181d398ab94d3d41":"0x10f0cf064dd592000000","0x3cf484524fbdfadae26dc185e32b2b630fd2e726":"0x185452cb2a91c30000","0x3cf9a1d465e78b7039e3694478e2627b36fcd141":"0x4a60532ad51bf00000","0x3cfbf066565970639e130df2a7d16b0e14d6091c":"0x5c283d410394100000","0x3d09688d93ad07f3abe68c722723cd680990435e":"0x65a4ce99f769e6e0000","0x3d31587b5fd5869845788725a663290a49d3678c":"0x1b1ae4d6e2ef500000","0x3d3fad49c9e5d2759c8e8e5a7a4d60a0dd135692":"0x1158e460913d00000","0x3d574fcf00fae1d98cc8bf9ddfa1b3953b9741bc":"0x6acb3df27e1f880000","0x3d5a8b2b80be8b35d8ecf789b5ed7a0775c5076c":"0x1158e460913d00000","0x3d66cd4bd64d5c8c1b5eea281e106d1c5aad2373":"0x69c4f3a8a110a60000","0x3d6ae053fcbc318d6fd0fbc353b8bf542e680d27":"0xc673ce3c40160000","0x3d6ff82c9377059fb30d9215723f60c775c891fe":"0xd8e5ce617f2d50000","0x3d79a853d71be0621b44e29759656ca075fdf409":"0x6c6b935b8bbd400000","0x3d7ea5bf03528100ed8af8aed2653e921b6e6725":"0x3635c9adc5dea00000","0x3d813ff2b6ed57b937dabf2b381d148a411fa085":"0x56bc75e2d63100000","0x3d881433f04a7d0d27f84944e08a512da3555287":"0x410d586a20a4c00000","0x3d89e505cb46e211a53f32f167a877bec87f4b0a":"0x15b3557f1937f8000","0x3d8d0723721e73a6c0d860aa0557abd14c1ee362":"0x10f0cf064dd59200000","0x3d8f39881b9edfe91227c33fa4cdd91e678544b0":"0x4ab07ba43ada98000","0x3d9d6be57ff83e065985664f12564483f2e600b2":"0x6eace43f23bd800000","0x3da39ce3ef4a7a3966b32ee7ea4ebc2335a8f11f":"0x6c6b935b8bbd400000","0x3daa01ceb70eaf9591fa521ba4a27ea9fb8ede4a":"0x5a63d2c9bc76540000","0x3db5fe6a68bd3612ac15a99a61e555928eeceaf3":"0x55a6e79ccd1d300000","0x3db9ed7f024c7e26372feacf2b050803445e3810":"0x45b148b4996a300000","0x3dbf0dbfd77890800533f09dea8301b9f025d2a6":"0x3635c9adc5dea00000","0x3dcef19c868b15d34eda426ec7e04b18b6017002":"0x6c68ccd09b022c0000","0x3dd12e556a603736feba4a6fa8bd4ac45d662a04":"0x23757b9183e078280000","0x3dde8b15b3ccbaa5780112c3d674f313bba68026":"0x601d515a3e4f940000","0x3ddedbe48923fbf9e536bf9ffb0747c9cdd39eef":"0x368c8623a8b4d100000","0x3deae43327913f62808faa1b6276a2bd6368ead9":"0x6c6b935b8bbd400000","0x3df762049eda8ac6927d904c7af42f94e5519601":"0x6c6b935b8bbd400000","0x3e040d40cb80ba0125f3b15fdefcc83f3005da1b":"0x384524cc70b7780000","0x3e0b8ed86ed669e12723af7572fbacfe829b1e16":"0x514de7f9b812dc0000","0x3e0cbe6a6dcb61f110c45ba2aa361d7fcad3da73":"0x1b2df9d219f57980000","0x3e194b4ecef8bb711ea2ff24fec4e87bd032f7d1":"0x8b9dc1bc1a036a8000","0x3e1b2230afbbd310b4926a4c776d5ae7819c661d":"0x65a4da25d3016c00000","0x3e1c53300e4c168912163c7e99b95da268ad280a":"0x3662325cd18fe00000","0x3e1c962063e0d5295941f210dca3ab531eec8809":"0xa2a15d09519be00000","0x3e2ca0d234baf607ad466a1b85f4a6488ef00ae7":"0x4da21a3483d568000","0x3e2f26235e137a7324e4dc154b5df5af46ea1a49":"0x137aad8032db90000","0x3e3161f1ea2fbf126e79da1801da9512b37988c9":"0xa6dd90cae5114480000","0x3e36c17253c11cf38974ed0db1b759160da63783":"0x17b7883c06916600000","0x3e3cd3bec06591d6346f254b621eb41c89008d31":"0x35dfbeda9f37340000","0x3e45bd55db9060eced923bb9cb733cb3573fb531":"0x58e7926ee858a00000","0x3e4d13c55a84e46ed7e9cb90fd355e8ad991e38f":"0x3635c9adc5dea00000","0x3e4e9265223c9738324cf20bd06006d0073edb8c":"0x73f75d1a085ba0000","0x3e4fbd661015f6461ed6735cefef01f31445de3a":"0x36e342998b8b0200000","0x3e53ff2107a8debe3328493a92a586a7e1f49758":"0x4e69c2a71a405ab0000","0x3e5a39fdda70df1126ab0dc49a7378311a537a1f":"0x821ab0d44149800000","0x3e5abd09ce5af7ba8487c359e0f2a93a986b0b18":"0x21e19e0c9bab2400000","0x3e5cb8928c417825c03a3bfcc52183e5c91e42d7":"0xe731d9c52c962f0000","0x3e5e93fb4c9c9d1246f8f247358e22c3c5d17b6a":"0x821ab0d4414980000","0x3e618350fa01657ab0ef3ebac8e37012f8fc2b6f":"0x9806de3da6e9780000","0x3e63ce3b24ca2865b4c5a687b7aea3597ef6e548":"0x6c6b935b8bbd400000","0x3e66b84769566ab67945d5fa81373556bcc3a1fa":"0x83d6c7aab63600000","0x3e76a62db187aa74f63817533b306cead0e8cebe":"0x69b5afac750bb800000","0x3e7a966b5dc357ffb07e9fe067c45791fd8e3049":"0x3342d60dff1960000","0x3e81772175237eb4cbe0fe2dcafdadffeb6a1999":"0x1dd0c885f9a0d800000","0x3e8349b67f5745449f659367d9ad4712db5b895a":"0x62a992e53a0af00000","0x3e83544f0082552572c782bee5d218f1ef064a9d":"0x56cd55fc64dfe0000","0x3e84b35c5b2265507061d30b6f12da033fe6f8b9":"0x61093d7c2c6d380000","0x3e8641d43c42003f0a33c929f711079deb2b9e46":"0x1b1ae4d6e2ef500000","0x3e8745ba322f5fd6cb50124ec46688c7a69a7fae":"0x10afc1ade3b4ed40000","0x3e914e3018ac00449341c49da71d04dfeeed6221":"0xd8d726b7177a800000","0x3e9410d3b9a87ed5e451a6b91bb8923fe90fb2b5":"0xad78ebc5ac6200000","0x3e94df5313fa520570ef232bc3311d5f622ff183":"0x6c6b935b8bbd400000","0x3e9b34a57f3375ae59c0a75e19c4b641228d9700":"0xf8699329677e0000","0x3eada8c92f56067e1bb73ce378da56dc2cdfd365":"0x77cde93aeb0d480000","0x3eaf0879b5b6db159b589f84578b6a74f6c10357":"0x18938b671fa65a28000","0x3eaf316b87615d88f7adc77c58e712ed4d77966b":"0x56dbc4cee24648000","0x3eb8b33b21d23cda86d8288884ab470e164691b5":"0x1b1ae4d6e2ef500000","0x3eb9ef06d0c259040319947e8c7a6812aa0253d8":"0x90d972f32323c0000","0x3ecc8e1668dde995dc570fe414f44211c534a615":"0x6c6b935b8bbd400000","0x3ecdb532e397579662b2a46141e78f8235936a5f":"0x39fbae8d042dd0000","0x3eee6f1e96360b7689b3069adaf9af8eb60ce481":"0x3635c9adc5dea00000","0x3f08d9ad894f813e8e2148c160d24b353a8e74b0":"0xcb49b44ba602d800000","0x3f0c83aac5717962734e5ceaeaecd39b28ad06be":"0x6c6b935b8bbd400000","0x3f10800282d1b7ddc78fa92d8230074e1bf6aeae":"0x10afc1ade3b4ed40000","0x3f1233714f204de9de4ee96d073b368d8197989f":"0x217c41074e6bb0000","0x3f173aa6edf469d185e59bd26ae4236b92b4d8e1":"0x1158e460913d000000","0x3f1bc420c53c002c9e90037c44fe6a8ef4ddc962":"0x960db77681e940000","0x3f236108eec72289bac3a65cd283f95e041d144c":"0x3634bf39ab98788000","0x3f2da093bb16eb064f8bfa9e30b929d15f8e1c4c":"0x6c6b935b8bbd400000","0x3f2dd55db7eab0ebee65b33ed8202c1e992e958b":"0x2c73c937742c500000","0x3f2f381491797cc5c0d48296c14fd0cd00cdfa2d":"0x2b95bdcc39b6100000","0x3f30d3bc9f602232bc724288ca46cd0b0788f715":"0xd8d726b7177a800000","0x3f3c8e61e5604cef0605d436dd22accd862217fc":"0x487a9a304539440000","0x3f3f46b75cabe37bfacc8760281f4341ca7f463d":"0x20ac448235fae88000","0x3f472963197883bbda5a9b7dfcb22db11440ad31":"0x1a19643cb1eff08000","0x3f4cd1399f8a34eddb9a17a471fc922b5870aafc":"0xad78ebc5ac6200000","0x3f551ba93cd54693c183fb9ad60d65e1609673c9":"0x6c6b935b8bbd400000","0x3f627a769e6a950eb87017a7cd9ca20871136831":"0x2eb8eb1a172dcb80000","0x3f6dd3650ee428dcb7759553b017a96a94286ac9":"0x487a9a304539440000","0x3f747237806fed3f828a6852eb0867f79027af89":"0x5150ae84a8cdf00000","0x3f75ae61cc1d8042653b5baec4443e051c5e7abd":"0x52d542804f1ce0000","0x3fb7d197b3ba4fe045efc23d50a14585f558d9b2":"0x1158e460913d00000","0x3fbc1e4518d73400c6d046359439fb68ea1a49f4":"0x3790bb8551376400000","0x3fbed6e7e0ca9c84fbe9ebcf9d4ef9bb49428165":"0x6c6b935b8bbd400000","0x3fd0bb47798cf44cdfbe4d333de637df4a00e45c":"0x56c5579f722140000","0x3fe40fbd919aad2818df01ee4df46c46842ac539":"0x14542ba12a337c00000","0x3fe801e61335c5140dc7eda2ef5204460a501230":"0x6c6b935b8bbd400000","0x3ff836b6f57b901b440c30e4dbd065cf37d3d48c":"0xad78ebc5ac6200000","0x3ffcb870d4023d255d5167d8a507cefc366b68ba":"0x23343c4354d2ac0000","0x401354a297952fa972ad383ca07a0a2811d74a71":"0xc249fdd327780000","0x4030a925706b2c101c8c5cb9bd05fbb4f6759b18":"0xd8d726b7177a800000","0x403145cb4ae7489fcc90cd985c6dc782b3cc4e44":"0x1453ff387b27cac0000","0x403220600a36f73f24e190d1edb2d61be3f41354":"0x107ad8f556c6c00000","0x4039bd50a2bde15ffe37191f410390962a2b8886":"0xad78ebc5ac6200000","0x403c64896a75cad816a9105e18d8aa5bf80f238e":"0x35659ef93f0fc40000","0x403d53cf620f0922b417848dee96c190b5bc8271":"0x215f835bc769da80000","0x404100db4c5d0eec557823b58343758bcc2c8083":"0x1158e460913d00000","0x4041374b0feef4792e4b33691fb86897a4ff560c":"0x13c9647e25a9940000","0x40467d80e74c35407b7db51789234615fea66818":"0x150894e849b3900000","0x40585200683a403901372912a89834aadcb55fdb":"0x6c6b935b8bbd400000","0x4058808816fdaa3a5fc98ed47cfae6c18315422e":"0xad4c8316a0b0c0000","0x405f596b94b947344c033ce2dcbff12e25b79784":"0x6c6b935b8bbd400000","0x40630024bd2c58d248edd8465617b2bf1647da0e":"0x3635c9adc5dea00000","0x40652360d6716dc55cf9aab21f3482f816cc2cbd":"0x21e19e0c9bab2400000","0x407295ebd94b48269c2d569c9b9af9aa05e83e5e":"0x21e19e0c9bab2400000","0x4073fa49b87117cb908cf1ab512da754a932d477":"0x6acb3df27e1f880000","0x408a69a40715e1b313e1354e600800a1e6dc02a5":"0x1e7b891cc92540000","0x409bd75085821c1de70cdc3b11ffc3d923c74010":"0xd8d726b7177a800000","0x409d5a962edeeebea178018c0f38b9cdb213f289":"0x1158e460913d00000","0x40a331195b977325c2aa28fa2f42cb25ec3c253c":"0x6c6b935b8bbd400000","0x40a7f72867a7dc86770b162b7557a434ed50cce9":"0x3635c9adc5dea00000","0x40ab0a3e83d0c8ac9366910520eab1772bac3b1a":"0x34f10c2dc05e7c0000","0x40ab66fe213ea56c3afb12c75be33f8e32fd085d":"0xd8d726b7177a800000","0x40ad74bc0bce2a45e52f36c3debb1b3ada1b7619":"0x170162de109c6580000","0x40cf890591eae4a18f812a2954cb295f633327e6":"0x29bf736fc591a0000","0x40cf90ef5b768c5da585002ccbe6617650d8e837":"0x36330322d5238c0000","0x40d45d9d7625d15156c932b771ca7b0527130958":"0x152d02c7e14af6800000","0x40db1ba585ce34531edec5494849391381e6ccd3":"0x61093d7c2c6d380000","0x40df495ecf3f8b4cef2a6c189957248fe884bc2b":"0x28a857425466f800000","0x40e0dbf3efef9084ea1cd7e503f40b3b4a8443f6":"0xd8d726b7177a800000","0x40e2440ae142c880366a12c6d4102f4b8434b62a":"0x3635c9adc5dea00000","0x40e3c283f7e24de0410c121bee60a5607f3e29a6":"0x3635c9adc5dea00000","0x40ea5044b204b23076b1a5803bf1d30c0f88871a":"0x2f6f10780d22cc00000","0x40eddb448d690ed72e05c225d34fc8350fa1e4c5":"0x17b7883c06916600000","0x40f4f4c06c732cd35b119b893b127e7d9d0771e4":"0x21e19e0c9bab2400000","0x41010fc8baf8437d17a04369809a168a17ca56fb":"0x56bc75e2d63100000","0x4103299671d46763978fa4aa19ee34b1fc952784":"0xad78ebc5ac6200000","0x41033c1b6d05e1ca89b0948fc64453fbe87ab25e":"0x487a9a304539440000","0x41098a81452317c19e3eef0bd123bbe178e9e9ca":"0x97c9ce4cf6d5c00000","0x411610b178d5617dfab934d293f512a93e5c10e1":"0x93739534d28680000","0x411c831cc6f44f1965ec5757ab4e5b3ca4cffd1f":"0x170a0f5040e5040000","0x412a68f6c645559cc977fc4964047a201d1bb0e2":"0xa968163f0a57b400000","0x413f4b02669ccff6806bc826fcb7deca3b0ea9bc":"0x1158e460913d00000","0x414599092e879ae25372a84d735af5c4e510cd6d":"0x15af1d78b58c400000","0x41485612d03446ec4c05e5244e563f1cbae0f197":"0x34957444b840e80000","0x415d096ab06293183f3c033d25f6cf7178ac3bc7":"0x22b1c8c1227a00000","0x4166fc08ca85f766fde831460e9dc93c0e21aa6c":"0x3635c9adc5dea00000","0x416784af609630b070d49a8bcd12235c6428a408":"0x43c33c1937564800000","0x4167cd48e733418e8f99ffd134121c4a4ab278c4":"0xc55325ca7415e00000","0x416c86b72083d1f8907d84efd2d2d783dffa3efb":"0x6c6acc67d7b1d40000","0x4173419d5c9f6329551dc4d3d0ceac1b701b869e":"0x4c53ecdc18a600000","0x4174fa1bc12a3b7183cbabb77a0b59557ba5f1db":"0x6c6b935b8bbd400000","0x41786a10d447f484d33244ccb7facd8b427b5b8c":"0x3635c9adc5dea00000","0x417a3cd19496530a6d4204c3b5a17ce0f207b1a5":"0x1b1ae4d6e2ef5000000","0x417e4e2688b1fd66d821529e46ed4f42f8b3db3d":"0x6c6b935b8bbd400000","0x419a71a36c11d105e0f2aef5a3e598078e85c80b":"0x10f0cf064dd59200000","0x419bde7316cc1ed295c885ace342c79bf7ee33ea":"0x14542ba12a337c00000","0x41a2f2e6ecb86394ec0e338c0fc97e9c5583ded2":"0x6cee06ddbe15ec0000","0x41a8c2830081b102df6e0131657c07ab635b54ce":"0x6c6acc67d7b1d40000","0x41a8e236a30e6d63c1ff644d132aa25c89537e01":"0x1158e460913d00000","0x41a9a404fc9f5bfee48ec265b12523338e29a8bf":"0x150894e849b3900000","0x41ad369f758fef38a19aa3149379832c818ef2a0":"0x36369ed7747d260000","0x41b2d34fde0b1029262b4172c81c1590405b03ae":"0x3635c9adc5dea00000","0x41b2dbd79dda9b864f6a7030275419c39d3efd3b":"0xad78ebc5ac62000000","0x41c3c2367534d13ba2b33f185cdbe6ac43c2fa31":"0xd8d726b7177a800000","0x41cb9896445f70a10a14215296daf614e32cf4d5":"0x678a932062e4180000","0x41ce79950935cff55bf78e4ccec2fe631785db95":"0x6c6b935b8bbd400000","0x41d3b731a326e76858baa5f4bd89b57b36932343":"0x155bd9307f9fe80000","0x41e4a20275e39bdcefeb655c0322744b765140c2":"0x21e19e0c9bab2400000","0x41ed2d8e7081482c919fc23d8f0091b3c82c4685":"0x463a1e765bd78a0000","0x41f27e744bd29de2b0598f02a0bb9f98e681eaa4":"0x1a4aba225c207400000","0x41f489a1ec747bc29c3e5f9d8db97877d4d1b4e9":"0x73f75d1a085ba0000","0x420fb86e7d2b51401fc5e8c72015decb4ef8fc2e":"0x3635c9adc5dea00000","0x421684baa9c0b4b5f55338e6f6e7c8e146d41cb7":"0x5150ae84a8cdf00000","0x42399659aca6a5a863ea2245c933fe9a35b7880e":"0x6ece32c26c82700000","0x423bca47abc00c7057e3ad34fca63e375fbd8b4a":"0x3cfc82e37e9a7400000","0x423c3107f4bace414e499c64390a51f74615ca5e":"0x6c6b935b8bbd400000","0x423cc4594cf4abb6368de59fd2b1230734612143":"0x6c6b935b8bbd400000","0x4244f1331158b9ce26bbe0b9236b9203ca351434":"0x21e19e0c9bab2400000","0x425177eb74ad0a9d9a5752228147ee6d6356a6e6":"0xb98bc829a6f90000","0x425725c0f08f0811f5f006eec91c5c5c126b12ae":"0x821ab0d4414980000","0x4258fd662fc4ce3295f0d4ed8f7bb1449600a0a9":"0x16c452ed6088ad80000","0x425c1816868f7777cc2ba6c6d28c9e1e796c52b3":"0x21e19e0c9bab2400000","0x425c338a1325e3a1578efa299e57d986eb474f81":"0x6c6b935b8bbd400000","0x426259b0a756701a8b663528522156c0288f0f24":"0x218ae196b8d4f300000","0x426d15f407a01135b13a6b72f8f2520b3531e302":"0x1158e460913d00000","0x426f78f70db259ac8534145b2934f4ef1098b5d8":"0x138400eca364a00000","0x42732d8ef49ffda04b19780fd3c18469fb374106":"0x170b00e5e4a9be0000","0x427417bd16b1b3d22dbb902d8f9657016f24a61c":"0x6c6b935b8bbd400000","0x42746aeea14f27beff0c0da64253f1e7971890a0":"0x54069233bf7f780000","0x427b462ab84e5091f48a46eb0cdc92ddcb26e078":"0x6c6b935b8bbd400000","0x427e4751c3babe78cff8830886febc10f9908d74":"0x6acb3df27e1f880000","0x427ec668ac9404e895cc861511d1620a4912be98":"0x878678326eac9000000","0x4280a58f8bb10b9440de94f42b4f592120820191":"0x6c6b935b8bbd400000","0x428a1ee0ed331d7952ccbe1c7974b2852bd1938a":"0x77b74a4e8de5650000","0x429c06b487e8546abdfc958a25a3f0fba53f6f00":"0xbb644af542198000","0x42a98bf16027ce589c4ed2c95831e2724205064e":"0x21e19e0c9bab2400000","0x42c6edc515d35557808d13cd44dcc4400b2504e4":"0xaba14c59ba7320000","0x42cecfd2921079c2d7df3f08b07aa3beee5e219a":"0x3635c9adc5dea00000","0x42d1a6399b3016a8597f8b640927b8afbce4b215":"0xa18bcec34888100000","0x42d34940edd2e7005d46e2188e4cfece8311d74d":"0x890b0c2e14fb80000","0x42d3a5a901f2f6bd9356f112a70180e5a1550b60":"0x3224f42723d4540000","0x42d6b263d9e9f4116c411424fc9955783c763030":"0x6c6b935b8bbd400000","0x42db0b902559e04087dd5c441bc7611934184b89":"0x6d33b17d253a620000","0x42ddd014dc52bfbcc555325a40b516f4866a1dd3":"0x6c6b935b8bbd400000","0x4319263f75402c0b5325f263be4a5080651087f0":"0x354b0f14631bab0000","0x431f2c19e316b044a4b3e61a0c6ff8c104a1a12f":"0x3635c9adc5dea00000","0x43227d65334e691cf231b4a4e1d339b95d598afb":"0x21e19e0c9bab2400000","0x432809a2390f07c665921ff37d547d12f1c9966a":"0x65a4da25d3016c00000","0x4329fc0931cbeb033880fe4c9398ca45b0e2d11a":"0x6c7120716d33680000","0x432d884bd69db1acc0d89c64ade4cb4fc3a88b7a":"0x869a8c10808eec0000","0x4331ab3747d35720a9d8ca25165cd285acd4bda8":"0x6c6b935b8bbd400000","0x433a3b68e56b0df1862b90586bbd39c840ff1936":"0x6c6b935b8bbd400000","0x433e3ba1c51b810fc467d5ba4dea42f7a9885e69":"0x878678326eac9000000","0x433eb94a339086ed12d9bde9cd1d458603c97dd6":"0x152d02c7e14af6800000","0x4349225a62f70aea480a029915a01e5379e64fa5":"0x8cd67e2334c0d80000","0x4354221e62dc09e6406436163a185ef06d114a81":"0x6c6b935b8bbd400000","0x435443b81dfdb9bd8c6787bc2518e2d47e57c15f":"0x1438d9397881ef20000","0x4361d4846fafb377b6c0ee49a596a78ddf3516a3":"0xc2127af858da700000","0x4364309a9fa07095600f79edc65120cdcd23dc64":"0x21e19e0c9bab2400000","0x4367ae4b0ce964f4a54afd4b5c368496db169e9a":"0x6c6b935b8bbd400000","0x43748928e8c3ec4436a1d092fbe43ac749be1251":"0x15af1d78b58c400000","0x43767bf7fd2af95b72e9312da9443cb1688e4343":"0x1043561a8829300000","0x437983388ab59a4ffc215f8e8269461029c3f1c1":"0x43c33c1937564800000","0x43898c49a34d509bfed4f76041ee91caf3aa6aa5":"0x1043561a8829300000","0x438c2f54ff8e629bab36b1442b760b12a88f02ae":"0x6c6b935b8bbd400000","0x4398628ea6632d393e929cbd928464c568aa4a0c":"0x4be4e7267b6ae00000","0x439d2f2f5110a4d58b1757935015408740fec7f8":"0xcfa5c5150f4c888000","0x439dee3f7679ff1030733f9340c096686b49390b":"0x6c6b935b8bbd400000","0x43b079baf0727999e66bf743d5bcbf776c3b0922":"0x6c6b935b8bbd400000","0x43bc2d4ddcd6583be2c7bc094b28fb72e62ba83b":"0x6c6b935b8bbd400000","0x43c7ebc5b3e7af16f47dc5617ab10e0f39b4afbb":"0x678a932062e4180000","0x43cb9652818c6f4d6796b0e89409306c79db6349":"0x6c6b935b8bbd400000","0x43cc08d0732aa58adef7619bed46558ad7774173":"0xf0e7dcb0122a8f0000","0x43d5a71ce8b8f8ae02b2eaf8eaf2ca2840b93fb6":"0x14542ba12a337c00000","0x43db7ff95a086d28ebbfb82fb8fb5f230a5ebccd":"0xdf6eb0b2d3ca0000","0x43e7ec846358d7d0f937ad1c350ba069d7bf72bf":"0x670ae629214680000","0x43f16f1e75c3c06a9478e8c597a40a3cb0bf04cc":"0x9df7dfa8f760480000","0x43f470ed659e2991c375957e5ddec5bd1d382231":"0x56bc75e2d63100000","0x43f7e86e381ec51ec4906d1476cba97a3db584e4":"0x3635c9adc5dea00000","0x43ff38743ed0cd43308c066509cc8e7e72c862aa":"0x692ae8897081d00000","0x43ff8853e98ed8406b95000ada848362d6a0392a":"0x4ae0b1c4d2e84d00000","0x44098866a69b68c0b6bc168229b9603587058967":"0xa31062beeed700000","0x4419ac618d5dea7cdc6077206fb07dbdd71c1702":"0xd8d726b7177a800000","0x441a52001661fac718b2d7b351b7c6fb521a7afd":"0x15af1d78b58c400000","0x441aca82631324acbfa2468bda325bbd78477bbf":"0x14542ba12a337c00000","0x441f37e8a029fd02482f289c49b5d06d00e408a4":"0x1211ecb56d13488000","0x4420aa35465be617ad2498f370de0a3cc4d230af":"0x6c6b935b8bbd400000","0x44232ff66ddad1fd841266380036afd7cf7d7f42":"0xad78ebc5ac6200000","0x44250d476e062484e9080a3967bf3a4a732ad73f":"0x1158e460913d00000","0x4429a29fee198450672c0c1d073162250bec6474":"0x362aaf8202f2500000","0x44355253b27748e3f34fe9cae1fb718c8f249529":"0xad78ebc5ac6200000","0x4438e880cb2766b0c1ceaec9d2418fceb952a044":"0x73fa073903f080000","0x444caf79b71338ee9aa7c733b02acaa7dc025948":"0x22b1c8c1227a00000","0x445cb8de5e3df520b499efc980f52bff40f55c76":"0x6c6b935b8bbd400000","0x446a8039cecf9dce4879cbcaf3493bf545a88610":"0x17b7883c06916600000","0x4474299d0ee090dc90789a1486489c3d0d645e6d":"0x3635c9adc5dea00000","0x448bf410ad9bbc2fecc4508d87a7fc2e4b8561ad":"0xad6eedd17cf3b8000","0x44901e0d0e08ac3d5e95b8ec9d5e0ff5f12e0393":"0x16a1f9f5fd7d960000","0x4493123c021ece3b33b1a452c9268de14007f9d3":"0x16a6502f15a1e540000","0x449ac4fbe383e36738855e364a57f471b2bfa131":"0x29b76432b94451200000","0x44a01fb04ac0db2cce5dbe281e1c46e28b39d878":"0x6c6acc67d7b1d40000","0x44a63d18424587b9b307bfc3c364ae10cd04c713":"0x1158e460913d00000","0x44a8989e32308121f72466978db395d1f76c3a4b":"0x18850299f42b06a0000","0x44c1110b18870ec81178d93d215838c551d48e64":"0xad6f98593bd8f0000","0x44c14765127cde11fab46c5d2cf4d4b2890023fd":"0x6c6b935b8bbd400000","0x44c54eaa8ac940f9e80f1e74e82fc14f1676856a":"0x1ab2cf7c9f87e200000","0x44cd77535a893fa7c4d5eb3a240e79d099a72d2d":"0x2c73c937742c500000","0x44dfba50b829becc5f4f14d1b04aab3320a295e5":"0x3635c9adc5dea00000","0x44e2fdc679e6bee01e93ef4a3ab1bcce012abc7c":"0x163d194900c5458000","0x44f62f2aaabc29ad3a6b04e1ff6f9ce452d1c140":"0x39992648a23c8a00000","0x44fff37be01a3888d3b8b8e18880a7ddefeeead3":"0xe0c5bfc7dae9a8000","0x4506fe19fa4b006baa3984529d8516db2b2b50ab":"0x6c6b935b8bbd400000","0x451b3699475bed5d7905f8905aa3456f1ed788fc":"0x8ac7230489e8000000","0x451b7070259bdba27100e36e23428a53dfe304e9":"0xb98bc829a6f90000","0x45272b8f62e9f9fa8ce04420e1aea3eba9686eac":"0xd8d726b7177a800000","0x452b64db8ef7d6df87c788639c2290be8482d575":"0x1b1ae4d6e2ef5000000","0x453e359a3397944c5a275ab1a2f70a5e5a3f6989":"0xd02ab486cedc00000","0x4549b15979255f7e65e99b0d5604db98dfcac8bf":"0xd8d726b7177a800000","0x454b61b344c0ef965179238155f277c3829d0b38":"0x6c6b935b8bbd400000","0x454f0141d721d33cbdc41018bd01119aa4784818":"0x14542ba12a337c00000","0x45533390e340fe0de3b3cf5fb9fc8ea552e29e62":"0x4f2591f896a6500000","0x455396a4bbd9bae8af9fb7c4d64d471db9c24505":"0x8ba52e6fc45e40000","0x455b9296921a74d1fc41617f43b8303e6f3ed76c":"0xe3aeb5737240a00000","0x455cb8ee39ffbc752331e5aefc588ef0ee593454":"0x3635463a780def8000","0x456ae0aca48ebcfae166060250525f63965e760f":"0x1043561a8829300000","0x456f8d746682b224679349064d1b368c7c05b176":"0xc893d09c8f51500000","0x457029c469c4548d168cec3e65872e4428d42b67":"0x6c6b935b8bbd400000","0x4571de672b9904bad8743692c21c4fdcea4c2e01":"0xd8d726b7177a800000","0x45781bbe7714a1c8f73b1c747921df4f84278b70":"0x6c6b935b8bbd400000","0x457bcef37dd3d60b2dd019e3fe61d46b3f1e7252":"0x1158e460913d00000","0x458e3cc99e947844a18e6a42918fef7e7f5f5eb3":"0x7b53f79e888dac00000","0x459393d63a063ef3721e16bd9fde45ee9dbd77fb":"0x6abad6a3c153050000","0x45a570dcc2090c86a6b3ea29a60863dde41f13b5":"0xc9a95ee2986520000","0x45a820a0672f17dc74a08112bc643fd1167736c3":"0xad6c43b2815ed8000","0x45b47105fe42c4712dce6e2a21c05bffd5ea47a9":"0x6c6b935b8bbd400000","0x45bb829652d8bfb58b8527f0ecb621c29e212ec3":"0x6c6b935b8bbd400000","0x45c0d19f0b8e054f9e893836d5ecae7901af2812":"0x10f0cf064dd59200000","0x45c4ecb4ee891ea984a7c5cefd8dfb00310b2850":"0x6b56051582a9700000","0x45ca8d956608f9e00a2f9974028640888465668f":"0x6c6b935b8bbd400000","0x45ca9862003b4e40a3171fb5cafa9028cac8de19":"0x2eb8eb1a172dcb80000","0x45d1c9eedf7cab41a779057b79395f5428d80528":"0x6c6b935b8bbd400000","0x45d4b54d37a8cf599821235f062fa9d170ede8a4":"0x1190673b5fda900000","0x45db03bccfd6a5f4d0266b82a22a368792c77d83":"0x1b1ae4d6e2ef5000000","0x45e3a93e72144ada860cbc56ff85145ada38c6da":"0x57473d05dabae80000","0x45e68db8dbbaba5fc2cb337c62bcd0d61b059189":"0x6c6b935b8bbd400000","0x45e68db94c7d0ab7ac41857a71d67147870f4e71":"0x54b40b1f852bda000000","0x45f4fc60f08eaca10598f0336329801e3c92cb46":"0xad78ebc5ac6200000","0x460d5355b2ceeb6e62107d81e51270b26bf45620":"0x6cb7e74867d5e60000","0x46224f32f4ece5c8867090d4409d55e50b18432d":"0x14542ba12a337c00000","0x4627c606842671abde8295ee5dd94c7f549534f4":"0xf895fbd8732f40000","0x462b678b51b584f3ed7ada070b5cd99c0bf7b87f":"0x56bc75e2d63100000","0x464d9c89cce484df000277198ed8075fa63572d1":"0x1158e460913d00000","0x46504e6a215ac83bccf956befc82ab5a679371c8":"0x1c212805c2b4a50000","0x4651dc420e08c3293b27d2497890eb50223ae2f4":"0x43c33c1937564800000","0x46531e8b1bde097fdf849d6d119885608a008df7":"0xad78ebc5ac6200000","0x466292f0e80d43a78774277590a9eb45961214f4":"0x34957444b840e80000","0x4662a1765ee921842ddc88898d1dc8627597bd7e":"0x21e19e0c9bab2400000","0x4665e47396c7db97eb2a03d90863d5d4ba319a94":"0x2086ac351052600000","0x466fda6b9b58c5532750306a10a2a8c768103b07":"0xad6eedd17cf3b8000","0x467124ae7f452f26b3d574f6088894fa5d1cfb3b":"0x925e06eec972b00000","0x46722a36a01e841d03f780935e917d85d5a67abd":"0xcec76f0e71520000","0x46779a5656ff00d73eac3ad0c38b6c853094fb40":"0xc8253c96c6af00000","0x4677b04e0343a32131fd6abb39b1b6156bba3d5b":"0xad78ebc5ac6200000","0x467d5988249a68614716659840ed0ae6f6f457bc":"0x1501a48cefdfde0000","0x467e0ed54f3b76ae0636176e07420815a021736e":"0x6c6b935b8bbd400000","0x467ea10445827ef1e502daf76b928a209e0d4032":"0x6c6b935b8bbd400000","0x467fbf41441600757fe15830c8cd5f4ffbbbd560":"0x21e19e0c9bab2400000","0x469358709332c82b887e20bcddd0220f8edba7d0":"0x3a9d5baa4abf1d00000","0x4697baaf9ccb603fd30430689d435445e9c98bf5":"0xad201a6794ff80000","0x46a30b8a808931217445c3f5a93e882c0345b426":"0xd8db5ebd7b2638000","0x46a430a2d4a894a0d8aa3feac615361415c3f81f":"0x6c6b935b8bbd400000","0x46aa501870677e7f0a504876b4e8801a0ad01c46":"0x2b5e3af16b18800000","0x46bfc5b207eb2013e2e60f775fecd71810c5990c":"0x54069233bf7f780000","0x46c1aa2244b9c8a957ca8fac431b0595a3b86824":"0xd8d726b7177a800000","0x46d80631284203f6288ecd4e5758bb9d41d05dbe":"0x6c6b935b8bbd400000","0x470ac5d1f3efe28f3802af925b571e63868b397d":"0x6c6b935b8bbd400000","0x471010da492f4018833b088d9872901e06129174":"0x1b1ae4d6e2ef500000","0x4712540265cbeec3847022c59f1b318d43400a9e":"0xbdbc41e0348b300000","0x4714cfa4f46bd6bd70737d75878197e08f88e631":"0x27f3edfb34e6e400000","0x472048cc609aeb242165eaaa8705850cf3125de0":"0x3635c9adc5dea00000","0x47219229e8cd56659a65c2a943e2dd9a8f4bfd89":"0x52663ccab1e1c00000","0x4737d042dc6ae73ec73ae2517acea2fdd96487c5":"0x3635c9adc5dea00000","0x474158a1a9dc693c133f65e47b5c3ae2f773a86f":"0xada55474b81340000","0x4745ab181a36aa8cbf2289d0c45165bc7ebe2381":"0x222c8eb3ff6640000","0x475066f9ad26655196d5535327bbeb9b7929cb04":"0xa4cc799563c3800000","0x4752218e54de423f86c0501933917aea08c8fed5":"0x43c33c1937564800000","0x475a6193572d4a4e59d7be09cb960ddd8c530e2f":"0x242cf78cdf07ff8000","0x47648bed01f3cd3249084e635d14daa9e7ec3c8a":"0xa844a7424d9c80000","0x47688410ff25d654d72eb2bc06e4ad24f833b094":"0x8b28d61f3d3ac0000","0x476b5599089a3fb6f29c6c72e49b2e4740ea808d":"0x97c9ce4cf6d5c00000","0x47730f5f8ebf89ac72ef80e46c12195038ecdc49":"0xab4dcf399a3a600000","0x477b24eee8839e4fd19d1250bd0b6645794a61ca":"0x1b1ae4d6e2ef5000000","0x4781a10a4df5eebc82f4cfe107ba1d8a7640bd66":"0x61093d7c2c6d380000","0x47885ababedf4d928e1c3c71d7ca40d563ed595f":"0x62a992e53a0af00000","0x478dc09a1311377c093f9cc8ae74111f65f82f39":"0xd8d726b7177a800000","0x478e524ef2a381d70c82588a93ca7a5fa9d51cbf":"0x35fa97226f8899700000","0x479298a9de147e63a1c7d6d2fce089c7e64083bd":"0x21e19dd3c3c0d798000","0x479abf2da4d58716fd973a0d13a75f530150260a":"0x1158e460913d00000","0x47a281dff64167197855bf6e705eb9f2cef632ea":"0x3636c9796436740000","0x47beb20f759100542aa93d41118b3211d664920e":"0x6c6b935b8bbd400000","0x47c247f53b9fbeb17bba0703a00c009fdb0f6eae":"0x43c33c1937564800000","0x47c7e5efb48b3aed4b7c6e824b435f357df4c723":"0xfc936392801c0000","0x47cf9cdaf92fc999cc5efbb7203c61e4f1cdd4c3":"0x71f8a93d01e540000","0x47d20e6ae4cad3f829eac07e5ac97b66fdd56cf5":"0x3635c9adc5dea00000","0x47d792a756779aedf1343e8883a6619c6c281184":"0x6c6b935b8bbd400000","0x47e25df8822538a8596b28c637896b4d143c351d":"0x110be9eb24b881500000","0x47f4696bd462b20da09fb83ed2039818d77625b3":"0x813ca56906d340000","0x47fef58584465248a0810d60463ee93e5a6ee8d3":"0xf58cd3e1269160000","0x47ff6feb43212060bb1503d7a397fc08f4e70352":"0x6c6b935b8bbd400000","0x47fff42c678551d141eb75a6ee398117df3e4a8d":"0x56beae51fd2d10000","0x48010ef3b8e95e3f308f30a8cb7f4eb4bf60d965":"0x6c6b935b8bbd400000","0x480af52076009ca73781b70e43b95916a62203ab":"0x321972f4083d878000","0x480f31b989311e4124c6a7465f5a44094d36f9d0":"0x3790bb855137640000","0x481115296ab7db52492ff7b647d63329fb5cbc6b":"0x368c8623a8b4d100000","0x481e3a91bfdc2f1c8428a0119d03a41601417e1c":"0x3635c9adc5dea00000","0x4828e4cbe34e1510afb72c2beeac8a4513eaebd9":"0xd5967be4fc3f100000","0x482982ac1f1c6d1721feecd9b9c96cd949805055":"0x21e19e0c9bab2400000","0x48302c311ef8e5dc664158dd583c81194d6e0d58":"0xb6676ce0bccb5c0000","0x483ba99034e900e3aedf61499d3b2bce39beb7aa":"0x35659ef93f0fc40000","0x48548b4ba62bcb2f0d34a88dc69a680e539cf046":"0x56cf1cbbb74320000","0x4863849739265a63b0a2bf236a5913e6f959ce15":"0x52663ccab1e1c00000","0x48659d8f8c9a2fd44f68daa55d23a608fbe500dc":"0x6c6b935b8bbd400000","0x48669eb5a801d8b75fb6aa58c3451b7058c243bf":"0x68d42c138dab9f00000","0x486a6c8583a84484e3df43a123837f8c7e2317d0":"0x1187c571ab80450000","0x487adf7d70a6740f8d51cbdd68bb3f91c4a5ce68":"0x39fbae8d042dd0000","0x487e108502b0b189ef9c8c6da4d0db6261eec6c0":"0x678a932062e4180000","0x4888fb25cd50dbb9e048f41ca47d78b78a27c7d9":"0x3a9d5baa4abf1d00000","0x489334c2b695c8ee0794bd864217fb9fd8f8b135":"0xfc936392801c0000","0x48a30de1c919d3fd3180e97d5f2b2a9dbd964d2d":"0x2629f66e0c5300000","0x48bf14d7b1fc84ebf3c96be12f7bce01aa69b03e":"0x68155a43676e00000","0x48c2ee91a50756d8ce9abeeb7589d22c6fee5dfb":"0xae8e7a0bb575d00000","0x48c5c6970b9161bb1c7b7adfed9cdede8a1ba864":"0xd8d726b7177a800000","0x48d2434b7a7dbbff08223b6387b05da2e5093126":"0x3cfc82e37e9a7400000","0x48d4f2468f963fd79a006198bb67895d2d5aa4d3":"0x4be4e7267b6ae00000","0x48e0cbd67f18acdb7a6291e1254db32e0972737f":"0x56be03ca3e47d8000","0x48f60a35484fe7792bcc8a7b6393d0dda1f6b717":"0xc328093e61ee400000","0x48f883e567b436a27bb5a3124dbc84dec775a800":"0x29d76e869dcd800000","0x490145afa8b54522bb21f352f06da5a788fa8f1d":"0x1f46c62901a03fb0000","0x4909b31998ead414b8fb0e846bd5cbde393935be":"0xd8d726b7177a800000","0x4912d902931676ff39fc34fe3c3cc8fb2182fa7a":"0x1158e460913d00000","0x49136fe6e28b7453fcb16b6bbbe9aaacba8337fd":"0x6c6b935b8bbd400000","0x491561db8b6fafb9007e62d050c282e92c4b6bc8":"0x65a4da25d3016c00000","0x49185dd7c23632f46c759473ebae966008cd3598":"0xdc55fdb17647b0000","0x492cb5f861b187f9df21cd4485bed90b50ffe22d":"0x1b19e50b44977c0000","0x492de46aaf8f1d708d59d79af1d03ad2cb60902f":"0x6c6b935b8bbd400000","0x492e70f04d18408cb41e25603730506b35a2876b":"0x222c8eb3ff6640000","0x493a67fe23decc63b10dda75f3287695a81bd5ab":"0x2fb474098f67c00000","0x493d48bda015a9bfcf1603936eab68024ce551e0":"0x138a388a43c000000","0x494256e99b0f9cd6e5ebca3899863252900165c8":"0x2f6f10780d22cc00000","0x494dec4d5ee88a2771a815f1ee7264942fb58b28":"0x6c6b935b8bbd400000","0x495b641b1cdea362c3b4cbbd0f5cc50b1e176b9c":"0x3635c9adc5dea00000","0x4968a2cedb457555a139295aea28776e54003c87":"0x2231aefc9a6628f0000","0x496d365534530a5fc1577c0a5241cb88c4da7072":"0x61093d7c2c6d380000","0x496e319592b341eaccd778dda7c8196d54cac775":"0x1f5718987664b480000","0x496f5843f6d24cd98d255e4c23d1e1f023227545":"0x5f179fd4a6ee098000","0x4970d3acf72b5b1f32a7003cf102c64ee0547941":"0x1da56a4b0835bf800000","0x4977a7939d0939689455ce2639d0ee5a4cd910ed":"0x62a992e53a0af00000","0x4979194ec9e97db9bee8343b7c77d9d7f3f1dc9f":"0x1158e460913d00000","0x49793463e1681083d6abd6e725d5bba745dccde8":"0x1d98e94c4e471f0000","0x4981c5ff66cc4e9680251fc4cd2ff907cb327865":"0x28a857425466f80000","0x49897fe932bbb3154c95d3bce6d93b6d732904dd":"0xd8d726b7177a800000","0x4989e1ab5e7cd00746b3938ef0f0d064a2025ba5":"0x6c6b935b8bbd400000","0x498abdeb14c26b7b7234d70fceaef361a76dff72":"0xa2a15d09519be00000","0x49a645e0667dfd7b32d075cc2467dd8c680907c4":"0x70601958fcb9c0000","0x49b74e169265f01a89ec4c9072c5a4cd72e4e835":"0x368c8623a8b4d100000","0x49bdbc7ba5abebb6389e91a3285220d3451bd253":"0x3635c9adc5dea00000","0x49c941e0e5018726b7290fc473b471d41dae80d1":"0x1b1ae4d6e2ef500000","0x49c9771fca19d5b9d245c891f8158fe49f47a062":"0x21e19e0c9bab2400000","0x49cf1e54be363106b920729d2d0ba46f0867989a":"0xe873f44133cb00000","0x49d2c28ee9bc545eaaf7fd14c27c4073b4bb5f1a":"0x4fe9b806b40daf0000","0x49ddee902e1d0c99d1b11af3cc8a96f78e4dcf1a":"0xacea5e4c18c530000","0x49f028395b5a86c9e07f7778630e4c2e3d373a77":"0x6a74a5038db918000","0x4a192035e2619b24b0709d56590e9183ccf2c1d9":"0x21e19e0c9bab2400000","0x4a4053b31d0ee5dbafb1d06bd7ac7ff3222c47d6":"0x4be4e7267b6ae00000","0x4a430170152de5172633dd8262d107a0afd96a0f":"0xab4dcf399a3a600000","0x4a47fc3e177f567a1e3893e000e36bba23520ab8":"0x6c6b935b8bbd400000","0x4a52bad20357228faa1e996bed790c93674ba7d0":"0x487a9a304539440000","0x4a53dcdb56ce4cdce9f82ec0eb13d67352e7c88b":"0xe3aeb5737240a00000","0x4a5fae3b0372c230c125d6d470140337ab915656":"0x56bc75e2d631000000","0x4a719061f5285495b37b9d7ef8a51b07d6e6acac":"0xad4c8316a0b0c0000","0x4a73389298031b8816cca946421c199e18b343d6":"0x223868b879146f0000","0x4a735d224792376d331367c093d31c8794341582":"0x66ffcbfd5e5a300000","0x4a7494cce44855cc80582842be958a0d1c0072ee":"0x821ab0d44149800000","0x4a75c3d4fa6fccbd5dd5a703c15379a1e783e9b7":"0x62a992e53a0af00000","0x4a81abe4984c7c6bef63d69820e55743c61f201c":"0x36401004e9aa3470000","0x4a82694fa29d9e213202a1a209285df6e745c209":"0xd8d726b7177a800000","0x4a835c25824c47ecbfc79439bf3f5c3481aa75cd":"0x4be4e7267b6ae00000","0x4a918032439159bb315b6725b6830dc83697739f":"0x12a32ef678334c0000","0x4a97e8fcf4635ea7fc5e96ee51752ec388716b60":"0x1d9945ab2b03480000","0x4a9a26fd0a8ba10f977da4f77c31908dab4a8016":"0x61093d7c2c6d380000","0x4aa148c2c33401e66a2b586e6577c4b292d3f240":"0xbb860b285f7740000","0x4aa693b122f314482a47b11cc77c68a497876162":"0x6acb3df27e1f880000","0x4ab2d34f04834fbf7479649cab923d2c4725c553":"0xbed1d0263d9f000000","0x4ac07673e42f64c1a25ec2fa2d86e5aa2b34e039":"0x6c6b935b8bbd400000","0x4ac5acad000b8877214cb1ae00eac9a37d59a0fd":"0xd8d726b7177a800000","0x4ac9905a4cb6ab1cfd62546ee5917300b87c4fde":"0x3708baed3d68900000","0x4acfa9d94eda6625c9dfa5f9f4f5d107c4031fdf":"0x222c8eb3ff6640000","0x4ad047fae67ef162fe68fedbc27d3b65caf10c36":"0x6acb3df27e1f880000","0x4ad95d188d6464709add2555fb4d97fe1ebf311f":"0x12c1b6eed03d280000","0x4adbf4aae0e3ef44f7dd4d8985cfaf096ec48e98":"0x821ab0d4414980000","0x4ae2a04d3909ef454e544ccfd614bfefa71089ae":"0x1801159df1eef80000","0x4ae93082e45187c26160e66792f57fad3551c73a":"0x4961520daff82280000","0x4af0db077bb9ba5e443e21e148e59f379105c592":"0x2086ac351052600000","0x4b0619d9d8aa313a9531ac7dbe04ca0d6a5ad1b6":"0x6c6b935b8bbd400000","0x4b0bd8acfcbc53a6010b40d4d08ddd2d9d69622d":"0x243d4d18229ca20000","0x4b19eb0c354bc1393960eb06063b83926f0d67b2":"0x19274b259f6540000","0x4b29437c97b4a844be71cca3b648d4ca0fdd9ba4":"0x824719834cfac0000","0x4b31bf41abc75c9ae2cd8f7f35163b6e2b745054":"0x14b550a013c7380000","0x4b3a7cc3a7d7b00ed5282221a60259f25bf6538a":"0x3635c9adc5dea00000","0x4b3aab335ebbfaa870cc4d605e7d2e74c668369f":"0xcb49b44ba602d800000","0x4b3c7388cc76da3d62d40067dabccd7ef0433d23":"0x56cd55fc64dfe0000","0x4b3dfbdb454be5279a3b8addfd0ed1cd37a9420d":"0x6c6b935b8bbd400000","0x4b470f7ba030bc7cfcf338d4bf0432a91e2ea5ff":"0x6c6b935b8bbd400000","0x4b53ae59c784b6b5c43616b9a0809558e684e10c":"0x410d586a20a4c00000","0x4b58101f44f7e389e12d471d1635b71614fdd605":"0x8ac7230489e800000","0x4b5cdb1e428c91dd7cb54a6aed4571da054bfe52":"0x4c53ecdc18a600000","0x4b60a3e253bf38c8d5662010bb93a473c965c3e5":"0x50c5e761a444080000","0x4b74f5e58e2edf76daf70151964a0b8f1de0663c":"0x1190ae4944ba120000","0x4b762166dd1118e84369f804c75f9cd657bf730c":"0x1b1ae4d6e2ef500000","0x4b792e29683eb586e394bb33526c6001b397999e":"0x2086ac351052600000","0x4b904e934bd0cc8b20705f879e905b93ea0ccc30":"0x6c6b935b8bbd400000","0x4b9206ba6b549a1a7f969e1d5dba867539d1fa67":"0x1ab2cf7c9f87e200000","0x4b984ef26c576e815a2eaed2f5177f07dbb1c476":"0x54915956c409600000","0x4b9e068fc4680976e61504912985fd5ce94bab0d":"0x243d4d18229ca20000","0x4ba0d9e89601772b496847a2bb4340186787d265":"0x3635c9adc5dea00000","0x4ba53ab549e2016dfa223c9ed5a38fad91288d07":"0x4be4e7267b6ae00000","0x4ba8e0117fc0b6a3e56b24a3a58fe6cef442ff98":"0x131beb925ffd3200000","0x4bac846af4169f1d95431b341d8800b22180af1a":"0x1158e460913d00000","0x4bb6d86b8314c22d8d37ea516d0019f156aae12d":"0x3635c9adc5dea00000","0x4bb9655cfb2a36ea7c637a7b859b4a3154e26ebe":"0x3635c9adc5dea000000","0x4bbcbf38b3c90163a84b1cd2a93b58b2a3348d87":"0x1b1ae4d6e2ef5000000","0x4bd6dd0cff23400e1730ba7b894504577d14e74a":"0x2ba0ccddd0df73b00000","0x4be8628a8154874e048d80c142181022b180bcc1":"0x340aad21b3b700000","0x4be90d412129d5a4d0424361d6649d4e47a62316":"0x3708baed3d68900000","0x4bea288eea42c4955eb9faad2a9faf4783cbddac":"0x618be1663c4af490000","0x4bf4479799ef82eea20943374f56a1bf54001e5e":"0xd5967be4fc3f100000","0x4bf8bf1d35a231315764fc8001809a949294fc49":"0x39fbae8d042dd0000","0x4bf8e26f4c2790da6533a2ac9abac3c69a199433":"0xad78ebc5ac6200000","0x4c0aca508b3caf5ee028bc707dd1e800b838f453":"0xfc936392801c0000","0x4c0b1515dfced7a13e13ee12c0f523ae504f032b":"0xa968163f0a57b400000","0x4c13980c32dcf3920b78a4a7903312907c1b123f":"0x3410015faae0c0000","0x4c1579af3312e4f88ae93c68e9449c2e9a68d9c4":"0x6c6b935b8bbd400000","0x4c23b370fc992bb67cec06e26715b62f0b3a4ac3":"0x21e19e0c9bab2400000","0x4c24b78baf2bafc7fcc69016426be973e20a50b2":"0xa2a15d09519be00000","0x4c2f1afef7c5868c44832fc77cb03b55f89e6d6e":"0x43c33c1937564800000","0x4c377bb03ab52c4cb79befa1dd114982924c4ae9":"0x631603ccd38dd70000","0x4c3e95cc3957d252ce0bf0c87d5b4f2234672e70":"0x878678326eac900000","0x4c423c76930d07f93c47a5cc4f615745c45a9d72":"0x56bc75e2d63100000","0x4c45d4c9a725d11112bfcbca00bf31186ccaadb7":"0x15af1d78b58c400000","0x4c4e6f13fb5e3f70c3760262a03e317982691d10":"0x56bc75e2d63100000","0x4c5afe40f18ffc48d3a1aec41fc29de179f4d297":"0x6c6b935b8bbd400000","0x4c5b3dc0e2b9360f91289b1fe13ce12c0fbda3e1":"0x6c6b935b8bbd400000","0x4c666b86f1c5ee8ca41285f5bde4f79052081406":"0x1b1ae4d6e2ef500000","0x4c696be99f3a690440c3436a59a7d7e937d6ba0d":"0xbb9125542263900000","0x4c6a248fc97d705def495ca20759169ef0d36471":"0x29331e6558f0e00000","0x4c6a9dc2cab10abb2e7c137006f08fecb5b779e1":"0x1b0d04202f47ec0000","0x4c6b93a3bec16349540cbfcae96c9621d6645010":"0x6c6b935b8bbd400000","0x4c759813ad1386bed27ffae9e4815e3630cca312":"0x6c6b935b8bbd400000","0x4c760cd9e195ee4f2d6bce2500ff96da7c43ee91":"0xcb49b44ba602d800000","0x4c767b65fd91161f4fbdcc6a69e2f6ad711bb918":"0x270801d946c9400000","0x4c7e2e2b77ad0cd6f44acb2861f0fb8b28750ef9":"0x1158e460913d00000","0x4c85ed362f24f6b9f04cdfccd022ae535147cbb9":"0x5150ae84a8cdf00000","0x4c935bb250778b3c4c7f7e07fc251fa630314aab":"0x5150ae84a8cdf00000","0x4c997992036c5b433ac33d25a8ea1dc3d4e4e6d8":"0x1953b3d4ab1680000","0x4c99dae96481e807c1f99f8b7fbde29b7547c5bf":"0x821ab0d4414980000","0x4c9a862ad115d6c8274ed0b944bdd6a5500510a7":"0x56bc75e2d63100000","0x4ca783b556e5bf53aa13c8116613d65782c9b642":"0x5561840b4ad83c00000","0x4ca7b717d9bc8793b04e051a8d23e1640f5ba5e3":"0x43b514549ecf620000","0x4ca8db4a5efefc80f4cd9bbcccb03265931332b6":"0xad78ebc5ac6200000","0x4cac91fb83a147d2f76c3267984b910a79933348":"0x75792a8abdef7c0000","0x4cadf573ce4ceec78b8e1b21b0ed78eb113b2c0e":"0x6c6b935b8bbd400000","0x4cb5c6cd713ca447b848ae2f56b761ca14d7ad57":"0xe7eeba3410b740000","0x4cc22c9bc9ad05d875a397dbe847ed221c920c67":"0x6c6b935b8bbd400000","0x4cd0b0a6436362595ceade052ebc9b929fb6c6c0":"0x6c6b935b8bbd400000","0x4cda41dd533991290794e22ae324143e309b3d3d":"0x821ab0d44149800000","0x4cee901b4ac8b156c5e2f8a6f1bef572a7dceb7e":"0x3635c9adc5dea00000","0x4cefbe2398e47d52e78db4334c8b697675f193ae":"0xd96fce90cfabcc0000","0x4cf5537b85842f89cfee359eae500fc449d2118f":"0x3635c9adc5dea00000","0x4d08471d68007aff2ae279bc5e3fe4156fbbe3de":"0x878678326eac9000000","0x4d200110124008d56f76981256420c946a6ff45c":"0xad6eedd17cf3b8000","0x4d24b7ac47d2f27de90974ba3de5ead203544bcd":"0x56bc75e2d63100000","0x4d29fc523a2c1629532121da9998e9b5ab9d1b45":"0xdb44e049bb2c0000","0x4d38d90f83f4515c03cc78326a154d358bd882b7":"0xa076407d3f7440000","0x4d4cf5807429615e30cdface1e5aae4dad3055e6":"0x2086ac351052600000","0x4d57e716876c0c95ef5eaebd35c8f41b069b6bfe":"0x6c6b935b8bbd400000","0x4d67f2ab8599fef5fc413999aa01fd7fce70b43d":"0x21e19e0c9bab2400000","0x4d6e8fe109ccd2158e4db114132fe75fecc8be5b":"0x15b3557f1937f8000","0x4d71a6eb3d7f327e1834278e280b039eddd31c2f":"0x14542ba12a337c00000","0x4d7cfaa84cb33106800a8c802fb8aa463896c599":"0x61093d7c2c6d380000","0x4d801093c19ca9b8f342e33cc9c77bbd4c8312cf":"0x12b3e7fb95cda48000","0x4d828894752f6f25175daf2177094487954b6f9f":"0x4f212bc2c49c838000","0x4d82d7700c123bb919419bbaf046799c6b0e2c66":"0x43c33c1937564800000","0x4d836d9d3b0e2cbd4de050596faa490cffb60d5d":"0x1043561a8829300000","0x4d8697af0fbf2ca36e8768f4af22133570685a60":"0x1158e460913d00000","0x4d9279962029a8bd45639737e98b511eff074c21":"0x487a9a304539440000","0x4d93696fa24859f5d2939aebfa54b4b51ae1dccc":"0x10910d4cdc9f60000","0x4d9c77d0750c5e6fbc247f2fd79274686cb353d6":"0x1158e460913d00000","0x4da5edc688b0cb62e1403d1700d9dcb99ffe3fd3":"0x6c6b935b8bbd400000","0x4da8030769844bc34186b85cd4c7348849ff49e9":"0x21e19e0c9bab2400000","0x4db1c43a0f834d7d0478b8960767ec1ac44c9aeb":"0x2f5181305627370000","0x4db21284bcd4f787a7556500d6d7d8f36623cf35":"0x6928374f77a3630000","0x4dc3da13b2b4afd44f5d0d3189f444d4ddf91b1b":"0x6c6b935b8bbd400000","0x4dc4bf5e7589c47b28378d7503cf96488061dbbd":"0x5f68e8131ecf800000","0x4dc9d5bb4b19cecd94f19ec25d200ea72f25d7ed":"0x6c6b935b8bbd400000","0x4dcd11815818ae29b85d01367349a8a7fb12d06b":"0x1ac4286100191f00000","0x4dcf62a3de3f061db91498fd61060f1f6398ff73":"0x6c6acc67d7b1d40000","0x4dd131c74a068a37c90aded4f309c2409f6478d3":"0x15af39e4aab2740000","0x4ddda7586b2237b053a7f3289cf460dc57d37a09":"0x21e19e0c9bab2400000","0x4de3fe34a6fbf634c051997f47cc7f48791f5824":"0x6c5db2a4d815dc0000","0x4df140ba796585dd5489315bca4bba680adbb818":"0x90f534608a72880000","0x4e020779b5ddd3df228a00cb48c2fc979da6ae38":"0x6c6b935b8bbd400000","0x4e0bd32473c4c51bf25654def69f797c6b29a232":"0x56c95de8e8ca1d0000","0x4e2225a1bb59bc88a2316674d333b9b0afca6655":"0x8670e9ec6598c0000","0x4e2310191ead8d3bc6489873a5f0c2ec6b87e1be":"0x3635c9adc5dea00000","0x4e232d53b3e6be8f895361d31c34d4762b12c82e":"0x5f68e8131ecf800000","0x4e2bfa4a466f82671b800eee426ad00c071ba170":"0xd8d726b7177a800000","0x4e3edad4864dab64cae4c5417a76774053dc6432":"0x2008fb478cbfa98000","0x4e4318f5e13e824a54edfe30a7ed4f26cd3da504":"0x6c6b935b8bbd400000","0x4e5b77f9066159e615933f2dda7477fa4e47d648":"0xad78ebc5ac6200000","0x4e6600806289454acda330a2a3556010dfacade6":"0x14542ba12a337c00000","0x4e73cf2379f124860f73d6d91bf59acc5cfc845b":"0x22ca3587cf4eb0000","0x4e7aa67e12183ef9d7468ea28ad239c2eef71b76":"0x10afc1ade3b4ed40000","0x4e7b54474d01fefd388dfcd53b9f662624418a05":"0x1b1ae4d6e2ef5000000","0x4e892e8081bf36e488fddb3b2630f3f1e8da30d2":"0x28aba30752451fc0000","0x4e8a6d63489ccc10a57f885f96eb04ecbb546024":"0x3eae3130ecc96900000","0x4e8e47ae3b1ef50c9d54a38e14208c1abd3603c2":"0x7928db1276660c0000","0x4e90ccb13258acaa9f4febc0a34292f95991e230":"0xdb44e049bb2c0000","0x4ea56e1112641c038d0565a9c296c463afefc17e":"0x9ddc1e3b901180000","0x4ea70f04313fae65c3ff224a055c3d2dab28dddf":"0x43c30fb0884a96c0000","0x4eb1454b573805c8aca37edec7149a41f61202f4":"0x1043561a8829300000","0x4eb87ba8788eba0df87e5b9bd50a8e45368091c1":"0x1158e460913d00000","0x4ebc5629f9a6a66b2cf3363ac4895c0348e8bf87":"0x3637096c4bcc690000","0x4ec768295eeabafc42958415e22be216cde77618":"0x33b1dbc39c5480000","0x4ecc19948dd9cd87b4c7201ab48e758f28e7cc76":"0x1b1dab61d3aa640000","0x4ed14d81b60b23fb25054d8925dfa573dcae6168":"0x126e72a69a50d00000","0x4ee13c0d41200b46d19dee5c4bcec71d82bb8e38":"0x1abee13ccbeefaf8000","0x4eead40aad8c73ef08fc84bc0a92c9092f6a36bf":"0x1731790534df20000","0x4eebe80cb6f3ae5904f6f4b28d907f907189fcab":"0x6c6acc67d7b1d40000","0x4eebf1205d0cc20cee6c7f8ff3115f56d48fba26":"0x10d3aa536e2940000","0x4ef1c214633ad9c0703b4e2374a2e33e3e429291":"0x487a9a304539440000","0x4efcd9c79fb4334ca6247b0a33bd9cc33208e272":"0x487a9a304539440000","0x4f06246b8d4bd29661f43e93762201d286935ab1":"0x105394ffc4636110000","0x4f152b2fb8659d43776ebb1e81673aa84169be96":"0x6c6b935b8bbd400000","0x4f177f9d56953ded71a5611f393322c30279895c":"0xd55ef90a2da180000","0x4f1a2da54a4c6da19d142412e56e815741db2325":"0x56bc75e2d63100000","0x4f23b6b817ffa5c664acdad79bb7b726d30af0f9":"0x5f68e8131ecf800000","0x4f26690c992b7a312ab12e1385d94acd58288e7b":"0x2f6f10780d22cc00000","0x4f2b47e2775a1fa7178dad92985a5bbe493ba6d6":"0xad78ebc5ac6200000","0x4f3a4854911145ea01c644044bdb2e5a960a982f":"0xd8d726b7177a800000","0x4f3f2c673069ac97c2023607152981f5cd6063a0":"0x2086ac351052600000","0x4f4a9be10cd5d3fb5de48c17be296f895690645b":"0x878678326eac9000000","0x4f52ad6170d25b2a2e850eadbb52413ff2303e7f":"0xa4cc799563c3800000","0x4f5801b1eb30b712d8a0575a9a71ff965d4f34eb":"0x1043561a8829300000","0x4f5df5b94357de948604c51b7893cddf6076baad":"0xcbd47b6eaa8cc00000","0x4f64a85e8e9a40498c0c75fceb0337fb49083e5e":"0x3635c9adc5dea00000","0x4f67396d2553f998785f704e07a639197dd1948d":"0x104472521ba7380000","0x4f6d4737d7a940382487264886697cf7637f8015":"0x5a87e7d7f5f6580000","0x4f7330096f79ed264ee0127f5d30d2f73c52b3d8":"0x1b1a7a420ba00d0000","0x4f767bc8794aef9a0a38fea5c81f14694ff21a13":"0x1bc433f23f83140000","0x4f85bc1fc5cbc9c001e8f1372e07505370d8c71f":"0x32f51edbaaa3300000","0x4f88dfd01091a45a9e2676021e64286cd36b8d34":"0x3635c9adc5dea00000","0x4f8972838f70c903c9b6c6c46162e99d6216d451":"0xf9e89a0f2c56c80000","0x4f8ae80238e60008557075ab6afe0a7f2e74d729":"0x56bc75e2d63100000","0x4f8e8d274fb22a3fd36a47fe72980471544b3434":"0xad78ebc5ac6200000","0x4f9ce2af9b8c5e42c6808a3870ec576f313545d1":"0x21e19e0c9bab2400000","0x4fa3f32ef4086448b344d5f0a9890d1ce4d617c3":"0x5150ae84a8cdf00000","0x4fa554ab955c249217386a4d3263bbf72895434e":"0x1154e53217ddb0000","0x4fa983bb5e3073a8edb557effeb4f9fb1d60ef86":"0x56b9af57e575ec0000","0x4faf90b76ecfb9631bf9022176032d8b2c207009":"0x36363b5d9a77700000","0x4fc46c396e674869ad9481638f0013630c87caac":"0x3635c9adc5dea00000","0x4fcc19ea9f4c57dcbce893193cfb166aa914edc5":"0x17b8baa7f19546a0000","0x4fce8429ba49caa0369d1e494db57e89eab2ad39":"0x2a5a058fc295ed000000","0x4fdac1aa517007e0089430b3316a1badd12c01c7":"0x1b1ae4d6e2ef500000","0x4fe56ab3bae1b0a44433458333c4b05a248f8241":"0x762d93d1dd6f900000","0x4feb846be43041fd6b34202897943e3f21cb7f04":"0x482fe260cbca90000","0x4fee50c5f988206b09a573469fb1d0b42ebb6dce":"0x6cee06ddbe15ec0000","0x4ff676e27f681a982d8fd9d20e648b3dce05e945":"0x97c9ce4cf6d5c00000","0x4ff67fb87f6efba9279930cfbd1b7a343c79fade":"0x15af1d78b58c400000","0x5006fe4c22173980f00c74342b39cd231c653129":"0x6c6b935b8bbd400000","0x500c16352e901d48ba8d04e2c767121772790b02":"0x1a3a6824973098000","0x500c902958f6421594d1b6ded712490d52ed6c44":"0x6acb3df27e1f880000","0x500e34cde5bd9e2b71bb92d7cf55eee188d5fa0c":"0x121ea68c114e5100000","0x5032e4bcf7932b49fdba377b6f1499636513cfc3":"0x56bc75e2d63100000","0x50378af7ef54043f892ab7ce97d647793511b108":"0x11164759ffb320000","0x503bdbd8bc421c32a443032deb2e3e4cd5ba8b4e":"0x6c6b935b8bbd400000","0x504666ce8931175e11a5ed11c1dcaa06e57f4e66":"0x27f3edfb34e6e400000","0x50584d9206a46ce15c301117ee28f15c30e60e75":"0xb9f65d00f63c0000","0x505a33a18634dd4800693c67f48a1d693d4833f8":"0x18921b79941dcd00000","0x505e4f7c275588c533a20ebd2ac13b409bbdea3c":"0xf43fc2c04ee00000","0x5062e5134c612f12694dbd0e131d4ce197d1b6a4":"0x3635c9adc5dea00000","0x506411fd79003480f6f2b6aac26b7ba792f094b2":"0x1b1ae4d6e2ef500000","0x5067f4549afbfe884c59cbc12b96934923d45db0":"0x3635c9adc5dea00000","0x50763add868fd7361178342fc055eaa2b95f6846":"0x39f9046e0898f0000","0x508cf19119db70aa86454253da764a2cb1b2be1a":"0x3635c9adc5dea00000","0x509982f56237ee458951047e0a2230f804e2e895":"0x3b4ad496106b7f00000","0x509a20bc48e72be1cdaf9569c711e8648d957334":"0x6c6b935b8bbd400000","0x509c8668036d143fb8ae70b11995631f3dfcad87":"0x3635c9adc5dea00000","0x50ad187ab21167c2b6e78be0153f44504a07945e":"0x56cd55fc64dfe0000","0x50b9fef0a1329b02d16506255f5a2db71ec92d1f":"0x47da821564085c0000","0x50bb67c8b8d8bd0f63c4760904f2d333f400aace":"0x6c6b935b8bbd400000","0x50bef2756248f9a7a380f91b051ba3be28a649ed":"0x6c69f73e29134e0000","0x50ca86b5eb1d01874df8e5f34945d49c6c1ab848":"0x3635c9adc5dea00000","0x50cd97e9378b5cf18f173963236c9951ef7438a5":"0x4be4e7267b6ae00000","0x50dcbc27bcad984093a212a9b4178eabe9017561":"0x7e362790b5ca40000","0x50e13023bd9ca96ad4c53fdfd410cb6b1f420bdf":"0xad78ebc5ac6200000","0x50e1c8ec98415bef442618708799437b86e6c205":"0x14542ba12a337c00000","0x50f8fa4bb9e2677c990a4ee8ce70dd1523251e4f":"0x1693d23164f6b0000","0x50fb36c27107ee2ca9a3236e2746cca19ace6b49":"0x6c6b935b8bbd400000","0x50fef296955588caae74c62ec32a23a454e09ab8":"0x411dffabc507380000","0x5102a4a42077e11c58df4773e3ac944623a66d9f":"0x6c7015fd52ed408000","0x51039377eed0c573f986c5e8a95fb99a59e9330f":"0x6acb3df27e1f880000","0x5103bc09933e9921fd53dc536f11f05d0d47107d":"0xd8d726b7177a800000","0x5104ecc0e330dd1f81b58ac9dbb1a9fbf88a3c85":"0x152d02c7e14af6800000","0x510d8159cc945768c7450790ba073ec0d9f89e30":"0x8ac7230489e8000000","0x510eda5601499a0d5e1a006bfffd833672f2e267":"0x6c6b935b8bbd400000","0x51126446ab3d8032557e8eba65597d75fadc815c":"0x1174a5cdf88bc80000","0x5118557d600d05c2fcbf3806ffbd93d02025d730":"0x267d3ab6423f5800000","0x511e0efb04ac4e3ff2e6550e498295bfcd56ffd5":"0x243d4d18229ca20000","0x512116817ba9aaf843d1507c65a5ea640a7b9eec":"0x2b5e3af16b1880000","0x5126460d692c71c9af6f05574d93998368a23799":"0x2d1a51c7e00500000","0x51277fe7c81eebd252a03df69a6b9f326e272207":"0x3402e79cab44c8000","0x51296f5044270d17707646129c86aad1645eadc1":"0x487c72b310d4648000","0x512b91bbfaa9e581ef683fc90d9db22a8f49f48b":"0x41a522386d9b95c00000","0x5135fb8757600cf474546252f74dc0746d06262c":"0x6c6b935b8bbd400000","0x514632efbd642c04de6ca342315d40dd90a2dba6":"0x90f534608a72880000","0x514b7512c9ae5ea63cbf11715b63f21e18d296c1":"0x6c6acc67d7b1d40000","0x5153a0c3c8912881bf1c3501bf64b45649e48222":"0xd8d726b7177a800000","0x515651d6db4faf9ecd103a921bbbbe6ae970fdd4":"0x43c33c1937564800000","0x515f30bc90cdf4577ee47d65d785fbe2e837c6bc":"0x2271b5e018ba0580000","0x5160ed612e1b48e73f3fc15bc4321b8f23b8a24b":"0x1e826b422865d80000","0x5161fd49e847f67455f1c8bb7abb36e985260d03":"0x410d586a20a4c00000","0x516954025fca2608f47da81c215eedfd844a09ff":"0x14b550a013c7380000","0x5169c60aee4ceed1849ab36d664cff97061e8ea8":"0xa2a15d09519be00000","0x517c75430de401c341032686112790f46d4d369e":"0x150894e849b3900000","0x517cd7608e5d0d83a26b717f3603dac2277dc3a4":"0x6c6b935b8bbd400000","0x51865db148881951f51251710e82b9be0d7eadb2":"0x6c6b935b8bbd400000","0x51891b2ccdd2f5a44b2a8bc49a5d9bca6477251c":"0x10ce1d3d8cb3180000","0x518cef27b10582b6d14f69483ddaa0dd3c87bb5c":"0x2086ac351052600000","0x51a6d627f66a8923d88d6094c4715380d3057cb6":"0x3e73d27a35941e0000","0x51a8c2163602a32ee24cf4aa97fd9ea414516941":"0x368f7e6b8672c0000","0x51b4758e9e1450e7af4268c3c7b1e7bd6f5c7550":"0x3635c9adc5dea00000","0x51ca8bd4dc644fac47af675563d5804a0da21eeb":"0x2ab7b260ff3fd00000","0x51d24bc3736f88dd63b7222026886630b6eb878d":"0x6c6b935b8bbd400000","0x51d78b178d707e396e8710965c4f41b1a1d9179d":"0x5fee222041e340000","0x51e32f14f4ca5e287cdac057a7795ea9e0439953":"0x1b1ae4d6e2ef500000","0x51e43fe0d25c782860af81ea89dd793c13f0cbb1":"0x340aad21b3b700000","0x51e7b55c2f9820eed73884361b5066a59b6f45c6":"0x6c6b935b8bbd400000","0x51ea1c0934e3d04022ed9c95a087a150ef705e81":"0x1547081e7224d200000","0x51ee0cca3bcb10cd3e983722ced8493d926c0866":"0x36356633ebd8ea0000","0x51f4663ab44ff79345f427a0f6f8a6c8a53ff234":"0x43c33c1937564800000","0x51f55ef47e6456a418ab32b9221ed27dba6608ee":"0xe3aeb5737240a00000","0x51f9c432a4e59ac86282d6adab4c2eb8919160eb":"0x703b5b89c3a6e7400000","0x520f66a0e2657ff0ac4195f2f064cf2fa4b24250":"0x22b1c8c1227a00000","0x52102354a6aca95d8a2e86d5debda6de69346076":"0x6c6b935b8bbd400000","0x5213f459e078ad3ab95a0920239fcf1633dc04ca":"0x8cf2187c2afb188000","0x5215183b8f80a9bc03d26ce91207832a0d39e620":"0x3635c9adc5dea00000","0x52214378b54004056a7cc08c891327798ac6b248":"0x337fe5feaf2d1800000","0x522323aad71dbc96d85af90f084b99c3f09decb7":"0x14542ba12a337c00000","0x523e140dc811b186dee5d6c88bf68e90b8e096fd":"0x6c6b935b8bbd400000","0x523f6d64690fdacd942853591bb0ff20d3656d95":"0x62a992e53a0af00000","0x524fb210522c5e23bb67dfbf8c26aa616da49955":"0x363562a66d34238000","0x5255dc69155a45b970c604d30047e2f530690e7f":"0x1158e460913d00000","0x5260dc51ee07bddaababb9ee744b393c7f4793a6":"0x1d8665fa5fa4c0000","0x5267f4d41292f370863c90d793296903843625c7":"0x4be4e7267b6ae00000","0x526bb533b76e20c8ee1ebf123f1e9ff4148e40be":"0xaadec983fcff40000","0x526cb09ce3ada3672eec1deb46205be89a4b563e":"0x85ca615bf9c0100000","0x52738c90d860e04cb12f498d96fdb5bf36fc340e":"0x1a055690d9db80000","0x527a8ca1268633a6c939c5de1b929aee92aeac8d":"0x30ca024f987b900000","0x528101ce46b720a2214dcdae6618a53177ffa377":"0x1b9612b9dc01ae0000","0x5281733473e00d87f11e9955e589b59f4ac28e7a":"0x8bd62ff4eec559200000","0x5298ab182a19359ffcecafd7d1b5fa212dede6dd":"0x1158e460913d00000","0x529aa002c6962a3a8545027fd8b05f22b5bf9564":"0x5a87e7d7f5f6580000","0x529e824fa072582b4032683ac7eecc1c04b4cac1":"0x6c6b935b8bbd400000","0x52a5e4de4393eeccf0581ac11b52c683c76ea15d":"0x43c30fb0884a96c0000","0x52b4257cf41b6e28878d50d57b99914ffa89873a":"0xd50dc9aa2c41770000","0x52b8a9592634f7300b7c5c59a3345b835f01b95c":"0x6c6b935b8bbd400000","0x52bdd9af5978850bc24110718b3723759b437e59":"0x5dc892aa1131c80000","0x52cd20403ba7eda6bc307a3d63b5911b817c1263":"0x1158e460913d00000","0x52d380511df19d5ec2807bbcb676581b67fd37a3":"0xb9f65d00f63c0000","0x52e1731350f983cc2c4189842fde0613fad50ce1":"0x277017338a30ae00000","0x52e46783329a769301b175009d346768f4c87ee4":"0x6c6b935b8bbd400000","0x52f058d46147e9006d29bf2c09304ad1cddd6e15":"0x5150ae84a8cdf00000","0x52f15423323c24f19ae2ab673717229d3f747d9b":"0x37a034cbe8e3f38000","0x52f8b509fee1a874ab6f9d87367fbeaf15ac137f":"0x3635c9adc5dea00000","0x52fb46ac5d00c3518b2c3a1c177d442f8165555f":"0x5150ae84a8cdf00000","0x530077c9f7b907ff9cec0c77a41a70e9029add4a":"0x6c6b935b8bbd400000","0x530319db0a8f93e5bb7d4dbf4816314fbed8361b":"0x6c6b935b8bbd400000","0x53047dc8ac9083d90672e8b3473c100ccd278323":"0x22b1c8c1227a00000","0x530b61e42f39426d2408d40852b9e34ab5ebebc5":"0xe7eeba3410b740000","0x530ffac3bc3412e2ec0ea47b7981c770f5bb2f35":"0x73f75d1a085ba0000","0x5317ecb023052ca7f5652be2fa854cfe4563df4d":"0x1b1ab319f5ec750000","0x53194d8afa3e883502767edbc30586af33b114d3":"0x6c6b935b8bbd400000","0x532a7da0a5ad7407468d3be8e07e69c7dd64e861":"0x1b1ae4d6e2ef500000","0x532d32b00f305bcc24dcef56817d622f34fb2c24":"0x6194049f30f7200000","0x533444584082eba654e1ad30e149735c6f7ba922":"0x5dc892aa1131c80000","0x5338ef70eac9dd9af5a0503b5efad1039e67e725":"0x90f534608a72880000","0x53396f4a26c2b4604496306c5442e7fcba272e36":"0x43f2f08d40e5afc0000","0x533a73a4a2228eee05c4ffd718bbf3f9c1b129a7":"0x14542ba12a337c00000","0x533c06928f19d0a956cc28866bf6c8d8f4191a94":"0xfd8c14338e6300000","0x534065361cb854fac42bfb5c9fcde0604ac919da":"0x6c6b935b8bbd400000","0x53437fecf34ab9d435f4deb8ca181519e2592035":"0xa31062beeed700000","0x535201a0a1d73422801f55ded4dfaee4fbaa6e3b":"0x226211f7915428000","0x53608105ce4b9e11f86bf497ffca3b78967b5f96":"0x43c33c1937564800000","0x536e4d8029b73f5579dca33e70b24eba89e11d7e":"0x6acb3df27e1f880000","0x53700d53254d430f22781a4a76a463933b5d6b08":"0x6acb3df27e1f880000","0x537f9d4d31ef70839d84b0d9cdb72b9afedbdf35":"0xed2b525841adfc00000","0x5381448503c0c702542b1de7cc5fb5f6ab1cf6a5":"0x1b1ae4d6e2ef5000000","0x53942e7949d6788bb780a7e8a0792781b1614b84":"0x35deb46684f10c80000","0x5395a4455d95d178b4532aa4725b193ffe512961":"0x3635c9adc5dea00000","0x53989ed330563fd57dfec9bd343c3760b0799390":"0x150894e849b39000000","0x53a244672895480f4a2b1cdf7da5e5a242ec4dbc":"0x3635c9adc5dea00000","0x53a714f99fa00fef758e23a2e746326dad247ca7":"0x50c5e761a444080000","0x53af32c22fef99803f178cf90b802fb571c61cb9":"0xd255d112e103a00000","0x53c0bb7fc88ea422d2ef7e540e2d8f28b1bb8183":"0x1158e460913d00000","0x53c5fe0119e1e848640cee30adea96940f2a5d8b":"0x49ada5fa8c10c880000","0x53c9eca40973f63bb5927be0bc6a8a8be1951f74":"0x6c6b935b8bbd400000","0x53ce88e66c5af2f29bbd8f592a56a3d15f206c32":"0x7a28c31cc36040000","0x53cec6c88092f756efe56f7db11228a2db45b122":"0xd8d726b7177a800000","0x53e35b12231f19c3fd774c88fec8cbeedf1408b2":"0x1bc16d674ec8000000","0x53e4d9696dcb3f4d7b3f70dcaa4eecb71782ff5c":"0xad78ebc5ac6200000","0x53faf165be031ec18330d9fce5bd1281a1af08db":"0x796e3ea3f8ab00000","0x540a1819bd7c35861e791804e5fbb3bc97c9abb1":"0x4ed7dac64230200000","0x540c072802014ef0d561345aec481e8e11cb3570":"0x1b1ae4d6e2ef5000000","0x540cf23dd95c4d558a279d778d2b3735b3164191":"0x21e19e0c9bab2400000","0x541060fc58c750c40512f83369c0a63340c122b6":"0x6acb3df27e1f880000","0x5413c97ffa4a6e2a7bba8961dc9fce8530a787d7":"0x3635c9adc5dea00000","0x541db20a80cf3b17f1621f1b3ff79b882f50def3":"0x3635c9adc5dea00000","0x542e8096bafb88162606002e8c8a3ed19814aeac":"0x6c6b935b8bbd400000","0x54310b3aa88703a725dfa57de6e646935164802c":"0x678a932062e4180000","0x5431b1d18751b98fc9e2888ac7759f1535a2db47":"0x6c6b935b8bbd400000","0x5431ca427e6165a644bae326bd09750a178c650d":"0x6c6b935b8bbd400000","0x5435c6c1793317d32ce13bba4c4ffeb973b78adc":"0xd8e6b1c1285ef0000","0x543629c95cdef428ad37d453ca9538a9f90900ac":"0x92896529baddc880000","0x54391b4d176d476cea164e5fb535c69700cb2535":"0x56cd55fc64dfe0000","0x543a8c0efb8bcd15c543e2a6a4f807597631adef":"0x13f80e7e14f2d440000","0x543f8c674e2462d8d5daa0e80195a8708e11a29e":"0x37758833b3a7a0000","0x544b5b351d1bc82e9297439948cf4861dac9ae11":"0x4a89f54ef0121c00000","0x544dda421dc1eb73bb24e3e56a248013b87c0f44":"0x6acb3df27e1f880000","0x54575c3114751e3c631971da6a2a02fd3ffbfcc8":"0x692ae8897081d00000","0x545bb070e781172eb1608af7fc2895d6cb87197e":"0x79a5c17ec748900000","0x5475d7f174bdb1f789017c7c1705989646079d49":"0x1fd933494aa5fe00000","0x548558d08cfcb101181dac1eb6094b4e1a896fa6":"0x6c6acc67d7b1d40000","0x54939ff08921b467cf2946751d856378296c63ed":"0x3635c9adc5dea00000","0x549b47649cfad993e4064d2636a4baa0623305cc":"0x209d922f5259c50000","0x549d51af29f724c967f59423b85b2681e7b15136":"0xcbd47b6eaa8cc00000","0x54a1370116fe22099e015d07cd2669dd291cc9d1":"0x1158e460913d00000","0x54a62bf9233e146ffec3876e45f20ee8414adeba":"0x21e19e0c9bab2400000","0x54b4429b182f0377be7e626939c5db6440f75d7a":"0x6acb3df27e1f880000","0x54bcb8e7f73cda3d73f4d38b2d0847e600ba0df8":"0x3a70415882df180000","0x54c93e03a9b2e8e4c3672835a9ee76f9615bc14e":"0x10d3aa536e2940000","0x54ce88275956def5f9458e3b95decacd484021a0":"0x6c6b935b8bbd400000","0x54db5e06b4815d31cb56a8719ba33af2d73e7252":"0x24521e2a3017b80000","0x54e01283cc8b384538dd646770b357c960d6cacd":"0x10f0cf064dd59200000","0x54ec7300b81ac84333ed1b033cd5d7a33972e234":"0xad78ebc5ac6200000","0x54febcce20fe7a9098a755bd90988602a48c089e":"0x22b1c8c1227a000000","0x550aadae1221b07afea39fba2ed62e05e5b7b5f9":"0x1158e460913d00000","0x550c306f81ef5d9580c06cb1ab201b95c748a691":"0x2417d4c470bf140000","0x551999ddd205563327b9b530785acff9bc73a4ba":"0x14542ba12a337c00000","0x551e7784778ef8e048e495df49f2614f84a4f1dc":"0x2086ac351052600000","0x5529830a61c1f13c197e550beddfd6bd195c9d02":"0x21e19e0c9bab2400000","0x552987f0651b915b2e1e5328c121960d4bdd6af4":"0x61093d7c2c6d380000","0x553b6b1c57050e88cf0c31067b8d4cd1ff80cb09":"0x15af1d78b58c400000","0x553f37d92466550e9fd775ae74362df030179132":"0x6c6b935b8bbd400000","0x554336ee4ea155f9f24f87bca9ca72e253e12cd2":"0x56bc75e2d63100000","0x5543dd6d169eec8a213bbf7a8af9ffd15d4ff759":"0xfc936392801c0000","0x5547fdb4ae11953e01292b7807fa9223d0e4606a":"0x55d117dcb1d260000","0x5552f4b3ed3e1da79a2f78bb13e8ae5a68a9df3b":"0x3635c9adc5dea00000","0x555ca9f05cc134ab54ae9bea1c3ff87aa85198ca":"0x56bc75e2d63100000","0x555d8d3ce1798aca902754f164b8be2a02329c6c":"0x21e19e0c9bab2400000","0x555df19390c16d01298772bae8bc3a1152199cbd":"0xad78ebc5ac6200000","0x555ebe84daa42ba256ea789105cec4b693f12f18":"0x56bc75e2d63100000","0x557f5e65e0da33998219ad4e99570545b2a9d511":"0x2559cbb985842400000","0x558360206883dd1b6d4a59639e5629d0f0c675d0":"0x6c6b935b8bbd400000","0x5584423050e3c2051f0bbd8f44bd6dbc27ecb62c":"0xa2a15d09519be00000","0x55852943492970f8d629a15366cdda06a94f4513":"0x6c6b935b8bbd400000","0x55866486ec168f79dbe0e1abb18864d98991ae2c":"0xdf6eb0b2d3ca0000","0x558c54649a8a6e94722bd6d21d14714f71780534":"0x6c6b935b8bbd400000","0x559194304f14b1b93afe444f0624e053c23a0009":"0x15af1d78b58c400000","0x5593c9d4b664730fd93ca60151c25c2eaed93c3b":"0xad78ebc5ac6200000","0x559706c332d20779c45f8a6d046a699159b74921":"0x149b442e85a3cf8000","0x5598b3a79a48f32b1f5fc915b87b645d805d1afe":"0x1b1ae4d6e2ef500000","0x55a3df57b7aaec16a162fd5316f35bec082821cf":"0x6acb3df27e1f880000","0x55a4cac0cb8b582d9fef38c5c9fff9bd53093d1f":"0x6acb3df27e1f880000","0x55a61b109480b5b2c4fcfdef92d90584160c0d35":"0x26c564d2b53f60000","0x55aa5d313ebb084da0e7801091e29e92c5dec3aa":"0x6c6b935b8bbd400000","0x55ab99b0e0e55d7bb874b7cfe834de631c97ec23":"0x37e98ce36899e40000","0x55af092f94ba6a79918b0cf939eab3f01b3f51c7":"0x820d5e39576120000","0x55c564664166a1edf3913e0169f1cd451fdb5d0c":"0x8217ea49508e6c0000","0x55ca6abe79ea2497f46fdbb830346010fe469cbe":"0x1369fb96128ac480000","0x55caff4bba04d220c9a5d2018672ec85e31ef83e":"0x6c6b935b8bbd400000","0x55d057bcc04bd0f4af9642513aa5090bb3ff93fe":"0x3bfe452c8edd4c0000","0x55d42eb495bf46a634997b5f2ea362814918e2b0":"0x5c0d265b5b2a80000","0x55da9dcdca61cbfe1f133c7bcefc867b9c8122f9":"0x2fb474098f67c00000","0x55e220876262c218af4f56784798c7e55da09e91":"0x73d99c15645d30000","0x55fd08d18064bd202c0ec3d2cce0ce0b9d169c4d":"0x6acb3df27e1f880000","0x5600730a55f6b20ebd24811faa3de96d1662abab":"0x65ea3db75546600000","0x5603241eb8f08f721e348c9d9ad92f48e390aa24":"0xad78ebc5ac6200000","0x560536794a9e2b0049d10233c41adc5f418a264a":"0x3635c9adc5dea00000","0x5607590059a9fec1881149a44b36949aef85d560":"0x6c6b935b8bbd400000","0x560becdf52b71f3d8827d927610f1a980f33716f":"0x17474d705f56d08000","0x560da37e956d862f81a75fd580a7135c1b246352":"0x21e19e0c9bab2400000","0x560fc08d079f047ed8d7df75551aa53501f57013":"0x19bff2ff57968c00000","0x561be9299b3e6b3e63b79b09169d1a948ae6db01":"0x1b1ae4d6e2ef500000","0x562020e3ed792d2f1835fe5f55417d5111460c6a":"0x43c33c1937564800000","0x5620f46d1451c2353d6243a5d4b427130be2d407":"0x340aad21b3b700000","0x562105e82b099735de49f62692cc87cd38a8edcd":"0x14542ba12a337c00000","0x562a8dcbbeeef7b360685d27303bd69e094accf6":"0x21e19e0c9bab2400000","0x562bced38ab2ab6c080f3b0541b8456e70824b3f":"0x22ca3587cf4eb00000","0x562be95aba17c5371fe2ba828799b1f55d2177d6":"0x816d37e87b9d1e00000","0x562f16d79abfcec3943e34b20f05f97bdfcda605":"0xd8d726b7177a800000","0x56373daab46316fd7e1576c61e6affcb6559ddd7":"0xbac715d146c9e0000","0x56397638bb3cebf1f62062794b5eb942f916171d":"0x6c6b935b8bbd400000","0x563a03ab9c56b600f6d25b660c21e16335517a75":"0x3635c9adc5dea00000","0x563cb8803c1d32a25b27b64114852bd04d9c20cd":"0xb149ead0ad9d80000","0x56586391040c57eec6f5affd8cd4abde10b50acc":"0xd8d726b7177a800000","0x566c10d638e8b88b47d6e6a414497afdd00600d4":"0x56b394263a40c0000","0x566c28e34c3808d9766fe8421ebf4f2b1c4f7d77":"0x6acb3df27e1f880000","0x568df31856699bb5acfc1fe1d680df9960ca4359":"0x4acf5552f3b2498000","0x5691dd2f6745f20e22d2e1d1b955aa2903d65656":"0x6ac5c62d9486070000","0x56a1d60d40f57f308eebf087dee3b37f1e7c2cba":"0x3edcaec82d06f80000","0x56ac20d63bd803595cec036da7ed1dc66e0a9e07":"0x3772a53ccdc658000","0x56b6c23dd2ec90b4728f3bb2e764c3c50c85f144":"0x3635c9adc5dea00000","0x56df05bad46c3f00ae476ecf017bb8c877383ff1":"0xab15daaef70400000","0x56ee197f4bbf9f1b0662e41c2bbd9aa1f799e846":"0x3635c9adc5dea00000","0x56f493a3d108aaa2d18d98922f8efe1662cfb73d":"0x6d8121a194d1100000","0x56fc1a7bad4047237ce116146296238e078f93ad":"0x9a63f08ea63880000","0x56febf9e1003af15b1bd4907ec089a4a1b91d268":"0xad78ebc5ac6200000","0x5717cc9301511d4a81b9f583148beed3d3cc8309":"0x8cf23f909c0fa00000","0x5717f2d8f18ffcc0e5fe247d3a4219037c3a649c":"0xd8bb6549b02bb80000","0x571950ea2c90c1427d939d61b4f2de4cf1cfbfb0":"0x1158e460913d00000","0x5719f49b720da68856f4b9e708f25645bdbc4b41":"0x22b1c8c1227a000000","0x572ac1aba0de23ae41a7cae1dc0842d8abfc103b":"0x678a932062e4180000","0x572dd8cd3fe399d1d0ec281231b7cefc20b9e4bb":"0x233c8fe42703e800000","0x574921838cc77d6c98b17d903a3ae0ee0da95bd0":"0xb5328178ad0f2a00000","0x574ad9355390e4889ef42acd138b2a27e78c00ae":"0x5467b732a913340000","0x574de1b3f38d915846ae3718564a5ada20c2f3ed":"0xd8d726b7177a800000","0x575c00c2818210c28555a0ff29010289d3f82309":"0x21e19e0c9bab2400000","0x5773b6026721a1dd04b7828cd62b591bfb34534c":"0x5b7ac4553de7ae00000","0x5777441c83e03f0be8dd340bde636850847c620b":"0x21e19e0c9bab2400000","0x5778ffdc9b94c5a59e224eb965b6de90f222d170":"0x122d7ff36603fc0000","0x577aeee8d4bc08fc97ab156ed57fb970925366be":"0x120df1147258bf0000","0x577b2d073c590c50306f5b1195a4b2ba9ecda625":"0x1440bdd49515f00000","0x577bfe64e3a1e3800e94db1c6c184d8dc8aafc66":"0x5134ed17417f280000","0x57825aeb09076caa477887fbc9ae37e8b27cc962":"0x56bc75e2d63100000","0x57883010b4ac857fedac03eab2551723a8447ffb":"0x3635c9adc5dea00000","0x5789d01db12c816ac268e9af19dc0dd6d99f15df":"0xad78ebc5ac6200000","0x5792814f59a33a1843faa01baa089eb02ffb5cf1":"0x1b1ab319f5ec750000","0x5793abe6f1533311fd51536891783b3f9625ef1c":"0x2cd8a656f23fda0000","0x5797b60fd2894ab3c2f4aede86daf2e788d745ad":"0x14542ba12a337c00000","0x57a852fdb9b1405bf53ccf9508f83299d3206c52":"0x6c6b935b8bbd400000","0x57b23d6a1adc06c652a779c6a7fb6b95b9fead66":"0xad78ebc5ac6200000","0x57bc20e2d62b3d19663cdb4c309d5b4f2fc2db8f":"0x56bc75e2d63100000","0x57bddf078834009c89d88e6282759dc45335b470":"0x74717cfb6883100000","0x57beea716cbd81700a73d67f9ff039529c2d9025":"0xad78ebc5ac6200000","0x57d032a43d164e71aa2ef3ffd8491b0a4ef1ea5b":"0x6c6b935b8bbd400000","0x57d3df804f2beee6ef53ab94cb3ee9cf524a18d3":"0x1556616b9606670000","0x57d5fd0e3d3049330ffcdcd020456917657ba2da":"0x6bf20195f554d40000","0x57dd9471cbfa262709f5f486bcb774c5f527b8f8":"0xaadec983fcff40000","0x57df23bebdc65eb75feb9cb2fad1c073692b2baf":"0xd8d726b7177a800000","0x5800cd8130839e94495d2d8415a8ea2c90e0c5cb":"0xad78ebc5ac6200000","0x5803e68b34da121aef08b602badbafb4d12481ca":"0x3cfc82e37e9a7400000","0x5816c2687777b6d7d2a2432d59a41fa059e3a406":"0x1c4fe43adb0a5e900000","0x581a3af297efa4436a29af0072929abf9826f58b":"0x6c6b935b8bbd400000","0x581b9fd6eae372f3501f42eb9619eec820b78a84":"0x42be2c00ca53b8d8000","0x581bdf1bb276dbdd86aedcdb397a01efc0e00c5b":"0x3635c9adc5dea00000","0x581f34b523e5b41c09c87c298e299cbc0e29d066":"0x3d5833aafd39758000","0x5824a7e22838277134308c5f4b50dab65e43bb31":"0x14542ba12a337c00000","0x582b70669c97aab7d68148d8d4e90411e2810d56":"0x36356633ebd8ea0000","0x582e7cc46f1d7b4e6e9d95868bfd370573178f4c":"0x6c6b935b8bbd400000","0x583e83ba55e67e13e0e76f8392d873cd21fbf798":"0x1158e460913d00000","0x5869fb867d71f1387f863b698d09fdfb87c49b5c":"0xc6bbf858b316080000","0x587d6849b168f6c3332b7abae7eb6c42c37f48bf":"0x2fb474098f67c00000","0x5887dc6a33dfed5ac1edefe35ef91a216231ac96":"0xd8d726b7177a80000","0x588ed990a2aff44a94105d58c305257735c868ac":"0x368c8623a8b4d100000","0x58ae2ddc5f4c8ada97e06c0086171767c423f5d7":"0x57473d05dabae80000","0x58aed6674affd9f64233272a578dd9386b99c263":"0xb8507a820728200000","0x58b808a65b51e6338969afb95ec70735e451d526":"0x8784bc1b9837a380000","0x58b8ae8f63ef35ed0762f0b6233d4ac14e64b64d":"0x6c6b935b8bbd400000","0x58ba1569650e5bbbb21d35d3e175c0d6b0c651a9":"0x1b1ae4d6e2ef500000","0x58c555bc293cdb16c6362ed97ae9550b92ea180e":"0x1158e460913d00000","0x58c650ced40bb65641b8e8a924a039def46854df":"0x100bd33fb98ba0000","0x58c90754d2f20a1cb1dd330625e04b45fa619d5c":"0x6c6b935b8bbd400000","0x58e2f11223fc8237f69d99c6289c148c0604f742":"0x5150ae84a8cdf000000","0x58e554af3d87629620da61d538c7f5b4b54c4afe":"0x46509d694534728000","0x58e5c9e344c806650dacfc904d33edba5107b0de":"0x10910d4cdc9f60000","0x58e661d0ba73d6cf24099a5562b808f7b3673b68":"0x6c6b935b8bbd400000","0x58f05b262560503ca761c61890a4035f4c737280":"0x1b1ae4d6e2ef5000000","0x58fb947364e7695765361ebb1e801ffb8b95e6d0":"0xad78ebc5ac6200000","0x590181d445007bd0875aaf061c8d51153900836a":"0x6c6b935b8bbd400000","0x5902e44af769a87246a21e079c08bf36b06efeb3":"0x3635c9adc5dea00000","0x590acbda37290c0d3ec84fc2000d7697f9a4b15d":"0x1b1ae4d6e2ef500000","0x590ccb5911cf78f6f622f535c474375f4a12cfcf":"0x43c33c1937564800000","0x5910106debd291a1cd80b0fbbb8d8d9e93a7cc1e":"0x6c6b935b8bbd400000","0x59161749fedcf1c721f2202d13ade2abcf460b3d":"0x6c6b935b8bbd400000","0x591bef3171d1c5957717a4e98d17eb142c214e56":"0x43c33c1937564800000","0x59203cc37599b648312a7cc9e06dacb589a9ae6a":"0x80f7971b6400e8000","0x59268171b833e0aa13c54b52ccc0422e4fa03aeb":"0xa2a15d09519be00000","0x592777261e3bd852c48eca95b3a44c5b7f2d422c":"0x43c33c1937564800000","0x593044670faeff00a55b5ae051eb7be870b11694":"0x73f75d1a085ba0000","0x593b45a1864ac5c7e8f0caaeba0d873cd5d113b2":"0x14542ba12a337c00000","0x593c48935beaff0fde19b04d309cd530a28e52ce":"0xd8d726b7177a800000","0x59473cd300fffae240f5785626c65dfec792b9af":"0x1158e460913d00000","0x5948bc3650ed519bf891a572679fd992f8780c57":"0xaadec983fcff40000","0x594a76f06935388dde5e234696a0668bc20d2ddc":"0x97c9ce4cf6d5c00000","0x59569a21d28fba4bda37753405a081f2063da150":"0xd8d726b7177a800000","0x5956b28ec7890b76fc061a1feb52d82ae81fb635":"0x6c6b935b8bbd400000","0x595e23d788a2d4bb85a15df7136d264a635511b3":"0xd5967be4fc3f100000","0x597038ff91a0900cbbab488af483c790e6ec00a0":"0x21e19e0c9bab2400000","0x5970fb1b144dd751e4ce2eca7caa20e363dc4da3":"0x21e19e0c9bab2400000","0x5975b9528f23af1f0e2ec08ac8ebaa786a2cb8e0":"0x12bf50503ae3038000","0x5975d78d974ee5bb9e4d4ca2ae77c84b9c3b4b82":"0x4a4491bd6dcd280000","0x5985c59a449dfc5da787d8244e746c6d70caa55f":"0x56bc75e2d63100000","0x598aaabae9ed833d7bc222e91fcaa0647b77580b":"0x6194049f30f7200000","0x5992624c54cdec60a5ae938033af8be0c50cbb0a":"0xc454e0f8870f2b0000","0x599728a78618d1a17b9e34e0fed8e857d5c40622":"0x2f6f10780d22cc00000","0x5997ffefb3c1d9d10f1ae2ac8ac3c8e2d2292783":"0x3635c9adc5dea00000","0x59a087b9351ca42f58f36e021927a22988284f38":"0x100bd33fb98ba0000","0x59a12df2e3ef857aceff9306b309f6a500f70134":"0x3635c9adc5dea00000","0x59b96deb8784885d8d3b4a166143cc435d2555a1":"0x487a9a304539440000","0x59b9e733cba4be00429b4bd9dfa64732053a7d55":"0x1158e460913d00000","0x59c5d06b170ee4d26eb0a0eb46cb7d90c1c91019":"0x21e19e0c9bab2400000","0x59c7f785c93160e5807ed34e5e534bc6188647a7":"0x22b1c8c1227a000000","0x59d139e2e40c7b97239d23dfaca33858f602d22b":"0x6c6b935b8bbd400000","0x59f6247b0d582aaa25e5114765e4bf3c774f43c2":"0x2b5e3af16b1880000","0x59fe00696dbd87b7976b29d1156c8842a2e17914":"0x6c6b935b8bbd400000","0x5a0d609aae2332b137ab3b2f26615a808f37e433":"0x21e19e0c9bab24000000","0x5a192b964afd80773e5f5eda6a56f14e25e0c6f3":"0x1b1ae4d6e2ef500000","0x5a1a336962d6e0c63031cc83c6a5c6a6f4478ecb":"0x3635c9adc5dea00000","0x5a1d2d2d1d520304b6208849570437eb3091bb9f":"0x6acb3df27e1f880000","0x5a267331facb262daaecd9dd63a9700c5f5259df":"0x56bc75e2d63100000","0x5a285755391e914e58025faa48cc685f4fd4f5b8":"0x581767ba6189c400000","0x5a2916b8d2e8cc12e207ab464d433e2370d823d9":"0x6c6b935b8bbd400000","0x5a2b1c853aeb28c45539af76a00ac2d8a8242896":"0x15af1d78b58c40000","0x5a2daab25c31a61a92a4c82c9925a1d2ef58585e":"0xc380da9c7950c0000","0x5a30feac37ac9f72d7b4af0f2bc73952c74fd5c3":"0x6c6b935b8bbd400000","0x5a5468fa5ca226c7532ecf06e1bc1c45225d7ec9":"0x678a932062e4180000","0x5a565285374a49eedd504c957d510874d00455bc":"0x56bc75e2d63100000","0x5a5ee8e9bb0e8ab2fecb4b33d29478be50bbd44b":"0x2a1129d09367200000","0x5a5f8508da0ebebb90be9033bd4d9e274105ae00":"0x16a6502f15a1e540000","0x5a6071bcebfcba4ab57f4db96fc7a68bece2ba5b":"0x6c6b935b8bbd400000","0x5a60c924162873fc7ea4da7f972e350167376031":"0x487f277a885798000","0x5a6686b0f17e07edfc59b759c77d5bef164d3879":"0x50c5e761a444080000","0x5a70106f20d63f875265e48e0d35f00e17d02bc9":"0x1158e460913d00000","0x5a74ba62e7c81a3474e27d894fed33dd24ad95fe":"0xfc936392801c0000","0x5a7735007d70b06844da9901cdfadb11a2582c2f":"0x14542ba12a337c00000","0x5a82f96cd4b7e2d93d10f3185dc8f43d4b75aa69":"0x6c633fbab98c040000","0x5a87f034e6f68f4e74ffe60c64819436036cf7d7":"0x1158e460913d00000","0x5a891155f50e42074374c739baadf7df2651153a":"0x102da6fd0f73a3c0000","0x5a9c8b69fc614d69564999b00dcb42db67f97e90":"0xb9e615abad3a778000","0x5aaf1c31254a6e005fba7f5ab0ec79d7fc2b630e":"0x14061b9d77a5e980000","0x5ab1a5615348001c7c775dc75748669b8be4de14":"0x256a72fb29e69c0000","0x5abfec25f74cd88437631a7731906932776356f9":"0x9d83cc0dfa11177ff8000","0x5ac2908b0f398c0df5bac2cb13ca7314fba8fa3d":"0xad4c8316a0b0c0000","0x5ac99ad7816ae9020ff8adf79fa9869b7cea6601":"0x472698b413b43200000","0x5ad12c5ed4fa827e2150cfa0d68c0aa37b1769b8":"0x2b5e3af16b18800000","0x5ad5e420755613886f35aa56ac403eebdfe4b0d0":"0x10f0cf064dd592000000","0x5ade77fd81c25c0af713b10702768c1eb2f975e7":"0x1158e460913d00000","0x5ae64e853ba0a51282cb8db52e41615e7c9f733f":"0x6c6b935b8bbd400000","0x5aed0e6cfe95f9d680c76472a81a2b680a7f93e2":"0xaadec983fcff40000","0x5aef16a226dd68071f2483e1da42598319f69b2c":"0x6c6b935b8bbd400000","0x5af46a25ac09cb73616b53b14fb42ff0a51cddb2":"0xd8d726b7177a800000","0x5af7c072b2c5acd71c76addcce535cf7f8f93585":"0x1158e460913d00000","0x5afda9405c8e9736514574da928de67456010918":"0x145b8b0239a46920000","0x5b06d1e6930c1054692b79e3dbe6ecce53966420":"0xb227f63be813c0000","0x5b25cae86dcafa2a60e7723631fc5fa49c1ad87d":"0x870c58510e85200000","0x5b287c7e734299e727626f93fb1187a60d5057fe":"0x57cd934a914cb0000","0x5b290c01967c812e4dc4c90b174c1b4015bae71e":"0x820eb348d52b90000","0x5b2b64e9c058e382a8b299224eecaa16e09c8d92":"0x8ba52e6fc45e40000","0x5b2e2f1618552eab0db98add55637c2951f1fb19":"0x28a857425466f800000","0x5b30608c678e1ac464a8994c3b33e5cdf3497112":"0x15af1d78b58c400000","0x5b333696e04cca1692e71986579c920d6b2916f9":"0x1b1ae4d6e2ef500000","0x5b430d779696a3653fc60e74fbcbacf6b9c2baf1":"0x2f6f10780d22cc00000","0x5b437365ae3a9a2ff97c68e6f90a7620188c7d19":"0x6c8754c8f30c080000","0x5b49afcd75447838f6e7ceda8d21777d4fc1c3c0":"0xd8d726b7177a800000","0x5b4c0c60f10ed2894bdb42d9dd1d210587810a0d":"0x1b1ae4d6e2ef500000","0x5b4ea16db6809b0352d4b6e81c3913f76a51bb32":"0x15af1d78b58c400000","0x5b5be0d8c67276baabd8edb30d48ea75640b8b29":"0x2cb1f55fb7be100000","0x5b5d517029321562111b43086d0b043591109a70":"0x8cf23f909c0fa00000","0x5b5d8c8eed6c85ac215661de026676823faa0a0c":"0x43c33c1937564800000","0x5b6d55f6712967405c659129f4b1de09acf2cb7b":"0xe7eeba3410b740000","0x5b70c49cc98b3df3fbe2b1597f5c1b6347a388b7":"0x34957444b840e80000","0x5b736eb18353629bde9676dadd165034ce5ecc68":"0x6acb3df27e1f880000","0x5b759fa110a31c88469f54d44ba303d57dd3e10f":"0x5b46dd2f0ea3b80000","0x5b7784caea01799ca30227827667ce207c5cbc76":"0x6c6b935b8bbd400000","0x5b78eca27fbdea6f26befba8972b295e7814364b":"0x6c6b935b8bbd400000","0x5b800bfd1b3ed4a57d875aed26d42f1a7708d72a":"0x15a82d1d5bb88e00000","0x5b85e60e2af0544f2f01c64e2032900ebd38a3c7":"0x6c6b935b8bbd400000","0x5ba2c6c35dfaec296826591904d544464aeabd5e":"0x1158e460913d00000","0x5baf6d749620803e8348af3710e5c4fbf20fc894":"0x10f4002615dfe900000","0x5bc1f95507b1018642e45cd9c0e22733b9b1a326":"0x56bc75e2d63100000","0x5bd23547477f6d09d7b2a005c5ee650c510c56d7":"0x21e19e0c9bab2400000","0x5bd24aac3612b20c609eb46779bf95698407c57c":"0x6acb3df27e1f880000","0x5bd6862d517d4de4559d4eec0a06cad05e2f946e":"0xad78ebc5ac6200000","0x5be045512a026e3f1cebfd5a7ec0cfc36f2dc16b":"0x68155a43676e00000","0x5bf9f2226e5aeacf1d80ae0a59c6e38038bc8db5":"0x14542ba12a337c00000","0x5bfafe97b1dd1d712be86d41df79895345875a87":"0x1b1ae4d6e2ef500000","0x5c0f2e51378f6b0d7bab617331580b6e39ad3ca5":"0x2086ac3510526000000","0x5c29f9e9a523c1f8669448b55c48cbd47c25e610":"0x3446a0dad04cb00000","0x5c308bac4857d33baea074f3956d3621d9fa28e1":"0x10f08eda8e555098000","0x5c312a56c784b122099b764d059c21ece95e84ca":"0x52663ccab1e1c0000","0x5c31996dcac015f9be985b611f468730ef244d90":"0xad78ebc5ac6200000","0x5c323457e187761a8276e359b7b7af3f3b6e3df6":"0x21e19e0c9bab2400000","0x5c3c1c645b917543113b3e6c1c054da1fe742b9a":"0x2b5e3af16b18800000","0x5c3d19441d196cb443662020fcad7fbb79b29e78":"0xc673ce3c40160000","0x5c3f567faff7bad1b5120022e8cbcaa82b4917b3":"0x6c6b935b8bbd400000","0x5c4368918ace6409c79eca80cdaae4391d2b624e":"0xd8d726b7177a800000","0x5c464197791c8a3da3c925436f277ab13bf2faa2":"0x1b1ae4d6e2ef5000000","0x5c4881165cb42bb82e97396c8ef44adbf173fb99":"0x5fee222041e340000","0x5c4892907a0720df6fd3413e63ff767d6b398023":"0x2cb009fd3b5790f8000","0x5c4f24e994ed8f850ea7818f471c8fac3bcf0452":"0x5d80688d9e31c00000","0x5c5419565c3aad4e714e0739328e3521c98f05cc":"0x1c9f78d2893e400000","0x5c6136e218de0a61a137b2b3962d2a6112b809d7":"0xff3dbb65ff4868000","0x5c61ab79b408dd3229f662593705d72f1e147bb8":"0x4d0243d3498cd840000","0x5c6d041da7af4487b9dc48e8e1f60766d0a56dbc":"0x4f070a003e9c740000","0x5c6f36af90ab1a656c6ec8c7d521512762bba3e1":"0x6c68ccd09b022c0000","0x5c7b9ec7a2438d1e3c7698b545b9c3fd77b7cd55":"0x3635c9adc5dea00000","0x5c936f3b9d22c403db5e730ff177d74eef42dbbf":"0x410d586a20a4c0000","0x5cb731160d2e8965670bde925d9de5510935347d":"0x22b1c8c1227a00000","0x5cb953a0e42f5030812226217fffc3ce230457e4":"0x56bc75e2d63100000","0x5cbd8daf27ddf704cdd0d909a789ba36ed4f37b2":"0xb9f65d00f63c0000","0x5cc4cba621f220637742057f6055b80dffd77e13":"0x878477b7d253b660000","0x5cc7d3066d45d27621f78bb4b339473e442a860f":"0x21e1899f0377aea0000","0x5cccf1508bfd35c20530aa642500c10dee65eaed":"0x2e141ea081ca080000","0x5cce72d068c7c3f55b1d2819545e77317cae8240":"0x692ae8897081d00000","0x5cd0e475b54421bdfc0c12ea8e082bd7a5af0a6a":"0x332ca1b67940c0000","0x5cd588a14ec648ccf64729f9167aa7bf8be6eb3d":"0x3635c9adc5dea00000","0x5cd8af60de65f24dc3ce5730ba92653022dc5963":"0x61093d7c2c6d380000","0x5cdc4708f14f40dcc15a795f7dc8cb0b7faa9e6e":"0x1d1c5f3eda20c40000","0x5ce0b6862cce9162e87e0849e387cb5df4f9118c":"0x5a87e7d7f5f6580000","0x5ce2e7ceaaa18af0f8aafa7fbad74cc89e3cd436":"0x43c33c1937564800000","0x5ce44068b8f4a3fe799e6a8311dbfdeda29dee0e":"0x6c6b935b8bbd400000","0x5cebe30b2a95f4aefda665651dc0cf7ef5758199":"0xfc936392801c0000","0x5cf18fa7c8a7c0a2b3d5efd1990f64ddc569242c":"0x3635c9adc5dea00000","0x5cf44e10540d65716423b1bcb542d21ff83a94cd":"0x21e19e0c9bab2400000","0x5cf8c03eb3e872e50f7cfd0c2f8d3b3f2cb5183a":"0xad78ebc5ac6200000","0x5cfa8d568575658ca4c1a593ac4c5d0e44c60745":"0xfc66fae3746ac0000","0x5cfa9877f719c79d9e494a08d1e41cf103fc87c9":"0xad78ebc5ac6200000","0x5d1dc3387b47b8451e55106c0cc67d6dc72b7f0b":"0x6c6b935b8bbd400000","0x5d231a70c1dfeb360abd97f616e2d10d39f3cab5":"0x15af1d78b58c400000","0x5d24bdbc1c47f0eb83d128cae48ac33c4817e91f":"0x3635c9adc5dea00000","0x5d2819e8d57821922ee445650ccaec7d40544a8d":"0xad78ebc5ac6200000","0x5d2f7f0b04ba4be161e19cb6f112ce7a5e7d7fe4":"0x1e87f85809dc00000","0x5d32f6f86e787ff78e63d78b0ef95fe6071852b8":"0x15be6174e1912e0000","0x5d39ef9ea6bdfff15d11fe91f561a6f9e31f5da5":"0x6c6b935b8bbd400000","0x5d3f3b1f7130b0bb21a0fd32396239179a25657f":"0xd3ab8ea5e8fd9e80000","0x5d5751819b4f3d26ed0c1ac571552735271dbefa":"0x3635c9adc5dea00000","0x5d5c2c1099bbeefb267e74b58880b444d94449e0":"0xdbf0bd181e2e70000","0x5d5cdbe25b2a044b7b9be383bcaa5807b06d3c6b":"0x6c6b935b8bbd400000","0x5d5d6e821c6eef96810c83c491468560ef70bfb5":"0x6c6b935b8bbd400000","0x5d68324bcb776d3ffd0bf9fea91d9f037fd6ab0f":"0x6c6b935b8bbd400000","0x5d6ae8cbd6b3393c22d16254100d0238e808147c":"0x2707e56d51a30c0000","0x5d6c5c720d66a6abca8397142e63d26818eaab54":"0x22b1c8c1227a00000","0x5d6ccf806738091042ad97a6e095fe8c36aa79c5":"0xa31062beeed700000","0x5d71799c8df3bccb7ee446df50b8312bc4eb71c5":"0xad78ebc5ac6200000","0x5d822d9b3ef4b502627407da272f67814a6becd4":"0x1158e460913d00000","0x5d83b21bd2712360436b67a597ee3378db3e7ae4":"0x6c6b935b8bbd400000","0x5d872b122e994ef27c71d7deb457bf65429eca6c":"0x1b1aded81d394108000","0x5d8d31faa864e22159cd6f5175ccecc53fa54d72":"0x5b696b70dd567100000","0x5d958a9bd189c2985f86c58a8c69a7a78806e8da":"0x228f16f861578600000","0x5da2a9a4c2c0a4a924cbe0a53ab9d0c627a1cfa0":"0x27bf38c6544df50000","0x5da4ca88935c27f55c311048840e589e04a8a049":"0x4563918244f400000","0x5da54785c9bd30575c89deb59d2041d20a39e17b":"0x6aa209f0b91d658000","0x5db69fe93e6fb6fbd450966b97238b110ad8279a":"0x878678326eac9000000","0x5db7bba1f9573f24115d8c8c62e9ce8895068e9f":"0x2b5aad72c65200000","0x5db84400570069a9573cab04b4e6b69535e202b8":"0x20dd68aaf3289100000","0x5dc36de5359450a1ec09cb0c44cf2bb42b3ae435":"0x3c946d893b33060000","0x5dc6f45fef26b06e3302313f884daf48e2746fb9":"0x1b1ae4d6e2ef500000","0x5dcdb6b87a503c6d8a3c65c2cf9a9aa883479a1e":"0x1f2bba5d84f99c00000","0x5dd112f368c0e6ceff77a9df02a5481651a02fb7":"0x93472c85c6d540000","0x5dd53ae897526b167d39f1744ef7c3da5b37a293":"0x1b1ae4d6e2ef5000000","0x5dded049a6e1f329dc4b971e722c9c1f2ade83f0":"0x3635c9adc5dea00000","0x5de598aba344378cab4431555b4f79992dc290c6":"0x487a9a304539440000","0x5de9e7d5d1b667d095dd34099c85b0421a0bc681":"0x1158e460913d00000","0x5df3277ca85936c7a0d2c0795605ad25095e7159":"0x6c6b935b8bbd400000","0x5dff811dad819ece3ba602c383fb5dc64c0a3a48":"0xa1544be879ea80000","0x5e031b0a724471d476f3bcd2eb078338bf67fbef":"0xfc936392801c0000","0x5e0785532c7723e4c0af9357d5274b73bdddddde":"0x54b41ea9bdb61dc0000","0x5e11ecf69d551d7f4f84df128046b3a13240a328":"0x1158e460913d00000","0x5e1fbd4e58e2312b3c78d7aaaafa10bf9c3189e3":"0x878678326eac9000000","0x5e32c72191b8392c55f510d8e3326e3a60501d62":"0x9513ea9de0243800000","0x5e51b8a3bb09d303ea7c86051582fd600fb3dc1a":"0x1158e460913d00000","0x5e58e255fc19870a04305ff2a04631f2ff294bb1":"0xf43fc2c04ee00000","0x5e5a441974a83d74c687ebdc633fb1a49e7b1ad7":"0xa2a15d09519be00000","0x5e65458be964ae449f71773704979766f8898761":"0x1ca7cc735b6f7c0000","0x5e67df8969101adabd91accd6bb1991274af8df2":"0x1b1ae4d6e2ef500000","0x5e6e9747e162f8b45c656e0f6cae7a84bac80e4e":"0x6c6b935b8bbd400000","0x5e731b55ced452bb3f3fe871ddc3ed7ee6510a8f":"0xa2a15d09519be00000","0x5e74ed80e9655788e1bb269752319667fe754e5a":"0x30927f74c9de00000","0x5e772e27f28800c50dda973bb33e10762e6eea20":"0x61093d7c2c6d380000","0x5e7b8c54dc57b0402062719dee7ef5e37ea35d62":"0x9bf9810fd05c840000","0x5e7f70378775589fc66a81d3f653e954f55560eb":"0x83f289181d84c80000","0x5e806e845730f8073e6cc9018ee90f5c05f909a3":"0x201e96dacceaf200000","0x5e8e4df18cf0af770978a8df8dac90931510a679":"0x6c6b935b8bbd400000","0x5e90c85877198756b0366c0e17b28e52b446505a":"0x144a4a18efeb680000","0x5e95fe5ffcf998f9f9ac0e9a81dab83ead77003d":"0x1d42c20d32797f0000","0x5ead29037a12896478b1296ab714e9cb95428c81":"0x3e043072d406e0000","0x5eb371c407406c427b3b7de271ad3c1e04269579":"0xa2a15d09519be00000","0x5ecdbaeab9106ffe5d7b519696609a05baeb85ad":"0x1158e460913d00000","0x5ed0d6338559ef44dc7a61edeb893fa5d83fa1b5":"0xbed1d0263d9f00000","0x5ed3bbc05240e0d399eb6ddfe60f62de4d9509af":"0x2914c02475f9d6d30000","0x5ed3f1ebe2ae6756b5d8dc19cad02c419aa5778b":"0x0","0x5ed56115bd6505a88273df5c56839470d24a2db7":"0x38e6591ee56668000","0x5ef8c96186b37984cbfe04c598406e3b0ac3171f":"0x1fd933494aa5fe00000","0x5efbdfe5389999633c26605a5bfc2c1bb5959393":"0x3c057c95cd9080000","0x5f13154631466dcb1353c890932a7c97e0878e90":"0x14542ba12a337c00000","0x5f167aa242bc4c189adecb3ac4a7c452cf192fcf":"0x6c6b4c4da6ddbe0000","0x5f1c8a04c90d735b8a152909aeae636fb0ce1665":"0x17b7827618c5a370000","0x5f23ba1f37a96c45bc490259538a54c28ba3b0d5":"0x410d586a20a4c00000","0x5f26cf34599bc36ea67b9e7a9f9b4330c9d542a3":"0x3635c9adc5dea00000","0x5f29c9de765dde25852af07d33f2ce468fd20982":"0x6c6b935b8bbd400000","0x5f2f07d2d697e8c567fcfdfe020f49f360be2139":"0x6c6b935b8bbd400000","0x5f321b3daaa296cadf29439f9dab062a4bffedd6":"0x47025903ea7ae0000","0x5f333a3b2310765a0d1832b9be4c0a03704c1c09":"0x3635c9adc5dea00000","0x5f344b01c7191a32d0762ac188f0ec2dd460911d":"0x3635c9adc5dea00000","0x5f363e0ab747e02d1b3b66abb69ea53c7baf523a":"0x277017338a30ae00000","0x5f375b86600c40cca8b2676b7a1a1d1644c5f52c":"0x44618d74c623f0000","0x5f3e1e6739b0c62200e00a003691d9efb238d89f":"0xa2a15d09519be00000","0x5f483ffb8f680aedf2a38f7833afdcde59b61e4b":"0x6c6b935b8bbd400000","0x5f4ace4c1cc13391e01f00b198e1f20b5f91cbf5":"0x10f0fa8b9d3811a0000","0x5f521282e9b278dc8c034c72af53ee29e5443d78":"0x161732d2f8f3ae00000","0x5f68a24c7eb4117667737b33393fb3c2148a53b6":"0x2cede918d453c0000","0x5f708eaf39d823946c51b3a3e9b7b3c003e26341":"0x62a992e53a0af00000","0x5f742e487e3ab81af2f94afdbe1b9b8f5ccc81bc":"0x75c445d41163e60000","0x5f74ed0e24ff80d9b2c4a44baa9975428cd6b935":"0xa18bcec34888100000","0x5f76f0a306269c78306b3d650dc3e9c37084db61":"0x821ab0d44149800000","0x5f77a107ab1226b3f95f10ee83aefc6c5dff3edc":"0x1b1ae4d6e2ef500000","0x5f7b3bbac16dab831a4a0fc53b0c549dc36c31ca":"0x692ae8897081d00000","0x5f93ff832774db5114c55bb4bf44ccf3b58f903f":"0x28a9c91a263458290000","0x5f9616c47b4a67f406b95a14fe6fc268396f1721":"0xad78ebc5ac6200000","0x5f981039fcf50225e2adf762752112d1cc26b6e3":"0x1b1a416a2153a50000","0x5f99dc8e49e61d57daef606acdd91b4d7007326a":"0xa2a15d09519be00000","0x5fa61f152de6123516c751242979285f796ac791":"0xb0f11972963b00000","0x5fa7bfe043886127d4011d8356a47e947963aca8":"0x62a992e53a0af00000","0x5fa8a54e68176c4fe2c01cf671c515bfbdd528a8":"0x45e155fa0110fa400000","0x5fad960f6b2c84569c9f4d47bf1985fcb2c65da6":"0x36356633ebd8ea0000","0x5fc6c11426b4a1eae7e51dd512ad1090c6f1a85b":"0x93fe5c57d710680000","0x5fcd84546896dd081db1a320bd4d8c1dd1528c4c":"0x1158e460913d00000","0x5fcda847aaf8d7fa8bca08029ca2849166aa15a3":"0x21cab81259a3bf0000","0x5fd1c3e31778276cb42ea740f5eae9c641dbc701":"0xa844a7424d9c80000","0x5fd3d6777ec2620ae83a05528ed425072d3ca8fd":"0x6c6b935b8bbd400000","0x5fd973af366aa5157c54659bcfb27cbfa5ac15d6":"0xd8d726b7177a800000","0x5fe77703808f823e6c399352108bdb2c527cb87c":"0x6a4076cf7995a00000","0x5fec49c665e64ee89dd441ee74056e1f01e92870":"0x1569b9e733474c00000","0x5ff326cd60fd136b245e29e9087a6ad3a6527f0d":"0x65ea3db75546600000","0x5ff93de6ee054cad459b2d5eb0f6870389dfcb74":"0xbed1d0263d9f00000","0x6006e36d929bf45d8f16231b126a011ae283d925":"0x98a7d9b8314c00000","0x6021e85a8814fce1e82a41abd1d3b2dad2faefe0":"0x6c6b935b8bbd400000","0x6038740ae28d66ba93b0be08482b3205a0f7a07b":"0x11216185c29f700000","0x603f2fab7afb6e017b94766069a4b43b38964923":"0x59d2db2414da990000","0x6042276df2983fe2bc4759dc1943e18fdbc34f77":"0x6acb3df27e1f880000","0x6042c644bae2b96f25f94d31f678c90dc96690db":"0x6c6b935b8bbd400000","0x604cdf18628dbfa8329194d478dd5201eecc4be7":"0x13f306a2409fc0000","0x604e9477ebf4727c745bcabbedcb6ccf29994022":"0x36369ed7747d260000","0x60676d1fa21fca052297e24bf96389c5b12a70d7":"0xd177c5a7a68d60000","0x60676e92d18b000509c61de540e6c5ddb676d509":"0x410d586a20a4c00000","0x606f177121f7855c21a5062330c8762264a97b31":"0xd8d726b7177a800000","0x60864236930d04d8402b5dcbeb807f3caf611ea2":"0xd8d726b7177a800000","0x60ab71cd26ea6d6e59a7a0f627ee079c885ebbf6":"0x1731790534df20000","0x60af0ee118443c9b37d2fead77f5e521debe1573":"0x678a932062e4180000","0x60b358cb3dbefa37f47df2d7365840da8e3bc98c":"0x1158e460913d00000","0x60b8d6b73b79534fb08bb8cbcefac7f393c57bfe":"0x5f68e8131ecf800000","0x60be6f953f2a4d25b6256ffd2423ac1438252e4e":"0x821ab0d4414980000","0x60c3714fdddb634659e4a2b1ea42c4728cc7b8ba":"0xb98bc829a6f90000","0x60cc3d445ebdf76a7d7ae571c6971dff68cc8585":"0x3635c9adc5dea00000","0x60d5667140d12614b21c8e5e8a33082e32dfcf23":"0x43c33c1937564800000","0x60de22a1507432a47b01cc68c52a0bf8a2e0d098":"0x10910d4cdc9f60000","0x60e0bdd0a259bb9cb09d3f37e5cd8b9daceabf8a":"0x4a4491bd6dcd280000","0x60e3cc43bcdb026aad759c7066f555bbf2ac66f5":"0x6c6b935b8bbd400000","0x61042b80fd6095d1b87be2f00f109fabafd157a6":"0x56bc75e2d63100000","0x6107d71dd6d0eefb11d4c916404cb98c753e117d":"0x6c6b935b8bbd400000","0x610fd6ee4eebab10a8c55d0b4bd2e7d6ef817156":"0x1159561065d5d0000","0x6114b0eae5576903f80bfb98842d24ed92237f1e":"0x56bc75e2d63100000","0x6121af398a5b2da69f65c6381aec88ce9cc6441f":"0x22b1c8c1227a000000","0x612667f172135b950b2cd1de10afdece6857b873":"0x3635c9adc5dea00000","0x612ced8dc0dc9e899ee46f7962333315f3f55e44":"0x125e35f9cd3d9b0000","0x6134d942f037f2cc3d424a230c603d67abd3edf7":"0x6c6b935b8bbd400000","0x613ac53be565d46536b820715b9b8d3ae68a4b95":"0xcbd47b6eaa8cc00000","0x613fab44b16bbe554d44afd178ab1d02f37aeaa5":"0x6c6b935b8bbd400000","0x614e8bef3dd2c59b59a4145674401018351884ea":"0x1158e460913d00000","0x61518464fdd8b73c1bb6ac6db600654938dbf17a":"0xad78ebc5ac6200000","0x61547d376e5369bcf978fc162c3c56ae453547e8":"0xad78ebc5ac6200000","0x6158e107c5eb54cb7604e0cd8dc1e07500d91c3c":"0x2b5e3af16b1880000","0x615a6f36777f40d6617eb5819896186983fd3731":"0x14061b9d77a5e980000","0x615f82365c5101f071e7d2cb6af14f7aad2c16c6":"0x1158e460913d00000","0x6170dd0687bd55ca88b87adef51cfdc55c4dd458":"0x6cb32f5c34fe440000","0x61733947fab820dbd351efd67855ea0e881373a0":"0x1158e460913d00000","0x6179979907fe7f037e4c38029d60bcbab832b3d6":"0x57473d05dabae80000","0x617f20894fa70e94a86a49cd74e03238f64d3cd9":"0x10f0dbae61009528000","0x617ff2cc803e31c9082233b825d025be3f7b1056":"0x6acb3df27e1f880000","0x6191ddc9b64a8e0890b4323709d7a07c48b92a64":"0x2a034919dfbfbc0000","0x6196c3d3c0908d254366b7bca55745222d9d4db1":"0xd8d726b7177a800000","0x619f171445d42b02e2e07004ad8afe694fa53d6a":"0x1158e460913d00000","0x61adf5929a5e2981684ea243baa01f7d1f5e148a":"0x5fabf6c984f230000","0x61b1b8c012cd4c78f698e470f90256e6a30f48dd":"0xad78ebc5ac6200000","0x61b3df2e9e9fd968131f1e88f0a0eb5bd765464d":"0xd8d726b7177a800000","0x61b902c5a673885826820d1fe14549e4865fbdc2":"0x1224efed2ae1918000","0x61b905de663fc17386523b3a28e2f7d037a655cd":"0x1b1ae4d6e2ef500000","0x61ba87c77e9b596de7ba0e326fddfeec2163ef66":"0xad78ebc5ac6200000","0x61bf84d5ab026f58c873f86ff0dfca82b55733ae":"0x6c6b935b8bbd400000","0x61c4ee7c864c4d6b5e37ea1331c203739e826b2f":"0x1a1353b382a918000","0x61c830f1654718f075ccaba316faacb85b7d120b":"0x15af1d78b58c400000","0x61c8f1fa43bf846999ecf47b2b324dfb6b63fe3a":"0x2b5e3af16b18800000","0x61c9dce8b2981cb40e98b0402bc3eb28348f03ac":"0xaacacd9b9e22b0000","0x61cea71fa464d62a07063f920b0cc917539733d8":"0x5a87e7d7f5f6580000","0x61d101a033ee0e2ebb3100ede766df1ad0244954":"0x1b1ae4d6e2ef500000","0x61ed5596c697207f3d55b2a51aa7d50f07fa09e8":"0x6c6b935b8bbd400000","0x61ff8e67b34d9ee6f78eb36ffea1b9f7c15787af":"0x58e7926ee858a00000","0x6205c2d5647470848a3840f3887e9b015d34755c":"0x6194049f30f7200000","0x6228ade95e8bb17d1ae23bfb0518414d497e0eb8":"0x15af1d78b58c400000","0x6229dcc203b1edccfdf06e87910c452a1f4d7a72":"0x6e1d41a8f9ec3500000","0x622be4b45495fcd93143efc412d699d6cdc23dc5":"0xf015f25736420000","0x62331df2a3cbee3520e911dea9f73e905f892505":"0x6c6b935b8bbd400000","0x625644c95a873ef8c06cdb9e9f6d8d7680043d62":"0x6194049f30f7200000","0x6265b2e7730f36b776b52d0c9d02ada55d8e3cb6":"0x3635c9adc5dea00000","0x62680a15f8ccb8bdc02f7360c25ad8cfb57b8ccd":"0x3635c9adc5dea00000","0x6294eae6e420a3d5600a39c4141f838ff8e7cc48":"0xa030dcebbd2f4c0000","0x62971bf2634cee0be3c9890f51a56099dbb9519b":"0x238fd42c5cf0400000","0x629be7ab126a5398edd6da9f18447e78c692a4fd":"0x6c6b935b8bbd400000","0x62b4a9226e61683c72c183254690daf511b4117a":"0xe18398e7601900000","0x62b9081e7710345e38e02e16449ace1b85bcfc4e":"0x3154c9729d05780000","0x62c37c52b97f4b040b1aa391d6dec152893c4707":"0x3635c9adc5dea00000","0x62c9b271ffd5b770a5eee4edc9787b5cdc709714":"0x6c6b935b8bbd400000","0x62d5cc7117e18500ac2f9e3c26c86b0a94b0de15":"0x5b12aefafa8040000","0x62dc72729024375fc37cbb9c7c2393d10233330f":"0x6c6b935b8bbd400000","0x62e6b2f5eb94fa7a43831fc87e254a3fe3bf8f89":"0xd8d726b7177a80000","0x62f2e5ccecd52cc4b95e0597df27cc079715608c":"0x7c0860e5a80dc0000","0x62fb8bd1f0e66b90533e071e6cbe6111fef0bc63":"0x3ba1910bf341b000000","0x630a913a9031c9492abd4c41dbb15054cfec4416":"0x13458db67af35e00000","0x630c5273126d517ce67101811cab16b8534cf9a8":"0x1feccc62573bbd38000","0x631030a5b27b07288a45696f189e1114f12a81c0":"0x1b1a7a420ba00d0000","0x6310b020fd98044957995092090f17f04e52cdfd":"0x55a6e79ccd1d300000","0x632b9149d70178a7333634275e82d5953f27967b":"0x25f273933db5700000","0x632cecb10cfcf38ec986b43b8770adece9200221":"0x1158e460913d00000","0x6331028cbb5a21485bc51b565142993bdb2582a9":"0x1cfdd7468216e80000","0x63334fcf1745840e4b094a3bb40bb76f9604c04c":"0xd7a5d703a717e80000","0x63340a57716bfa63eb6cd133721202575bf796f0":"0xb61e0a20c12718000","0x634efc24371107b4cbf03f79a93dfd93e431d5fd":"0x423582e08edc5c8000","0x635c00fdf035bca15fa3610df3384e0fb79068b1":"0x1e7e4171bf4d3a00000","0x63612e7862c27b587cfb6daf9912cb051f030a9f":"0x25b19d4bfe8ed0000","0x63666755bd41b5986997783c13043008242b3cb5":"0x1b1ae4d6e2ef500000","0x637be71b3aa815ff453d5642f73074450b64c82a":"0x6c6b935b8bbd400000","0x637d67d87f586f0a5a479e20ee13ea310a10b647":"0xa3a5926afa1e7300000","0x637f5869d6e4695f0eb9e27311c4878aff333380":"0x6ac04e68aaec860000","0x63977cad7d0dcdc52b9ac9f2ffa136e8642882b8":"0x410d586a20a4c0000","0x63a61dc30a8e3b30a763c4213c801cbf98738178":"0x3635c9adc5dea00000","0x63ac545c991243fa18aec41d4f6f598e555015dc":"0x2086ac351052600000","0x63b9754d75d12d384039ec69063c0be210d5e0e3":"0x920b860cc8ecfd8000","0x63bb664f9117037628594da7e3c5089fd618b5b5":"0x1158e460913d00000","0x63c2a3d235e5eeabd0d4a6afdb89d94627396495":"0x434ef05b9d84820000","0x63c8dfde0b8e01dadc2e748c824cc0369df090b3":"0xd255d112e103a00000","0x63d55ad99b9137fd1b20cc2b4f03d42cbaddf334":"0x15af1d78b58c400000","0x63d80048877596e0c28489e650cd4ac180096a49":"0xf2dc7d47f15600000","0x63e414603e80d4e5a0f5c18774204642258208e4":"0x10f0cf064dd59200000","0x63e88e2e539ffb450386b4e46789b223f5476c45":"0x155170a778e25d00000","0x63ef2fbc3daf5edaf4a295629ccf31bcdf4038e5":"0x4f2591f896a6500000","0x63f0e5a752f79f67124eed633ad3fd2705a397d4":"0xd5967be4fc3f100000","0x63f5b53d79bf2e411489526530223845fac6f601":"0x65a4da25d3016c00000","0x63fc93001305adfbc9b85d29d9291a05f8f1410b":"0x3635c9adc5dea00000","0x63fe6bcc4b8a9850abbe75803730c932251f145b":"0xfc936392801c0000","0x6403d062549690c8e8b63eae41d6c109476e2588":"0x6c6b935b8bbd400000","0x64042ba68b12d4c151651ca2813b7352bd56f08e":"0x2086ac351052600000","0x6405dd13e93abcff377e700e3c1a0086eca27d29":"0xfc936392801c0000","0x640aba6de984d94517377803705eaea7095f4a11":"0x21e19e0c9bab2400000","0x640bf87415e0cf407301e5599a68366da09bbac8":"0x1abc9f416098158000","0x6420f8bcc8164a6152a99d6b99693005ccf7e053":"0x36356633ebd8ea0000","0x64241a7844290e0ab855f1d4aa75b55345032224":"0x56bc75e2d631000000","0x64264aedd52dcae918a012fbcd0c030ee6f71821":"0x3635c9adc5dea00000","0x64370e87202645125a35b207af1231fb6072f9a7":"0xad78ebc5ac6200000","0x643d9aeed4b180947ed2b9207cce4c3ddc55e1f7":"0xad78ebc5ac6200000","0x6443b8ae639de91cf73c5ae763eeeed3ddbb9253":"0x6c6b935b8bbd400000","0x64457fa33b0832506c4f7d1180dce48f46f3e0ff":"0x6c6b935b8bbd400000","0x64464a6805b462412a901d2db8174b06c22deea6":"0x19c846a029c7c80000","0x644ba6c61082e989109f5c11d4b40e991660d403":"0xd8d726b7177a800000","0x64628c6fb8ec743adbd87ce5e018d531d9210437":"0x1731790534df20000","0x6463f715d594a1a4ace4bb9c3b288a74decf294d":"0x6acb3df27e1f880000","0x646628a53c2c4193da88359ce718dadd92b7a48d":"0xad8006c2f5ef00000","0x64672da3ab052821a0243d1ce4b6e0a36517b8eb":"0xad78ebc5ac6200000","0x646afba71d849e80c0ed59cac519b278e7f7abe4":"0x3635c9adc5dea00000","0x646e043d0597a664948fbb0dc15475a3a4f3a6ed":"0x1158e460913d00000","0x6470a4f92ec6b0fccd01234fa59023e9ff1f3aac":"0xa2a15d09519be00000","0x647b85044df2cf0b4ed4882e88819fe22ae5f793":"0x36363b5d9a77700000","0x6485470e61db110aebdbafd536769e3c599cc908":"0x2086ac351052600000","0x648f5bd2a2ae8902db37847d1cb0db9390b06248":"0x1a535ecf0760a048000","0x649a2b9879cd8fb736e6703b0c7747849796f10f":"0x18ee22da01ad34f0000","0x649a85b93653075fa6562c409a565d087ba3e1ba":"0x6c6b935b8bbd400000","0x64adcceec53dd9d9dd15c8cc1a9e736de4241d2c":"0x30927f74c9de00000","0x64cf0935bf19d2cebbecd8780d27d2e2b2c34166":"0x6acb3df27e1f880000","0x64d80c3b8ba68282290b75e65d8978a15a87782c":"0x6acb3df27e1f880000","0x64dba2d6615b8bd7571836dc75bc79d314f5ecee":"0x21e19e0c9bab2400000","0x64e0217a5b38aa40583625967fa9883690388b6f":"0xad78ebc5ac6200000","0x64e02abb016cc23a2934f6bcddb681905021d563":"0x3635c9adc5dea00000","0x64e03ef070a54703b7184e48276c5c0077ef4b34":"0x1158e460913d000000","0x64e2de21200b1899c3a0c0653b5040136d0dc842":"0x43c33c1937564800000","0x64ec8a5b743f3479e707dae9ee20ddaa4f40f1d9":"0xad78ebc5ac6200000","0x6503860b191008c15583bfc88158099301762828":"0x3635c9adc5dea00000","0x65053191319e067a25e6361d47f37f6318f83419":"0x155bd9307f9fe80000","0x65093b239bbfba23c7775ca7da5a8648a9f54cf7":"0x15af1d78b58c400000","0x6509eeb1347e842ffb413e37155e2cbc738273fd":"0x6c6b935b8bbd400000","0x650b425555e4e4c51718146836a2c1ee77a5b421":"0x43c33c1937564800000","0x650cf67db060cce17568d5f2a423687c49647609":"0x56bc75e2d63100000","0x6510df42a599bcb0a519cca961b488759a6f6777":"0x6c6b935b8bbd400000","0x653675b842d7d8b461f722b4117cb81dac8e639d":"0x1ae361fc1451c0000","0x654b7e808799a83d7287c67706f2abf49a496404":"0x6acb3df27e1f880000","0x654f524847b3a6acc0d3d5f1f362b603edf65f96":"0x1b1ae4d6e2ef5000000","0x655934da8e744eaa3de34dbbc0894c4eda0b61f2":"0xad78ebc5ac6200000","0x655d5cd7489629e2413c2105b5a172d933c27af8":"0xdb03186cd840a60000","0x656018584130db83ab0591a8128d9381666a8d0e":"0x3779f912019fc0000","0x6560941328ff587cbc56c38c78238a7bb5f442f6":"0x2861906b59c47a0000","0x656579daedd29370d9b737ee3f5cd9d84bc2b342":"0x4d853c8f8908980000","0x657473774f63ac3d6279fd0743d5790c4f161503":"0xad78ebc5ac6200000","0x6580b1bc94390f04b397bd73e95d96ef11eaf3a8":"0x1158e460913d00000","0x65849be1af20100eb8a3ba5a5be4d3ae8db5a70e":"0x15af1d78b58c400000","0x659c0a72c767a3a65ced0e1ca885a4c51fd9b779":"0x6c6b935b8bbd400000","0x65a52141f56bef98991724c6e7053381da8b5925":"0x3429c335d57fe0000","0x65a9dad42e1632ba3e4e49623fab62a17e4d3611":"0x50c4cb2a10c600000","0x65af8d8b5b1d1eedfa77bcbc96c1b133f83306df":"0x55005f0c614480000","0x65af9087e05167715497c9a5a749189489004def":"0x2d43f3ebfafb2c0000","0x65b42faecc1edfb14283ca979af545f63b30e60c":"0xfc936392801c0000","0x65d33eb39cda6453b19e61c1fe4db93170ef9d34":"0xb98bc829a6f90000","0x65d8dd4e251cbc021f05b010f2d5dc520c3872e0":"0x2d43579a36a90e0000","0x65ea26eabbe2f64ccccfe06829c25d4637520225":"0x25f273933db5700000","0x65ea67ad3fb56ad5fb94387dd38eb383001d7c68":"0x56bc75e2d63100000","0x65ebaed27edb9dcc1957aee5f452ac2105a65c0e":"0x937dfadae25e29b8000","0x65ee20b06d9ad589a7e7ce04b9f5f795f402aece":"0x6c6b935b8bbd400000","0x65f534346d2ffb787fa9cf185d745ba42986bd6e":"0x1b1ae4d6e2ef500000","0x65f5870f26bce089677dfc23b5001ee492483428":"0x112b1f155aa32a30000","0x65fd02d704a12a4dace9471b0645f962a89671c8":"0x18d1ce6e427cd8000","0x65ff874fafce4da318d6c93d57e2c38a0d73e820":"0x3638021cecdab00000","0x660557bb43f4be3a1b8b85e7df7b3c5bcd548057":"0x14542ba12a337c00000","0x66082c75a8de31a53913bbd44de3a0374f7faa41":"0x4f2591f896a6500000","0x6611ce59a98b072ae959dc49ad511daaaaa19d6b":"0xad78ebc5ac6200000","0x66201bd227ae6dc6bdfed5fbde811fecfe5e9dd9":"0x203e9e8492788c0000","0x662334814724935b7931ddca6100e00d467727cd":"0x2288269d0783d40000","0x66274fea82cd30b6c29b23350e4f4f3d310a5899":"0x70370550ab82980000","0x662cfa038fab37a01745a364e1b98127c503746d":"0xd5967be4fc3f100000","0x6635b46f711d2da6f0e16370cd8ee43efb2c2d52":"0x6c6b935b8bbd400000","0x663604b0503046e624cd26a8b6fb4742dce02a6f":"0x38b9b797ef68c0000","0x6636d7ac637a48f61d38b14cfd4865d36d142805":"0x1b1ae4d6e2ef500000","0x6640ccf053555c130ae2b656647ea6e31637b9ab":"0x6acb3df27e1f880000","0x66424bd8785b8cb461102a900283c35dfa07ef6a":"0x22e2db26666fc8000","0x664cd67dccc9ac8228b45c55db8d76550b659cdc":"0x155bd9307f9fe80000","0x664e43119870af107a448db1278b044838ffcdaf":"0x15af1d78b58c400000","0x6651736fb59b91fee9c93aa0bd6ea2f7b2506180":"0x1b1ae4d6e2ef500000","0x665b000f0b772750cc3c217a5ef429a92bf1ccbb":"0xd8d726b7177a800000","0x66662006015c1f8e3ccfcaebc8ee6807ee196303":"0x1b1b3a1ac261ec0000","0x666746fb93d1935c5a3c684e725010c4fad0b1d8":"0x1158e460913d00000","0x666b4f37d55d63b7d056b615bb74c96b3b01991a":"0xd8d726b7177a800000","0x66719c0682b2ac7f9e27abebec7edf8decf0ae0d":"0x1158e460913d00000","0x6671b182c9f741a0cd3c356c73c23126d4f9e6f4":"0xad78ebc5ac6200000","0x6679aeecd87a57a73f3356811d2cf49d0c4d96dc":"0x2086ac351052600000","0x667b61c03bb937a9f5d0fc5a09f1ea3363c77035":"0xe664992288f2280000","0x6685fd2e2544702c360b8bb9ee78f130dad16da5":"0x6c6b935b8bbd400000","0x668b6ba8ab08eace39c502ef672bd5ccb6a67a20":"0x697d95d4201333c0000","0x66925de3e43f4b41bf9dadde27d5488ef569ea0d":"0x222c8eb3ff6640000","0x66b0c100c49149935d14c0dc202cce907cea1a3d":"0x6acb3df27e1f880000","0x66b1a63da4dcd9f81fe54f5e3fcb4055ef7ec54f":"0xaeb272adf9cfa0000","0x66b39837cb3cac8a802afe3f12a258bbca62dacd":"0x15af1d78b58c400000","0x66c8331efe7198e98b2d32b938688e3241d0e24f":"0x2098051970e39d00000","0x66cc8ab23c00d1b82acd7d73f38c99e0d05a4fa6":"0x56bc75e2d63100000","0x66dcc5fb4ee7fee046e141819aa968799d644491":"0x487a9a304539440000","0x66e09427c1e63deed7e12b8c55a6a19320ef4b6a":"0x93739534d28680000","0x66ec16ee9caab411c55a6629e318de6ee216491d":"0x2ee449550898e40000","0x66f50406eb1b11a946cab45927cca37470e5a208":"0x6c6b935b8bbd400000","0x66fdc9fee351fa1538eb0d87d819fcf09e7c106a":"0x14627b5d93781b20000","0x67048f3a12a4dd1f626c64264cb1d7971de2ca38":"0x9c2007651b2500000","0x6704f169e0d0b36b57bbc39f3c45437b5ee3d28d":"0x155bd9307f9fe80000","0x671015b97670b10d5e583f3d62a61c1c79c5143f":"0x15af1d78b58c400000","0x6710c2c03c65992b2e774be52d3ab4a6ba217ef7":"0x274d656ac90e3400000","0x671110d96aaff11523cc546bf9940eedffb2faf7":"0xd8d726b7177a800000","0x6715c14035fb57bb3d667f7b707498c41074b855":"0x25f273933db5700000","0x671bbca099ff899bab07ea1cf86965c3054c8960":"0x2b5e3af16b1880000","0x6727daf5b9d68efcab489fedec96d7f7325dd423":"0x6c6b935b8bbd400000","0x672cbca8440a8577097b19aff593a2ad9d28a756":"0x4563918244f400000","0x672ec42faa8cd69aaa71b32cc7b404881d52ff91":"0x21e19e0c9bab2400000","0x672fa0a019088db3166f6119438d07a99f8ba224":"0x2d4ca05e2b43ca80000","0x673144f0ec142e770f4834fee0ee311832f3087b":"0x1b1b6bd7af64c70000","0x67350b5331926f5e28f3c1e986f96443809c8b8c":"0x1314fb370629800000","0x673706b1b0e4dc7a949a7a796258a5b83bb5aa83":"0x368c8623a8b4d100000","0x6742a2cfce8d79a2c4a51b77747498912245cd6a":"0xdfd5b80b7e4680000","0x674adb21df4c98c7a347ac4c3c24266757dd7039":"0x6c6b935b8bbd400000","0x67518e5d02b205180f0463a32004471f753c523e":"0x6b918aac494b168000","0x675d5caa609bf70a18aca580465d8fb7310d1bbb":"0x43c33c1937564800000","0x67632046dcb25a54936928a96f423f3320cbed92":"0x6c6b935b8bbd400000","0x6765df25280e8e4f38d4b1cf446fc5d7eb659e34":"0x56bc75e2d63100000","0x6776e133d9dc354c12a951087b639650f539a433":"0x68155a43676e00000","0x6785513cf732e47e87670770b5419be10cd1fc74":"0x6c6b935b8bbd400000","0x679437eacf437878dc293d48a39c87b7421a216c":"0x37f81821db2680000","0x679b9a109930517e8999099ccf2a914c4c8dd934":"0x340aad21b3b700000","0x67a80e0190721f94390d6802729dd12c31a895ad":"0x6c6b1375bc91560000","0x67b8a6e90fdf0a1cac441793301e8750a9fa7957":"0x30849ebe16369c0000","0x67bc85e87dc34c4e80aafa066ba8d29dbb8e438e":"0x15d1cf4176aeba0000","0x67c926093e9b8927933810d98222d62e2b8206bb":"0x678a932062e4180000","0x67cfda6e70bf7657d39059b59790e5145afdbe61":"0x23050d095866580000","0x67d682a282ef73fb8d6e9071e2614f47ab1d0f5e":"0x3635c9adc5dea00000","0x67d6a8aa1bf8d6eaf7384e993dfdf10f0af68a61":"0xabcbb5718974b8000","0x67da922effa472a6b124e84ea8f86b24e0f515aa":"0x1158e460913d00000","0x67df242d240dd4b8071d72f8fcf35bb3809d71e8":"0xd8d726b7177a800000","0x67ee406ea4a7ae6a3a381eb4edd2f09f174b4928":"0x3829635f0968b00000","0x67f2bb78b8d3e11f7c458a10b5c8e0a1d374467d":"0x61093d7c2c6d380000","0x67fc527dce1785f0fb8bc7e518b1c669f7ecdfb5":"0xd02ab486cedc00000","0x68027d19558ed7339a08aee8de3559be063ec2ea":"0x6c6b935b8bbd400000","0x680640838bd07a447b168d6d923b90cf6c43cdca":"0x5dc892aa1131c80000","0x6807ddc88db489b033e6b2f9a81553571ab3c805":"0x19f8e7559924c0000","0x680d5911ed8dd9eec45c060c223f89a7f620bbd5":"0x43c33c1937564800000","0x6811b54cd19663b11b94da1de2448285cd9f68d9":"0x3ba1910bf341b00000","0x68190ca885da4231874c1cfb42b1580a21737f38":"0xcf152640c5c8300000","0x682897bc4f8e89029120fcffb787c01a93e64184":"0x21e19e0c9bab2400000","0x68295e8ea5afd9093fc0a465d157922b5d2ae234":"0x1154e53217ddb0000","0x682e96276f518d31d7e56e30dfb009c1218201bd":"0x1158e460913d00000","0x6835c8e8b74a2ca2ae3f4a8d0f6b954a3e2a8392":"0x3429c335d57fe0000","0x683633010a88686bea5a98ea53e87997cbf73e69":"0x56b394263a40c0000","0x683dba36f7e94f40ea6aea0d79b8f521de55076e":"0x796e3ea3f8ab00000","0x68419c6dd2d3ce6fcbb3c73e2fa079f06051bde6":"0x6acb3df27e1f880000","0x68473b7a7d965904bedba556dfbc17136cd5d434":"0x56bc75e2d63100000","0x6847825bdee8240e28042c83cad642f286a3bddc":"0x5150ae84a8cdf00000","0x684a44c069339d08e19a75668bdba303be855332":"0xed2b525841adfc00000","0x68531f4dda808f5320767a03113428ca0ce2f389":"0x10d3aa536e2940000","0x687927e3048bb5162ae7c15cf76bd124f9497b9e":"0x6c6b935b8bbd400000","0x68809af5d532a11c1a4d6e32aac75c4c52b08ead":"0x21e19e0c9bab2400000","0x6886ada7bbb0617bda842191c68c922ea3a8ac82":"0x3ee23bde0e7d200000","0x68883e152e5660fee59626e7e3b4f05110e6222f":"0xb94633be975a62a0000","0x688a569e965524eb1d0ac3d3733eab909fb3d61e":"0x478eae0e571ba00000","0x688eb3853bbcc50ecfee0fa87f0ab693cabdef02":"0x6b10a18400647c00000","0x68a7425fe09eb28cf86eb1793e41b211e57bd68d":"0x243d4d18229ca20000","0x68a86c402388fddc59028fec7021e98cbf830eac":"0x10910d4cdc9f60000","0x68acdaa9fb17d3c309911a77b05f5391fa034ee9":"0x1e52e336cde22180000","0x68addf019d6b9cab70acb13f0b3117999f062e12":"0x2b51212e6b7c88000","0x68b31836a30a016ada157b638ac15da73f18cfde":"0x168d28e3f00280000","0x68b6854788a7c6496cdbf5f84b9ec5ef392b78bb":"0x42bf06b78ed3b500000","0x68c08490c89bf0d6b6f320b1aca95c8312c00608":"0xd8d726b7177a800000","0x68c7d1711b011a33f16f1f55b5c902cce970bdd7":"0x83d6c7aab63600000","0x68c8791dc342c373769ea61fb7b510f251d32088":"0x3635c9adc5dea00000","0x68df947c495bebaeb8e889b3f953d533874bf106":"0x1d9945ab2b03480000","0x68e8022740f4af29eb48db32bcecddfd148d3de3":"0x3635c9adc5dea00000","0x68ec79d5be7155716c40941c79d78d17de9ef803":"0x1b233877b5208c0000","0x68eec1e288ac31b6eaba7e1fbd4f04ad579a6b5d":"0x6c6b935b8bbd400000","0x68f525921dc11c329b754fbf3e529fc723c834cd":"0x57473d05dabae80000","0x68f719ae342bd7fef18a05cbb02f705ad38ed5b2":"0x38ebad5cdc90280000","0x68f7573cd457e14c03fea43e302d30347c10705c":"0x10f0cf064dd59200000","0x68f8f45155e98c5029a4ebc5b527a92e9fa83120":"0xf07b44b40793208000","0x68fe1357218d095849cd579842c4aa02ff888d93":"0x6c6b935b8bbd400000","0x690228e4bb12a8d4b5e0a797b0c5cf2a7509131e":"0x65ea3db75546600000","0x690594d306613cd3e2fd24bca9994ad98a3d73f8":"0x6c6b935b8bbd400000","0x69073269729e6414b26ec8dc0fd935c73b579f1e":"0x65a4da25d3016c00000","0x6919dd5e5dfb1afa404703b9faea8cee35d00d70":"0x14061b9d77a5e980000","0x693492a5c51396a482881669ccf6d8d779f00951":"0x12bf50503ae3038000","0x693d83be09459ef8390b2e30d7f7c28de4b4284e":"0x6c6b935b8bbd400000","0x69517083e303d4fbb6c2114514215d69bc46a299":"0x56bc75e2d63100000","0x695550656cbf90b75d92ad9122d90d23ca68ca4d":"0x3635c9adc5dea00000","0x6958f83bb2fdfb27ce0409cd03f9c5edbf4cbedd":"0x43c33c1937564800000","0x695b0f5242753701b264a67071a2dc880836b8db":"0xe398811bec680000","0x695b4cce085856d9e1f9ff3e79942023359e5fbc":"0x10f0cf064dd59200000","0x6966063aa5de1db5c671f3dd699d5abe213ee902":"0x1b1ae4d6e2ef5000000","0x6974c8a414ceaefd3c2e4dfdbef430568d9a960b":"0x121ea68c114e510000","0x6978696d5150a9a263513f8f74c696f8b1397cab":"0x167f482d3c5b1c00000","0x69797bfb12c9bed682b91fbc593591d5e4023728":"0x21e19e0c9bab2400000","0x697f55536bf85ada51841f0287623a9f0ed09a17":"0x21e19e0c9bab2400000","0x6982fe8a867e93eb4a0bd051589399f2ec9a5292":"0x6c6b935b8bbd400000","0x698a8a6f01f9ab682f637c7969be885f6c5302bf":"0x10d3aa536e2940000","0x698ab9a2f33381e07c0c47433d0d21d6f336b127":"0x1158e460913d00000","0x6994fb3231d7e41d491a9d68d1fa4cae2cc15960":"0xd8d726b7177a800000","0x699c9ee47195511f35f862ca4c22fd35ae8ffbf4":"0x4563918244f400000","0x699fc6d68a4775573c1dcdaec830fefd50397c4e":"0x340aad21b3b700000","0x69af28b0746cac0da17084b9398c5e36bb3a0df2":"0x3677036edf0af60000","0x69b80ed90f84834afa3ff82eb964703b560977d6":"0x1731790534df20000","0x69b81d5981141ec7a7141060dfcf8f3599ffc63e":"0x10f0cf064dd59200000","0x69bcfc1d43b4ba19de7b274bdffb35139412d3d7":"0x35659ef93f0fc40000","0x69bd25ade1a3346c59c4e930db2a9d715ef0a27a":"0xd8d726b7177a800000","0x69c08d744754de709ce96e15ae0d1d395b3a2263":"0x3635c9adc5dea00000","0x69c2d835f13ee90580408e6a3283c8cca6a434a2":"0x238fd42c5cf0400000","0x69c94e07c4a9be3384d95dfa3cb9290051873b7b":"0x3cb71f51fc5580000","0x69cb3e2153998d86e5ee20c1fcd1a6baeeb2863f":"0xd8d726b7177a800000","0x69d39d510889e552a396135bfcdb06e37e387633":"0xd8d726b7177a800000","0x69d98f38a3ba3dbc01fa5c2c1427d862832f2f70":"0x152d02c7e14af6800000","0x69e2e2e704307ccc5b5ca3f164fece2ea7b2e512":"0x17b7883c06916600000","0x69ff429074cb9b6c63bc914284bce5f0c8fbf7d0":"0x1b1ae4d6e2ef500000","0x69ff8901b541763f817c5f2998f02dcfc1df2997":"0x22b1c8c1227a00000","0x6a023af57d584d845e698736f130db9db40dfa9a":"0x55b201c8900980000","0x6a04f5d53fc0f515be942b8f12a9cb7ab0f39778":"0xa9aab3459be1940000","0x6a05b21c4f17f9d73f5fb2b0cb89ff5356a6cc7e":"0x5150ae84a8cdf00000","0x6a0f056066c2d56628850273d7ecb7f8e6e9129e":"0x10f0d293cc7a5880000","0x6a13d5e32c1fd26d7e91ff6e053160a89b2c8aad":"0x2e62f20a69be40000","0x6a2e86469a5bf37cee82e88b4c3863895d28fcaf":"0x1c229266385bbc0000","0x6a3694424c7cc6b8bcd9bccaba540cc1f5df18d7":"0x6c6b935b8bbd400000","0x6a42ca971c6578d5ade295c3e7f4ad331dd3424e":"0x14542ba12a337c00000","0x6a44af96b3f032ae641beb67f4b6c83342d37c5d":"0x19274b259f6540000","0x6a4c8907b600248057b1e46354b19bdc859c991a":"0x1158e460913d00000","0x6a514e6242f6b68c137e97fea1e78eb555a7e5f7":"0x1158e460913d00000","0x6a53d41ae4a752b21abed5374649953a513de5e5":"0x6c6b935b8bbd400000","0x6a6159074ab573e0ee581f0f3df2d6a594629b74":"0x10ce1d3d8cb3180000","0x6a6337833f8f6a6bf10ca7ec21aa810ed444f4cb":"0x37bd24345ce8a40000","0x6a6353b971589f18f2955cba28abe8acce6a5761":"0xa2a15d09519be00000","0x6a63fc89abc7f36e282d80787b7b04afd6553e71":"0x8ac7230489e800000","0x6a679e378fdce6bfd97fe62f043c6f6405d79e99":"0xd8d726b7177a800000","0x6a686bf220b593deb9b7324615fb9144ded3f39d":"0x4f2591f896a6500000","0x6a6b18a45a76467e2e5d5a2ef911c3e12929857b":"0x115d3a99a9614f400000","0x6a74844d8e9cb5581c45079a2e94462a6cee8821":"0x3ab53a552dd4c90000","0x6a7b2e0d88867ff15d207c222bebf94fa6ce8397":"0xcb49b44ba602d800000","0x6a7c252042e7468a3ff773d6450bba85efa26391":"0x1b1ae4d6e2ef500000","0x6a8a4317c45faa0554ccdb482548183e295a24b9":"0x3635c9adc5dea00000","0x6a8cea2de84a8df997fd3f84e3083d93de57cda9":"0x56be03ca3e47d8000","0x6a9758743b603eea3aa0524b42889723c4153948":"0x22385a827e815500000","0x6aa5732f3b86fb8c81efbe6b5b47b563730b06c8":"0x3635c9adc5dea00000","0x6ab323ae5056ed0a453072c5abe2e42fcf5d7139":"0x2fb474098f67c00000","0x6ab5b4c41cddb829690c2fda7f20c85e629dd5d5":"0x64d4af714c32900000","0x6ac40f532dfee5118117d2ad352da77d4f6da2c8":"0x15af1d78b58c400000","0x6ac4d4be2db0d99da3faaaf7525af282051d6a90":"0x458ca58a962b28000","0x6acddca3cd2b4990e25cd65c24149d0912099e79":"0xa2a1e07c9f6c908000","0x6ad90be252d9cd464d998125fab693060ba8e429":"0xd8d726b7177a800000","0x6add932193cd38494aa3f03aeccc4b7ab7fabca2":"0x4db73254763000000","0x6ae57f27917c562a132a4d1bf7ec0ac785832926":"0x14542ba12a337c00000","0x6aeb9f74742ea491813dbbf0d6fcde1a131d4db3":"0x17e554308aa0300000","0x6af235d2bbe050e6291615b71ca5829658810142":"0xa2a15d09519be00000","0x6af6c7ee99df271ba15bf384c0b764adcb4da182":"0x36356633ebd8ea0000","0x6af8e55969682c715f48ad4fc0fbb67eb59795a3":"0x6c6b935b8bbd400000","0x6af940f63ec9b8d876272aca96fef65cdacecdea":"0xa2a15d09519be00000","0x6af9f0dfeeaebb5f64bf91ab771669bf05295553":"0x15af1d78b58c400000","0x6aff1466c2623675e3cb0e75e423d37a25e442eb":"0x5dc892aa1131c80000","0x6b0da25af267d7836c226bcae8d872d2ce52c941":"0x14542ba12a337c00000","0x6b10f8f8b3e3b60de90aa12d155f9ff5ffb22c50":"0x6c6b935b8bbd400000","0x6b17598a8ef54f797ae515ccb6517d1859bf8011":"0x56bc75e2d63100000","0x6b20c080606a79c73bd8e75b11717a4e8db3f1c3":"0x103f735803f0140000","0x6b2284440221ce16a8382de5ff0229472269deec":"0x3635c9adc5dea00000","0x6b30f1823910b86d3acb5a6afc9defb6f3a30bf8":"0xe3aeb5737240a00000","0x6b38de841fad7f53fe02da115bd86aaf662466bd":"0x5dc892aa1131c80000","0x6b4b99cb3fa9f7b74ce3a48317b1cd13090a1a7a":"0x31b327e695de20000","0x6b5ae7bf78ec75e90cb503c778ccd3b24b4f1aaf":"0x2b5e3af16b18800000","0x6b63a2dfb2bcd0caec0022b88be30c1451ea56aa":"0x2bdb6bf91f7f4c8000","0x6b6577f3909a4d6de0f411522d4570386400345c":"0x65ea3db75546600000","0x6b72a8f061cfe6996ad447d3c72c28c0c08ab3a7":"0xe78c6ac79912620000","0x6b760d4877e6a627c1c967bee451a8507ddddbab":"0x3154c9729d05780000","0x6b83bae7b565244558555bcf4ba8da2011891c17":"0x6c6b935b8bbd400000","0x6b925dd5d8ed6132ab6d0860b82c44e1a51f1fee":"0x503b203e9fba200000","0x6b94615db750656ac38c7e1cf29a9d13677f4e15":"0x28a857425466f800000","0x6b951a43274eeafc8a0903b0af2ec92bf1efc839":"0x56bc75e2d63100000","0x6b992521ec852370848ad697cc2df64e63cc06ff":"0x3635c9adc5dea00000","0x6ba8f7e25fc2d871618e24e40184199137f9f6aa":"0x15af64869a6bc20000","0x6ba9b21b35106be159d1c1c2657ac56cd29ffd44":"0xf2dc7d47f156000000","0x6baf7a2a02ae78801e8904ad7ac05108fc56cff6":"0x3635c9adc5dea00000","0x6bb2aca23fa1626d18efd6777fb97db02d8e0ae4":"0x878678326eac9000000","0x6bb4a661a33a71d424d49bb5df28622ed4dffcf4":"0x222c8eb3ff66400000","0x6bb50813146a9add42ee22038c9f1f7469d47f47":"0xada55474b81340000","0x6bbc3f358a668dd1a11f0380f3f73108426abd4a":"0xd8d726b7177a800000","0x6bbd1e719390e6b91043f8b6b9df898ea8001b34":"0x6c6c4fa6c3da588000","0x6bc85acd5928722ef5095331ee88f484b8cf8357":"0x9c2007651b2500000","0x6bd3e59f239fafe4776bb9bddd6bee83ba5d9d9f":"0x3635c9adc5dea00000","0x6bd457ade051795df3f2465c3839aed3c5dee978":"0x3634bf39ab98788000","0x6be16313643ebc91ff9bb1a2e116b854ea933a45":"0x1b1ae4d6e2ef500000","0x6be7595ea0f068489a2701ec4649158ddc43e178":"0x6c6b935b8bbd400000","0x6be9030ee6e2fbc491aca3de4022d301772b7b7d":"0x1731790534df20000","0x6bec311ad05008b4af353c958c40bd06739a3ff3":"0x377f62a0f0a62700000","0x6bf7b3c065f2c1e7c6eb092ba0d15066f393d1b8":"0x15af1d78b58c400000","0x6bf86f1e2f2b8032a95c4d7738a109d3d0ed8104":"0x62a992e53a0af00000","0x6c05e34e5ef2f42ed09deff1026cd66bcb6960bb":"0x6c6b935b8bbd400000","0x6c08a6dc0173c7342955d1d3f2c065d62f83aec7":"0x1158e460913d00000","0x6c0ae9f043c834d44271f13406593dfe094f389f":"0x52442ae133b62a8000","0x6c0cc917cbee7d7c099763f14e64df7d34e2bf09":"0xd8d726b7177a80000","0x6c0e712f405c59725fe829e9774bf4df7f4dd965":"0xc2868889ca68a440000","0x6c101205b323d77544d6dc52af37aca3cec6f7f1":"0x21e19e0c9bab2400000","0x6c15ec3520bf8ebbc820bd0ff19778375494cf9d":"0x6cb7e74867d5e60000","0x6c1ddd33c81966dc8621776071a4129482f2c65f":"0x878678326eac9000000","0x6c25327f8dcbb2f45e561e86e35d8850e53ab059":"0x3bcdf9bafef2f00000","0x6c2e9be6d4ab450fd12531f33f028c614674f197":"0xc2127af858da700000","0x6c359e58a13d4578a9338e335c67e7639f5fb4d7":"0xbd15b94fc8b280000","0x6c3d18704126aa99ee3342ce60f5d4c85f1867cd":"0x2b5e3af16b1880000","0x6c474bc66a54780066aa4f512eefa773abf919c7":"0x5188315f776b80000","0x6c4e426e8dc005dfa3516cb8a680b02eea95ae8e":"0x487a9a304539440000","0x6c52cf0895bb35e656161e4dc46ae0e96dd3e62c":"0xd8d8583fa2d52f0000","0x6c5422fb4b14e6d98b6091fdec71f1f08640419d":"0x15af1d78b58c400000","0x6c5c3a54cda7c2f118edba434ed81e6ebb11dd7a":"0xad78ebc5ac6200000","0x6c63f84556d290bfcd99e434ee9997bfd779577a":"0x6c6b935b8bbd400000","0x6c63fc85029a2654d79b2bea4de349e4524577c5":"0x23c757072b8dd00000","0x6c6564e5c9c24eaaa744c9c7c968c9e2c9f1fbae":"0x499b42a21139640000","0x6c67d6db1d03516c128b8ff234bf3d49b26d2941":"0x152d02c7e14af6800000","0x6c67e0d7b62e2a08506945a5dfe38263339f1f22":"0x6acb3df27e1f880000","0x6c6aa0d30b64721990b9504a863fa0bfb5e57da7":"0x925e06eec972b00000","0x6c714a58fff6e97d14b8a5e305eb244065688bbd":"0xd8d726b7177a800000","0x6c800d4b49ba07250460f993b8cbe00b266a2553":"0x1ab2cf7c9f87e20000","0x6c808cabb8ff5fbb6312d9c8e84af8cf12ef0875":"0xd8d8583fa2d52f0000","0x6c822029218ac8e98a260c1e064029348839875b":"0x10f97b787e1e3080000","0x6c84cba77c6db4f7f90ef13d5ee21e8cfc7f8314":"0x6c6b935b8bbd400000","0x6c8687e3417710bb8a93559021a1469e6a86bc77":"0x25b2da278d96b7b8000","0x6c882c27732cef5c7c13a686f0a2ea77555ac289":"0x152d02c7e14af6800000","0x6ca5de00817de0cedce5fd000128dede12648b3c":"0x1158e460913d00000","0x6ca6a132ce1cd288bee30ec7cfeffb85c1f50a54":"0x6c6b935b8bbd400000","0x6cb11ecb32d3ce829601310636f5a10cf7cf9b5f":"0x43fe8949c3801f50000","0x6cc1c878fa6cde8a9a0b8311247e741e4642fe6d":"0x35659ef93f0fc40000","0x6ccb03acf7f53ce87aadcc21a9932de915f89804":"0x1b1ae4d6e2ef5000000","0x6cd212aee04e013f3d2abad2a023606bfb5c6ac7":"0x6c6acc67d7b1d40000","0x6cd228dc712169307fe27ceb7477b48cfc8272e5":"0x434ea94db8a500000","0x6ce1b0f6adc47051e8ab38b39edb4186b03babcc":"0x41799794cd24cc0000","0x6ceae3733d8fa43d6cd80c1a96e8eb93109c83b7":"0x102794ad20da680000","0x6d0569e5558fc7df2766f2ba15dc8aeffc5beb75":"0xd8e6001e6c302b0000","0x6d120f0caae44fd94bcafe55e2e279ef96ba5c7a":"0xd8d726b7177a800000","0x6d1456fff0104ee844a3314737843338d24cd66c":"0x7b06ce87fdd680000","0x6d20ef9704670a500bb269b5832e859802049f01":"0x70c1cc73b00c80000","0x6d2f976734b9d0070d1883cf7acab8b3e4920fc1":"0x21e19e0c9bab2400000","0x6d39a9e98f81f769d73aad2cead276ac1387babe":"0x155bd9307f9fe80000","0x6d3b7836a2b9d899721a4d237b522385dce8dfcd":"0x3636c25e66ece70000","0x6d3f2ba856ccbb0237fa7661156b14b013f21240":"0x3635c9adc5dea00000","0x6d4008b4a888a826f248ee6a0b0dfde9f93210b9":"0x127fcb8afae20d00000","0x6d40ca27826d97731b3e86effcd7b92a4161fe89":"0x6c6b935b8bbd400000","0x6d44974a31d187eda16ddd47b9c7ec5002d61fbe":"0x32f51edbaaa3300000","0x6d4b5c05d06a20957e1748ab6df206f343f92f01":"0x21f360699bf825f8000","0x6d4cbf3d8284833ae99344303e08b4d614bfda3b":"0x28a857425466f800000","0x6d59b21cd0e2748804d9abe064eac2bef0c95f27":"0x6c6b935b8bbd400000","0x6d63d38ee8b90e0e6ed8f192eda051b2d6a58bfd":"0x1a055690d9db80000","0x6d6634b5b8a40195d949027af4828802092ceeb6":"0xa2a15d09519be00000","0x6d7d1c949511f88303808c60c5ea0640fcc02683":"0x21e19e0c9bab2400000","0x6d846dc12657e91af25008519c3e857f51707dd6":"0xf8d30bc92342f80000","0x6d9193996b194617211106d1635eb26cc4b66c6c":"0x15aa1e7e9dd51c0000","0x6d9997509882027ea947231424bedede2965d0ba":"0x6c81c7b31195e00000","0x6da0ed8f1d69339f059f2a0e02471cb44fb8c3bb":"0x32bc38bb63a8160000","0x6db72bfd43fef465ca5632b45aab7261404e13bf":"0x6c6b935b8bbd400000","0x6dbe8abfa1742806263981371bf3d35590806b6e":"0x43c33c1937564800000","0x6dc3f92baa1d21dab7382b893261a0356fa7c187":"0x5dc892aa1131c80000","0x6dc7053a718616cfc78bee6382ee51add0c70330":"0x6c6b935b8bbd400000","0x6dcc7e64fcafcbc2dc6c0e5e662cb347bffcd702":"0x43c33c1937564800000","0x6dda5f788a6c688ddf921fa3852eb6d6c6c62966":"0x22b1c8c1227a00000","0x6ddb6092779d5842ead378e21e8120fd4c6bc132":"0x6c6b935b8bbd400000","0x6ddfef639155daab0a5cb4953aa8c5afaa880453":"0x62a992e53a0af00000","0x6de02f2dd67efdb7393402fa9eaacbcf589d2e56":"0x40138b917edfb80000","0x6de4b581385cf7fc9fe8c77d131fe2ee7724c76a":"0x7d2997733dcce40000","0x6de4d15219182faf3aa2c5d4d2595ff23091a727":"0x55a6e79ccd1d300000","0x6dedf62e743f4d2c2a4b87a787f5424a7aeb393c":"0x9c2007651b2500000","0x6df24f6685a62f791ba337bf3ff67e91f3d4bc3a":"0x756b49d40a48180000","0x6df5c84f7b909aab3e61fe0ecb1b3bf260222ad2":"0xd8d726b7177a800000","0x6dff90e6dc359d2590882b1483edbcf887c0e423":"0x3635c9adc5dea00000","0x6e01e4ad569c95d007ada30d5e2db12888492294":"0xd8d726b7177a800000","0x6e073b66d1b8c66744d88096a8dd99ec7e0228da":"0xd8d726b7177a800000","0x6e0ee70612c976287d499ddfa6c0dcc12c06deea":"0x70bd5b95621460000","0x6e12b51e225b4a4372e59ad7a2a1a13ea3d3a137":"0x30046c8cc775f040000","0x6e1a046caf5b4a57f4fd4bc173622126b4e2fd86":"0x61093d7c2c6d380000","0x6e1ea4b183e252c9bb7767a006d4b43696cb8ae9":"0xff3783c85eed08000","0x6e255b700ae7138a4bacf22888a9e2c00a285eec":"0xd8d726b7177a800000","0x6e270ad529f1f0b8d9cb6d2427ec1b7e2dc64a74":"0xad78ebc5ac6200000","0x6e2eab85dc89fe29dc0aa1853247dab43a523d56":"0x4563918244f400000","0x6e3a51db743d334d2fe88224b5fe7c008e80e624":"0x5bf0ba6634f680000","0x6e4c2ab7db026939dbd3bc68384af660a61816b2":"0x90d972f32323c0000","0x6e4d2e39c8836629e5b487b1918a669aebdd9536":"0x3635c9adc5dea00000","0x6e5c2d9b1c546a86eefd5d0a5120c9e4e730190e":"0xad201a6794ff80000","0x6e60aee1a78f8eda8b424c73e353354ae67c3042":"0xbd35a48d9919e60000","0x6e64e6129f224e378c0e6e736a7e7a06c211e9ec":"0x3635c9adc5dea00000","0x6e6d5bbbb9053b89d744a27316c2a7b8c09b547d":"0x3152710a023e6d8000","0x6e72b2a1186a8e2916543b1cb36a68870ea5d197":"0xa1544be879ea80000","0x6e761eaa0f345f777b5441b73a0fa5b56b85f22d":"0x6c6b935b8bbd400000","0x6e79edd4845b076e4cd88d188b6e432dd93f35aa":"0x33c5499031720c0000","0x6e8212b722afd408a7a73ed3e2395ee6454a0330":"0x89e917994f71c0000","0x6e84876dbb95c40b6656e42ba9aea08a993b54dc":"0x3bbc60e3b6cbbe0000","0x6e84c2fd18d8095714a96817189ca21cca62bab1":"0x127b6c702621cd8000","0x6e866d032d405abdd65cf651411d803796c22311":"0x6c6b935b8bbd400000","0x6e899e59a9b41ab7ea41df7517860f2acb59f4fd":"0x43c33c1937564800000","0x6e89c51ea6de13e06cdc748b67c4410fe9bcab03":"0xd8d726b7177a800000","0x6e8a26689f7a2fdefd009cbaaa5310253450daba":"0x6f213717bad8d30000","0x6e96faeda3054302c45f58f161324c99a3eebb62":"0x1158e460913d00000","0x6eb0a5a9ae96d22cf01d8fd6483b9f38f08c2c8b":"0xd8d726b7177a800000","0x6eb3819617404058268f0c3cff3596bfe9148c1c":"0x5a87e7d7f5f6580000","0x6eb5578a6bb7c32153195b0d8020a6914852c059":"0x8bc2abf40221f4800000","0x6ebb5e6957aa821ef659b6018a393a504cae4450":"0x6c6b935b8bbd400000","0x6ebcf9957f5fc5e985add475223b04b8c14a7aed":"0x5dc892aa1131c80000","0x6ec3659571b11f889dd439bcd4d67510a25be57e":"0x6aaf7c8516d0c0000","0x6ec89b39f9f5276a553e8da30e6ec17aa47eefc7":"0x18424f5f0b1b4e0000","0x6ec96d13bdb24dc7a557293f029e02dd74b97a55":"0xd8d726b7177a800000","0x6ecaefa6fc3ee534626db02c6f85a0c395571e77":"0x2086ac351052600000","0x6ed2a12b02f8c688c7b5d3a6ea14d63687dab3b6":"0x6c6b935b8bbd400000","0x6ed884459f809dfa1016e770edaf3e9fef46fa30":"0xb852d6782093f10000","0x6edf7f5283725c953ee64317f66188af1184b033":"0x1b464311d45a6880000","0x6ee8aad7e0a065d8852d7c3b9a6e5fdc4bf50c00":"0x1158e460913d00000","0x6eefdc850e87b715c72791773c0316c3559b58a4":"0xd8d726b7177a800000","0x6ef9e8c9b6217d56769af97dbb1c8e1b8be799d2":"0x9ddc1e3b901180000","0x6efba8fb2ac5b6730729a972ec224426a287c3ad":"0xf5985fbcbe1680000","0x6efd90b535e00bbd889fda7e9c3184f879a151db":"0x22385a827e815500000","0x6f051666cb4f7bd2b1907221b829b555d7a3db74":"0x5f68e8131ecf800000","0x6f0edd23bcd85f6015f9289c28841fe04c83efeb":"0x10910d4cdc9f60000","0x6f137a71a6f197df2cbbf010dcbd3c444ef5c925":"0x6c6b935b8bbd400000","0x6f176065e88e3c6fe626267d18a088aaa4db80bc":"0xbed1d0263d9f000000","0x6f18ec767e320508195f1374500e3f2e125689ff":"0x3635c9adc5dea00000","0x6f1f4907b8f61f0c51568d692806b382f50324f5":"0x6c6b935b8bbd400000","0x6f24c9af2b763480515d1b0951bb77a540f1e3f9":"0x6acb3df27e1f880000","0x6f2576da4de283bbe8e3ee69ddd66e5e711db3f5":"0x44591d67fecc800000","0x6f29bb375be5ed34ed999bb830ee2957dde76d16":"0x6c6b935b8bbd400000","0x6f2a31900e240395b19f159c1d00dfe4d898ebdf":"0x6c660645aa47180000","0x6f2a42e6e033d01061131929f7a6ee1538021e52":"0x6c6b935b8bbd400000","0x6f39cc37caaa2ddc9b610f6131e0619fae772a3c":"0x1b1ae4d6e2ef500000","0x6f44ca09f0c6a8294cbd519cdc594ad42c67579f":"0x2b5e3af16b1880000","0x6f50929777824c291a49c46dc854f379a6bea080":"0x138400eca364a00000","0x6f6cf20649a9e973177ac67dbadee4ebe5c7bdda":"0x11363297d01a8600000","0x6f791d359bc3536a315d6382b88311af8ed6da47":"0x4fcc1a89027f00000","0x6f794dbdf623daa6e0d00774ad6962737c921ea4":"0x6c6b935b8bbd400000","0x6f7ac681d45e418fce8b3a1db5bc3be6f06c9849":"0x6c6b935b8bbd400000","0x6f81f3abb1f933b1df396b8e9cc723a89b7c9806":"0xf2dc7d47f15600000","0x6f8f0d15cc96fb7fe94f1065bc6940f8d12957b2":"0x3635c9adc5dea00000","0x6f92d6e4548c78996509ee684b2ee29ba3c532b4":"0x3635c9adc5dea00000","0x6fa60df818a5446418b1bbd62826e0b9825e1318":"0x2cb92cc8f6714400000","0x6fa6388d402b30afe59934c3b9e13d1186476018":"0x24521e2a3017b80000","0x6fa72015fa78696efd9a86174f7f1f21019286b1":"0x487a9a304539440000","0x6fc25e7e00ca4f60a9fe6f28d1fde3542e2d1079":"0x2aef353bcddd600000","0x6fc53662371dca587b59850de78606e2359df383":"0x9c2007651b2500000","0x6fcc2c732bdd934af6ccd16846fb26ef89b2aa9b":"0x21e2b1d42261d490000","0x6fd4e0f3f32bee6d3767fdbc9d353a6d3aab7899":"0x25b064a875ea940000","0x6fd947d5a73b175008ae6ee8228163da289b167d":"0x65a4da25d3016c00000","0x6fd98e563d12ce0fd60f4f1f850ae396a9823c02":"0x445be3f2ef87940000","0x6fddbd9bca66e28765c2162c8433548c1052ed11":"0x1184429b82a818800000","0x6ff5d361b52ad0b68b1588607ec304ae5665fc98":"0x692ae8897081d00000","0x6ff6cc90d649de4e96cffee1077a5b302a848dcb":"0x18ce79c78802c0000","0x6ffe5cf82cc9ea5e36cad7c2974ce7249f3749e6":"0x692ae8897081d00000","0x7005a772282b1f62afda63f89b5dc6ab64c84cb9":"0x3cfc82e37e9a7400000","0x700711e311bb947355f755b579250ca7fd765a3e":"0x61093d7c2c6d380000","0x7010be2df57bd0ab9ae8196cd50ab0c521aba9f9":"0x6acb3df27e1f880000","0x7023c70956e04a92d70025aad297b539af355869":"0x6c6b935b8bbd400000","0x7025965d2b88da197d4459be3dc9386344cc1f31":"0x6cb7e74867d5e60000","0x702802f36d00250fab53adbcd696f0176f638a49":"0x6c6b935b8bbd400000","0x704819d2e44d6ed1da25bfce84c49fcca25613e5":"0x15af1d78b58c400000","0x704a6eb41ba34f13addde7d2db7df04915c7a221":"0x62a992e53a0af00000","0x704ab1150d5e10f5e3499508f0bf70650f028d4b":"0xd8d726b7177a800000","0x704ae21d762d6e1dde28c235d13104597236db1a":"0x6c6b935b8bbd400000","0x704d243c2978e46c2c86adbecd246e3b295ff633":"0x6d121bebf795f00000","0x704d5de4846d39b53cd21d1c49f096db5c19ba29":"0x83d6c7aab63600000","0x705ddd38355482b8c7d3b515bda1500dd7d7a817":"0x15af1d78b58c400000","0x70616e2892fa269705b2046b8fe3e72fa55816d3":"0x43c33c1937564800000","0x70670fbb05d33014444b8d1e8e7700258b8caa6d":"0x6c6b935b8bbd400000","0x7081fa6baad6cfb7f51b2cca16fb8970991a64ba":"0xcaec005f6c0f68000","0x7085ae7e7e4d932197b5c7858c00a3674626b7a5":"0x14542ba12a337c00000","0x7086b4bde3e35d4aeb24b825f1a215f99d85f745":"0x6c68ccd09b022c0000","0x708a2af425ceb01e87ffc1be54c0f532b20eacd6":"0x745d483b1f5a18000","0x708ea707bae4357f1ebea959c3a250acd6aa21b3":"0x1b1ae4d6e2ef500000","0x708fa11fe33d85ad1befcbae3818acb71f6a7d7e":"0xfc936392801c0000","0x7091303116d5f2389b23238b4d656a8596d984d3":"0x3b4e7e80aa58330000","0x7099d12f6ec656899b049a7657065d62996892c8":"0x15af1d78b58c400000","0x709fe9d2c1f1ce42207c9585044a60899f35942f":"0x6c6b935b8bbd400000","0x70a03549aa6168e97e88a508330a5a0bea74711a":"0x487a9a304539440000","0x70a4067d448cc25dc8e70e651cea7cf84e92109e":"0x98a7d9b8314c00000","0x70ab34bc17b66f9c3b63f151274f2a727c539263":"0x6c6b935b8bbd400000","0x70c213488a020c3cfb39014ef5ba6404724bcaa3":"0x692ae8897081d00000","0x70d25ed2c8ada59c088cf70dd22bf2db93acc18a":"0x39474545e4adbc0000","0x70e5e9da735ff077249dcb9aaf3db2a48d9498c0":"0x3635c9adc5dea00000","0x70fee08b00c6c2c04a3c625c1ff77caf1c32df01":"0xad78ebc5ac6200000","0x7101bd799e411cde14bdfac25b067ac890eab8e8":"0x4e9b8aae48de470000","0x7109dd011d15f3122d9d3a27588c10d77744508b":"0x6c6b935b8bbd400000","0x710b0274d712c77e08a5707d6f3e70c0ce3d92cf":"0x15af1d78b58c4000000","0x710be8fd5e2918468be2aabea80d828435d79612":"0xf43fc2c04ee00000","0x71135d8f05963c905a4a07922909235a896a52ea":"0xa2a15d09519be00000","0x711ecf77d71b3d0ea95ce4758afecdb9c131079d":"0x29331e6558f0e00000","0x71213fca313404204ecba87197741aa9dfe96338":"0x340aad21b3b700000","0x712b76510214dc620f6c3a1dd29aa22bf6d214fb":"0x14542ba12a337c00000","0x712ff7370a13ed360973fedc9ff5d2c93a505e9e":"0xd5967be4fc3f100000","0x7133843a78d939c69d4486e10ebc7b602a349ff7":"0x11d5cacce21f840000","0x7148aef33261d8031fac3f7182ff35928daf54d9":"0xde42ee1544dd900000","0x7163758cbb6c4c525e0414a40a049dcccce919bb":"0xad78ebc5ac6200000","0x7168b3bb8c167321d9bdb023a6e9fd11afc9afd9":"0x61093d7c2c6d380000","0x7169724ee72271c534cad6420fb04ee644cb86fe":"0x163c2b40dba5520000","0x716ad3c33a9b9a0a18967357969b94ee7d2abc10":"0x1a2117fe412a480000","0x716ba01ead2a91270635f95f25bfaf2dd610ca23":"0x979e7012056aa780000","0x716d50cca01e938500e6421cc070c3507c67d387":"0x6c6b935b8bbd400000","0x71762c63678c18d1c6378ce068e666381315147e":"0x6c6b935b8bbd400000","0x71784c105117c1f68935797fe159abc74e43d16a":"0x6c81c7b31195e00000","0x7179726f5c71ae1b6d16a68428174e6b34b23646":"0x18ea250097cbaf60000","0x717cf9beab3638308ded7e195e0c86132d163fed":"0x3326ee6f865f4220000","0x7180b83ee5574317f21c8072b191d895d46153c3":"0x18efc84ad0c7b00000","0x71946b7117fc915ed107385f42d99ddac63249c2":"0x6c6b935b8bbd400000","0x719e891fbcc0a33e19c12dc0f02039ca05b801df":"0x14f5538463a1b540000","0x71c7230a1d35bdd6819ed4b9a88e94a0eb0786dd":"0xeca08b353d24140000","0x71d2cc6d02578c65f73c575e76ce8fbcfadcf356":"0x3ecc078688a480000","0x71d9494e50c5dd59c599dba3810ba1755e6537f0":"0xd8d726b7177a800000","0x71e38ff545f30fe14ca863d4f5297fd48c73a5ce":"0xc2127af858da700000","0x71ea5b11ad8d29b1a4cb67bf58ca6c9f9c338c16":"0x56bc75e2d631000000","0x71ec3aec3f8f9221f9149fede06903a0f9a232f2":"0xad78ebc5ac6200000","0x71f2cdd1b046e2da2fbb5a26723422b8325e25a3":"0x56b394263a40c0000","0x71fa22cc6d33206b7d701a163a0dab31ae4d31d6":"0x57473d05dabae80000","0x7201d1c06920cd397ae8ad869bcda6e47ffb1b5a":"0x1158e460913d00000","0x72072a0ef1cff3d567cdd260e708ddc11cbc9a31":"0x56bc75e2d63100000","0x72094f3951ffc9771dced23ada080bcaf9c7cca7":"0x14542ba12a337c00000","0x720994dbe56a3a95929774e20e1fe525cf3704e4":"0x1b1ae4d6e2ef5000000","0x720e6b22bf430966fa32b6acb9a506eebf662c61":"0x83d6c7aab63600000","0x721158be5762b119cc9b2035e88ee4ee78f29b82":"0x21e19e0c9bab2400000","0x721f9d17e5a0e74205947aeb9bc6a7938961038f":"0x2d041d705a2c60000","0x7222fec7711781d26eaa4e8485f7aa3fac442483":"0x18b84570022a200000","0x72393d37b451effb9e1ff3b8552712e2a970d8c2":"0x35659ef93f0fc40000","0x723d8baa2551d2addc43c21b45e8af4ca2bfb2c2":"0x5f68e8131ecf800000","0x72402300e81d146c2e644e2bbda1da163ca3fb56":"0x17b7883c06916600000","0x72480bede81ad96423f2228b5c61be44fb523100":"0x15af1d78b58c4000000","0x724ce858857ec5481c86bd906e83a04882e5821d":"0xa2a15d09519be00000","0x726a14c90e3f84144c765cffacba3e0df11b48be":"0x21e19e0c9bab2400000","0x7283cd4675da58c496556151dafd80c7f995d318":"0x29331e6558f0e00000","0x7286e89cd9de8f7a8a00c86ffdb53992dd9251d1":"0x692ae8897081d00000","0x728f9ab080157db3073156dbca1a169ef3179407":"0x1b1ae4d6e2ef500000","0x7294c918b1aefb4d25927ef9d799e71f93a28e85":"0xaadec983fcff40000","0x7294ec9da310bc6b4bbdf543b0ef45abfc3e1b4d":"0x4a89f54ef0121c00000","0x729aad4627744e53f5d66309aa74448b3acdf46f":"0x6c6b935b8bbd400000","0x72a2fc8675feb972fa41b50dffdbbae7fa2adfb7":"0x9ab4fc67b528c80000","0x72a8260826294726a75bf39cd9aa9e07a3ea14cd":"0x6c6b935b8bbd400000","0x72b05962fb2ad589d65ad16a22559eba1458f387":"0x73f75d1a085ba0000","0x72b5633fe477fe542e742facfd690c137854f216":"0x5a87e7d7f5f6580000","0x72b7a03dda14ca9c661a1d469fd33736f673c8e8":"0x6c6b935b8bbd400000","0x72b904440e90e720d6ac1c2ad79c321dcc1c1a86":"0x54069233bf7f780000","0x72b90a4dc097239492c5b9777dcd1e52ba2be2c2":"0x14542ba12a337c00000","0x72bb27cb99f3e2c2cf90a98f707d30e4a201a071":"0x58e7926ee858a00000","0x72c083beadbdc227c5fb43881597e32e83c26056":"0x43c33c1937564800000","0x72cd048a110574482983492dfb1bd27942a696ba":"0x6c6b935b8bbd400000","0x72d03d4dfab3500cf89b86866f15d4528e14a195":"0xf34b82fd8e91200000","0x72dabb5b6eed9e99be915888f6568056381608f8":"0xb4c96c52cb4fe8000","0x72fb49c29d23a18950c4b2dc0ddf410f532d6f53":"0x6c6b935b8bbd400000","0x72feaf124579523954645b7fafff0378d1c8242e":"0x3635c9adc5dea00000","0x7301dc4cf26d7186f2a11bf8b08bf229463f64a3":"0x6c6b935b8bbd400000","0x730447f97ce9b25f22ba1afb36df27f9586beb9b":"0x2c73c937742c500000","0x7306de0e288b56cfdf987ef0d3cc29660793f6dd":"0x1b8abfb62ec8f60000","0x730d8763c6a4fd824ab8b859161ef7e3a96a1200":"0x43c33c1937564800000","0x73128173489528012e76b41a5e28c68ba4e3a9d4":"0x3635c9adc5dea00000","0x7313461208455455465445a459b06c3773b0eb30":"0x6c6b935b8bbd400000","0x732fead60f7bfdd6a9dec48125e3735db1b6654f":"0x1158e460913d00000","0x734223d27ff23e5906caed22595701bb34830ca1":"0x6c6b935b8bbd400000","0x73473e72115110d0c3f11708f86e77be2bb0983c":"0x1158e460913d00000","0x7352586d021ad0cf77e0e928404a59f374ff4582":"0xb8507a820728200000","0x73550beb732ba9ddafda7ae406e18f7feb0f8bb2":"0x97c9ce4cf6d5c00000","0x735b97f2fc1bd24b12076efaf3d1288073d20c8c":"0x1158e460913d00000","0x735e328666ed5637142b3306b77ccc5460e72c3d":"0x6ab8f37879c9910000","0x7363cd90fbab5bb8c49ac20fc62c398fe6fb744c":"0x6c6b935b8bbd400000","0x736b44503dd2f6dd5469ff4c5b2db8ea4fec65d0":"0x1104ee759f21e30000","0x736bf1402c83800f893e583192582a134eb532e9":"0x21e19d293c01f260000","0x738ca94db7ce8be1c3056cd6988eb376359f3353":"0x5665b96cf35acf00000","0x73914b22fc2f131584247d82be4fecbf978ad4ba":"0x6c6b935b8bbd400000","0x73932709a97f02c98e51b091312865122385ae8e":"0x4d853c8f8908980000","0x7393cbe7f9ba2165e5a7553500b6e75da3c33abf":"0x56bc75e2d63100000","0x73b4d499de3f38bf35aaf769a6e318bc6d123692":"0x6c6b935b8bbd400000","0x73bedd6fda7ba3272185087b6351fc133d484e37":"0x11226bf9dce59780000","0x73bfe7710f31cab949b7a2604fbf5239cee79015":"0x6c6b935b8bbd400000","0x73cf80ae9688e1580e68e782cd0811f7aa494d2c":"0x1a4aba225c207400000","0x73d7269ff06c9ffd33754ce588f74a966abbbbba":"0x165c96647b38a200000","0x73d8fee3cb864dce22bb26ca9c2f086d5e95e63b":"0x3635c9adc5dea00000","0x73df3c3e7955f4f2d859831be38000b1076b3884":"0x6acb3df27e1f880000","0x73e4a2b60cf48e8baf2b777e175a5b1e4d0c2d8f":"0x56bc75e2d63100000","0x740af1eefd3365d78ba7b12cb1a673e06a077246":"0x42bf06b78ed3b500000","0x740bfd52e01667a3419b029a1b8e45576a86a2db":"0x38ebad5cdc902800000","0x740f641614779dcfa88ed1d425d60db42a060ca6":"0x3622c6760810570000","0x7412c9bc30b4df439f023100e63924066afd53af":"0x1b1ae4d6e2ef500000","0x741693c30376508513082020cc2b63e9fa92131b":"0x410d586a20a4c00000","0x7421ce5be381738ddc83f02621974ff0686c79b8":"0x58788cb94b1d800000","0x74316adf25378c10f576d5b41a6f47fa98fce33d":"0x1238131e5c7ad50000","0x743651b55ef8429df50cf81938c2508de5c8870f":"0x6c6b935b8bbd400000","0x743de50026ca67c94df54f066260e1d14acc11ac":"0x6c6b935b8bbd400000","0x7445202f0c74297a004eb3726aa6a82dd7c02fa1":"0x6c6b935b8bbd400000","0x744b03bba8582ae5498e2dc22d19949467ab53fc":"0x1b1ae4d6e2ef500000","0x744c0c77ba7f236920d1e434de5da33e48ebf02c":"0x6acb3df27e1f880000","0x7450ff7f99eaa9116275deac68e428df5bbcd8b9":"0x6c6b935b8bbd400000","0x7456c5b2c5436e3e571008933f1805ccfe34e9ec":"0x3635c9adc5dea00000","0x745ad3abc6eeeb2471689b539e789ce2b8268306":"0x3d4194bea011928000","0x745aecbaf9bb39b74a67ea1ce623de368481baa6":"0x21e19e0c9bab2400000","0x745ccf2d819edbbddea8117b5c49ed3c2a066e93":"0xd8d726b7177a800000","0x7462c89caa9d8d7891b2545def216f7464d5bb21":"0x5eaed54a28b310000","0x74648caac748dd135cd91ea14c28e1bd4d7ff6ae":"0xa80d24677efef00000","0x7471f72eeb300624eb282eab4d03723c649b1b58":"0x1b1ae4d6e2ef5000000","0x747abc9649056d3926044d28c3ad09ed17b67d70":"0x10f0dbae61009528000","0x747ff7943b71dc4dcdb1668078f83dd7cc4520c2":"0x340aad21b3b700000","0x7480de62254f2ba82b578219c07ba5be430dc3cb":"0x17da3a04c7b3e000000","0x7484d26becc1eea8c6315ec3ee0a450117dc86a0":"0x28a857425466f800000","0x74863acec75d03d53e860e64002f2c165e538377":"0x3635c9adc5dea00000","0x7489cc8abe75cda4ef0d01cef2605e47eda67ab1":"0x73f75d1a085ba0000","0x748c285ef1233fe4d31c8fb1378333721c12e27a":"0x6c6b935b8bbd400000","0x749087ac0f5a97c6fad021538bf1d6cda18e0daa":"0x3635c9adc5dea00000","0x7495ae78c0d90261e2140ef2063104731a60d1ed":"0x1db50718925210000","0x749a4a768b5f237248938a12c623847bd4e688dc":"0x3e733628714200000","0x749ad6f2b5706bbe2f689a44c4b640b58e96b992":"0x56bc75e2d63100000","0x74a17f064b344e84db6365da9591ff1628257643":"0x1158e460913d00000","0x74aeec915de01cc69b2cb5a6356feea14658c6c5":"0xc9a95ee2986520000","0x74afe54902d615782576f8baac13ac970c050f6e":"0x9a1aaa3a9fba70000","0x74b7e0228baed65957aebb4d916d333aae164f0e":"0x6c6b935b8bbd400000","0x74bc4a5e2045f4ff8db184cf3a9b0c065ad807d2":"0x6c6b935b8bbd400000","0x74bce9ec38362d6c94ccac26d5c0e13a8b3b1d40":"0x363526410442f50000","0x74bf7a5ab59293149b5c60cf364263e5ebf1aa0d":"0x6470c3e771e3c0000","0x74c73c90528a157336f1e7ea20620ae53fd24728":"0x1e63a2e538f16e30000","0x74d1a4d0c7524e018d4e06ed3b648092b5b6af2c":"0x2b5e3af16b1880000","0x74d366b07b2f56477d7c7077ac6fe497e0eb6559":"0x10f0cf064dd59200000","0x74d37a51747bf8b771bfbf43943933d100d21483":"0x3635c9adc5dea00000","0x74d671d99cbea1ab57906375b63ff42b50451d17":"0x3635c9adc5dea00000","0x74ebf4425646e6cf81b109ce7bf4a2a63d84815f":"0x22b1c8c1227a00000","0x74ed33acf43f35b98c9230b9e6642ecb5330839e":"0x24f6dffb498d280000","0x74ef2869cbe608856045d8c2041118579f2236ea":"0x33cd64591956e0000","0x74fc5a99c0c5460503a13b0509459da19ce7cd90":"0xad78ebc5ac6200000","0x750bbb8c06bbbf240843cc75782ee02f08a97453":"0x2d43f3ebfafb2c0000","0x7514adbdc63f483f304d8e94b67ff3309f180b82":"0x21c4a06e2d13598000","0x7517f16c28d132bb40e3ba36c6aef131c462da17":"0xfc936392801c0000","0x751a2ca34e7187c163d28e3618db28b13c196d26":"0x1b1ae4d6e2ef500000","0x751abcb6cc033059911815c96fd191360ab0442d":"0x1b1ae4d6e2ef5000000","0x7526e482529f0a14eec98871dddd0e721b0cd9a2":"0x1158e460913d00000","0x7529f3797bb6a20f7ea6492419c84c867641d81c":"0x6c6b935b8bbd400000","0x752a5ee232612cd3005fb26e5b597de19f776be6":"0x127fcb8afae20d00000","0x752c9febf42f66c4787bfa7eb17cf5333bba5070":"0x6a99f2b54fdd580000","0x7539333046deb1ef3c4daf50619993f444e1de68":"0x40138b917edfb80000","0x7553aa23b68aa5f57e135fe39fdc235eaca8c98c":"0x3635c9adc5dea00000","0x755a60bf522fbd8fff9723446b7e343a7068567e":"0x43c33c1937564800000","0x755f587e5efff773a220726a13d0f2130d9f896b":"0x3635c9adc5dea00000","0x75621865b6591365606ed378308c2d1def4f222c":"0xa80d24677efef00000","0x75636cdb109050e43d5d6ec47e359e218e857eca":"0x4d8b2276c8962280000","0x7566496162ba584377be040a4f87777a707acaeb":"0xd8d726b7177a800000","0x756b84eb85fcc1f4fcdcc2b08db6a86e135fbc25":"0xae8e7a0bb575d00000","0x756f45e3fa69347a9a973a725e3c98bc4db0b5a0":"0xad78ebc5ac6200000","0x757b65876dbf29bf911d4f0692a2c9beb1139808":"0xdf93a59337d6dd8000","0x757fa55446c460968bb74b5ebca96c4ef2c709c5":"0x3708baed3d68900000","0x75804aac64b4199083982902994d9c5ed8828f11":"0x1e3d07b0a620e40000","0x7592c69d067b51b6cc639d1164d5578c60d2d244":"0x1158e460913d00000","0x75abe5270f3a78ce007cf37f8fbc045d489b7bb1":"0x6c6acc67d7b1d40000","0x75ac547017134c04ae1e11d60e63ec04d18db4ef":"0x14542ba12a337c00000","0x75b0e9c942a4f0f6f86d3f95ff998022fa67963b":"0x50c5e761a444080000","0x75b95696e8ec4510d56868a7c1a735c68b244890":"0x15af1d78b58c4000000","0x75be8ff65e5788aec6b2a52d5fa7b1e7a03ba675":"0x3abcdc5343d740000","0x75c11d024d12ae486c1095b7a7b9c4af3e8edeb9":"0x1158e460913d00000","0x75c1ad23d23f24b384d0c3149177e86697610d21":"0x15c5bcd6c288bbd0000","0x75c2ffa1bef54919d2097f7a142d2e14f9b04a58":"0x90f358504032a10000","0x75d67ce14e8d29e8c2ffe381917b930b1aff1a87":"0xa2a15d09519be00000","0x75de7e9352e90b13a59a5878ffecc7831cac4d82":"0x9489237adb9a500000","0x75f7539d309e9039989efe2e8b2dbd865a0df088":"0x855b5ba65c84f00000","0x7608f437b31f18bc0b64d381ae86fd978ed7b31f":"0x2b5e3af16b1880000","0x760ff3354e0fde938d0fb5b82cef5ba15c3d2916":"0x21e19e0c9bab2400000","0x761a6e362c97fbbd7c5977acba2da74687365f49":"0x9f74ae1f953d00000","0x761e6caec189c230a162ec006530193e67cf9d19":"0x6c6b935b8bbd400000","0x761f8a3a2af0a8bdbe1da009321fb29764eb62a1":"0x21e19e0c9bab2400000","0x762998e1d75227fced7a70be109a4c0b4ed86414":"0x1158e460913d00000","0x762d6f30dab99135e4eca51d5243d6c8621102d5":"0xf498941e664280000","0x76331e30796ce664b2700e0d4153700edc869777":"0x6c6b935b8bbd400000","0x763886e333c56feff85be3951ab0b889ce262e95":"0x6c6b935b8bbd400000","0x763a7cbab70d7a64d0a7e52980f681472593490c":"0x2086ac351052600000","0x763eece0b08ac89e32bfa4bece769514d8cb5b85":"0xd8d726b7177a800000","0x7640a37f8052981515bce078da93afa4789b5734":"0x6c6b935b8bbd400000","0x7641f7d26a86cddb2be13081810e01c9c83c4b20":"0xb98bc829a6f90000","0x764692cccb33405dd0ab0c3379b49caf8e6221ba":"0x1158e460913d00000","0x764d5212263aff4a2a14f031f04ec749dc883e45":"0x6449e84e47a8a80000","0x764fc46d428b6dbc228a0f5f55c9508c772eab9f":"0x581767ba6189c400000","0x76506eb4a780c951c74a06b03d3b8362f0999d71":"0x1b1ae4d6e2ef500000","0x765be2e12f629e6349b97d21b62a17b7c830edab":"0x14542ba12a337c00000","0x76628150e2995b5b279fc83e0dd5f102a671dd1c":"0x878678326eac9000000","0x766b3759e8794e926dac473d913a8fb61ad0c2c9":"0x4b06dbbb40f4a0000","0x7670b02f2c3cf8fd4f4730f3381a71ea431c33c7":"0xe7eeba3410b740000","0x767a03655af360841e810d83f5e61fb40f4cd113":"0x35659ef93f0fc40000","0x767ac690791c2e23451089fe6c7083fe55deb62b":"0x2c73c937742c500000","0x767fd7797d5169a05f7364321c19843a8c348e1e":"0x104e70464b1580000","0x76846f0de03b5a76971ead298cdd08843a4bc6c6":"0xd71b0fe0a28e0000","0x768498934e37e905f1d0e77b44b574bcf3ec4ae8":"0x43c33c1937564800000","0x768ce0daa029b7ded022e5fc574d11cde3ecb517":"0x1174a5cdf88bc80000","0x7693bdeb6fc82b5bca721355223175d47a084b4d":"0x4a89f54ef0121c00000","0x76aaf8c1ac012f8752d4c09bb46607b6651d5ca8":"0x1158e460913d00000","0x76ab87dd5a05ad839a4e2fc8c85aa6ba05641730":"0x6c6b935b8bbd400000","0x76afc225f4fa307de484552bbe1d9d3f15074c4a":"0xa290b5c7ad39680000","0x76becae4a31d36f3cb577f2a43594fb1abc1bb96":"0x543a9ce0e1332f00000","0x76c27535bcb59ce1fa2d8c919cabeb4a6bba01d1":"0x6c6b935b8bbd400000","0x76ca22bcb8799e5327c4aa2a7d0949a1fcce5f29":"0x52a03f228c5ae20000","0x76cac488111a4fd595f568ae3a858770fc915d5f":"0xad78ebc5ac6200000","0x76cb9c8b69f4387675c48253e234cb7e0d74a426":"0x190f4482eb91dae0000","0x76f83ac3da30f7092628c7339f208bfc142cb1ee":"0x9a18ffe7427d640000","0x76f9ad3d9bbd04ae055c1477c0c35e7592cb2a20":"0x8833f11e3458f200000","0x76ffc157ad6bf8d56d9a1a7fddbc0fea010aabf4":"0x3635c9adc5dea00000","0x77028e409cc43a3bd33d21a9fc53ec606e94910e":"0xd255d112e103a00000","0x770c2fb2c4a81753ac0182ea460ec09c90a516f8":"0x1158e460913d00000","0x770d98d31b4353fceee8560c4ccf803e88c0c4e0":"0x2086ac351052600000","0x7713ab8037411c09ba687f6f9364f0d3239fac28":"0x21e19e0c9bab2400000","0x771507aeee6a255dc2cd9df55154062d0897b297":"0x121ea68c114e510000","0x7719888795ad745924c75760ddb1827dffd8cda8":"0x6c6b4c4da6ddbe0000","0x7727af101f0aaba4d23a1cafe17c6eb5dab1c6dc":"0x6c6b935b8bbd400000","0x772c297f0ad194482ee8c3f036bdeb01c201d5cc":"0xad78ebc5ac6200000","0x77306ffe2e4a8f3ca826c1a249f7212da43aeffd":"0x43c33c1937564800000","0x773141127d8cf318aebf88365add3d5527d85b6a":"0x3636d7af5ec98e0000","0x7746b6c6699c8f34ca2768a820f1ffa4c207fe05":"0xd8d8583fa2d52f0000","0x7751f363a0a7fd0533190809ddaf9340d8d11291":"0x1158e460913d00000","0x7757a4b9cc3d0247ccaaeb9909a0e56e1dd6dcc2":"0x1158e460913d00000","0x775c10c93e0db7205b2643458233c64fc33fd75b":"0x6c6b935b8bbd400000","0x77617ebc4bebc5f5ddeb1b7a70cdeb6ae2ffa024":"0x6acb3df27e1f880000","0x776943ffb2ef5cdd35b83c28bc046bd4f4677098":"0xa2a15d09519be00000","0x77701e2c493da47c1b58f421b5495dee45bea39b":"0x148f649cf6142a58000","0x77798f201257b9c35204957057b54674aefa51df":"0x813ca56906d340000","0x778c43d11afe3b586ff374192d96a7f23d2b9b7f":"0x8bb4fcfa3b7d6b8000","0x778c79f4de1953ebce98fe8006d53a81fb514012":"0x36330322d5238c0000","0x779274bf1803a336e4d3b00ddd93f2d4f5f4a62e":"0x3635c9adc5dea00000","0x77a17122fa31b98f1711d32a99f03ec326f33d08":"0x5c283d410394100000","0x77a34907f305a54c85db09c363fde3c47e6ae21f":"0x35659ef93f0fc40000","0x77a769fafdecf4a638762d5ba3969df63120a41d":"0x6c6b935b8bbd400000","0x77be6b64d7c733a436adec5e14bf9ad7402b1b46":"0x3635c9adc5dea00000","0x77bfe93ccda750847e41a1affee6b2da96e7214e":"0x1043561a8829300000","0x77c4a697e603d42b12056cbba761e7f51d0443f5":"0x24dce54d34a1a00000","0x77cc02f623a9cf98530997ea67d95c3b491859ae":"0x497303c36ea0c20000","0x77d43fa7b481dbf3db530cfbf5fdced0e6571831":"0x6c6b935b8bbd400000","0x77da5e6c72fb36bce1d9798f7bcdf1d18f459c2e":"0x13695bb6cf93e0000","0x77f4e3bdf056883cc87280dbe640a18a0d02a207":"0xa81993a2bfb5b0000","0x77f609ca8720a023262c55c46f2d26fb3930ac69":"0xf015f25736420000","0x77f81b1b26fc84d6de97ef8b9fbd72a33130cc4a":"0x3635c9adc5dea00000","0x7819b0458e314e2b53bfe00c38495fd4b9fdf8d6":"0x1158e460913d00000","0x781b1501647a2e06c0ed43ff197fccec35e1700b":"0xa2a15d09519be00000","0x782f52f0a676c77716d574c81ec4684f9a020a97":"0x2e14e206b730ad8000","0x78355df0a230f83d032c703154414de3eedab557":"0x6c6b935b8bbd400000","0x7836f7ef6bc7bd0ff3acaf449c84dd6b1e2c939f":"0xe08de7a92cd97c0000","0x7837fcb876da00d1eb3b88feb3df3fa4042fac82":"0x5f68e8131ecf800000","0x783eec8aa5dac77b2e6623ed5198a431abbaee07":"0x17da3a04c7b3e00000","0x785c8ea774d73044a734fa790a1b1e743e77ed7c":"0xcf152640c5c830000","0x7860a3de38df382ae4a4dce18c0c07b98bce3dfa":"0x3635c9adc5dea00000","0x78634371e17304cbf339b1452a4ce438dc764cce":"0x21e19e0c9bab2400000","0x7864dc999fe4f8e003c0f43decc39aae1522dc0f":"0x51e102bd8ece00000","0x78746a958dced4c764f876508c414a68342cecb9":"0x2be374fe8e2c40000","0x787d313fd36b053eeeaedbce74b9fb0678333289":"0x5c058b7842719600000","0x78859c5b548b700d9284cee4b6633c2f52e529c2":"0xa030dcebbd2f4c0000","0x788e809741a3b14a22a4b1d937c82cfea489eebe":"0x17b7883c06916600000","0x78a1e254409fb1b55a7cb4dd8eba3b30c8bad9ef":"0x56bc75e2d63100000","0x78a5e89900bd3f81dd71ba869d25fec65261df15":"0xafd812fee03d5700000","0x78b978a9d7e91ee529ea4fc4b76feaf8762f698c":"0x6c6b935b8bbd4000000","0x78ce3e3d474a8a047b92c41542242d0a08c70f99":"0x21e19e0c9bab2400000","0x78cf8336b328db3d87813a472b9e89b75e0cf3bc":"0x3635c9adc5dea00000","0x78d4f8c71c1e68a69a98f52fcb45da8af56ea1a0":"0x6c6b935b8bbd400000","0x78df2681d6d602e22142d54116dea15d454957aa":"0x102794ad20da680000","0x78e08bc533413c26e291b3143ffa7cc9afb97b78":"0xad78ebc5ac6200000","0x78e83f80b3678c7a0a4e3e8c84dccde064426277":"0x61093d7c2c6d380000","0x78f5c74785c5668a838072048bf8b453594ddaab":"0x15af1d78b58c400000","0x790f91bd5d1c5cc4739ae91300db89e1c1303c93":"0x6c6b935b8bbd400000","0x7917e5bd82a9790fd650d043cdd930f7799633db":"0xd8d4602c26bf6c0000","0x7919e7627f9b7d54ea3b14bb4dd4649f4f39dee0":"0x5a87e7d7f5f6580000","0x791f6040b4e3e50dcf3553f182cd97a90630b75d":"0xd8d726b7177a800000","0x7930c2d9cbfa87f510f8f98777ff8a8448ca5629":"0xad6eedd17cf3b8000","0x794529d09d017271359730027075b87ad83dae6e":"0x10ce1d3d8cb3180000","0x794b51c39e53d9e762b0613b829a44b472f4fff3":"0x2435e0647841cc8000","0x79551cede376f747e3716c8d79400d766d2e0195":"0x9cb37afa4ff78680000","0x795ebc2626fc39b0c86294e0e837dcf523553090":"0x3635c9adc5dea00000","0x796ebbf49b3e36d67694ad79f8ff36767ac6fab0":"0x34bc4fdde27c00000","0x796f87ba617a2930b1670be92ed1281fb0b346e1":"0x6f5e86fb528280000","0x797427e3dbf0feae7a2506f12df1dc40326e8505":"0x3635c9adc5dea00000","0x797510e386f56393ced8f477378a444c484f7dad":"0x3635c9adc5dea00000","0x797bb7f157d9feaa17f76da4f704b74dc1038341":"0xb50fcfafebecb00000","0x7988901331e387f713faceb9005cb9b65136eb14":"0x6acb3df27e1f880000","0x7989d09f3826c3e5af8c752a8115723a84d80970":"0x1686f8614cf0ad0000","0x7995bd8ce2e0c67bf1c7a531d477bca1b2b97561":"0x14248d617829ece0000","0x79aeb34566b974c35a5881dec020927da7df5d25":"0x6c6b935b8bbd400000","0x79b120eb8806732321288f675a27a9225f1cd2eb":"0x85a0bf37dec9e40000","0x79b48d2d6137c3854d611c01ea42427a0f597bb7":"0xa5aa85009e39c0000","0x79b8aad879dd30567e8778d2d231c8f37ab8734e":"0x6c6b935b8bbd400000","0x79bf2f7b6e328aaf26e0bb093fa22da29ef2f471":"0x61093d7c2c6d380000","0x79c130c762b8765b19d2abc9a083ab8f3aad7940":"0xd5967be4fc3f100000","0x79c1be19711f73bee4e6316ae7549459aacea2e0":"0x15af1d78b58c400000","0x79c6002f8452ca157f1317e80a2faf24475559b7":"0x1158e460913d00000","0x79cac6494f11ef2798748cb53285bd8e22f97cda":"0x6c6b935b8bbd400000","0x79cfa9780ae6d87b2c31883f09276986c89a6735":"0x3635c9adc5dea00000","0x79dba256472db4e058f2e4cdc3ea4e8a42773833":"0x4f2591f896a6500000","0x79ed10cf1f6db48206b50919b9b697081fbdaaf3":"0x6c6b935b8bbd400000","0x79f08e01ce0988e63c7f8f2908fade43c7f9f5c9":"0xfc936392801c0000","0x79fd6d48315066c204f9651869c1096c14fc9781":"0x6c6b935b8bbd400000","0x79ffb4ac13812a0b78c4a37b8275223e176bfda5":"0xf015f25736420000","0x7a0589b143a8e5e107c9ac66a9f9f8597ab3e7ab":"0x51e932d76e8f7b0000","0x7a0a78a9cc393f91c3d9e39a6b8c069f075e6bf5":"0x487a9a304539440000","0x7a1370a742ec2687e761a19ac5a794329ee67404":"0xa2a1326761e2920000","0x7a2dfc770e24368131b7847795f203f3d50d5b56":"0x269fec7f0361d200000","0x7a33834e8583733e2d52aead589bd1affb1dd256":"0x3635c9adc5dea00000","0x7a36aba5c31ea0ca7e277baa32ec46ce93cf7506":"0x43c33c1937564800000","0x7a381122bada791a7ab1f6037dac80432753baad":"0x21e19e0c9bab2400000","0x7a48d877b63a8f8f9383e9d01e53e80c528e955f":"0x1b1ae4d6e2ef5000000","0x7a4f9b850690c7c94600dbee0ca4b0a411e9c221":"0x678a932062e4180000","0x7a63869fc767a4c6b1cd0e0649f3634cb121d24b":"0x433874f632cc60000","0x7a67dd043a504fc2f2fc7194e9becf484cecb1fb":"0xd8d726b7177a80000","0x7a6b26f438d9a352449155b8876cbd17c9d99b64":"0x14542ba12a337c00000","0x7a6d781c77c4ba1fcadf687341c1e31799e93d27":"0xeda838c4929080000","0x7a7068e1c3375c0e599db1fbe6b2ea23b8f407d2":"0x6c6b935b8bbd400000","0x7a74cee4fa0f6370a7894f116cd00c1147b83e59":"0x2b5e3af16b18800000","0x7a79e30ff057f70a3d0191f7f53f761537af7dff":"0x15af1d78b58c400000","0x7a7a4f807357a4bbe68e1aa806393210c411ccb3":"0x65a4da25d3016c00000","0x7a8563867901206f3f2bf0fa3e1c8109cabccd85":"0x76d41c62494840000","0x7a8797690ab77b5470bf7c0c1bba612508e1ac7d":"0x1e09296c3378de40000","0x7a8c89c014509d56d7b68130668ff6a3ecec7370":"0x1043561a8829300000","0x7a94b19992ceb8ce63bc92ee4b5aded10c4d9725":"0x38d1a8064bb64c80000","0x7aa79ac04316cc8d08f20065baa6d4142897d54e":"0x4be4e7267b6ae00000","0x7aad4dbcd3acf997df93586956f72b64d8ad94ee":"0xd8d726b7177a800000","0x7ab256b204800af20137fabcc916a23258752501":"0x43c33c1937564800000","0x7aba56f63a48bc0817d6b97039039a7ad62fae2e":"0x2086ac351052600000","0x7abb10f5bd9bc33b8ec1a82d64b55b6b18777541":"0x43c33c1937564800000","0x7ac48d40c664cc9a6d89f1c5f5c80a1c70e744e6":"0xa31062beeed7000000","0x7ac58f6ffc4f8107ae6e30378e4e9f99c57fbb24":"0x22b1c8c1227a00000","0x7ad3f307616f19dcb143e6444dab9c3c33611f52":"0x2b5e3af16b1880000","0x7ad82caea1a8b4ed05319b9c9870173c814e06ee":"0x2164b7a04ac8a00000","0x7ade5d66b944bb860c0efdc86276d58f4653f711":"0x6c6b935b8bbd400000","0x7adfedb06d91f3cc7390450b85550270883c7bb7":"0x1178fa40515db40000","0x7ae1c19e53c71cee4c73fae2d7fc73bf9ab5e392":"0x3635c9adc5dea00000","0x7ae659eb3bc46852fa86fac4e21c768d50388945":"0xf810c1cb501b80000","0x7aea25d42b2612286e99c53697c6bc4100e2dbbf":"0x6c6b935b8bbd400000","0x7aef7b551f0b9c46e755c0f38e5b3a73fe1199f5":"0x50c5e761a444080000","0x7b0b31ff6e24745ead8ed9bb85fc0bf2fe1d55d4":"0x2b5e3af16b18800000","0x7b0fea1176d52159333a143c294943da36bbddb4":"0x1fc7da64ea14c100000","0x7b11673cc019626b290cbdce26046f7e6d141e21":"0x1b1ae4d6e2ef500000","0x7b122162c913e7146cad0b7ed37affc92a0bf27f":"0x51af096b2301d18000","0x7b1bf53a9cbe83a7dea434579fe72aac8d2a0cd0":"0xad4c8316a0b0c0000","0x7b1daf14891b8a1e1bd429d8b36b9a4aa1d9afbf":"0x1b1ae4d6e2ef500000","0x7b1fe1ab4dfd0088cdd7f60163ef59ec2aee06f5":"0x6c6b935b8bbd400000","0x7b25bb9ca8e702217e9333225250e53c36804d48":"0x65ea3db75546600000","0x7b27d0d1f3dd3c140294d0488b783ebf4015277d":"0x15af1d78b58c400000","0x7b4007c45e5a573fdbb6f8bd746bf94ad04a3c26":"0x33821f5135d259a0000","0x7b43c7eea8d62355b0a8a81da081c6446b33e9e0":"0xd8d726b7177a800000","0x7b4d2a38269069c18557770d591d24c5121f5e83":"0x25f273933db5700000","0x7b6175ec9befc738249535ddde34688cd36edf25":"0x21e19e0c9bab2400000","0x7b66126879844dfa34fe65c9f288117fefb449ad":"0x14542ba12a337c00000","0x7b6a84718dd86e63338429ac811d7c8a860f21f1":"0x61093d7c2c6d380000","0x7b712c7af11676006a66d2fc5c1ab4c479ce6037":"0x1b1ae4d6e2ef5000000","0x7b73242d75ca9ad558d650290df17692d54cd8b8":"0x6c6e59e67c78540000","0x7b761feb7fcfa7ded1f0eb058f4a600bf3a708cb":"0xf95dd2ec27cce00000","0x7b827cae7ff4740918f2e030ab26cb98c4f46cf5":"0x194684c0b39de100000","0x7b893286427e72db219a21fc4dcd5fbf59283c31":"0x21e19e0c9bab2400000","0x7b9226d46fe751940bc416a798b69ccf0dfab667":"0xe3aeb5737240a00000","0x7b98e23cb96beee80a168069ebba8f20edd55ccf":"0xba0c91587c14a0000","0x7bb0fdf5a663b5fba28d9c902af0c811e252f298":"0xad78ebc5ac6200000","0x7bb9571f394b0b1a8eba5664e9d8b5e840677bea":"0x11164759ffb320000","0x7bb984c6dbb9e279966afafda59c01d02627c804":"0x1b464311d45a6880000","0x7bbbec5e70bdead8bb32b42805988e9648c0aa97":"0x3636d7af5ec98e0000","0x7bca1da6c80a66baa5db5ac98541c4be276b447d":"0x24cf049680fa3c0000","0x7bddb2ee98de19ee4c91f661ee8e67a91d054b97":"0x3635c9adc5dea00000","0x7be2f7680c802da6154c92c0194ae732517a7169":"0xfc936392801c0000","0x7be7f2456971883b9a8dbe4c91dec08ac34e8862":"0xa2a15d09519be00000","0x7be8ccb4f11b66ca6e1d57c0b5396221a31ba53a":"0x1158e460913d00000","0x7beb81fb2f5e91526b2ac9795e76c69bcff04bc0":"0xeb22e794f0a8d600000","0x7c0883054c2d02bc7a852b1f86c42777d0d5c856":"0x1b1ae4d6e2ef500000","0x7c0f5e072043c9ee740242197e78cc4b98cdf960":"0xad78ebc5ac6200000","0x7c1df24a4f7fb2c7b472e0bb006cb27dcd164156":"0x3635c9adc5dea00000","0x7c29d47d57a733f56b9b217063b513dc3b315923":"0xd8d726b7177a800000","0x7c2b9603884a4f2e464eceb97d17938d828bc02c":"0xa2a15d09519be00000","0x7c382c0296612e4e97e440e02d3871273b55f53b":"0xab640391201300000","0x7c3eb713c4c9e0381cd8154c7c9a7db8645cde17":"0xad78ebc5ac6200000","0x7c4401ae98f12ef6de39ae24cf9fc51f80eba16b":"0xad78ebc5ac6200000","0x7c45f0f8442a56dbd39dbf159995415c52ed479b":"0x6c6b935b8bbd400000","0x7c532db9e0c06c26fd40acc56ac55c1ee92d3c3a":"0x3f870857a3e0e3800000","0x7c60a05f7a4a5f8cf2784391362e755a8341ef59":"0x6694f0182a37ae0000","0x7c60e51f0be228e4d56fdd2992c814da7740c6bc":"0xad78ebc5ac6200000","0x7c6924d07c3ef5891966fe0a7856c87bef9d2034":"0x6c6b935b8bbd400000","0x7c8bb65a6fbb49bd413396a9d7e31053bbb37aa9":"0x14542ba12a337c00000","0x7c9a110cb11f2598b2b20e2ca400325e41e9db33":"0x581767ba6189c400000","0x7cbca88fca6a0060b960985c9aa1b02534dc2208":"0x19127a1391ea2a0000","0x7cbeb99932e97e6e02058cfc62d0b26bc7cca52b":"0x6c6b935b8bbd400000","0x7cc24a6a958c20c7d1249660f7586226950b0d9a":"0x6acb3df27e1f880000","0x7cd20eccb518b60cab095b720f571570caaa447e":"0x1b1ae4d6e2ef500000","0x7cd5d81eab37e11e6276a3a1091251607e0d7e38":"0x3684d5ef981f40000","0x7cdf74213945953db39ad0e8a9781add792e4d1d":"0x6c6b935b8bbd400000","0x7ce4686446f1949ebed67215eb0d5a1dd72c11b8":"0x7839d321b81ab80000","0x7cef4d43aa417f9ef8b787f8b99d53f1fea1ee88":"0x678a932062e4180000","0x7d0350e40b338dda736661872be33f1f9752d755":"0x2b4f5a6f191948000","0x7d04d2edc058a1afc761d9c99ae4fc5c85d4c8a6":"0x42a9c4675c9467d00000","0x7d0b255efb57e10f7008aa22d40e9752dfcf0378":"0x19f8e7559924c0000","0x7d13d6705884ab2157dd8dcc7046caf58ee94be4":"0x1d0da07cbb3ee9c00000","0x7d273e637ef1eac481119413b91c989dc5eac122":"0x1b1ae4d6e2ef500000","0x7d2a52a7cf0c8436a8e007976b6c26b7229d1e15":"0x17bf06b32a241c0000","0x7d34803569e00bd6b59fff081dfa5c0ab4197a62":"0x5cd87cb7b9fb860000","0x7d34ff59ae840a7413c6ba4c5bb2ba2c75eab018":"0xa2a15d09519be00000","0x7d392852f3abd92ff4bb5bb26cb60874f2be6795":"0x3636c25e66ece70000","0x7d445267c59ab8d2a2d9e709990e09682580c49f":"0x3635c9adc5dea00000","0x7d551397f79a2988b064afd0efebee802c7721bc":"0x857e0d6f1da76a00000","0x7d5aa33fc14b51841a06906edb2bb49c2a117269":"0x104400a2470e680000","0x7d5d2f73949dadda0856b206989df0078d51a1e5":"0x23c757072b8dd000000","0x7d6e990daa7105de2526339833f77b5c0b85d84f":"0x43c33c1937564800000","0x7d73863038ccca22f96affda10496e51e1e6cd48":"0x1158e460913d00000","0x7d7dd5ee614dbb6fbfbcd26305247a058c41faa1":"0x6c6b935b8bbd400000","0x7d7e7c61779adb7706c94d32409a2bb4e994bf60":"0x2ef20d9fc71a140000","0x7d82e523cc2dc591da3954e8b6bb2caf6461e69c":"0x7d8dc2efffb1a90000","0x7d858493f07415e0912d05793c972113eae8ae88":"0x628dd177d2bc280000","0x7d901b28bf7f88ef73d8f73cca97564913ea8a24":"0x33c5499031720c0000","0x7d980f4b566bb045517e4c14c87750de9346744b":"0x487a9a304539440000","0x7d9c59631e2ba2e8e82891f3979922aaa3b567a1":"0x1b1ae4d6e2ef5000000","0x7d9d221a3df89ddd7b5f61c1468c6787d6b333e6":"0x77b227cd83be80000","0x7da7613445a21299aa74f0ad71431ec43fbb1be9":"0x3afb087b876900000","0x7db4c7d5b797e9296e6382f203693db409449d62":"0x15af1d78b58c400000","0x7db9eacc52e429dc83b461c5f4d86010e5383a28":"0x3635c9adc5dea00000","0x7dd46da677e161825e12e80dc446f58276e1127c":"0x2c73c937742c500000","0x7dd8d7a1a34fa1f8e73ccb005fc2a03a15b8229c":"0xad78ebc5ac6200000","0x7ddd57165c87a2707f025dcfc2508c09834759bc":"0x4be4e7267b6ae00000","0x7de442c82386154d2e993cbd1280bb7ca6b12ada":"0xd8f2e8247ec9480000","0x7de7fe419cc61f91f408d234cc80d5ca3d054d99":"0x1158e460913d00000","0x7dece6998ae1900dd3770cf4b93812bad84f0322":"0x56bc75e2d63100000","0x7dfc342dffcf45dfee74f84c0995397bd1a63172":"0xd8d726b7177a80000","0x7dfd2962b575bcbeee97f49142d63c30ab009f66":"0xd8d726b7177a800000","0x7e1e29721d6cb91057f6c4042d8a0bbc644afe73":"0x8a9aba557e36c0000","0x7e236666b2d06e63ea4e2ab84357e2dfc977e50e":"0x36356633ebd8ea0000","0x7e24d9e22ce1da3ce19f219ccee523376873f367":"0x13fd9079caa60ff0000","0x7e24fbdad290175eb2df6d180a19b9a9f41370be":"0x3635c9adc5dea00000","0x7e268f131ddf687cc325c412f78ba961205e9112":"0x36364ee7d301b3c0000","0x7e29290038493559194e946d4e460b96fc38a156":"0x10c13c527763880000","0x7e2ba86da52e785d8625334f3397ba1c4bf2e8d1":"0xaadec983fcff40000","0x7e3f63e13129a221ba1ab06326342cd98b5126ae":"0x56a02659a523340000","0x7e47637e97c14622882be057bea229386f4052e5":"0x17da3a04c7b3e00000","0x7e4e9409704121d1d77997026ff06ea9b19a8b90":"0x8d16549ed58fa40000","0x7e59dc60be8b2fc19abd0a5782c52c28400bce97":"0x3635c9adc5dea00000","0x7e5b19ae1be94ff4dee635492a1b012d14db0213":"0x56bc75e2d63100000","0x7e5d9993104e4cb545e179a2a3f971f744f98482":"0x6c6b935b8bbd400000","0x7e71171f2949fa0c3ac254254b1f0440e5e6a038":"0x22b1c8c1227a00000","0x7e7c1e9a61a08a83984835c70ec31d34d3eaa87f":"0xa5aa85009e39c0000","0x7e7f18a02eccaa5d61ab8fbf030343c434a25ef7":"0x39fbae8d042dd0000","0x7e81f6449a03374191f3b7cb05d938b72e090dff":"0x56bc75e2d63100000","0x7e8649e690fc8c1bfda1b5e186581f649b50fe33":"0x556f64c1fe7fa0000","0x7e87863ec43a481df04d017762edcb5caa629b5a":"0x222c8eb3ff6640000","0x7e8f96cc29f57b0975120cb593b7dd833d606b53":"0xaadec983fcff40000","0x7e972a8a7c2a44c93b21436c38d21b9252c345fe":"0x61093d7c2c6d380000","0x7e99dfbe989d3ba529d19751b7f4317f8953a3e2":"0x15af1d78b58c400000","0x7ea0f96ee0a573a330b56897761f3d4c0130a8e3":"0x487a9a304539440000","0x7ea791ebab0445a00efdfc4e4a8e9a7e7565136d":"0xfc936392801c0000","0x7eaba035e2af3793fd74674b102540cf190addb9":"0x45026c835b60440000","0x7eb4b0185c92b6439a08e7322168cb353c8a774a":"0x227196ca04983ca0000","0x7ebd95e9c470f7283583dc6e9d2c4dce0bea8f84":"0x2f6f10780d22cc00000","0x7ed0a5a847bef9a9da7cba1d6411f5c316312619":"0x228eb37e8751d0000","0x7edafba8984baf631a820b6b92bbc2c53655f6bd":"0x6c6b935b8bbd400000","0x7edb02c61a227287611ad950696369cc4e647a68":"0xeda838c4929080000","0x7ee5ca805dce23af89c2d444e7e40766c54c7404":"0xd0bd412edbd820000","0x7ee604c7a9dc2909ce321de6b9b24f5767577555":"0x12bf9c7985cf62d8000","0x7ef16fd8d15b378a0fba306b8d03dd98fc92619f":"0x25f273933db5700000","0x7ef98b52bee953bef992f305fda027f8911c5851":"0x1be722206996bc8000","0x7efc90766a00bc52372cac97fabd8a3c831f8ecd":"0x890b0c2e14fb80000","0x7efec0c6253caf397f71287c1c07f6c9582b5b86":"0x1a2cbcb84f30d58000","0x7f01dc7c3747ca608f983dfc8c9b39e755a3b914":"0xb386cad5f7a5a0000","0x7f0662b410298c99f311d3a1454a1eedba2fea76":"0xad78ebc5ac6200000","0x7f06c89d59807fa60bc60136fcf814cbaf2543bd":"0x21e19e0c9bab2400000","0x7f0b90a1fdd48f27b268feb38382e55ddb50ef0f":"0x32f51edbaaa3300000","0x7f0ec3db804692d4d1ea3245365aab0590075bc4":"0xd8d726b7177a800000","0x7f0f04fcf37a53a4e24ede6e93104e78be1d3c9e":"0x6c6b935b8bbd400000","0x7f13d760498d7193ca6859bc95c901386423d76c":"0x10f0cf064dd59200000","0x7f150afb1a77c2b45928c268c1e9bdb4641d47d8":"0x6c6b935b8bbd400000","0x7f1619988f3715e94ff1d253262dc5581db3de1c":"0x30ca024f987b900000","0x7f1c81ee1697fc144b7c0be5493b5615ae7fddca":"0x1b1dab61d3aa640000","0x7f2382ffd8f83956467937f9ba72374623f11b38":"0x2086ac351052600000","0x7f3709391f3fbeba3592d175c740e87a09541d02":"0x1a055690d9db800000","0x7f389c12f3c6164f6446566c77669503c2792527":"0x556f64c1fe7fa0000","0x7f3a1e45f67e92c880e573b43379d71ee089db54":"0x152d02c7e14af6800000","0x7f3d7203c8a447f7bf36d88ae9b6062a5eee78ae":"0x14542ba12a337c00000","0x7f46bb25460dd7dae4211ca7f15ad312fc7dc75c":"0x16a6502f15a1e540000","0x7f49e7a4269882bd8722d4a6f566347629624079":"0x6c6b935b8bbd400000","0x7f49f20726471ac1c7a83ef106e9775ceb662566":"0x14061b9d77a5e980000","0x7f4b5e278578c046cceaf65730a0e068329ed5b6":"0x65ea3db75546600000","0x7f4f593b618c330ba2c3d5f41eceeb92e27e426c":"0x966edc756b7cfc0000","0x7f541491d2ac00d2612f94aa7f0bcb014651fbd4":"0x14620c57dddae00000","0x7f5ae05ae0f8cbe5dfe721f044d7a7bef4c27997":"0x340aad21b3b700000","0x7f603aec1759ea5f07c7f8d41a1428fbbaf9e762":"0x1158e460913d00000","0x7f616c6f008adfa082f34da7d0650460368075fb":"0x3635c9adc5dea00000","0x7f61fa6cf5f898b440dac5abd8600d6d691fdef9":"0xf2dc7d47f15600000","0x7f655c6789eddf455cb4b88099720639389eebac":"0x14542ba12a337c00000","0x7f6b28c88421e4857e459281d78461692489d3fb":"0x6c6b935b8bbd400000","0x7f6efb6f4318876d2ee624e27595f44446f68e93":"0x54069233bf7f780000","0x7f7192c0df1c7db6d9ed65d71184d8e4155a17ba":"0x453728d33942c0000","0x7f7a3a21b3f5a65d81e0fcb7d52dd00a1aa36dba":"0x56bc75e2d63100000","0x7f8dbce180ed9c563635aad2d97b4cbc428906d9":"0x90f534608a72880000","0x7f993ddb7e02c282b898f6155f680ef5b9aff907":"0x43c33c1937564800000","0x7f9f9b56e4289dfb58e70fd5f12a97b56d35c6a5":"0x6acb3df27e1f880000","0x7fa37ed67887751a471f0eb306be44e0dbcd6089":"0x3976747fe11a100000","0x7faa30c31519b584e97250ed2a3cf3385ed5fd50":"0x6c6b935b8bbd400000","0x7fcf5ba6666f966c5448c17bf1cb0bbcd8019b06":"0x56bc3d0aebe498000","0x7fd679e5fb0da2a5d116194dcb508318edc580f3":"0x1639e49bba162800000","0x7fdba031c78f9c096d62d05a369eeab0bccc55e5":"0x97c9ce4cf6d5c00000","0x7fdbc3a844e40d96b2f3a635322e6065f4ca0e84":"0x6c6b935b8bbd400000","0x7fdfc88d78bf1b285ac64f1adb35dc11fcb03951":"0x7c06fda02fb0360000","0x7fea1962e35d62059768c749bedd96cab930d378":"0x6c6b935b8bbd400000","0x7fef8c38779fb307ec6f044bebe47f3cfae796f1":"0x92340f86cf09e8000","0x7ff0c63f70241bece19b737e5341b12b109031d8":"0x12c1b6eed03d280000","0x7ffabfbc390cbe43ce89188f0868b27dcb0f0cad":"0x1595182224b26480000","0x7ffd02ed370c7060b2ae53c078c8012190dfbb75":"0x21e19e0c9bab2400000","0x80022a1207e910911fc92849b069ab0cdad043d3":"0xb98bc829a6f90000","0x8009a7cbd192b3aed4adb983d5284552c16c7451":"0xd8d726b7177a800000","0x800e7d631c6e573a90332f17f71f5fd19b528cb9":"0x83d6c7aab63600000","0x80156d10efa8b230c99410630d37e269d4093cea":"0x6c6b935b8bbd400000","0x801732a481c380e57ed62d6c29de998af3fa3b13":"0x56bc75e2d63100000","0x801d65c518b11d0e3f4f470221417013c8e53ec5":"0xd8d726b7177a800000","0x8026435aac728d497b19b3e7e57c28c563954f2b":"0x5dc892aa1131c80000","0x802dc3c4ff2d7d925ee2859f4a06d7ba60f1308c":"0x550940c8fd34c0000","0x8030b111c6983f0485ddaca76224c6180634789f":"0x4563918244f400000","0x8035bcffaefdeeea35830c497d14289d362023de":"0x1043561a8829300000","0x8035fe4e6b6af27ae492a578515e9d39fa6fa65b":"0xd8d726b7177a800000","0x8043ed22f997e5a2a4c16e364486ae64975692c4":"0x3d4904ffc9112e8000","0x8043fdd0bc4c973d1663d55fc135508ec5d4f4fa":"0x1158e460913d00000","0x804ca94972634f633a51f3560b1d06c0b293b3b1":"0xad78ebc5ac6200000","0x80522ddf944ec52e27d724ed4c93e1f7be6083d6":"0xad78ebc5ac6200000","0x80591a42179f34e64d9df75dcd463b28686f5574":"0x43c33c1937564800000","0x805ce51297a0793b812067f017b3e7b2df9bb1f9":"0x56bc75e2d63100000","0x805d846fb0bc02a7337226d685be9ee773b9198a":"0x43c30fb0884a96c0000","0x8063379a7bf2cb923a84c5093e68dac7f75481c5":"0x1176102e6e32df0000","0x806854588ecce541495f81c28a290373df0274b2":"0x1f8cdf5c6e8d580000","0x806f44bdeb688037015e84ff218049e382332a33":"0x6c5db2a4d815dc0000","0x80744618de396a543197ee4894abd06398dd7c27":"0x6c6b935b8bbd400000","0x8077c3e4c445586e094ce102937fa05b737b568c":"0x56bc75e2d63100000","0x80907f593148b57c46c177e23d25abc4aae18361":"0x56bc75e2d63100000","0x80977316944e5942e79b0e3abad38da746086519":"0x21a754a6dc5280000","0x80a0f6cc186cf6201400736e065a391f52a9df4a":"0x21e19e0c9bab2400000","0x80abec5aa36e5c9d098f1b942881bd5acac6963d":"0x6c6b935b8bbd400000","0x80b23d380b825c46e0393899a85556462da0e18c":"0x6c6b935b8bbd400000","0x80b42de170dbd723f454e88f7716452d92985092":"0x104623c0762dd10000","0x80b79f338390d1ba1b3737a29a0257e5d91e0731":"0x1158e460913d00000","0x80bf995ed8ba92701d10fec49f9e7d014dbee026":"0x1f0437ca1a7e128000","0x80c04efd310f440483c73f744b5b9e64599ce3ec":"0x410d586a20a4c00000","0x80c3a9f695b16db1597286d1b3a8b7696c39fa27":"0x56bc75e2d63100000","0x80c53ee7e3357f94ce0d7868009c208b4a130125":"0x6c6b935b8bbd400000","0x80cc21bd99f39005c58fe4a448909220218f66cb":"0x3636c9796436740000","0x80d5c40c59c7f54ea3a55fcfd175471ea35099b3":"0x3635c9adc5dea00000","0x80da2fdda29a9e27f9e115975e69ae9cfbf3f27e":"0xad78ebc5ac6200000","0x80e7b3205230a566a1f061d922819bb4d4d2a0e1":"0x2f6f10780d22cc00000","0x80ea1acc136eca4b68c842a95adf6b7fee7eb8a2":"0xd8d726b7177a800000","0x80f07ac09e7b2c3c0a3d1e9413a544c73a41becb":"0x1158e460913d00000","0x810db25675f45ea4c7f3177f37ce29e22d67999c":"0xad78ebc5ac6200000","0x81139bfdcca656c430203f72958c543b6580d40c":"0x6c6b935b8bbd400000","0x811461a2b0ca90badac06a9ea16e787b33b196cc":"0x8e3f50b173c100000","0x81164deb10814ae08391f32c08667b6248c27d7a":"0x155bd9307f9fe80000","0x81186931184137d1192ac88cd3e1e5d0fdb86a74":"0x9d3595ab2438d00000","0x812a55c43caedc597218379000ce510d548836fd":"0xfc936392801c0000","0x812ea7a3b2c86eed32ff4f2c73514cc63bacfbce":"0x3635c9adc5dea00000","0x8134dd1c9df0d6c8a5812426bb55c761ca831f08":"0x6a2160bb57ccc0000","0x814135da8f9811075783bf1ab67062af8d3e9f40":"0x1158e460913d00000","0x81498ca07b0f2f17e8bbc7e61a7f4ae7be66b78b":"0x581fbb5b33bb00000","0x81556db27349ab8b27004944ed50a46e941a0f5f":"0xd8bb6549b02bb80000","0x8155fa6c51eb31d808412d748aa086105018122f":"0x65ea3db75546600000","0x8156360bbd370961ceca6b6691d75006ad204cf2":"0x878678326eac9000000","0x8161d940c3760100b9080529f8a60325030f6edc":"0x1043561a8829300000","0x8164e78314ae16b28926cc553d2ccb16f356270d":"0x1ca134e95fb32c80000","0x8165cab0eafb5a328fc41ac64dae715b2eef2c65":"0x3635c9adc5dea00000","0x8168edce7f2961cf295b9fcd5a45c06cdeda6ef5":"0xad78ebc5ac6200000","0x816d9772cf11399116cc1e72c26c6774c9edd739":"0xad78ebc5ac6200000","0x8173c835646a672e0152be10ffe84162dd256e4c":"0x1aabdf2145b4300000","0x817493cd9bc623702a24a56f9f82e3fd48f3cd31":"0x9e4b23f12d4ca00000","0x8179c80970182cc5b7d82a4df06ea94db63a25f3":"0x276f259de66bf40000","0x817ac33bd8f847567372951f4a10d7a91ce3f430":"0xad7c406c66dc18000","0x818ffe271fc3973565c303f213f6d2da89897ebd":"0x136e05342fee1b98000","0x8197948121732e63d9c148194ecad46e30b749c8":"0xd8d726b7177a800000","0x819af9a1c27332b1c369bbda1b3de1c6e933d640":"0x1109e654b98f7a0000","0x819cdaa5303678ef7cec59d48c82163acc60b952":"0x31351545f79816c0000","0x819eb4990b5aba5547093da12b6b3c1093df6d46":"0x3635c9adc5dea00000","0x81a88196fac5f23c3e12a69dec4b880eb7d97310":"0x6c6b935b8bbd400000","0x81bccbff8f44347eb7fca95b27ce7c952492aaad":"0x840c12165dd780000","0x81bd75abd865e0c3f04a0b4fdbcb74d34082fbb7":"0xd8d726b7177a800000","0x81c18c2a238ddc4cba230a072dd7dc101e620273":"0x487a9a304539440000","0x81c9e1aee2d3365d53bcfdcd96c7c538b0fd7eec":"0x62a992e53a0af00000","0x81cfad760913d3c322fcc77b49c2ae3907e74f6e":"0xaadec983fcff40000","0x81d619ff5726f2405f12904c72eb1e24a0aaee4f":"0x43c33c1937564800000","0x81efe296ae76c860d1c5fbd33d47e8ce9996d157":"0x3635c9adc5dea00000","0x81f8de2c283d5fd4afbda85dedf9760eabbbb572":"0xa2a15d09519be00000","0x820c19291196505b65059d9914b7090be1db87de":"0x796e3ea3f8ab00000","0x821cb5cd05c7ef909fe1be60733d8963d760dc41":"0xd8d726b7177a800000","0x821d798af19989c3ae5b84a7a7283cd7fda1fabe":"0x43c33c1937564800000","0x821eb90994a2fbf94bdc3233910296f76f9bf6e7":"0x21e19e0c9bab2400000","0x82249fe70f61c6b16f19a324840fdc020231bb02":"0x20336b08a93635b0000","0x8228ebc087480fd64547ca281f5eace3041453b9":"0x6acb3df27e1f880000","0x8229ceb9f0d70839498d44e6abed93c5ca059f5d":"0x1a1c1b3c989a20100000","0x822edff636563a6106e52e9a2598f7e6d0ef2782":"0x1f4f9693d42d38000","0x823219a25976bb2aa4af8bad41ac3526b493361f":"0x6c6b935b8bbd400000","0x8232d1f9742edf8dd927da353b2ae7b4cbce7592":"0x243d4d18229ca20000","0x8234f463d18485501f8f85ace4972c9b632dbccc":"0x6c6b935b8bbd400000","0x823768746737ce6da312d53e54534e106f967cf3":"0x1158e460913d00000","0x823ba7647238d113bce9964a43d0a098118bfe4d":"0xad78ebc5ac6200000","0x824074312806da4748434266ee002140e3819ac2":"0x51b1d3839261ac0000","0x82438fd2b32a9bdd674b49d8cc5fa2eff9781847":"0x1158e460913d00000","0x82485728d0e281563758c75ab27ed9e882a0002d":"0x7f808e9291e6c0000","0x824b3c3c443e19295d7ef6faa7f374a4798486a8":"0x1158e460913d00000","0x8251358ca4e060ddb559ca58bc0bddbeb4070203":"0x6c6b935b8bbd400000","0x825135b1a7fc1605614c8aa4d0ac6dbad08f480e":"0x4d853c8f8908980000","0x825309a7d45d1812f51e6e8df5a7b96f6c908887":"0x8034f7d9b166d40000","0x825a7f4e10949cb6f8964268f1fa5f57e712b4c4":"0x1158e460913d00000","0x8261fa230c901d43ff579f4780d399f31e6076bc":"0x6c6b935b8bbd400000","0x8262169b615870134eb4ac6c5f471c6bf2f789fc":"0x19127a1391ea2a0000","0x8263ece5d709e0d7ae71cca868ed37cd2fef807b":"0x35ab028ac154b80000","0x826ce5790532e0548c6102a30d3eac836bd6388f":"0x3cfc82e37e9a7400000","0x826eb7cd7319b82dd07a1f3b409071d96e39677f":"0x3635c9adc5dea00000","0x827531a6c5817ae35f82b00b9754fcf74c55e232":"0xc328093e61ee400000","0x8275cd684c3679d5887d03664e338345dc3cdde1":"0xdb44e049bb2c0000","0x8284923b62e68bbf7c2b9f3414d13ef6c812a904":"0xd255d112e103a00000","0x828ba651cb930ed9787156299a3de44cd08b7212":"0x487a9a304539440000","0x82a15cef1d6c8260eaf159ea3f0180d8677dce1c":"0x6c6b935b8bbd400000","0x82a8b96b6c9e13ebec1e9f18ac02a60ea88a48ff":"0x6c6b8c408e73b30000","0x82a8cbbfdff02b2e38ae4bbfca15f1f0e83b1aea":"0x49b991c27ef6d8000","0x82e4461eb9d849f0041c1404219e4272c4900ab4":"0x6c6b935b8bbd400000","0x82e577b515cb2b0860aafe1ce09a59e09fe7d040":"0x2086ac351052600000","0x82ea01e3bf2e83836e71704e22a2719377efd9c3":"0xa4cc799563c3800000","0x82f2e991fd324c5f5d17768e9f61335db6319d6c":"0x1b1ae4d6e2ef500000","0x82f39b2758ae42277b86d69f75e628d958ebcab0":"0x878678326eac9000000","0x82f854c9c2f087dffa985ac8201e626ca5467686":"0x152d02c7e14af6800000","0x82ff716fdf033ec7e942c909d9831867b8b6e2ef":"0x61093d7c2c6d380000","0x8308ed0af7f8a3c1751fafc877b5a42af7d35882":"0x3635c9adc5dea00000","0x831c44b3084047184b2ad218680640903750c45d":"0x6acb3df27e1f880000","0x83210583c16a4e1e1dac84ebd37e3d0f7c57eba4":"0x6c6b935b8bbd400000","0x832c54176bdf43d2c9bcd7b808b89556b89cbf31":"0xad78ebc5ac6200000","0x833316985d47742bfed410604a91953c05fb12b0":"0x6c6b935b8bbd400000","0x8334764b7b397a4e578f50364d60ce44899bff94":"0x503b203e9fba20000","0x833b6a8ec8da408186ac8a7d2a6dd61523e7ce84":"0x3635c9adc5dea000000","0x833d3fae542ad5f8b50ce19bde2bec579180c88c":"0x12c1b6eed03d280000","0x833db42c14163c7be4cab86ac593e06266d699d5":"0x24e40d2b6943ef900000","0x83563bc364ed81a0c6da3b56ff49bbf267827a9c":"0x3ab91d17b20de500000","0x837a645dc95c49549f899c4e8bcf875324b2f57c":"0x208c394af1c8880000","0x838bd565f99fde48053f7917fe333cf84ad548ab":"0xad78ebc5ac6200000","0x83908aa7478a6d1c9b9b0281148f8f9f242b9fdc":"0x6c6b935b8bbd400000","0x8392e53776713578015bff4940cf43849d7dcba1":"0x84df0355d56170000","0x8397a1bc47acd647418159b99cea57e1e6532d6e":"0x1f10fa827b550b40000","0x8398e07ebcb4f75ff2116de77c1c2a99f303a4cf":"0x1b1ae4d6e2ef500000","0x83a3148833d9644984f7c475a7850716efb480ff":"0xb8507a820728200000","0x83a402438e0519773d5448326bfb61f8b20cf52d":"0x52663ccab1e1c00000","0x83a93b5ba41bf88720e415790cdc0b67b4af34c4":"0xad78ebc5ac6200000","0x83c23d8a502124ee150f08d71dc6727410a0f901":"0x7331f3bfe661b180000","0x83c897a84b695eebe46679f7da19d776621c2694":"0x1b1ae4d6e2ef500000","0x83d532d38d6dee3f60adc68b936133c7a2a1b0dd":"0x1b1ae4d6e2ef500000","0x83dbf8a12853b40ac61996f8bf1dc8fdbaddd329":"0x34957444b840e80000","0x83dbfd8eda01d0de8e158b16d0935fc2380a5dc7":"0x2086ac351052600000","0x83e48055327c28b5936fd9f4447e73bdb2dd3376":"0x90f534608a72880000","0x83fe5a1b328bae440711beaf6aad6026eda6d220":"0x43c33c1937564800000","0x84008a72f8036f3feba542e35078c057f32a8825":"0x56bc75e2d63100000","0x840ec83ea93621f034e7bb3762bb8e29ded4c479":"0x878678326eac900000","0x841145b44840c946e21dbc190264b8e0d5029369":"0x3f870857a3e0e3800000","0x84232107932b12e03186583525ce023a703ef8d9":"0x6c6b935b8bbd400000","0x84244fc95a6957ed7c1504e49f30b8c35eca4b79":"0x6c6b935b8bbd400000","0x8431277d7bdd10457dc017408c8dbbbd414a8df3":"0x222c8eb3ff6640000","0x84375afbf59b3a1d61a1be32d075e0e15a4fbca5":"0xad78ebc5ac6200000","0x843bd3502f45f8bc4da370b323bdac3fcf5f19a6":"0x50039d63d11c900000","0x84503334630d77f74147f68b2e086613c8f1ade9":"0x56bc75e2d631000000","0x845203750f7148a9aa262921e86d43bf641974fd":"0x56bc75e2d63100000","0x8461ecc4a6a45eb1a5b947fb86b88069b91fcd6f":"0x6c6b935b8bbd400000","0x84675e9177726d45eaa46b3992a340ba7f710c95":"0x3635c9adc5dea00000","0x84686c7bad762c54b667d59f90943cd14d117a26":"0x1158e460913d00000","0x8489f6ad1d9a94a297789156899db64154f1dbb5":"0x137407c03c8c268000","0x848c994a79003fe7b7c26cc63212e1fc2f9c19eb":"0x6c6b935b8bbd400000","0x848fbd29d67cf4a013cb02a4b176ef244e9ee68d":"0x1172a636bbdc20000","0x84949dba559a63bfc845ded06e9f2d9b7f11ef24":"0x6c6b935b8bbd400000","0x849ab80790b28ff1ffd6ba394efc7463105c36f7":"0x1e02be4ae6c840000","0x849b116f596301c5d8bb62e0e97a8248126e39f3":"0x1043561a8829300000","0x84a74ceecff65cb93b2f949d773ef1ad7fb4a245":"0x50a9b444685c70000","0x84aac7fa197ff85c30e03b7a5382b957f41f3afb":"0x88b23acffd9900000","0x84af1b157342d54368260d17876230a534b54b0e":"0x35659ef93f0fc40000","0x84b0ee6bb837d3a4c4c5011c3a228c0edab4634a":"0x1158e460913d00000","0x84b4b74e6623ba9d1583e0cfbe49643f16384149":"0x1158e460913d00000","0x84b6b6adbe2f5b3e2d682c66af1bc4905340c3ed":"0x2192f8d22215008000","0x84b91e2e2902d05e2b591b41083bd7beb2d52c74":"0x215e5128b4504648000","0x84bcbf22c09607ac84341d2edbc03bfb1739d744":"0x1b1ae4d6e2ef500000","0x84bfcef0491a0ae0694b37ceac024584f2aa0467":"0x6c6acc67d7b1d40000","0x84cb7da0502df45cf561817bbd2362f451be02da":"0x487a9a304539440000","0x84cc7878da605fdb019fab9b4ccfc157709cdda5":"0x48798513af04c90000","0x84db1459bb00812ea67ecb3dc189b72187d9c501":"0x811b8fbda85ab8000","0x84e9949680bece6841b9a7e5250d08acd87d16cd":"0xad78ebc5ac6200000","0x84e9cf8166c36abfa49053b7a1ad4036202681ef":"0x6c6b935b8bbd400000","0x84ec06f24700fe42414cb9897c154c88de2f6132":"0x487a9a304539440000","0x84f522f0520eba52dd18ad21fa4b829f2b89cb97":"0x10c5106d5134f130000","0x850b9db18ff84bf0c7da49ea3781d92090ad7e64":"0x8cf23f909c0fa00000","0x8510ee934f0cbc900e1007eb38a21e2a5101b8b2":"0x5bf0ba6634f680000","0x8516fcaf77c893970fcd1a958ba9a00e49044019":"0xaa3eb1691bce58000","0x851aa91c82f42fad5dd8e8bb5ea69c8f3a5977d1":"0x80e561f2578798000","0x851c0d62be4635d4777e8035e37e4ba8517c6132":"0x1b1ae4d6e2ef500000","0x851dc38adb4593729a76f33a8616dab6f5f59a77":"0x56bc75e2d63100000","0x8532490897bbb4ce8b7f6b837e4cba848fbe9976":"0x56bc75e2d63100000","0x853e6abaf44469c72f151d4e223819aced4e3728":"0x6c6b935b8bbd400000","0x854691ce714f325ced55ce5928ce9ba12facd1b8":"0xed70b5e9c3f2f00000","0x854c0c469c246b83b5d1b3eca443b39af5ee128a":"0x56bc75e2d631000000","0x855d9aef2c39c6230d09c99ef6494989abe68785":"0x8ba52e6fc45e40000","0x8563c49361b625e768771c96151dbfbd1c906976":"0x6c6b935b8bbd400000","0x8566610901aace38b83244f3a9c831306a67b9dc":"0xb08213bcf8ffe00000","0x856aa23c82d7215bec8d57f60ad75ef14fa35f44":"0x43c33c1937564800000","0x856e5ab3f64c9ab56b009393b01664fc0324050e":"0x61093d7c2c6d380000","0x856eb204241a87830fb229031343dc30854f581a":"0x3635c9adc5dea00000","0x85732c065cbd64119941aed430ac59670b6c51c4":"0x27a57362ab0a0e8000","0x8578e10212ca14ff0732a8241e37467db85632a9":"0x14542ba12a337c00000","0x8579dadf1a395a3471e20b6f763d9a0ff19a3f6f":"0xd8d726b7177a800000","0x857f100b1a5930225efc7e9020d78327b41c02cb":"0x6c6b935b8bbd400000","0x85946d56a4d371a93368539690b60ec825107454":"0x5dc892aa1131c80000","0x8599cbd5a6a9dcd4b966be387d69775da5e33c6f":"0xc51f1b1d52622900000","0x859c600cf13d1d0273d5d1da3cd789e495899f27":"0x90f534608a72880000","0x85a2f6ea94d05e8c1d9ae2f4910338a358e98ded":"0x6c6b935b8bbd400000","0x85b16f0b8b34dff3804f69e2168a4f7b24d1042b":"0x112f423c7646d40000","0x85b2998d0c73302cb2ba13f489313301e053be15":"0x21e19e0c9bab2400000","0x85bb51bc3bfe9a1b2a2f6b1cda95bca8b38c8d5e":"0x11712da04ba1ef0000","0x85c8f3cc7a354feac99a5e7bfe7cdfa351cfe355":"0x15af1d78b58c400000","0x85ca1e727e9d1a87991cc2c41840ebb9edf21d1b":"0xb98bc829a6f90000","0x85ca8bc6da2803d0725f5e1a456c89f9bc774e2f":"0x2086ac351052600000","0x85d0d88754ac84b8b21ba93dd2bfec72626faba8":"0x3635c9adc5dea00000","0x85eb256b51c819d60ea61a82d12c9358d59c1cae":"0x18efc84ad0c7b00000","0x85f0e7c1e3aff805a627a2aaf2cff6b4c0dbe9cb":"0x1158e460913d00000","0x86026cad3fe4ea1ce7fca260d3d45eb09ea6a364":"0xad78ebc5ac6200000","0x860f5ffc10de767ded807f71e861d647dfd219b1":"0x21e19e0c9bab2400000","0x86153063a1ae7f02f1a88136d4d69c7c5e3e4327":"0x3635c9adc5dea00000","0x86245f596691093ece3f3d3ca2263eace81941d9":"0xa31062beeed700000","0x862569211e8c6327b5415e3a67e5738b15baaf6e":"0x796e3ea3f8ab00000","0x86297d730fe0f7a9ee24e08fb1087b31adb306a7":"0x6c6b935b8bbd400000","0x8644cc281be332ccced36da483fb2a0746d9ba2e":"0x15af1d78b58c400000","0x86499a1228ff2d7ee307759364506f8e8c8307a5":"0x6acb3df27e1f880000","0x864bec5069f855a4fd5892a6c4491db07c88ff7c":"0x3635c9adc5dea00000","0x86570ab259c9b1c32c9729202f77f590c07dd612":"0xad78ebc5ac6200000","0x8663a241a0a89e70e182c845e2105c8ad7264bcf":"0x323b13d8398f3238000","0x8667fa1155fed732cfb8dca5a0d765ce0d0705ed":"0x46ec965c393b10000","0x8668af868a1e98885f937f2615ded6751804eb2d":"0x1158e460913d00000","0x86740a46648e845a5d96461b18091ff57be8a16f":"0x14c0973485bf39400000","0x867eba56748a5904350d2ca2a5ce9ca00b670a9b":"0x43c33c1937564800000","0x86806474c358047d9406e6a07f40945bc8328e67":"0x1752eb0f7013d100000","0x86883d54cd3915e549095530f9ab1805e8c5432d":"0xd8d726b7177a800000","0x868c23be873466d4c74c220a19b245d1787e807f":"0x4a13bbbd92c88e8000","0x86924fb211aad23cf5ce600e0aae806396444087":"0x21e19e0c9bab2400000","0x8693e9b8be94425eef7969bc69f9d42f7cad671e":"0x3637096c4bcc690000","0x869f1aa30e4455beb1822091de5cadec79a8f946":"0x1b1ae4d6e2ef5000000","0x86a1eadeeb30461345d9ef6bd05216fa247c0d0c":"0x6c6b935b8bbd400000","0x86a5f8259ed5b09e188ce346ee92d34aa5dd93fa":"0xad78ebc5ac6200000","0x86b7bd563ceab686f96244f9ddc02ad7b0b14bc2":"0x21e19e0c9bab2400000","0x86c28b5678af37d727ec05e4447790f15f71f2ea":"0xad78ebc5ac6200000","0x86c4ce06d9ac185bb148d96f7b7abe73f441006d":"0x21e19e0c9bab2400000","0x86c8d0d982b539f48f9830f9891f9d607a942659":"0x2ced37761824fb00000","0x86c934e38e53be3b33f274d0539cfca159a4d0d1":"0x34957444b840e80000","0x86ca0145957e6b0dfe36875fbe7a0dec55e17a28":"0x21e19e0c9bab2400000","0x86caafacf32aa0317c032ac36babed974791dc03":"0x878678326eac9000000","0x86cdb7e51ac44772be3690f61d0e59766e8bfc18":"0xd8d726b7177a800000","0x86df73bd377f2c09de63c45d67f283eaefa0f4ab":"0x3635c9adc5dea00000","0x86e3fe86e93da486b14266eadf056cbfa4d91443":"0x6c6b935b8bbd400000","0x86e8670e27598ea09c3899ab7711d3b9fe901c17":"0xad78ebc5ac6200000","0x86ef6426211949cc37f4c75e7850369d0cf5f479":"0x2d65f32ea045af60000","0x86f05d19063e9369c6004eb3f123943a7cff4eab":"0x6c6acc67d7b1d40000","0x86f23e9c0aafc78b9c404dcd60339a925bffa266":"0x15af1d78b58c400000","0x86f4f40ad984fbb80933ae626e0e42f9333fdd41":"0x3635c9adc5dea00000","0x86f95c5b11a293940e35c0b898d8b75f08aab06d":"0x644e3e875fccf740000","0x86fff220e59305c09f483860d6f94e96fbe32f57":"0x2535b6ab4c0420000","0x870796abc0db84af82da52a0ed68734de7e636f5":"0x1043561a8829300000","0x870f15e5df8b0eabd02569537a8ef93b56785c42":"0x150894e849b3900000","0x87183160d172d2e084d327b86bcb7c1d8e6784ef":"0xd8d8583fa2d52f0000","0x871b8a8b51dea1989a5921f13ec1a955a515ad47":"0x1b1ae4d6e2ef5000000","0x8725e8c753b3acbfdca55f3c62dfe1a59454968a":"0x3637096c4bcc690000","0x8737dae671823a8d5917e0157ace9c43468d946b":"0x6c6acc67d7b1d40000","0x873b7f786d3c99ff012c4a7cae2677270240b9c5":"0x5dc892aa1131c80000","0x873c6f70efb6b1d0f2bbc57eebcd70617c6ce662":"0x36f0d5275d09570000","0x873e49135c3391991060290aa7f6ccb8f85a78db":"0x1158e460913d00000","0x875061ee12e820041a01942cb0e65bb427b00060":"0x97c9ce4cf6d5c00000","0x87584a3f613bd4fac74c1e780b86d6caeb890cb2":"0x5c283d410394100000","0x8764d02722000996ecd475b433298e9f540b05bf":"0xad78ebc5ac6200000","0x876c3f218b4776df3ca9dbfb270de152d94ed252":"0x56bc75e2d63100000","0x8775a610c502b9f1e6ad4cdadb8ce29bff75f6e4":"0x2086ac351052600000","0x87764e3677eef604cbc59aed24abdc566b09fc25":"0xa2a15d09519be00000","0x8787d12677a5ec291e57e31ffbfad105c3324b87":"0x2a24eb53208f3128000","0x8794bf47d54540ece5c72237a1ffb511ddb74762":"0x6c6b935b8bbd400000","0x87a53ea39f59a35bada8352521645594a1a714cb":"0x678a932062e4180000","0x87a7c508ef71582dd9a54372f89cb01f252fb180":"0xad78ebc5ac6200000","0x87af25d3f6f8eea15313d5fe4557e810c524c083":"0x42bf06b78ed3b500000","0x87b10f9c280098179a2b76e9ce90be61fc844d0d":"0x487a9a304539440000","0x87bf7cd5d8a929e1c785f9e5449106ac232463c9":"0x437b11fcc45640000","0x87c498170934b8233d1ad1e769317d5c475f2f40":"0x3708baed3d68900000","0x87cf36ad03c9eae9053abb5242de9117bb0f2a0b":"0x1b1ae4d6e2ef500000","0x87d7ac0653ccc67aa9c3469eef4352193f7dbb86":"0x2a5a058fc295ed000000","0x87e3062b2321e9dfb0875ce3849c9b2e3522d50a":"0x21e19e0c9bab2400000","0x87e6034ecf23f8b5639d5f0ea70a22538a920423":"0x11c7ea162e78200000","0x87ef6d8b6a7cbf9b5c8c97f67ee2adc2a73b3f77":"0xadd1bd23c3c480000","0x87fb26c31e48644d693134205cae43b21f18614b":"0x4a4491bd6dcd280000","0x87fc4635263944ce14a46c75fa4a821f39ce7f72":"0x1158e460913d00000","0x87fcbe7c4193ffcb08143779c9bec83fe7fda9fc":"0x56f985d38644b8000","0x88015d7203c5e0224aeda286ed12f1a51b789333":"0x10f08eda8e555098000","0x88106c27d20b74b4b98ca62b232bd5c97411171f":"0xaadec983fcff40000","0x881230047c211d2d5b00d8de4c5139de5e3227c7":"0x21e19e0c9bab2400000","0x882aa798bf41df179f85520130f15ccdf59b5e58":"0x6c6b935b8bbd400000","0x882bd3a2e9d74110b24961c53777f22f1f46dc5d":"0x2d4ca05e2b43ca80000","0x882c8f81872c79fed521cb5f950d8b032322ea69":"0x878678326eac9000000","0x882f75708386653c80171d0663bfe30b017ed0ad":"0x6c6b935b8bbd400000","0x88344909644c7ad4930fd873ca1c0da2d434c07f":"0x727739fcb004d0000","0x8834b2453471f324fb26be5b25166b5b5726025d":"0x1f0ff8f01daad40000","0x883a78aeabaa50d8ddd8570bcd34265f14b19363":"0xd25522fda379a18000","0x8845e9f90e96336bac3c616be9d88402683e004c":"0x6c6b935b8bbd400000","0x8846928d683289a2d11df8db7a9474988ef01348":"0x21e19e0c9bab2400000","0x884980eb4565c1048317a8f47fdbb461965be481":"0xd8d6119a8146050000","0x884a7a39d0916e05f1c242df55607f37df8c5fda":"0x4f4843c157c8ca00000","0x885493bda36a0432976546c1ddce71c3f4570021":"0xbbf510ddfcb260000","0x88609e0a465b6e99fce907166d57e9da0814f5c8":"0x43c33c1937564800000","0x886d0a9e17c9c095af2ea2358b89ec705212ee94":"0x18493fba64ef00000","0x88797e58675ed5cc4c19980783dbd0c956085153":"0x6c6b935b8bbd400000","0x887cac41cd706f3345f2d34ac34e01752a6e5909":"0x20465cee9da1370000","0x88888a57bd9687cbf950aeeacf9740dcc4d1ef59":"0x62a992e53a0af00000","0x8889448316ccf14ed86df8e2f478dc63c4338340":"0xd2f13f7789f00000","0x888c16144933197cac26504dd76e06fd6600c789":"0x56bc75e2d63100000","0x888e94917083d152202b53163939869d271175b4":"0xd8d726b7177a800000","0x889087f66ff284f8b5efbd29493b706733ab1447":"0x215f835bc769da80000","0x8895eb726226edc3f78cc6a515077b3296fdb95e":"0xd5967be4fc3f100000","0x88975a5f1ef2528c300b83c0c607b8e87dd69315":"0x486cb9799191e0000","0x889da40fb1b60f9ea9bd7a453e584cf7b1b4d9f7":"0x22b1c8c1227a00000","0x889da662eb4a0a2a069d2bc24b05b4ee2e92c41b":"0x5a2c8c5456c9f28000","0x88a122a2382c523931fb51a0ccad3beb5b7259c3":"0x6c6b935b8bbd400000","0x88a2154430c0e41147d3c1fee3b3b006f851edbd":"0x36356633ebd8ea0000","0x88b217ccb786a254cf4dc57f5d9ac3c455a30483":"0x3224f42723d4540000","0x88bc43012edb0ea9f062ac437843250a39b78fbb":"0x43c33c1937564800000","0x88c2516a7cdb09a6276d7297d30f5a4db1e84b86":"0xd8d726b7177a800000","0x88c361640d6b69373b081ce0c433bd590287d5ec":"0xa968163f0a57b400000","0x88d541c840ce43cefbaf6d19af6b9859b573c145":"0x93739534d28680000","0x88de13b09931877c910d593165c364c8a1641bd3":"0xa2a15d09519be00000","0x88dec5bd3f4eba2d18b8aacefa7b721548c319ba":"0x4a4491bd6dcd280000","0x88e6f9b247f988f6c0fc14c56f1de53ec69d43cc":"0x56bc75e2d63100000","0x88ee7f0efc8f778c6b687ec32be9e7d6f020b674":"0x6c6b935b8bbd400000","0x88f1045f19f2d3191816b1df18bb6e1435ad1b38":"0xd02ab486cedc00000","0x89009e3c6488bd5e570d1da34eabe28ed024de1b":"0x43c33c1937564800000","0x89054430dcdc28ac15fa635ef87c105e602bf70c":"0x5dacd13ca9e300000","0x8908760cd39b9c1e8184e6a752ee888e3f0b7045":"0x14542ba12a337c00000","0x890fe11f3c24db8732d6c2e772e2297c7e65f139":"0xd5627137da8b5900000","0x8914a680a5aec5226d4baaec2e5552b44dd7c874":"0x56cd55fc64dfe0000","0x891cb8238c88e93a1bcf61db49bd82b47a7f4f84":"0x914878a8c05ee00000","0x8925da4549e15155e57a628522cea9dddf627d81":"0x3636c25e66ece70000","0x893017ff1adad499aa065401b4236ce6e92b625a":"0x6c6acc67d7b1d40000","0x8933491760c8f0b4df8caac78ed835caee21046d":"0x43c33c1937564800000","0x893608751d68d046e85802926673cdf2f57f7cb8":"0x11164759ffb320000","0x8938d1b4daee55a54d738cf17e4477f6794e46f7":"0xfc936392801c0000","0x893a6c2eb8b40ab096b4f67e74a897b840746e86":"0x5dc892aa1131c80000","0x893cdddf5377f3c751bf2e541120045a47cba101":"0x56bc75e2d63100000","0x895613236f3584216ad75c5d3e07e3fa6863a778":"0x6c6b935b8bbd400000","0x8957727e72cf629020f4e05edf799aa7458062d0":"0x77432217e683600000","0x895d694e880b13ccd0848a86c5ce411f88476bbf":"0xad6eedd17cf3b8000","0x895ec5545644e0b78330fffab8ddeac9e833156c":"0x2086ac351052600000","0x896009526a2c7b0c09a6f63a80bdf29d9c87de9c":"0xbbb86b8223edeb0000","0x8967d7b9bdb7b4aed22e65a15dc803cb7a213f10":"0x15af1d78b58c400000","0x896e335ca47af57962fa0f4dbf3e45e688cba584":"0x4a2fc0ab6052120000","0x8973aefd5efaee96095d9e288f6a046c97374b43":"0x7a4c4a0f332140000","0x898c72dd736558ef9e4be9fdc34fef54d7fc7e08":"0x3635c9adc5dea00000","0x899b3c249f0c4b81df75d212004d3d6d952fd223":"0x6c6b935b8bbd400000","0x89ab13ee266d779c35e8bb04cd8a90cc2103a95b":"0xcb49b44ba602d800000","0x89c433d601fad714da6369308fd26c1dc9942bbf":"0x6c6b935b8bbd400000","0x89d75b8e0831e46f80bc174188184e006fde0eae":"0x3635c9adc5dea00000","0x89e3b59a15864737d493c1d23cc53dbf8dcb1362":"0xd8d726b7177a800000","0x89fc8e4d386b0d0bb4a707edf3bd560df1ad8f4e":"0xa030dcebbd2f4c0000","0x89fee30d1728d96cecc1dab3da2e771afbcfaa41":"0x6c6acc67d7b1d40000","0x8a1cc5ac111c49bfcfd848f37dd768aa65c88802":"0x21e19e0c9bab2400000","0x8a20e5b5cee7cd1f5515bace3bf4f77ffde5cc07":"0x4563918244f400000","0x8a217db38bc35f215fd92906be42436fe7e6ed19":"0x14542ba12a337c00000","0x8a243a0a9fea49b839547745ff2d11af3f4b0522":"0x35659ef93f0fc40000","0x8a247d186510809f71cffc4559471c3910858121":"0x61093d7c2c6d380000","0x8a3470282d5e2a2aefd7a75094c822c4f5aeef8a":"0xd28bc606478a58000","0x8a36869ad478997cbf6d8924d20a3c8018e9855b":"0x1158e460913d00000","0x8a4314fb61cd938fc33e15e816b113f2ac89a7fb":"0x17764e7aed65100000","0x8a4f4a7f52a355ba105fca2072d3065fc8f7944b":"0x1b1ae4d6e2ef500000","0x8a5831282ce14a657a730dc18826f7f9b99db968":"0xeabe8a5b41c1360000","0x8a5fb75793d043f1bcd43885e037bd30a528c927":"0x13536e6d2e9ac20000","0x8a66abbc2d30ce21a833b0db8e561d5105e0a72c":"0x25f1de5c76acdf0000","0x8a746c5d67064711bfca685b95a4fe291a27028e":"0x22b1c8c1227a00000","0x8a780ab87a9145fe10ed60fa476a740af4cab1d2":"0x121b2e5e6464780000","0x8a7a06be199a3a58019d846ac9cbd4d95dd757de":"0xa2a423944256f40000","0x8a810114b2025db9fbb50099a6e0cb9e2efa6bdc":"0x678a932062e4180000","0x8a86e4a51c013b1fb4c76bcf30667c78d52eedef":"0x6c6b935b8bbd400000","0x8a9eca9c5aba8e139f8003edf1163afb70aa3aa9":"0x23c757072b8dd00000","0x8ab839aeaf2ad37cb78bacbbb633bcc5c099dc46":"0x6c6b935b8bbd400000","0x8ac89bd9b8301e6b0677fa25fcf0f58f0cc7b611":"0x1158e460913d00000","0x8adc53ef8c18ed3051785d88e996f3e4b20ecd51":"0x8e4d316827686400000","0x8ae6f80b70e1f23c91fbd5a966b0e499d95df832":"0xaadec983fcff40000","0x8ae9ef8c8a8adfa6ab798ab2cdc405082a1bbb70":"0x6c6b935b8bbd400000","0x8af626a5f327d7506589eeb7010ff9c9446020d2":"0x4be4e7267b6ae00000","0x8b01da34d470c1d115acf4d8113c4dd8a8c338e4":"0x5572dcefab697900000","0x8b07d050754dc9ba230db01c310afdb5395aa1b3":"0x666b06e62a6200000","0x8b20ad3b94656dbdc0dd21a393d8a7d9e02138cb":"0xa2a15d09519be00000","0x8b27392206b958cd375d7ef8af2cf8ef0598c0bc":"0x3635c9adc5dea00000","0x8b30c04098d7a7e6420c357ea7bfa49bac9a8a18":"0x1b1b113f91fb0140000","0x8b338411f26ccf37658cc75521d77629099e467d":"0x6c6b935b8bbd400000","0x8b36224c7356e751f0c066c35e3b44860364bfc2":"0x3627bac7a3d9278000","0x8b3696f3c60de32432a2e4c395ef0303b7e81e75":"0x65a4da25d3016c00000","0x8b393fb0813ee101db1e14ecc7d322c72b8c0473":"0x18b26a313e8ae90000","0x8b48e19d39dd35b66e6e1bb6b9c657cb2cf59d04":"0x3c755ac9c024a018000","0x8b505e2871f7deb7a63895208e8227dcaa1bff05":"0xcf68efc308d79bc0000","0x8b57b2bc83cc8d4de331204e893f2f3b1db1079a":"0x22b1c8c1227a00000","0x8b5c914b128bf1695c088923fa467e7911f351fa":"0x556f64c1fe7fa0000","0x8b5f29cc2faa262cdef30ef554f50eb488146eac":"0x13b68705c9720810000","0x8b7056f6abf3b118d026e944d5c073433ca451d7":"0x3635c6204739d98000","0x8b714522fa2839620470edcf0c4401b713663df1":"0xad78ebc5ac6200000","0x8b74a7cb1bb8c58fce267466a30358adaf527f61":"0x2e257784e25b4500000","0x8b7e9f6f05f7e36476a16e3e7100c9031cf404af":"0x3635c9adc5dea00000","0x8b81156e698639943c01a75272ad3d35851ab282":"0x12b3165f65d3e50000","0x8b9577920053b1a00189304d888010d9ef2cb4bf":"0x1b1ae4d6e2ef500000","0x8b9841862e77fbbe919470935583a93cf027e450":"0x6c6c5334427f1f0000","0x8b997dbc078ad02961355da0a159f2927ed43d64":"0xaadec983fcff40000","0x8b9fda7d981fe9d64287f85c94d83f9074849fcc":"0x2f6f10780d22cc00000","0x8bb0212f3295e029cab1d961b04133a1809e7b91":"0x6c6b935b8bbd400000","0x8bbeacfc29cfe93402db3c41d99ab759662e73ec":"0x6c6b935b8bbd400000","0x8bc1ff8714828bf286ff7e8a7709106548ed1b18":"0x21e19e0c9bab2400000","0x8bd0b65a50ef5cef84fec420be7b89ed1470ceb9":"0x28a77936e92c81c0000","0x8bd6b1c6d74d010d1008dba6ef835d4430b35c32":"0x2b5e3af16b1880000","0x8bd8d4c4e943f6c8073921dc17e3e8d7a0761627":"0x9f04219d8d34950000","0x8bdfda6c215720eda2136f91052321af4e936c1f":"0x3635e619bb04d40000","0x8bea40379347a5c891d59a6363315640f5a7e07a":"0x6c6b76ef96970c0000","0x8bf02bd748690e1fd1c76d270833048b66b25fd3":"0x27fade568eba9600000","0x8bf297f8f453523ed66a1acb7676856337b93bf0":"0xd8d726b7177a800000","0x8bf373d076814cbc57e1c6d16a82c5be13c73d37":"0xad78ebc5ac6200000","0x8c1023fde1574db8bb54f1739670157ca47da652":"0x179cf9ac3a1b1770000","0x8c1fbe5f0aea359c5aa1fa08c8895412ca8e05a6":"0x3635c9adc5dea00000","0x8c22426055b76f11f0a2de1a7f819a619685fe60":"0x6b56051582a9700000","0x8c2b7d8b608d28b77f5caa9cd645242a823e4cd9":"0x62a992e53a0af00000","0x8c2fbeee8eacc5c5d77c16abd462ee9c8145f34b":"0x692ae8897081d00000","0x8c3a9ee71f729f236cba3867b4d79d8ceee25dbc":"0x56bc75e2d63100000","0x8c50aa2a9212bcde56418ae261f0b35e7a9dbb82":"0x15af1d78b58c400000","0x8c54c7f8b9896e75d7d5f5c760258699957142ad":"0x22b1c8c1227a00000","0x8c5d16ed65e3ed7e8b96ca972bc86173e3500b03":"0x6c6b935b8bbd400000","0x8c6aa882ee322ca848578c06cb0fa911d3608305":"0x2086ac351052600000","0x8c6ae7a05a1de57582ae2768204276c0ff47ed03":"0x2c0bb3dd30c4e2000000","0x8c6f9f4e5b7ae276bf58497bd7bf2a7d25245f64":"0x93fe5c57d710680000","0x8c75956e8fed50f5a7dd7cfd27da200f6746aea6":"0x3635c9adc5dea00000","0x8c7cb4e48b25031aa1c4f92925d631a8c3edc761":"0x3635c9adc5dea00000","0x8c7fa5cae82fedb69ab189d3ff27ae209293fb93":"0x15af880d8cdb830000","0x8c81410ea8354cc5c65c41be8bd5de733c0b111d":"0x205b4dfa1ee74780000","0x8c83d424a3cf24d51f01923dd54a18d6b6fede7b":"0xd8d726b7177a800000","0x8c900a8236b08c2b65405d39d75f20062a7561fd":"0x58e7926ee858a00000","0x8c93c3c6db9d37717de165c3a1b4fe51952c08de":"0x15af1d78b58c400000","0x8c999591fd72ef7111efca7a9e97a2356b3b000a":"0xdd64e2aa0a67500000","0x8ca6989746b06e32e2487461b1ce996a273acfd7":"0x1158e460913d00000","0x8cb3aa3fcd212854d7578fcc30fdede6742a312a":"0x1043561a8829300000","0x8cc0d7c016fa7aa950114aa1db094882eda274ea":"0x8a9aba557e36c0000","0x8cc652dd13e7fe14dabbb36d5d320db9ffee8a54":"0x61093d7c2c6d380000","0x8ccabf25077f3aa41545344d53be1b2b9c339000":"0x5be866c562c5440000","0x8ccf3aa21ab742576ad8c422f71bb188591dea8a":"0x3635c9adc5dea00000","0x8cd0cd22e620eda79c0461e896c93c44837e2968":"0x6c6b935b8bbd400000","0x8cde8b732e6023878eb23ed16229124b5f7afbec":"0x73f75d1a085ba0000","0x8ce22f9fa372449a420610b47ae0c8d565481232":"0x6c6b935b8bbd400000","0x8ce4949d8a16542d423c17984e6739fa72ceb177":"0x54b405926f4a63d8000","0x8ce5e3b5f591d5eca38abf228f2e3c35134bdac0":"0x7dc35b84897c380000","0x8cee38d6595788a56e3fb94634b3ffe1fbdb26d6":"0x43c33c1937564800000","0x8ceea15eec3bdad8023f98ecf25b2b8fef27db29":"0x6c6b935b8bbd400000","0x8cf3546fd1cda33d58845fc8fcfecabca7c5642a":"0x1f1e39932cb3278000","0x8cf6da0204dbc4860b46ad973fc111008d9e0c46":"0xad78ebc5ac6200000","0x8cfedef198db0a9143f09129b3fd64dcbb9b4956":"0x6c6b935b8bbd400000","0x8d04a5ebfb5db409db0617c9fa5631c192861f4a":"0x34957444b840e80000","0x8d06e464245cad614939e0af0845e6d730e20374":"0xadc8a28f3d87d8000","0x8d07d42d831c2d7c838aa1872b3ad5d277176823":"0x12ee1f9ddbee680000","0x8d0b9ea53fd263415eac11391f7ce9123c447062":"0x6c6b935b8bbd400000","0x8d1794da509cb297053661a14aa892333231e3c1":"0xad201a6794ff80000","0x8d1abd897dacd4312e18080c88fb9647eab44052":"0xbb59a27953c600000","0x8d2303341e1e1eb5e8189bde03f73a60a2a54861":"0x56bc75e2d63100000","0x8d238e036596987643d73173c37b0ad06055b96c":"0x7148bf0a2af0660000","0x8d2e31b08803b2c5f13d398ecad88528209f6057":"0x21db8bbcad11e840000","0x8d378f0edc0bb0f0686d6a20be6a7692c4fa24b8":"0x56bc75e2d63100000","0x8d4b603c5dd4570c34669515fdcc665890840c77":"0xfc936392801c0000","0x8d51a4cc62011322c696fd725b9fb8f53feaaa07":"0x3635c9adc5dea00000","0x8d544c32c07fd0842c761d53a897d6c950bb7599":"0xad78ebc5ac6200000","0x8d5ef172bf77315ea64e85d0061986c794c6f519":"0xd5967be4fc3f100000","0x8d616b1eee77eef6f176e0698db3c0c141b2fc8f":"0x1b1ae4d6e2ef500000","0x8d6170ff66978e773bb621bf72b1ba7be3a7f87e":"0xad78ebc5ac6200000","0x8d620bde17228f6cbba74df6be87264d985cc179":"0x56bc75e2d63100000","0x8d629c20608135491b5013f1002586a0383130e5":"0x4a4491bd6dcd280000","0x8d6657f59711b1f803c6ebef682f915b62f92dc9":"0x6c6b935b8bbd400000","0x8d667637e29eca05b6bfbef1f96d460eefbf9984":"0xd8d726b7177a800000","0x8d6df209484d7b94702b03a53e56b9fb0660f6f0":"0x6c6b935b8bbd400000","0x8d795c5f4a5689ad62da961671f028065286d554":"0x6f05b59d3b20000000","0x8d7f3e61299c2db9b9c0487cf627519ed00a9123":"0x5e74a8505e80a00000","0x8d89170b92b2be2c08d57c48a7b190a2f146720f":"0x42bf06b78ed3b500000","0x8d93dac785f88f1a84bf927d53652b45a154ccdd":"0x890b0c2e14fb80000","0x8d9952d0bb4ebfa0efd01a3aa9e8e87f0525742e":"0xbb9125542263900000","0x8d9a0c70d2262042df1017d6c303132024772712":"0x6c6b935b8bbd400000","0x8d9ed7f4553058c26f7836a3802d3064eb1b363d":"0x4e1003b28d9280000","0x8da1178f55d97772bb1d24111a404a4f8715b95d":"0x2f9ac3f6de00808000","0x8da1d359ba6cb4bcc57d7a437720d55db2f01c72":"0x4563918244f400000","0x8dab948ae81da301d972e3f617a912e5a753712e":"0x15af1d78b58c400000","0x8daddf52efbd74da95b969a5476f4fbbb563bfd2":"0x2d43f3ebfafb2c0000","0x8db185fe1b70a94a6a080e7e23a8bedc4acbf34b":"0x4be4e7267b6ae00000","0x8db58e406e202df9bc703c480bd8ed248d52a032":"0x6c6b935b8bbd400000","0x8dbc3e6cb433e194f40f82b40faadb1f8b856116":"0x678a932062e4180000","0x8dc1d5111d09af25fdfcac455c7cec283e6d6775":"0x6c6b935b8bbd400000","0x8dd484ff8a307364eb66c525a571aac701c5c318":"0xd8d726b7177a800000","0x8dd6a9bae57f518549ada677466fea8ab04fd9b4":"0xd8d726b7177a800000","0x8dde3cb8118568ef4503fe998ccdf536bf19a098":"0xd8d726b7177a800000","0x8dde60eb08a099d7daa356daaab2470d7b025a6b":"0xaadec983fcff40000","0x8df339214b6ad1b24663ce716034749d6ef838d9":"0x2544faa778090e00000","0x8df53d96191471e059de51c718b983e4a51d2afd":"0x6c6b935b8bbd4000000","0x8dfbafbc0e5b5c86cd1ad697feea04f43188de96":"0x15252b7f5fa0de0000","0x8e073bad25e42218615f4a0e6b2ea8f8de2230c0":"0x823d629d026bfa0000","0x8e0fee38685a94aabcd7ce857b6b1409824f75b8":"0x1b1ae4d6e2ef500000","0x8e23facd12c765c36ab81a6dd34d8aa9e68918ae":"0x911e4868dba9b0000","0x8e2f9034c9254719c38e50c9aa64305ed696df1e":"0x1004e2e45fb7ee00000","0x8e3240b0810e1cf407a500804740cf8d616432a4":"0x22f6655ef0b388000","0x8e486a0442d171c8605be348fee57eb5085eff0d":"0xd8d726b7177a800000","0x8e6156336be2cdbe32140df08a2ba55fd0a58463":"0x4099e1d6357180000","0x8e670815fb67aeaea57b86534edc00cdf564fee5":"0xb2e4b323d9c5100000","0x8e6d7485cbe990acc1ad0ee9e8ccf39c0c93440e":"0x33c5499031720c0000","0x8e74e0d1b77ebc823aca03f119854cb12027f6d7":"0x16b352da5e0ed3000000","0x8e78f351457d016f4ad2755ec7424e5c21ba6d51":"0x7ea28327577080000","0x8e7936d592008fdc7aa04edeeb755ab513dbb89d":"0x1158e460913d00000","0x8e7fd23848f4db07906a7d10c04b21803bb08227":"0x3635c9adc5dea00000","0x8e92aba38e72a098170b92959246537a2e5556c0":"0xe7eeba3410b740000","0x8e98766524b0cf2747c50dd43b9567594d9731de":"0x6c44b7c26182280000","0x8e9b35ad4a0a86f758446fffde34269d940ceacd":"0xd8d726b7177a800000","0x8e9c08f738661f9676236eff82ba6261dd3f4822":"0x56bc75e2d63100000","0x8e9c429266df057efa78dd1d5f77fc40742ad466":"0x10442ed1b56c7c8000","0x8ea656e71ec651bfa17c5a5759d86031cc359977":"0x56bc75e2d63100000","0x8eae29435598ba8f1c93428cdb3e2b4d31078e00":"0x6c6b935b8bbd400000","0x8eb1fbe4e5d3019cd7d30dae9c0d5b4c76fb6331":"0x6c6b935b8bbd400000","0x8eb51774af206b966b8909c45aa6722748802c0c":"0x1b1ae4d6e2ef500000","0x8eb8c71982a00fb84275293253f8044544b66b49":"0x15af1d78b58c400000","0x8ecbcfacbfafe9f00c3922a24e2cf0026756ca20":"0x131beb925ffd3200000","0x8eceb2e124536c5b5ffc640ed14ff15ed9a8cb71":"0x6c6b935b8bbd400000","0x8ed0af11ff2870da0681004afe18b013f7bd3882":"0xd8d726b7177a800000","0x8ed143701f2f72280fd04a7b4164281979ea87c9":"0xc249fdd327780000","0x8ed1528b447ed4297902f639c514d0944a88f8c8":"0xac6e77ab663a80000","0x8ed4284c0f47449c15b8d9b3245de8beb6ce80bf":"0x2b5e3af16b18800000","0x8ede7e3dc50749c6c50e2e28168478c34db81946":"0x43c30fb0884a96c0000","0x8ee584337ddbc80f9e3498df55f0a21eacb57fb1":"0x1158e460913d00000","0x8eebec1a62c08b05a7d1d59180af9ff0d18e3f36":"0x1b1ae4d6e2ef500000","0x8ef4d8a2c23c5279187b64e96f741404085385f3":"0x103dc1e9a9697b0000","0x8ef711e43a13918f1303e81d0ea78c9eefd67eb2":"0xd8d726b7177a800000","0x8efec058cc546157766a632775404a334aaada87":"0x6c5db2a4d815dc0000","0x8f02bda6c36922a6be6a509be51906d393f7b99b":"0x37490dc12ebe7f8000","0x8f0538ed71da1155e0f3bde5667ceb84318a1a87":"0x692ae8897081d00000","0x8f067c7c1bbd57780b7b9eeb9ec0032f90d0dcf9":"0x43c33c1937564800000","0x8f0ab894bd3f4e697dbcfb859d497a9ba195994a":"0x85d638b65472aa20000","0x8f0af37566d152802f1ae8f928b25af9b139b448":"0xad78ebc5ac6200000","0x8f1952eed1c548d9ee9b97d0169a07933be69f63":"0x3635c9adc5dea00000","0x8f1fcc3c51e252b693bc5b0ec3f63529fe69281e":"0x14542ba12a337c00000","0x8f226096c184ebb40105e08dac4d22e1c2d54d30":"0x109e437bd1618c0000","0x8f29a14a845ad458f2d108b568d813166bcdf477":"0x21e19e0c9bab2400000","0x8f31c7005197ec997a87e69bec48649ab94bb2a5":"0xd8d726b7177a800000","0x8f41b1fbf54298f5d0bc2d122f4eb95da4e5cd3d":"0x1333832f5e335c0000","0x8f47328ee03201c9d35ed2b5412b25decc859362":"0x6c6b935b8bbd400000","0x8f473d0ab876ddaa15608621d7013e6ff714b675":"0x19801c83b6c7c00000","0x8f4d1d41693e462cf982fd81d0aa701d3a5374c9":"0xd8d726b7177a800000","0x8f4d1e7e4561284a34fef9673c0d34e12af4aa03":"0x6c6b935b8bbd400000","0x8f4fb1aea7cd0f570ea5e61b40a4f4510b6264e4":"0xd8d726b7177a800000","0x8f561b41b209f248c8a99f858788376250609cf3":"0x5c283d410394100000","0x8f58d8348fc1dc4e0dd8343b6543c857045ee940":"0x2e3038df47303280000","0x8f60895fbebbb5017fcbff3cdda397292bf25ba6":"0x174406ff9f6fd28000","0x8f64b9c1246d857831643107d355b5c75fef5d4f":"0x6c6acc67d7b1d40000","0x8f660f8b2e4c7cc2b4ac9c47ed28508d5f8f8650":"0x43c33c1937564800000","0x8f69eafd0233cadb4059ab779c46edf2a0506e48":"0x60f06620a849450000","0x8f717ec1552f4c440084fba1154a81dc003ebdc0":"0x21e19e0c9bab2400000","0x8f8acb107607388479f64baaabea8ff007ada97d":"0x5c6f3080ad423f40000","0x8f8cd26e82e7c6defd02dfad07979021cbf7150c":"0xa2a15d09519be00000","0x8f8f37d0ad8f335d2a7101b41156b688a81a9cbe":"0x3cb71f51fc5580000","0x8f92844f282a92999ee5b4a8d773d06b694dbd9f":"0x692ae8897081d00000","0x8fac748f784a0fed68dba43319b42a75b4649c6e":"0x3154c9729d05780000","0x8fd9a5c33a7d9edce0997bdf77ab306424a11ea9":"0x6c6b935b8bbd400000","0x8feffadb387a1547fb284da9b8147f3e7c6dc6da":"0x2d627be45305080000","0x8ff46045687723dc33e4d099a06904f1ebb584dc":"0x6c6b935b8bbd400000","0x8ffa062122ac307418821adb9311075a3703bfa3":"0x3635c9adc5dea00000","0x8ffe322997b8e404422d19c54aadb18f5bc8e9b7":"0xd5967be4fc3f100000","0x900194c4b1074305d19de405b0ac78280ecaf967":"0x3635c9adc5dea00000","0x9003d270891ba2df643da8341583193545e3e000":"0xd8d726b7177a800000","0x90057af9aa66307ec9f033b29724d3b2f41eb6f9":"0x19d1d6aadb2c52e80000","0x900f0b8e35b668f81ef252b13855aa5007d012e7":"0x170a0f5040e5040000","0x9018cc1f48d2308e252ab6089fb99a7c1d569410":"0xad78ebc5ac6200000","0x901d99b699e5c6911519cb2076b4c76330c54d22":"0x6c6b935b8bbd400000","0x902d74a157f7d2b9a3378b1f56703730e03a1719":"0xd8d726b7177a800000","0x903413878aea3bc1086309a3fe768b65559e8cab":"0x1b1ae4d6e2ef5000000","0x904966cc2213b5b8cb5bd6089ef9cddbef7edfcc":"0x6c6b935b8bbd400000","0x904caa429c619d940f8e6741826a0db692b19728":"0x3635c9adc5dea00000","0x9052f2e4a3e3c12dd1c71bf78a4ec3043dc88b7e":"0xe7eeba3410b740000","0x905526568ac123afc0e84aa715124febe83dc87c":"0xf8699329677e0000","0x9092918707c621fdbd1d90fb80eb787fd26f7350":"0x855b5ba65c84f00000","0x909b5e763a39dcc795223d73a1dbb7d94ca75ac8":"0x6c6b935b8bbd400000","0x90acced7e48c08c6b934646dfa0adf29dc94074f":"0x30b4b157bbd490000","0x90b1f370f9c1eb0be0fb8e2b8ad96a416371dd8a":"0x30ca024f987b900000","0x90b62f131a5f29b45571513ee7a74a8f0b232202":"0x890b0c2e14fb80000","0x90bd62a050845261fa4a9f7cf241ea630b05efb8":"0x1b1ae4d6e2ef500000","0x90c41eba008e20cbe927f346603fc88698125969":"0x246ddf97976680000","0x90d2809ae1d1ffd8f63eda01de49dd552df3d1bc":"0xd8bb6549b02bb80000","0x90dc09f717fc2a5b69fd60ba08ebf40bf4e8246c":"0xd8d8583fa2d52f0000","0x90e300ac71451e401f887f6e7728851647a80e07":"0x15af1d78b58c400000","0x90e35aabb2deef408bb9b5acef714457dfde6272":"0x56cd55fc64dfe0000","0x90e7070f4d033fe6910c9efe5a278e1fc6234def":"0x571380819b3040000","0x90e93e4dc17121487952333614002be42356498e":"0x678a932062e4180000","0x90e9a9a82edaa814c284d232b6e9ba90701d4952":"0x56be03ca3e47d8000","0x90f774c9147dde90853ddc43f08f16d455178b8c":"0xd8d726b7177a800000","0x90fc537b210658660a83baa9ac4a8402f65746a8":"0x65ea3db75546600000","0x91050a5cffadedb4bb6eaafbc9e5013428e96c80":"0x5c283d410394100000","0x91051764af6b808e4212c77e30a5572eaa317070":"0x3635c9adc5dea00000","0x910b7d577a7e39aa23acf62ad7f1ef342934b968":"0x21e19e0c9bab2400000","0x910e996543344c6815fb97cda7af4b8698765a5b":"0x59af69829cf640000","0x911feea61fe0ed50c5b9e5a0d66071399d28bdc6":"0x340aad21b3b700000","0x911ff233e1a211c0172c92b46cf997030582c83a":"0x6acb3df27e1f880000","0x9120e71173e1ba19ba8f9f4fdbdcaa34e1d6bb78":"0x6c6b935b8bbd400000","0x91211712719f2b084d3b3875a85069f466363141":"0x3635c9adc5dea00000","0x912304118b80473d9e9fe3ee458fbe610ffda2bb":"0xad78ebc5ac6200000","0x91546b79ecf69f936b5a561508b0d7e50cc5992f":"0xe7eeba3410b740000","0x9156d18029350e470408f15f1aa3be9f040a67c6":"0x3635c9adc5dea00000","0x91620f3eb304e813d28b0297556d65dc4e5de5aa":"0xcf152640c5c8300000","0x916bf7e3c545921d3206d900c24f14127cbd5e70":"0x3d0ddbc7df2bb100000","0x916cf17d71412805f4afc3444a0b8dd1d9339d16":"0xc673ce3c40160000","0x917b8f9f3a8d09e9202c52c29e724196b897d35e":"0x8ba52e6fc45e40000","0x918967918cd897dd0005e36dc6c883ef438fc8c7":"0x796e3ea3f8ab00000","0x91898eab8c05c0222883cd4db23b7795e1a24ad7":"0x6c6b935b8bbd400000","0x9191f94698210516cf6321a142070e20597674ed":"0xee9d5be6fc110000","0x91a4149a2c7b1b3a67ea28aff34725e0bf8d7524":"0x692ae8897081d00000","0x91a787bc5196f34857fe0c372f4df376aaa76613":"0x6c6b935b8bbd400000","0x91a8baaed012ea2e63803b593d0d0c2aab4c5b0a":"0x5150ae84a8cdf00000","0x91ac5cfe67c54aa7ebfba448666c461a3b1fe2e1":"0x15c93492bf9dfc0000","0x91bb3f79022bf3c453f4ff256e269b15cf2c9cbd":"0x52585c13fe3a5c0000","0x91c75e3cb4aa89f34619a164e2a47898f5674d9c":"0x6c6b935b8bbd400000","0x91c80caa081b38351d2a0e0e00f80a34e56474c1":"0x3635c9adc5dea00000","0x91cc46aa379f856a6640dccd5a648a7902f849d9":"0xad78ebc5ac6200000","0x91d2a9ee1a6db20f5317cca7fbe2313895db8ef8":"0x1ccc3a52f306e280000","0x91d66ea6288faa4b3d606c2aa45c7b6b8a252739":"0x6c6b935b8bbd400000","0x91dbb6aaad149585be47375c5d6de5ff09191518":"0x43c33c1937564800000","0x91e8810652e8e6161525d63bb7751dc20f676076":"0x274d656ac90e340000","0x91f516146cda20281719978060c6be4149067c88":"0x6c6b935b8bbd400000","0x91f624b24a1fa5a056fe571229e7379db14b9a1e":"0x28a8517c669b3570000","0x91fe8a4c6164df8fa606995d6ba7adcaf1c893ce":"0x39992648a23c8a00000","0x921f5261f4f612760706892625c75e7bce96b708":"0x6c6b935b8bbd400000","0x9221c9ce01232665741096ac07235903ad1fe2fc":"0x6db63335522628000","0x9225983860a1cb4623c72480ac16272b0c95e5f5":"0x6c6b935b8bbd400000","0x9225d46a5a80943924a39e5b84b96da0ac450581":"0x878678326eac9000000","0x922a20c79a1d3a26dd3829677bf1d45c8f672bb6":"0xd8d726b7177a800000","0x92438e5203b6346ff886d7c36288aacccc78ceca":"0x3635c9adc5dea00000","0x9243d7762d77287b12638688b9854e88a769b271":"0x3635c9adc5dea00000","0x924bce7a853c970bb5ec7bb759baeb9c7410857b":"0xbe202d6a0eda0000","0x924efa6db595b79313277e88319625076b580a10":"0x6c6b935b8bbd400000","0x92558226b384626cad48e09d966bf1395ee7ea5d":"0x121ea68c114e510000","0x926082cb7eed4b1993ad245a477267e1c33cd568":"0x144a74badfa4b60000","0x926209b7fda54e8ddb9d9e4d3d19ebdc8e88c29f":"0x6c6b935b8bbd400000","0x9268d62646563611dc3b832a30aa2394c64613e3":"0x6c6b935b8bbd400000","0x92698e345378c62d8eda184d94366a144b0c105b":"0x4be4e7267b6ae00000","0x92793ac5b37268774a7130de2bbd330405661773":"0x22ca3587cf4eb0000","0x9279b2228cec8f7b4dda3f320e9a0466c2f585ca":"0x10f0cf064dd59200000","0x927cb7dc187036b5427bc7e200c5ec450c1d27d4":"0xbb59a27953c600000","0x927cc2bfda0e088d02eff70b38b08aa53cc30941":"0x646f60a1f986360000","0x9284f96ddb47b5186ee558aa31324df5361c0f73":"0x3635c9adc5dea000000","0x929d368eb46a2d1fbdc8ffa0607ede4ba88f59ad":"0x6c6b935b8bbd400000","0x92a7c5a64362e9f842a23deca21035857f889800":"0x6c6acc67d7b1d40000","0x92a898d46f19719c38126a8a3c27867ae2cee596":"0x6c6b935b8bbd400000","0x92a971a739799f8cb48ea8475d72b2d2474172e6":"0xd5967be4fc3f100000","0x92aae59768eddff83cfe60bb512e730a05a161d7":"0x5c9778410c76d18000","0x92ad1b3d75fba67d54663da9fc848a8ade10fa67":"0x6c6b935b8bbd400000","0x92ae5b7c7eb492ff1ffa16dd42ad9cad40b7f8dc":"0x2ee449550898e40000","0x92c0f573eccf62c54810ee6ba8d1f113542b301b":"0xb7726f16ccb1e00000","0x92c13fe0d6ce87fd50e03def9fa6400509bd7073":"0x22b1c8c1227a00000","0x92c94c2820dfcf7156e6f13088ece7958b3676fd":"0x52d542804f1ce0000","0x92cfd60188efdfb2f8c2e7b1698abb9526c1511f":"0x6c6b935b8bbd400000","0x92d8ad9a4d61683b80d4a6672e84c20d62421e80":"0x1158e460913d00000","0x92dca5e102b3b81b60f1a504634947c374a88ccb":"0x6c6b935b8bbd400000","0x92e435340e9d253c00256389f52b067d55974e76":"0xe873f44133cb00000","0x92e4392816e5f2ef5fb65837cec2c2325cc64922":"0x21e19e0c9bab2400000","0x92e6581e1da1f9b846e09347333dc818e2d2ac66":"0xc55325ca7415e00000","0x931df34d1225bcd4224e63680d5c4c09bce735a6":"0x3afb087b876900000","0x931fe712f64207a2fd5022728843548bfb8cbb05":"0x6c6b935b8bbd400000","0x93235f340d2863e18d2f4c52996516138d220267":"0x4002e44fda7d40000","0x93258255b37c7f58f4b10673a932dd3afd90f4f2":"0x3635c9adc5dea00000","0x9328d55ccb3fce531f199382339f0e576ee840a3":"0xd8d726b7177a800000","0x9329ffdc268babde8874b366406c81445b9b2d35":"0x16e62f8c730ca18000","0x932b9c04d40d2ac83083d94298169dae81ab2ed0":"0x6c6b935b8bbd400000","0x933436c8472655f64c3afaaf7c4c621c83a62b38":"0x3635c9adc5dea00000","0x933bf33f8299702b3a902642c33e0bfaea5c1ca3":"0xd2f13f7789f00000","0x9340345ca6a3eabdb77363f2586043f29438ce0b":"0x1cc805da0dfff10000","0x9340b5f678e45ee05eb708bb7abb6ec8f08f1b6b":"0x14542ba12a337c00000","0x934af21b7ebfa467e2ced65aa34edd3a0ec71332":"0x7801f3e80cc0ff00000","0x935069444a6a984de2084e46692ab99f671fc727":"0x1e7e4171bf4d3a00000","0x93507e9e8119cbceda8ab087e7ecb071383d6981":"0x2f6f10780d22cc00000","0x93678a3c57151aeb68efdc43ef4d36cb59a009f3":"0x1a12a92bc3c3e0000","0x936dcf000194e3bff50ac5b4243a3ba014d661d8":"0x21e19e0c9bab2400000","0x936f3813f5f6a13b8e4ffec83fe7f826186a71cd":"0x1c30731cec03200000","0x9374869d4a9911ee1eaf558bc4c2b63ec63acfdd":"0x3635c9adc5dea00000","0x937563d8a80fd5a537b0e66d20a02525d5d88660":"0x878678326eac900000","0x9376dce2af2ec8dcda741b7e7345664681d93668":"0x3635c9adc5dea00000","0x93868ddb2a794d02ebda2fa4807c76e3609858dc":"0x6dee15fc7c24a78000","0x939c4313d2280edf5e071bced846063f0a975d54":"0x1969368974c05b000000","0x93a6b3ab423010f981a7489d4aad25e2625c5741":"0x44680fe6a1ede4e8000","0x93aa8f92ebfff991fc055e906e651ac768d32bc8":"0x32f51edbaaa3300000","0x93b4bf3fdff6de3f4e56ba6d7799dc4b93a6548f":"0x10910d4cdc9f60000","0x93bc7d9a4abd44c8bbb8fe8ba804c61ad8d6576c":"0xd8d6119a8146050000","0x93c2e64e5de5589ed25006e843196ee9b1cf0b3e":"0x5a87e7d7f5f6580000","0x93c88e2d88621e30f58a9586bed4098999eb67dd":"0x69b5afac750bb800000","0x93e0f37ecdfb0086e3e862a97034447b1e4dec1a":"0x1a055690d9db80000","0x93e303411afaf6c107a44101c9ac5b36e9d6538b":"0xdf9ddfecd0365400000","0x93f18cd2526040761488c513174d1e7963768b2c":"0x82ffac9ad593720000","0x940f715140509ffabf974546fab39022a41952d2":"0x4be4e7267b6ae00000","0x942c6b8c955bc0d88812678a236725b32739d947":"0x54069233bf7f780000","0x943d37864a4a537d35c8d99723cd6406ce2562e6":"0x6c6b935b8bbd400000","0x94439ca9cc169a79d4a09cae5e67764a6f871a21":"0xd02ab486cedc00000","0x94449c01b32a7fa55af8104f42cdd844aa8cbc40":"0x38111a1f4f03c100000","0x9445ba5c30e98961b8602461d0385d40fbd80311":"0x21e19e0c9bab2400000","0x944f07b96f90c5f0d7c0c580533149f3f585a078":"0x402f4cfee62e80000","0x9454b3a8bff9709fd0e190877e6cb6c89974dbd6":"0x90f534608a72880000","0x945d96ea573e8df7262bbfa572229b4b16016b0f":"0xb589ef914c1420000","0x945e18769d7ee727c7013f92de24d117967ff317":"0x6c6b935b8bbd400000","0x94612781033b57b146ee74e753c672017f5385e4":"0xc328093e61ee400000","0x94644ad116a41ce2ca7fbec609bdef738a2ac7c7":"0x10f0cf064dd59200000","0x9470cc36594586821821c5c996b6edc83b6d5a32":"0x14d1120d7b1600000","0x9475c510ec9a26979247744c3d8c3b0e0b5f44d3":"0x21e19e0c9bab2400000","0x947e11e5ea290d6fc3b38048979e0cd44ec7c17f":"0x6c6b935b8bbd400000","0x9483d98f14a33fdc118d403955c29935edfc5f70":"0x18ea3b34ef51880000","0x949131f28943925cfc97d41e0cea0b262973a730":"0x97c9ce4cf6d5c00000","0x949f84f0b1d7c4a7cf49ee7f8b2c4a134de32878":"0x252248deb6e6940000","0x949f8c107bc7f0aceaa0f17052aadbd2f9732b2e":"0x6c6b935b8bbd400000","0x94a7cda8f481f9d89d42c303ae1632b3b709db1d":"0x1043561a8829300000","0x94a9a71691317c2064271b51c9353fbded3501a8":"0xb50fcfafebecb00000","0x94ad4bad824bd0eb9ea49c58cebcc0ff5e08346b":"0x692ae8897081d00000","0x94bbc67d13f89ebca594be94bc5170920c30d9f3":"0x458ffa3150a540000","0x94be3ae54f62d663b0d4cc9e1ea8fe9556ea9ebf":"0x143132ca843180000","0x94c055e858357aaa30cf2041fa9059ce164a1f91":"0x43c25e0dcc1bd1c0000","0x94c742fd7a8b7906b3bfe4f8904fc0be5c768033":"0x43c33c1937564800000","0x94ca56de777fd453177f5e0694c478e66aff8a84":"0x1b1ae4d6e2ef500000","0x94d81074db5ae197d2bb1373ab80a87d121c4bd3":"0x1fd933494aa5fe00000","0x94db807873860aac3d5aea1e885e52bff2869954":"0xae8e7a0bb575d00000","0x94e1f5cb9b8abace03a1a6428256553b690c2355":"0x1158e460913d00000","0x94ef8be45077c7d4c5652740de946a62624f713f":"0x56cf5593a18f88000","0x94f13f9f0836a3ee2437a84922d2984dc0f7d53b":"0xa2a0329bc38abe0000","0x94f8f057db7e60e675ad940f155885d1a477348e":"0x15be6174e1912e0000","0x94fcceadfe5c109c5eaeaf462d43873142c88e22":"0x1043561a88293000000","0x95034e1621865137cd4739b346dc17da3a27c34e":"0x55a6e79ccd1d300000","0x950c68a40988154d2393fff8da7ccda99614f72c":"0xf94146fd8dcde58000","0x950fe9c6cad50c18f11a9ed9c45740a6180612d0":"0x1b1ae4d6e2ef5000000","0x952183cfd38e352e579d36decec5b18450f7fba0":"0x6c6b935b8bbd400000","0x95278b08dee7c0f2c8c0f722f9fcbbb9a5241fda":"0x829309f64f0db00000","0x952c57d2fb195107d4cd5ca300774119dfad2f78":"0x6c6b935b8bbd400000","0x953572f0ea6df9b197cae40e4b8ecc056c4371c5":"0x3635c9adc5dea00000","0x953ef652e7b769f53d6e786a58952fa93ee6abe7":"0x9b0a791f1211300000","0x95447046313b2f3a5e19b948fd3b8bedc82c717c":"0x1b1ae4d6e2ef500000","0x955db3b74360b9a268677e73cea821668af6face":"0x65a4da25d3016c00000","0x9560e8ac6718a6a1cdcff189d603c9063e413da6":"0xd8d726b7177a800000","0x9567a0de811de6ff095b7ee64e7f1b83c2615b80":"0xe7eeba3410b740000","0x95681cdae69b2049ce101e325c759892cac3f811":"0x9ae92a9bc94c400000","0x9568b7de755628af359a84543de23504e15e41e6":"0x878678326eac9000000","0x9569c63a9284a805626db3a32e9d236393476151":"0x6acb3df27e1f880000","0x95809e8da3fbe4b7f281f0b8b1715f420f7d7d63":"0x6c6b935b8bbd400000","0x959f57fded6ae37913d900b81e5f48a79322c627":"0xddb26104749118000","0x959ff17f1d51b473b44010052755a7fa8c75bd54":"0x6acb3df27e1f880000","0x95a577dc2eb3ae6cb9dfc77af697d7efdfe89a01":"0x75f610f70ed200000","0x95cb6d8a6379f94aba8b885669562c4d448e56a7":"0x6c6b935b8bbd400000","0x95d550427b5a514c751d73a0f6d29fb65d22ed10":"0x1043561a8829300000","0x95d98d0c1069908f067a52acac2b8b534da37afd":"0x6f59b630a929708000","0x95df4e3445d7662624c48eba74cf9e0a53e9f732":"0xbdbc41e0348b3000000","0x95e6a54b2d5f67a24a4875af75107ca7ea9fd2fa":"0x487a9a304539440000","0x95e6f93dac228bc7585a25735ac2d076cc3a4017":"0x14542ba12a337c00000","0x95e7616424cd0961a71727247437f0069272280e":"0x15af1d78b58c400000","0x95e80a82c20cbe3d2060242cb92d735810d034a2":"0x1c32e463fd4b98000","0x95f62d0243ede61dad9a3165f53905270d54e242":"0x57473d05dabae80000","0x95fb5afb14c1ef9ab7d179c5c300503fd66a5ee2":"0x1daf7a02b0dbe8000","0x9610592202c282ab9bd8a884518b3e0bd4758137":"0xe873f44133cb00000","0x961c59adc74505d1864d1ecfcb8afa0412593c93":"0x878678326eac9000000","0x962c0dec8a3d464bf39b1215eafd26480ae490cd":"0x6c82e3eaa513e80000","0x962cd22a8edf1e4f4e55b4b15ddbfb5d9d541971":"0x6c6b935b8bbd400000","0x96334bfe04fffa590213eab36514f338b864b736":"0x15af1d78b58c400000","0x9637dc12723d9c78588542eab082664f3f038d9d":"0x3635c9adc5dea00000","0x964eab4b276b4cd8983e15ca72b106900fe41fce":"0x1b1ae4d6e2ef500000","0x9662ee021926682b31c5f200ce457abea76c6ce9":"0x24590e8589eb6a0000","0x966c04781cb5e67dde3235d7f8620e1ab663a9a5":"0x100d2050da6351600000","0x967076a877b18ec15a415bb116f06ef32645dba3":"0x6c6b935b8bbd400000","0x967bfaf76243cdb9403c67d2ceefdee90a3feb73":"0x349d87f2a2dc2f0000","0x967d4142af770515dd7062af93498dbfdff29f20":"0x11854d0f9cee40000","0x968b14648f018333687cd213fa640aec04ce6323":"0x3635c9adc5dea00000","0x968dea60df3e09ae3c8d3505e9c080454be0e819":"0x14542ba12a337c00000","0x96924191b7df655b3319dc6d6137f481a73a0ff3":"0xd9ecb4fd208e500000","0x9696052138338c722f1140815cf7749d0d3b3a74":"0x1b1ae4d6e2ef500000","0x96a55f00dff405dc4de5e58c57f6f6f0cac55d2f":"0x6a6616379c87b58000","0x96aa573fed2f233410dbae5180145b23c31a02f0":"0x5dc892aa1131c80000","0x96ad579bbfa8db8ebec9d286a72e4661eed8e356":"0x3a0ba42bec61830000","0x96b434fe0657e42acc8212b6865139dede15979c":"0xd8d726b7177a800000","0x96b906ea729f4655afe3e57d35277c967dfa1577":"0x3635c9adc5dea00000","0x96d62dfd46087f62409d93dd606188e70e381257":"0x6c6b935b8bbd400000","0x96d9cca8f55eea0040ec6eb348a1774b95d93ef4":"0xd8d726b7177a800000","0x96e7c0c9d5bf10821bf140c558a145b7cac21397":"0x393ef1a5127c800000","0x96ea6ac89a2bac95347b51dba63d8bd5ebdedce1":"0x6c6b935b8bbd400000","0x96eafbf2fb6f4db9a436a74c45b5654452e23819":"0x1158e460913d00000","0x96eb523e832f500a017de13ec27f5d366c560eff":"0x10acceba43ee280000","0x96f0462ae6f8b96088f7e9c68c74b9d8ad34b347":"0x61093d7c2c6d380000","0x96f820500b70f4a3e3239d619cff8f222075b135":"0xad78ebc5ac6200000","0x96fe59c3dbb3aa7cc8cb62480c65e56e6204a7e2":"0x43c33c1937564800000","0x96ff6f509968f36cb42cba48db32f21f5676abf8":"0x6acb3df27e1f880000","0x970938522afb5e8f994873c9fbdc26e3b37e314c":"0x3635c9adc5dea00000","0x970abd53a54fca4a6429207c182d4d57bb39d4a0":"0x6c6b935b8bbd400000","0x970d8b8a0016d143054f149fb3b8e550dc0797c7":"0x3635c9adc5dea00000","0x972c2f96aa00cf8a2f205abcf8937c0c75f5d8d9":"0xad78ebc5ac6200000","0x973f4e361fe5decd989d4c8f7d7cc97990385daf":"0x150f8543a387420000","0x974d0541ab4a47ec7f75369c0069b64a1b817710":"0x15af1d78b58c400000","0x974d2f17895f2902049deaaecf09c3046507402d":"0xcc19c29437ab8000","0x9752d14f5e1093f071711c1adbc4e3eb1e5c57f3":"0x6c6b935b8bbd400000","0x9756e176c9ef693ee1eec6b9f8b151d313beb099":"0x410d586a20a4c00000","0x975f3764e97bbccf767cbd3b795ba86d8ba9840e":"0x12c1b6eed03d280000","0x976a18536af41874426308871bcd1512a775c9f8":"0x21e19e0c9bab2400000","0x976e3ceaf3f1af51f8c29aff5d7fa21f0386d8ee":"0xd02ab486cedc00000","0x9777cc61cf756be3b3c20cd4491c69d275e7a120":"0x21e19e0c9bab2400000","0x97810bafc37e84306332aacb35e92ad911d23d24":"0x3635c9adc5dea00000","0x978c430ce4359b06bc2cdf5c2985fc950e50d5c8":"0x1a055690d9db800000","0x9795f64319fc17dd0f8261f9d206fb66b64cd0c9":"0xad78ebc5ac6200000","0x9799ca21dbcf69bfa1b3f72bac51b9e3ca587cf9":"0x5c283d410394100000","0x979cbf21dfec8ace3f1c196d82df962534df394f":"0x9991d478dd4d160000","0x979d681c617da16f21bcaca101ed16ed015ab696":"0x65ea3db75546600000","0x979f30158b574b999aab348107b9eed85b1ff8c1":"0x34957444b840e80000","0x97a86f01ce3f7cfd4441330e1c9b19e1b10606ef":"0x6c6b935b8bbd400000","0x97b91efe7350c2d57e7e406bab18f3617bcde14a":"0x21e1999bbd5d2be0000","0x97d0d9725e3b70e675843173938ed371b62c7fac":"0x93739534d28680000","0x97d9e46a7604d7b5a4ea4ee61a42b3d2350fc3ed":"0x6c6b935b8bbd400000","0x97dc26ec670a31e0221d2a75bc5dc9f90c1f6fd4":"0x2b5e3af16b1880000","0x97de21e421c37fe4b8025f9a51b7b390b5df7804":"0x10f0cf064dd592000000","0x97e28973b860c567402800fbb63ce39a048a3d79":"0x542253a126ce40000","0x97e5cc6127c4f885be02f44b42d1c8b0ac91e493":"0xad78ebc5ac6200000","0x97f1fe4c8083e596212a187728dd5cf80a31bec5":"0x1158e460913d00000","0x97f7760657c1e202759086963eb4211c5f8139b9":"0xa8a097fcb3d17680000","0x97f99b6ba31346cd98a9fe4c308f87c5a58c5151":"0x14542ba12a337c00000","0x980a84b686fc31bdc83c221058546a71b11f838a":"0x2a415548af86818000","0x9810e34a94db6ed156d0389a0e2b80f4fd6b0a8a":"0x6c6b935b8bbd400000","0x981ddf0404e4d22dda556a0726f00b2d98ab9569":"0x36356633ebd8ea0000","0x981f712775c0dad97518ffedcb47b9ad1d6c2762":"0x16a6502f15a1e540000","0x9834682180b982d166badb9d9d1d9bbf016d87ee":"0x6c6b935b8bbd400000","0x9836b4d30473641ab56aeee19242761d72725178":"0x6c6b935b8bbd400000","0x98397342ec5f3d4cb877e54ef5d6f1d366731bd4":"0x14061b9d77a5e980000","0x9846648836a307a057184fd51f628a5f8c12427c":"0x40b69bf43dce8f00000","0x984a7985e3cc7eb5c93691f6f8cc7b8f245d01b2":"0x14542ba12a337c00000","0x985d70d207892bed398590024e2421b1cc119359":"0x43c33c1937564800000","0x986df47e76e4d7a789cdee913cc9831650936c9d":"0x10f0cf064dd59200000","0x9874803fe1f3a0365e7922b14270eaeb032cc1b5":"0x3cf5928824c6c20000","0x9875623495a46cdbf259530ff838a1799ec38991":"0x6c6b935b8bbd400000","0x987618c85656207c7bac1507c0ffefa2fb64b092":"0x37dfe433189e38000","0x987c9bcd6e3f3990a52be3eda4710c27518f4f72":"0x15af1d78b58c400000","0x9882967cee68d2a839fad8ab4a7c3dddf6c0adc8":"0x4878be1ffaf95d0000","0x98855c7dfbee335344904a12c40c731795b13a54":"0x39fbae8d042dd00000","0x989c0ccff654da03aeb11af701054561d6297e1d":"0xd8d726b7177a800000","0x98a0e54c6d9dc8be96276cebf4fec460f6235d85":"0x6ac882100952c78000","0x98b769cc305cecfb629a00c907069d7ef9bc3a12":"0x168d28e3f00280000","0x98ba4e9ca72fddc20c69b4396f76f8183f7a2a4e":"0x2b5e3af16b188000000","0x98be696d51e390ff1c501b8a0f6331b628ddc5ad":"0x6c6b935b8bbd400000","0x98bed3a72eccfbafb923489293e429e703c7e25b":"0x6c6b935b8bbd400000","0x98bf4af3810b842387db70c14d46099626003d10":"0xd8d726b7177a800000","0x98c10ebf2c4f97cba5a1ab3f2aafe1cac423f8cb":"0x1043561a8829300000","0x98c19dba810ba611e68f2f83ee16f6e7744f0c1f":"0xad78ebc5ac6200000","0x98c5494a03ac91a768dffc0ea1dde0acbf889019":"0x2a5a058fc295ed000000","0x98d204f9085f8c8e7de23e589b64c6eff692cc63":"0x6c6b935b8bbd400000","0x98d3731992d1d40e1211c7f735f2189afa0702e0":"0x1b1ae4d6e2ef5000000","0x98e2b6d606fd2d6991c9d6d4077fdf3fdd4585da":"0x30df1a6f8ad6280000","0x98e3e90b28fccaee828779b8d40a5568c4116e21":"0x22b1c8c1227a00000","0x98e6f547db88e75f1f9c8ac2c5cf1627ba580b3e":"0x3635c9adc5dea00000","0x98f4af3af0aede5fafdc42a081ecc1f89e3ccf20":"0x1fd933494aa5fe00000","0x98f6b8e6213dbc9a5581f4cce6655f95252bdb07":"0x115872b0bca4300000","0x9909650dd5b1397b8b8b0eb69499b291b0ad1213":"0xad78ebc5ac6200000","0x991173601947c2084a62d639527e961512579af9":"0x2086ac351052600000","0x99129d5b3c0cde47ea0def4dfc070d1f4a599527":"0x6c6b935b8bbd400000","0x9917d68d4af341d651e7f0075c6de6d7144e7409":"0x132d4476c08e6f00000","0x991ac7ca7097115f26205eee0ef7d41eb4e311ae":"0x1158e460913d00000","0x992365d764c5ce354039ddfc912e023a75b8e168":"0xfc936392801c0000","0x992646ac1acaabf5ddaba8f9429aa6a94e7496a7":"0x3637507a30abeb0000","0x99268327c373332e06c3f6164287d455b9d5fa4b":"0x6c6b935b8bbd400000","0x9928ff715afc3a2b60f8eb4cc4ba4ee8dab6e59d":"0x17da3a04c7b3e00000","0x9932ef1c85b75a9b2a80057d508734c51085becc":"0x2b83fa5301d590000","0x993f146178605e66d517be782ef0b3c61a4e1925":"0x17c1f0535d7a5830000","0x99413704b1a32e70f3bc0d69dd881c38566b54cb":"0x5cc6b694631f7120000","0x994152fc95d5c1ca8b88113abbad4d710e40def6":"0x1b1ae4d6e2ef500000","0x9944fee9d34a4a880023c78932c00b59d5c82a82":"0x28a8a56b3690070000","0x994cc2b5227ec3cf048512467c41b7b7b748909f":"0x6c6b935b8bbd400000","0x9971df60f0ae66dce9e8c84e17149f09f9c52f64":"0xad78ebc5ac6200000","0x9976947eff5f6ae5da08dd541192f378b428ff94":"0x1b1ae4d6e2ef5000000","0x997d6592a31589acc31b9901fbeb3cc3d65b3215":"0x6c6b935b8bbd400000","0x9982a5890ffb5406d3aca8d2bfc1dd70aaa80ae0":"0x6c6b935b8bbd400000","0x99878f9d6e0a7ed9aec78297b73879a80195afe0":"0xd7c198710e66b00000","0x998c1f93bcdb6ff23c10d0dc924728b73be2ff9f":"0x365bf3a433eaf30000","0x9991614c5baa47dd6c96874645f97add2c3d8380":"0x6acb3df27e1f880000","0x99924a9816bb7ddf3fec1844828e9ad7d06bf4e6":"0x5f68e8131ecf800000","0x99997668f7c1a4ff9e31f9977ae3224bcb887a85":"0xfc936392801c00000","0x999c49c174ca13bc836c1e0a92bff48b271543ca":"0xb1cf24ddd0b1400000","0x99a4de19ded79008cfdcd45d014d2e584b8914a8":"0x5150ae84a8cdf00000","0x99a96bf2242ea1b39ece6fcc0d18aed00c0179f3":"0x1043561a8829300000","0x99b018932bcad355b6792b255db6702dec8ce5dd":"0xd8d8583fa2d52f0000","0x99b743d1d9eff90d9a1934b4db21d519d89b4a38":"0x56bc75e2d63100000","0x99b8c824869de9ed24f3bff6854cb6dd45cc3f9f":"0x65ea3db75546600000","0x99c0174cf84e0783c220b4eb6ae18fe703854ad3":"0x7079a2573d0c780000","0x99c1d9f40c6ab7f8a92fce2fdce47a54a586c53f":"0x35659ef93f0fc40000","0x99c236141daec837ece04fdaee1d90cf8bbdc104":"0x766516acac0d200000","0x99c31fe748583787cdd3e525b281b218961739e3":"0x3708baed3d68900000","0x99c475bf02e8b9214ada5fad02fdfd15ba365c0c":"0x2009c5c8bf6fdc0000","0x99c883258546cc7e4e971f522e389918da5ea63a":"0xd8d726b7177a800000","0x99c9f93e45fe3c1418c353e4c5ac3894eef8121e":"0x585baf145050b0000","0x99d1579cd42682b7644e1d4f7128441eeffe339d":"0x43c33c1937564800000","0x99d1b585965f406a42a49a1ca70f769e765a3f98":"0x3894f0e6f9b9f700000","0x99dfd0504c06c743e46534fd7b55f1f9c7ec3329":"0x6c6b935b8bbd400000","0x99f4147ccc6bcb80cc842e69f6d00e30fa4133d9":"0x15af1d78b58c400000","0x99f77f998b20e0bcdcd9fc838641526cf25918ef":"0x61093d7c2c6d380000","0x99fad50038d0d9d4c3fbb4bce05606ecadcd5121":"0x6c6b935b8bbd400000","0x99fe0d201228a753145655d428eb9fd94985d36d":"0x6920bff3515a3a0000","0x9a079c92a629ca15c8cafa2eb28d5bc17af82811":"0x1b1ae4d6e2ef500000","0x9a0d3cee3d9892ea3b3700a27ff84140d9025493":"0x340aad21b3b700000","0x9a24ce8d485cc4c86e49deb39022f92c7430e67e":"0x46791fc84e07d00000","0x9a2ce43b5d89d6936b8e8c354791b8afff962425":"0x6c6b935b8bbd400000","0x9a390162535e398877e416787d6239e0754e937c":"0x3635c9adc5dea00000","0x9a3da65023a13020d22145cfc18bab10bd19ce4e":"0x18bf6ea3464a3a0000","0x9a3e2b1bf346dd070b027357feac44a4b2c97db8":"0x21e19e0c9bab2400000","0x9a4ca8b82117894e43db72b9fa78f0b9b93ace09":"0x2b5e3af16b1880000","0x9a522e52c195bfb7cf5ffaaedb91a3ba7468161d":"0x3635c9adc5dea00000","0x9a5af31c7e06339ac8b4628d7c4db0ce0f45c8a4":"0x1b1ae4d6e2ef500000","0x9a633fcd112cceeb765fe0418170732a9705e79c":"0xfc936392801c0000","0x9a63d185a79129fdab19b58bb631ea36a420544e":"0x246ddf97976680000","0x9a6708ddb8903c289f83fe889c1edcd61f854423":"0x3635c9adc5dea00000","0x9a6ff5f6a7af7b7ae0ed9c20ecec5023d281b786":"0x8a12b9bd6a67ec0000","0x9a82826d3c29481dcc2bd2950047e8b60486c338":"0x43c33c1937564800000","0x9a8eca4189ff4aa8ff7ed4b6b7039f0902219b15":"0x1158e460913d00000","0x9a953b5bcc709379fcb559d7b916afdaa50cadcc":"0x56bc75e2d63100000","0x9a990b8aeb588d7ee7ec2ed8c2e64f7382a9fee2":"0x1d127db69fd8b0000","0x9a9d1dc0baa77d6e20c3d849c78862dd1c054c87":"0x2fb474098f67c00000","0x9aa48c66e4fb4ad099934e32022e827427f277ba":"0x21e19e0c9bab2400000","0x9aa8308f42910e5ade09c1a5e282d6d91710bdbf":"0xad78ebc5ac6200000","0x9aaafa0067647ed999066b7a4ca5b4b3f3feaa6f":"0x3635c9adc5dea00000","0x9ab988b505cfee1dbe9cd18e9b5473b9a2d4f536":"0x1158e460913d000000","0x9ab98d6dbb1eaae16d45a04568541ad3d8fe06cc":"0xec50464fe23f38000","0x9aba2b5e27ff78baaab5cdc988b7be855cebbdce":"0x21e0c0013070adc0000","0x9ac4da51d27822d1e208c96ea64a1e5b55299723":"0x56c5579f722140000","0x9ac85397792a69d78f286b86432a07aeceb60e64":"0xc673ce3c40160000","0x9ac907ee85e6f3e223459992e256a43fa08fa8b2":"0x21e19e0c9bab2400000","0x9ad47fdcf9cd942d28effd5b84115b31a658a13e":"0xb259ec00d53b280000","0x9adbd3bc7b0afc05d1d2eda49ff863939c48db46":"0xad6eedd17cf3b8000","0x9adf458bff3599eee1a26398853c575bc38c6313":"0xf2dc7d47f15600000","0x9ae13bd882f2576575921a94974cbea861ba0d35":"0xab4dcf399a3a600000","0x9ae9476bfecd3591964dd325cf8c2a24faed82c1":"0xd8d726b7177a800000","0x9af100cc3dae83a33402051ce4496b16615483f6":"0x6c6b935b8bbd400000","0x9af11399511c213181bfda3a8b264c05fc81b3ce":"0x2f6f10780d22cc00000","0x9af5c9894c33e42c2c518e3ac670ea9505d1b53e":"0xfc936392801c0000","0x9af9dbe47422d177f945bdead7e6d82930356230":"0xd5967be4fc3f100000","0x9afa536b4c66bc38d875c4b30099d9261fdb38eb":"0xb2a8f842a77bc8000","0x9b06ad841dffbe4ccf46f1039fc386f3c321446e":"0x6c6b935b8bbd400000","0x9b1168de8ab64b47552f3389800a9cc08b4666cf":"0x5dc892aa1131c80000","0x9b1811c3051f46e664ae4bc9c824d18592c4574a":"0xad6eedd17cf3b8000","0x9b18478655a4851cc906e660feac61f7f4c8bffc":"0xe2478d38907d840000","0x9b22a80d5c7b3374a05b446081f97d0a34079e7f":"0xa2a15d09519be00000","0x9b2be7f56754f505e3441a10f7f0e20fd3ddf849":"0x126e72a69a50d00000","0x9b32cf4f5115f4b34a00a64c617de06387354323":"0x5b81ed888207c8000","0x9b43dcb95fde318075a567f1e6b57617055ef9e8":"0xd5967be4fc3f100000","0x9b444fd337e5d75293adcfff70e1ea01db023222":"0x56bc75e2d63100000","0x9b4824ff9fb2abda554dee4fb8cf549165570631":"0x1158e460913d00000","0x9b4c2715780ca4e99e60ebf219f1590c8cad500a":"0x56bc75e2d631000000","0x9b59eb213b1e7565e45047e04ea0374f10762d16":"0x6c6b935b8bbd400000","0x9b5c39f7e0ac168c8ed0ed340477117d1b682ee9":"0x55005f0c614480000","0x9b5ec18e8313887df461d2902e81e67a8f113bb1":"0x56bc75e2d63100000","0x9b64d3cd8d2b73f66841b5c46bb695b88a9ab75d":"0x1203a4f760c168000","0x9b658fb361e046d4fcaa8aef6d02a99111223625":"0x6c6b935b8bbd400000","0x9b6641b13e172fc072ca4b8327a3bc28a15b66a9":"0x68155a43676e00000","0x9b68f67416a63bf4451a31164c92f672a68759e9":"0xcb49b44ba602d800000","0x9b773669e87d76018c090f8255e54409b9dca8b2":"0x1158e460913d00000","0x9b77ebced7e215f0920e8c2b870024f6ecb2ff31":"0x3635c9adc5dea00000","0x9b7c8810cc7cc89e804e6d3e38121850472877fe":"0x6c6b935b8bbd400000","0x9ba53dc8c95e9a472feba2c4e32c1dc4dd7bab46":"0x487a9a304539440000","0x9bacd3d40f3b82ac91a264d9d88d908eac8664b9":"0x43c33c1937564800000","0x9bb760d5c289a3e1db18db095345ca413b9a43c2":"0xaadec983fcff40000","0x9bb76204186af2f63be79168601687fc9bad661f":"0x1043561a8829300000","0x9bb9b02a26bfe1ccc3f0c6219e261c397fc5ca78":"0x487a9a304539440000","0x9bc573bcda23b8b26f9073d90c230e8e71e0270b":"0x362f75a4305d0c0000","0x9bd7c38a4210304a4d653edeff1b3ce45fce7843":"0xf498941e664280000","0x9bd88068e13075f3a8cac464a5f949d6d818c0f6":"0x14542ba12a337c00000","0x9bd905f1719fc7acd0159d4dc1f8db2f21472338":"0x3635c9adc5dea00000","0x9bdbdc9b973431d13c89a3f9757e9b3b6275bfc7":"0x1b1a7dcf8a44d38000","0x9be3c329b62a28b8b0886cbd8b99f8bc930ce3e6":"0x409e52b48369a0000","0x9bf58efbea0784eb068adecfa0bb215084c73a35":"0x13a6b2b564871a00000","0x9bf672d979b36652fc5282547a6a6bc212ae4368":"0x238fd42c5cf0400000","0x9bf703b41c3624e15f4054962390bcba3052f0fd":"0x1483e01533c2e3c0000","0x9bf71f7fb537ac54f4e514947fa7ff6728f16d2f":"0x1cf84a30a0a0c0000","0x9bf9b3b2f23cf461eb591f28340bc719931c8364":"0x3635c9adc5dea00000","0x9bfc659c9c601ea42a6b21b8f17084ec87d70212":"0x21e19e0c9bab2400000","0x9bfff50db36a785555f07652a153b0c42b1b8b76":"0x6c6b935b8bbd400000","0x9c05e9d0f0758e795303717e31da213ca157e686":"0x3635c9adc5dea00000","0x9c1b771f09af882af0643083de2aa79dc097c40e":"0x8670e9ec6598c00000","0x9c28a2c4086091cb5da226a657ce3248e8ea7b6f":"0xf2dc7d47f15600000","0x9c2fd54089af665df5971d73b804616039647375":"0x3635c9adc5dea00000","0x9c344098ba615a398f11d009905b177c44a7b602":"0x3635c9adc5dea00000","0x9c3d0692ceeef80aa4965ceed262ffc7f069f2dc":"0xad78ebc5ac6200000","0x9c405cf697956138065e11c5f7559e67245bd1a5":"0xad78ebc5ac6200000","0x9c45202a25f6ad0011f115a5a72204f2f2198866":"0x10fcf3a62b080980000","0x9c49deff47085fc09704caa2dca8c287a9a137da":"0x1b1ae4d6e2ef5000000","0x9c4bbcd5f1644a6f075824ddfe85c571d6abf69c":"0x6194049f30f7200000","0x9c526a140683edf1431cfaa128a935e2b614d88b":"0x6046f37e5945c0000","0x9c54e4ed479a856829c6bb42da9f0b692a75f728":"0x197a8f6dd5519800000","0x9c581a60b61028d934167929b22d70b313c34fd0":"0xa968163f0a57b400000","0x9c5cc111092c122116f1a85f4ee31408741a7d2f":"0x1ab2cf7c9f87e20000","0x9c6bc9a46b03ae5404f043dfcf21883e4110cc33":"0xad78ebc5ac6200000","0x9c78963fbc263c09bd72e4f8def74a9475f7055c":"0x2eb8eb1a172dcb80000","0x9c78fbb4df769ce2c156920cfedfda033a0e254a":"0x6acb3df27e1f880000","0x9c7b6dc5190fe2912963fcd579683ec7395116b0":"0x2a1129d09367200000","0x9c80bc18e9f8d4968b185da8c79fa6e11ffc3e23":"0xd02ab486cedc00000","0x9c98fdf1fdcd8ba8f4c5b04c3ae8587efdf0f6e6":"0x14542ba12a337c00000","0x9c99a1da91d5920bc14e0cb914fdf62b94cb8358":"0x43c33c1937564800000","0x9c99b62606281b5cefabf36156c8fe62839ef5f3":"0xd8d726b7177a800000","0x9c9a07a8e57c3172a919ef64789474490f0d9f51":"0x21e19e0c9bab2400000","0x9c9de44724a4054da0eaa605abcc802668778bea":"0xad7d5ca3fa5a20000","0x9c9f3b8a811b21f3ff3fe20fe970051ce66a824f":"0x3ec2debc07d4be0000","0x9c9f89a3910f6a2ae8a91047a17ab788bddec170":"0x21e19e0c9bab2400000","0x9ca0429f874f8dcee2e9c062a9020a842a587ab9":"0x6c6b935b8bbd400000","0x9ca42ee7a0b898f6a5cc60b5a5d7b1bfa3c33231":"0x6c6b935b8bbd400000","0x9cb28ac1a20a106f7f373692c5ce4c73f13732a1":"0x3635c9adc5dea00000","0x9ccddcb2cfc2b25b08729a0a98d9e6f0202ea2c1":"0x56bc75e2d63100000","0x9ce27f245e02d1c312c1d500788c9def7690453b":"0xad78ebc5ac6200000","0x9ce5363b13e8238aa4dd15acd0b2e8afe0873247":"0xad78ebc5ac6200000","0x9cf2928beef09a40f9bfc953be06a251116182fb":"0x14542ba12a337c00000","0x9d069197d1de50045a186f5ec744ac40e8af91c6":"0x6c6b935b8bbd400000","0x9d0e7d92fb305853d798263bf15e97c72bf9d7e0":"0x3635c9adc5dea00000","0x9d0f347e826b7dceaad279060a35c0061ecf334b":"0xd8d726b7177a800000","0x9d207517422cc0d60de7c237097a4d4fce20940c":"0x1b1ae4d6e2ef500000","0x9d250ae4f110d71cafc7b0adb52e8d9acb6679b8":"0x2156d6e997213c00000","0x9d2bfc36106f038250c01801685785b16c86c60d":"0x5077d75df1b675800000","0x9d30cb237bc096f17036fc80dd21ca68992ca2d9":"0x66ee7318fdc8f300000","0x9d32962ea99700d93228e9dbdad2cc37bb99f07e":"0xb4632bedd4ded40000","0x9d34dac25bd15828faefaaf28f710753b39e89dc":"0x3b1c56fed02df00000","0x9d369165fb70b81a3a765f188fd60cbe5e7b0968":"0x6c6b935b8bbd400000","0x9d40e012f60425a340d82d03a1c757bfabc706fb":"0x9346f3addc88d8000","0x9d4174aa6af28476e229dadb46180808c67505c1":"0x421afda42ed6970000","0x9d4213339a01551861764c87a93ce8f85f87959a":"0xad78ebc5ac6200000","0x9d460c1b379ddb19a8c85b4c6747050ddf17a875":"0xb50fcfafebecb00000","0x9d47ba5b4c8505ad8da42934280b61a0e1e8b971":"0x56bc75e2d63100000","0x9d4d321177256ebd9afbda304135d517c3dc5693":"0x2164b7a04ac8a00000","0x9d4ff989b7bed9ab109d10c8c7e55f02d76734ad":"0x3635c9adc5dea00000","0x9d511543b3d9dc60d47f09d49d01b6c498d82078":"0x26197b9516fc3940000","0x9d6ecfa03af2c6e144b7c4692a86951e902e9e1f":"0xa2a5aa60ad243f0000","0x9d7655e9f3e5ba5d6e87e412aebe9ee0d49247ee":"0x8e09311c1d80fa0000","0x9d7831e834c20b1baa697af1d8e0c621c5afff9a":"0x4b06dbbb40f4a0000","0x9d78a975b7db5e4d8e28845cfbe7e31401be0dd9":"0x48a43c54602f700000","0x9d799e943e306ba2e5b99c8a6858cbb52c0cf735":"0x1043561a8829300000","0x9d7fda7070bf3ee9bbd9a41f55cad4854ae6c22c":"0x255cba3c46fcf120000","0x9d81aea69aed6ad07089d61445348c17f34bfc5b":"0x1043561a8829300000","0x9d911f3682f32fe0792e9fb6ff3cfc47f589fca5":"0xd8d726b7177a800000","0x9d913b5d339c95d87745562563fea98b23c60cc4":"0x941302c7f4d230000","0x9d93fab6e22845f8f45a07496f11de71530debc7":"0x6c4fd1ee246e780000","0x9d99b189bbd9a48fc2e16e8fcda33bb99a317bbb":"0x3d16e10b6d8bb20000","0x9d9c4efe9f433989e23be94049215329fa55b4cb":"0xde3b28903c6b58000","0x9d9e57fde30e5068c03e49848edce343b7028358":"0x5dc892aa1131c80000","0x9da3302240af0511c6fd1857e6ddb7394f77ab6b":"0xa80d24677efef00000","0x9da4ec407077f4b9707b2d9d2ede5ea5282bf1df":"0xd8d726b7177a800000","0x9da609fa3a7e6cf2cc0e70cdabe78dc4e382e11e":"0x410d586a20a4c00000","0x9da61ccd62bf860656e0325d7157e2f160d93bb5":"0x10f0ca956f8799e0000","0x9da6e075989c7419094cc9f6d2e49393bb199688":"0x259bb71d5adf3f00000","0x9da8e22ca10e67fea44e525e4751eeac36a31194":"0xe18398e7601900000","0x9db2e15ca681f4c66048f6f9b7941ed08b1ff506":"0xd8d726b7177a800000","0x9dc10fa38f9fb06810e11f60173ec3d2fd6a751e":"0x6acb3df27e1f880000","0x9dd2196624a1ddf14a9d375e5f07152baf22afa2":"0x41b05e2463a5438000","0x9dd46b1c6d3f05e29e9c6f037eed9a595af4a9aa":"0x1b1ae4d6e2ef500000","0x9ddd355e634ee9927e4b7f6c97e7bf3a2f1e687a":"0x2b5e3af16b1880000","0x9de20ae76aa08263b205d5142461961e2408d266":"0xda933d8d8c6700000","0x9de20bc37e7f48a80ffd7ad84ffbf1a1abe1738c":"0xad78ebc5ac6200000","0x9de7386dde401ce4c67b71b6553f8aa34ea5a17d":"0x340aad21b3b700000","0x9deb39027af877992b89f2ec4a1f822ecdf12693":"0x6c6b935b8bbd400000","0x9defe56a0ff1a1947dba0923f7dd258d8f12fa45":"0x5b12aefafa804000000","0x9df057cd03a4e27e8e032f857985fd7f01adc8d7":"0x6c6b935b8bbd400000","0x9df32a501c0b781c0281022f42a1293ffd7b892a":"0x1e7e4171bf4d3a00000","0x9e01765aff08bc220550aca5ea2e1ce8e5b09923":"0x3635c9adc5dea00000","0x9e20e5fd361eabcf63891f5b87b09268b8eb3793":"0x56bc75e2d63100000","0x9e232c08c14dc1a6ed0b8a3b2868977ba5c17d10":"0x1158e460913d00000","0x9e23c5e4b782b00a5fadf1aead87dacf5b0367a1":"0x1158e460913d00000","0x9e35399071a4a101e9194daa3f09f04a0b5f9870":"0xd8d726b7177a800000","0x9e3eb509278fe0dcd8e0bbe78a194e06b6803943":"0x32f51edbaaa3300000","0x9e427272516b3e67d4fcbf82f59390d04c8e28e5":"0xd8d726b7177a800000","0x9e4cec353ac3e381835e3c0991f8faa5b7d0a8e6":"0x21e18b9e9ab45e48000","0x9e5811b40be1e2a1e1d28c3b0774acde0a09603d":"0xa2a15d09519be00000","0x9e5a311d9f69898a7c6a9d6360680438e67a7b2f":"0x50c5e761a444080000","0x9e7c2050a227bbfd60937e268cea3e68fea8d1fe":"0x56bc75e2d63100000","0x9e7f65a90e8508867bccc914256a1ea574cf07e3":"0x433874f632cc600000","0x9e8144e08e89647811fe6b72d445d6a5f80ad244":"0x21e19e0c9bab2400000","0x9e8f64ddcde9b8b451bafaa235a9bf511a25ac91":"0x90f534608a72880000","0x9e951f6dc5e352afb8d04299d2478a451259bf56":"0x3e7419881a73a0000","0x9e960dcd03d5ba99cb115d17ff4c09248ad4d0be":"0xad78ebc5ac6200000","0x9eaf6a328a4076024efa6b67b48b21eedcc0f0b8":"0x890b0c2e14fb80000","0x9eb1ff71798f28d6e989fa1ea0588e27ba86cb7d":"0x7a1fe160277000000","0x9eb281c32719c40fdb3e216db0f37fbc73a026b7":"0x1158e460913d00000","0x9eb3a7cb5e6726427a3a361cfa8d6164dbd0ba16":"0x2b95bdcc39b6100000","0x9eb7834e171d41e069a77947fca87622f0ba4e48":"0x56bc75e2d63100000","0x9ec03e02e587b7769def538413e97f7e55be71d8":"0x42bf06b78ed3b500000","0x9ecbabb0b22782b3754429e1757aaba04b81189f":"0x2ca7bb061f5e998000","0x9ece1400800936c7c6485fcdd3626017d09afbf6":"0x10ce1d3d8cb3180000","0x9ed4e63f526542d44fddd34d59cd25388ffd6bda":"0xd29b34a46348940000","0x9ed80eda7f55054db9fb5282451688f26bb374c1":"0x1043561a8829300000","0x9edc90f4be210865214ab5b35e5a8dd77415279d":"0xd8d726b7177a800000","0x9edeac4c026b93054dc5b1d6610c6f3960f2ad73":"0x410d586a20a4c00000","0x9ee93f339e6726ec65eea44f8a4bfe10da3d3282":"0x6c6b935b8bbd400000","0x9ee9760cc273d4706aa08375c3e46fa230aff3d5":"0x1e52e336cde22180000","0x9eeb07bd2b7890195e7d46bdf2071b6617514ddb":"0x6c6b935b8bbd400000","0x9eef442d291a447d74c5d253c49ef324eac1d8f0":"0xb96608c8103bf00000","0x9ef1896b007c32a15114fb89d73dbd47f9122b69":"0xd8d726b7177a800000","0x9f017706b830fb9c30efb0a09f506b9157457534":"0x6c6b935b8bbd400000","0x9f10f2a0463b65ae30b070b3df18cf46f51e89bd":"0x678a932062e4180000","0x9f19fac8a32437d80ac6837a0bb7841729f4972e":"0x233df3299f61720000","0x9f1aa8fcfc89a1a5328cbd6344b71f278a2ca4a0":"0x1b1ae4d6e2ef500000","0x9f21302ca5096bea7402b91b0fd506254f999a3d":"0x4397451a003dd80000","0x9f271d285500d73846b18f733e25dd8b4f5d4a8b":"0x2723c346ae18080000","0x9f3497f5ef5fe63095836c004eb9ce02e9013b4b":"0x2256861bf9cf080000","0x9f3a74fd5e7edcc1162993171381cbb632b7cff0":"0x21e19e0c9bab2400000","0x9f46e7c1e9078cae86305ac7060b01467d6685ee":"0x243d4d18229ca20000","0x9f496cb2069563144d0811677ba0e4713a0a4143":"0x3cd2e0bf63a4480000","0x9f4a7195ac7c151ca258cafda0cab083e049c602":"0x53538c32185cee0000","0x9f4ac9c9e7e24cb2444a0454fa5b9ad9d92d3853":"0x2d43f3ebfafb2c0000","0x9f5f44026b576a4adb41e95961561d41039ca391":"0xd8d726b7177a80000","0x9f607b3f12469f446121cebf3475356b71b4328c":"0xd8d726b7177a800000","0x9f61beb46f5e853d0a8521c7446e68e34c7d0973":"0x1e5b8fa8fe2ac00000","0x9f64a8e8dacf4ade30d10f4d59b0a3d5abfdbf74":"0x36369ed7747d260000","0x9f662e95274121f177566e636d23964cf1fd686f":"0x6c6b935b8bbd400000","0x9f6a322a6d469981426ae844865d7ee0bb15c7b3":"0x2b5ee57929fdb8000","0x9f7986924aeb02687cd64189189fb167ded2dd5c":"0x35659ef93f0fc40000","0x9f7a0392f857732e3004a375e6b1068d49d83031":"0x6c6b935b8bbd400000","0x9f8245c3ab7d173164861cd3991b94f1ba40a93a":"0x9b0a791f1211300000","0x9f83a293c324d4106c18faa8888f64d299054ca0":"0xad78ebc5ac6200000","0x9f86a066edb61fcb5856de93b75c8c791864b97b":"0x6c6b935b8bbd400000","0x9f98eb34d46979b0a6de8b05aa533a89b825dcf1":"0x4b06dbbb40f4a0000","0x9f9fe0c95f10fee87af1af207236c8f3614ef02f":"0x14542ba12a337c00000","0x9faea13c733412dc4b490402bfef27a0397a9bc3":"0x10ce1d3d8cb3180000","0x9fbe066de57236dc830725d32a02aef9246c6c5e":"0x6c6b935b8bbd400000","0x9fd1052a60506bd1a9ef003afd9d033c267d8e99":"0x3635c9adc5dea00000","0x9fd64373f2fbcd9c0faca60547cad62e26d9851f":"0x3635c9adc5dea00000","0x9fe501aa57ead79278937cd6308c5cfa7a5629fe":"0x2b5ee57929fdb8000","0x9ffc5fe06f33f5a480b75aa94eb8556d997a16c0":"0x1158e460913d00000","0x9ffcf5ef46d933a519d1d16c6ba3189b27496224":"0x3635c9adc5dea00000","0x9ffedcc36b7cc312ad2a9ede431a514fccb49ba3":"0x244f579f3f5ca40000","0xa006268446643ec5e81e7acb3f17f1c351ee2ed9":"0xd8d726b7177a800000","0xa008019863c1a77c1499eb39bbd7bf2dd7a31cb9":"0x76d41c62494840000","0xa009bf076f1ba3fa57d2a7217218bed5565a7a7a":"0x3635c9adc5dea00000","0xa01e9476df84431825c836e8803a97e22fa5a0cd":"0x14542ba12a337c00000","0xa01f12d70f44aa7b113b285c22dcdb45873454a7":"0xfc936392801c0000","0xa01fd1906a908506dedae1e208128872b56ee792":"0xa2a15d09519be00000","0xa0228240f99e1de9cb32d82c0f2fa9a3d44b0bf3":"0x56bc75e2d631000000","0xa02bde6461686e19ac650c970d0672e76dcb4fc2":"0x1e09296c3378de40000","0xa02c1e34064f0475f7fa831ccb25014c3aa31ca2":"0x340aad21b3b700000","0xa02dc6aa328b880de99eac546823fccf774047fb":"0x6acb3df27e1f880000","0xa02e3f8f5959a7aab7418612129b701ca1b80010":"0x1158e460913d00000","0xa0347f0a98776390165c166d32963bf74dcd0a2f":"0x3635c9adc5dea00000","0xa035a3652478f82dbd6d115faa8ca946ec9e681d":"0x5f4e42dd4afec0000","0xa03a3dc7c533d1744295be955d61af3f52b51af5":"0x22b1c8c1227a00000","0xa0459ef3693aacd1647cd5d8929839204cef53be":"0x3635c9adc5dea00000","0xa04f2ae02add14c12faf65cb259022d0830a8e26":"0x152d02c7e14af6800000","0xa06cd1f396396c0a64464651d7c205efaf387ca3":"0x6c6acc67d7b1d40000","0xa072691c8dd7cd4237ff72a75c1a9506d0ce5b9e":"0x140ec80fa7ee880000","0xa072cebe62a9e9f61cc3fbf88a9efbfe3e9a8d70":"0x15af1d78b58c400000","0xa07682000b1bcf3002f85c80c0fa2949bd1e82fd":"0xd8d726b7177a800000","0xa07aa16d74aee8a9a3288d52db1551d593883297":"0x2086ac351052600000","0xa08d215b5b6aac4861a281ac7e400b78fef04cbf":"0x1158e460913d00000","0xa0951970dfd0832fb83bda12c23545e79041756c":"0x2086ac351052600000","0xa09f4d5eaa65a2f4cb750a49923401dae59090af":"0x796e3ea3f8ab00000","0xa0a0e65204541fca9b2fb282cd95138fae16f809":"0x21e19e0c9bab2400000","0xa0aa5f0201f04d3bbeb898132f7c11679466d901":"0x1fbed5215bb4c0000","0xa0aadbd9509722705f6d2358a5c79f37970f00f6":"0xad78ebc5ac6200000","0xa0b771951ce1deee363ae2b771b73e07c4b5e800":"0x4be4e7267b6ae00000","0xa0de5c601e696635c698b7ae9ca4539fc7b941ec":"0x12c3cbd704c9770000","0xa0e8ba661b48154cf843d4c2a5c0f792d528ee29":"0x15af1d78b58c400000","0xa0fc7e53c5ebd27a2abdac45261f84ab3b51aefb":"0xa313daec9bc0d90000","0xa0ff5b4cf016027e8323497d4428d3e5a83b8795":"0x16598d3c83ec0420000","0xa106465bbd19e1b6bce50d1b1157dc59095a3630":"0x6c6b935b8bbd400000","0xa106e6923edd53ca8ed650968a9108d6ccfd9670":"0x202fe1505afec898000","0xa109e18bb0a39c9ef82fa19597fc5ed8e9eb6d58":"0x58e7926ee858a00000","0xa11a03c4bb26d21eff677d5d555c80b25453ee7a":"0x3cb2759bc410f8000","0xa11effab6cf0f5972cffe4d56596e98968144a8f":"0x5a87e7d7f5f6580000","0xa1204dad5f560728a35c0d8fc79481057bf77386":"0x3635c9adc5dea00000","0xa12623e629df93096704b16084be2cd89d562da4":"0x1ccc9324511e4500000","0xa12a6c2d985daf0e4f5f207ae851aaf729b332cd":"0x152d02c7e14af6800000","0xa1336dfb96b6bcbe4b3edf3205be5723c90fad52":"0x10f0cf064dd59200000","0xa13b9d82a99b3c9bba5ae72ef2199edc7d3bb36c":"0x6c6acc67d7b1d40000","0xa13cfe826d6d1841dcae443be8c387518136b5e8":"0x1da56a4b0835bf800000","0xa1432ed2c6b7777a88e8d46d388e70477f208ca5":"0x1b1a7e413a196c50000","0xa144f6b60f72d64a21e330dadb62d8990ade2b09":"0x3635c9adc5dea00000","0xa15025f595acdbf3110f77c5bf24477e6548f9e8":"0x6c6b935b8bbd400000","0xa158148a2e0f3e92dc2ce38febc20107e3253c96":"0x6c6b935b8bbd400000","0xa16160851d2b9c349b92e46f829abfb210943595":"0x61093d7c2c6d380000","0xa166f911c644ac3213d29e0e1ae010f794d5ad26":"0x6c6b935b8bbd400000","0xa16d9e3d63986159a800b46837f45e8bb980ee0b":"0x6e1175da7ad1200000","0xa17070c2e9c5a940a4ec0e4954c4d7d643be8f49":"0x6c6b17033b361c8000","0xa17c9e4323069518189d5207a0728dcb92306a3f":"0x3635c9adc5dea00000","0xa18360e985f2062e8f8efe02ad2cbc91ad9a5aad":"0xa2a15d09519be00000","0xa1911405cf6e999ed011f0ddcd2a4ff7c28f2526":"0x22b1c8c1227a00000","0xa192698007cc11aa603d221d5feea076bcf7c30d":"0x6c6b935b8bbd400000","0xa192f06ab052d5fd7f94eea8318e827815fe677a":"0x71f8a93d01e540000","0xa1998144968a5c70a6415554cefec2824690c4a5":"0x1158e460913d00000","0xa1a1f0fa6d20b50a794f02ef52085c9d036aa6ca":"0x3635c9adc5dea00000","0xa1ae8d4540d4db6fdde7146f415b431eb55c7983":"0xaadec983fcff40000","0xa1b47c4d0ed6018842e6cfc8630ac3a3142e5e6b":"0x1158e460913d00000","0xa1c4f45a82e1c478d845082eb18875c4ea6539ab":"0x2a5a058fc295ed000000","0xa1dcd0e5b05a977c9623e5ae2f59b9ada2f33e31":"0x56bc75e2d63100000","0xa1e4380a3b1f749673e270229993ee55f35663b4":"0x6c6b935b8bbd400000","0xa1f193a0592f1feb9fdfc90aa813784eb80471c9":"0x4be4e7267b6ae00000","0xa1f2854050f872658ed82e52b0ad7bbc1cb921f6":"0x6d0317e2b326f70000","0xa1f5b840140d5a9acef402ac3cc3886a68cad248":"0x6c6b935b8bbd400000","0xa1f765c44fe45f790677944844be4f2d42165fbd":"0xc7e9cfde768ec70000","0xa1f7dde1d738d8cd679ea1ee965bee224be7d04d":"0x3d184450e5e93c0000","0xa1f8d8bcf90e777f19b3a649759ad95027abdfc3":"0xad78ebc5ac6200000","0xa202547242806f6e70e74058d6e5292defc8c8d4":"0x6c8754c8f30c080000","0xa20d071b1b003063497d7990e1249dabf36c35f7":"0x3635c9adc5dea00000","0xa20d8ff60caae31d02e0b665fa435d76f77c9442":"0x1a8a909dfcef400000","0xa211da03cc0e31ecce5309998718515528a090df":"0xad78ebc5ac6200000","0xa21442ab05340ade68c915f3c3399b9955f3f7eb":"0x2a034919dfbfbc0000","0xa2222259dd9c3e3ded127084f808e92a1887302c":"0x8c8339dafed480000","0xa22ade0ddb5c6ef8d0cd8de94d82b11082cb2e91":"0x374b57f3cef2700000","0xa24c3ab62181e9a15b78c4621e4c7c588127be26":"0x8cde43a83d3310000","0xa257ad594bd88328a7d90fc0a907df95eecae316":"0x1c3786ff3846930000","0xa25b086437fd2192d0a0f64f6ed044f38ef3da32":"0x12290f15180bdc0000","0xa276b058cb98d88beedb67e543506c9a0d9470d8":"0x90aafc76e02fbe0000","0xa282e969cac9f7a0e1c0cd90f5d0c438ac570da3":"0x2207eb89fc27380000","0xa291e9c7990d552dd1ae16cebc3fca342cbaf1d1":"0x43c33c1937564800000","0xa29319e81069e5d60df00f3de5adee3505ecd5fb":"0x6c6b935b8bbd400000","0xa2968fc1c64bac0b7ae0d68ba949874d6db253f4":"0x43c33c1937564800000","0xa29d5bda74e003474872bd5894b88533ff64c2b5":"0x21e19e0c9bab2400000","0xa29d661a6376f66d0b74e2fe9d8f26c0247ec84c":"0xdf3304079c13d20000","0xa2a435de44a01bd0ecb29e44e47644e46a0cdffb":"0x1b1d445a7affe78000","0xa2ace4c993bb1e5383f8ac74e179066e814f0591":"0x56bc75e2d63100000","0xa2b701f9f5cdd09e4ba62baebae3a88257105885":"0x3635c9adc5dea00000","0xa2c5854ff1599f98892c5725d262be1da98aadac":"0x1109ff333010e78000","0xa2c7eaffdc2c9d937345206c909a52dfb14c478f":"0x7c0860e5a80dc0000","0xa2d2aa626b09d6d4e4b13f7ffc5a88bd7ad36742":"0xfb8078507553830000","0xa2d38de1c73906f6a7ca6efeb97cf6f69cc421be":"0x3635c9adc5dea00000","0xa2dc65ee256b59a5bd7929774f904b358df3ada1":"0x483bce28beb09f80000","0xa2e0683a805de6a05edb2ffbb5e96f0570b637c3":"0x1158e460913d00000","0xa2e1b8aa900e9c139b3fa122354f6156d92a18b1":"0x1b1ae4d6e2ef500000","0xa2e2b5941e0c01944bfe1d5fb4e8a34b922ccfb1":"0xad78ebc5ac6200000","0xa2e460a989cb15565f9ecca7d121a18e4eb405b6":"0x6c6b935b8bbd400000","0xa2ecce2c49f72a0995a0bda57aacf1e9f001e22a":"0xd8d726b7177a800000","0xa2f472fe4f22b77db489219ea4023d11582a9329":"0x878678326eac9000000","0xa2f798e077b07d86124e1407df32890dbb4b6379":"0xad78ebc5ac6200000","0xa2f86bc061884e9eef05640edd51a2f7c0596c69":"0x6c6c44fe47ec050000","0xa2fa17c0fb506ce494008b9557841c3f641b8cae":"0x1158e460913d00000","0xa304588f0d850cd8d38f76e9e83c1bf63e333ede":"0x2285601216c8c0000","0xa3058c51737a4e96c55f2ef6bd7bb358167ec2a7":"0x20db3ae4481ad48000","0xa309df54cabce70c95ec3033149cd6678a6fd4cf":"0xc1f12c75101580000","0xa30a45520e5206d9004070e6af3e7bb2e8dd5313":"0x15af1d78b58c400000","0xa30e0acb534c9b3084e8501da090b4eb16a2c0cd":"0x6c6b935b8bbd400000","0xa3203095edb7028e6871ce0a84f548459f83300a":"0xd8d726b7177a800000","0xa321091d3018064279db399d2b2a88a6f440ae24":"0xad78ebc5ac62000000","0xa3232d068d50064903c9ebc563b515acc8b7b097":"0x6c8754c8f30c080000","0xa3241d890a92baf52908dc4aa049726be426ebd3":"0x43c2da661ca2f540000","0xa3294626ec2984c43b43da4d5d8e4669b11d4b59":"0x36a4cf636319c00000","0xa32cf7dde20c3dd5679ff5e325845c70c5962662":"0x1158e460913d00000","0xa339a3d8ca280e27d2415b26d1fc793228b66043":"0x36f28695b78ff00000","0xa33cb450f95bb46e25afb50fe05feee6fb8cc8ea":"0x2a1129d09367200000","0xa33f70da7275ef057104dfa7db64f472e9f5d553":"0x45946b0f9e9d60000","0xa34076f84bd917f20f8342c98ba79e6fb08ecd31":"0xe3aeb5737240a00000","0xa3430e1f647f321ed34739562323c7d623410b56":"0x3634fb9f1489a70000","0xa34f9d568bf7afd94c2a5b8a5ff55c66c4087999":"0x847d503b220eb00000","0xa35606d51220ee7f2146d411582ee4ee4a45596e":"0xd8aabe080bc9400000","0xa356551bb77d4f45a6d7e09f0a089e79cca249cb":"0x126e72a69a50d00000","0xa35c19132cac1935576abfed6c0495fb07881ba0":"0x6c6b935b8bbd400000","0xa365918bfe3f2627b9f3a86775d8756e0fd8a94b":"0x15af1d78b58c400000","0xa36e0d94b95364a82671b608cb2d373245612909":"0x821d221b5291f8000","0xa375b4bc24a24e1f797593cc302b2f331063fa5c":"0xad78ebc5ac6200000","0xa37622ac9bbdc4d82b75015d745b9f8de65a28ec":"0x9dc05cce28c2b80000","0xa379a5070c503d2fac89b8b3afa080fd45ed4bec":"0x42bf06b78ed3b500000","0xa3802d8a659e89a2c47e905430b2a827978950a7":"0x3635c9adc5dea00000","0xa38306cb70baa8e49186bd68aa70a83d242f2907":"0x6c6b935b8bbd400000","0xa38476691d34942eea6b2f76889223047db4617a":"0x6c6b935b8bbd400000","0xa387ce4e961a7847f560075c64e1596b5641d21c":"0x243d4d18229ca20000","0xa387ecde0ee4c8079499fd8e03473bd88ad7522a":"0x6acb3df27e1f880000","0xa3883a24f7f166205f1a6a9949076c26a76e7178":"0x62a992e53a0af00000","0xa38b5bd81a9db9d2b21d5ec7c60552cd02ed561b":"0x14542ba12a337c00000","0xa390ca122b8501ee3e5e07a8ca4b419f7e4dae15":"0x56bc75e2d63100000","0xa3932a31d6ff75fb3b1271ace7caa7d5e1ff1051":"0x43c33c1937564800000","0xa394ad4fd9e6530e6f5c53faecbede81cb172da1":"0x12f939c99edab800000","0xa3979a92760a135adf69d72f75e167755f1cb8c3":"0x56bc75e2d63100000","0xa39bfee4aec9bd75bd22c6b672898ca9a1e95d32":"0x21e19e0c9bab2400000","0xa3a262afd2936819230892fde84f2d5a594ab283":"0x65ea3db75546600000","0xa3a2e319e7d3a1448b5aa2468953160c2dbcba71":"0x6c6b935b8bbd400000","0xa3a57b0716132804d60aac281197ff2b3d237b01":"0x4be4e7267b6ae00000","0xa3a93ef9dbea2636263d06d8492f6a41de907c22":"0x340aad21b3b700000","0xa3ae1879007d801cb5f352716a4dd8ba2721de3d":"0x2a5a058fc295ed000000","0xa3ba0d3a3617b1e31b4e422ce269e873828d5d69":"0x2e141ea081ca080000","0xa3bc979b7080092fa1f92f6e0fb347e28d995045":"0x97c9ce4cf6d5c00000","0xa3bff1dfa9971668360c0d82828432e27bf54e67":"0xad78ebc5ac6200000","0xa3c14ace28b192cbb062145fcbbd5869c67271f6":"0x1b1ae4d6e2ef5000000","0xa3c33afc8cb4704e23153de2049d35ae71332472":"0x2b58addb89a2580000","0xa3d0b03cffbb269f796ac29d80bfb07dc7c6ad06":"0x6c6b935b8bbd400000","0xa3d583a7b65b23f60b7905f3e4aa62aac87f4227":"0x38befa126d5a9f8000","0xa3db364a332d884ba93b2617ae4d85a1489bea47":"0x5c283d410394100000","0xa3e051fb744aa3410c3b88f899f5d57f168df12d":"0xa030dcebbd2f4c0000","0xa3e3a6ea509573e21bd0239ece0523a7b7d89b2f":"0x6acb3df27e1f880000","0xa3f4ad14e0bb44e2ce2c14359c75b8e732d37054":"0xad78ebc5ac6200000","0xa3facc50195c0b4933c85897fecc5bbd995c34b8":"0x1158e460913d00000","0xa4035ab1e5180821f0f380f1131b7387c8d981cd":"0x1158e460913d00000","0xa40aa2bbce0c72b4d0dfffcc42715b2b54b01bfa":"0x3635c9adc5dea00000","0xa419a984142363267575566089340eea0ea20819":"0x6c6acc67d7b1d40000","0xa421dbb89b3a07419084ad10c3c15dfe9b32d0c2":"0x43c33c1937564800000","0xa422e4bf0bf74147cc895bed8f16d3cef3426154":"0x12ef3f62ee11368000","0xa4259f8345f7e3a8b72b0fec2cf75e321fda4dc2":"0x678a932062e4180000","0xa42908e7fe53980a9abf4044e957a54b70e99cbe":"0x6c6b935b8bbd400000","0xa429fa88731fdd350e8ecd6ea54296b6484fe695":"0x6ac5c62d9486070000","0xa430995ddb185b9865dbe62539ad90d22e4b73c2":"0x21e19e0c9bab2400000","0xa436c75453ccca4a1f1b62e5c4a30d86dde4be68":"0x6c6b935b8bbd400000","0xa437fe6ec103ca8d158f63b334224eccac5b3ea3":"0x1b1ae4d6e2ef5000000","0xa43b6da6cb7aac571dff27f09d39f846f53769b1":"0x14998f32ac78700000","0xa43b81f99356c0af141a03010d77bd042c71c1ee":"0x6c6b935b8bbd400000","0xa43e1947a9242b355561c30a829dfeeca2815af8":"0xd23d99969fd6918000","0xa4489a50ead5d5445a7bee4d2d5536c2a76c41f8":"0xad78ebc5ac6200000","0xa44fe800d96fcad73b7170d0f610cb8c0682d6ce":"0xd8d726b7177a800000","0xa45432a6f2ac9d56577b938a37fabac8cc7c461c":"0x3635c9adc5dea00000","0xa466d770d898d8c9d405e4a0e551efafcde53cf9":"0x1ab2cf7c9f87e20000","0xa4670731175893bbcff4fa85ce97d94fc51c4ba8":"0x1b1ae4d6e2ef5000000","0xa46b4387fb4dcce011e76e4d73547d4481e09be5":"0x487a9a304539440000","0xa46cd237b63eea438c8e3b6585f679e4860832ac":"0x3635c9adc5dea00000","0xa47779d8bc1c7bce0f011ccb39ef68b854f8de8f":"0x6c6b935b8bbd400000","0xa4826b6c3882fad0ed5c8fbb25cc40cc4f33759f":"0x701b43e34433d00000","0xa4875928458ec2005dbb578c5cd33580f0cf1452":"0x3635c9adc5dea00000","0xa49f523aa51364cbc7d995163d34eb590ded2f08":"0x9027421b2a9fbc0000","0xa4a49f0bc8688cc9e6dc04e1e08d521026e65574":"0xad78ebc5ac6200000","0xa4a7d306f510cd58359428c0d2f7c3609d5674d7":"0xb58cb61c3ccf340000","0xa4a83a0738799b971bf2de708c2ebf911ca79eb2":"0x2086ac351052600000","0xa4b09de6e713dc69546e76ef0acf40b94f0241e6":"0x117dc0627ec8700000","0xa4d2b429f1ad5349e31704969edc5f25ee8aca10":"0x21e19e0c9bab2400000","0xa4d6c82eddae5947fbe9cdfbd548ae33d91a7191":"0x1b1ae4d6e2ef5000000","0xa4da34450d22ec0ffcede0004b02f7872ee0b73a":"0x50f616673f0830000","0xa4dd59ab5e517d398e49fa537f899fed4c15e95d":"0x43c33c1937564800000","0xa4e623451e7e94e7e89ba5ed95c8a83a62ffc4ea":"0x1158e460913d00000","0xa4ed11b072d89fb136759fc69b428c48aa5d4ced":"0xe3f1527a03ca80000","0xa4fb14409a67b45688a8593e5cc2cf596ced6f11":"0x61093d7c2c6d380000","0xa514d00edd7108a6be839a638db2415418174196":"0x65a4da25d3016c00000","0xa522de7eb6ae1250522a513133a93bd42849475c":"0x43c33c1937564800000","0xa524a8cccc49518d170a328270a2f88133fbaf5d":"0xff7022dac108a0000","0xa539b4a401b584dfe0f344b1b422c65543167e2e":"0xad78ebc5ac6200000","0xa53ead54f7850af21438cbe07af686279a315b86":"0x21e19e0c9bab2400000","0xa543a066fb32a8668aa0736a0c9cd40d78098727":"0x3635c9adc5dea00000","0xa567770b6ae320bdde50f904d663e746a61dace6":"0x6c6b935b8bbd400000","0xa568db4d57e4d67462d733c69a9e0fe26e218327":"0x3b6bff9266c0ae0000","0xa5698035391e67a49013c0002079593114feb353":"0xd02ab486cedc00000","0xa570223ae3caa851418a9843a1ac55db4824f4fd":"0xad78ebc5ac6200000","0xa57360f002e0d64d2d74457d8ca4857ee00bcddf":"0x1233e232f618aa0000","0xa575f2891dcfcda83c5cf01474af11ee01b72dc2":"0x56cd55fc64dfe0000","0xa5783bf33432ff82ac498985d7d460ae67ec3673":"0x62a992e53a0af00000","0xa5874d754635a762b381a5c4c792483af8f23d1d":"0x2b5e3af16b1880000","0xa5a4227f6cf98825c0d5baff5315752ccc1a1391":"0x21e19e0c9bab2400000","0xa5ab4bd3588f46cb272e56e93deed386ba8b753d":"0x4842f04105872c8000","0xa5bad86509fbe0e0e3c0e93f6d381f1af6e9d481":"0x14542ba12a337c00000","0xa5c336083b04f9471b8c6ed73679b74d66c363ec":"0xa3650a4c9d20e20000","0xa5cd123992194b34c4781314303b03c54948f4b9":"0x6cfcc3d91da5630000","0xa5d5b8b62d002def92413710d13b6ff8d4fc7dd3":"0x15af1d78b58c400000","0xa5d96e697d46358d119af7819dc7087f6ae47fef":"0x317bee8af3315a78000","0xa5de5e434fdcdd688f1c31b6fb512cb196724701":"0x2b5e3af16b18800000","0xa5e0fc3c3affed3db6710947d1d6fb017f3e276d":"0x6c6b935b8bbd400000","0xa5e93b49ea7c509de7c44d6cfeddef5910deaaf2":"0x6c6b935b8bbd400000","0xa5e9cd4b74255d22b7d9b27ae8dd43ed6ed0252b":"0x298db2f54411d98000","0xa5f0077b351f6c505cd515dfa6d2fa7f5c4cd287":"0x878678326eac9000000","0xa5f075fd401335577b6683c281e6d101432dc6e0":"0x914878a8c05ee00000","0xa5fe2ce97f0e8c3856be0de5f4dcb2ce5d389a16":"0x13db0b8b6863e0000","0xa5ff62222d80c013cec1a0e8850ed4d354dac16d":"0xb41075c168b180000","0xa609c26dd350c235e44b2b9c1dddccd0a9d9f837":"0x3635c9adc5dea00000","0xa60c1209754f5d87b181da4f0817a81859ef9fd8":"0x2b5e3af16b1880000","0xa6101c961e8e1c15798ffcd0e3201d7786ec373a":"0x14542ba12a337c00000","0xa613456996408af1c2e93e177788ab55895e2b32":"0x15919ff477c88b80000","0xa61887818f914a20e31077290b83715a6b2d6ef9":"0x65ea3db75546600000","0xa61a54df784a44d71b771b87317509211381f200":"0x3635c9adc5dea00000","0xa61cdbadf04b1e54c883de6005fcdf16beb8eb2f":"0x6c6b935b8bbd400000","0xa639acd96b31ba53b0d08763229e1f06fd105e9d":"0x1b1ae4d6e2ef5000000","0xa642501004c90ea9c9ed1998ba140a4cd62c6f5f":"0xd94fb8b10f8b18000","0xa644ed922cc237a3e5c4979a995477f36e50bc62":"0x1fa73d845d7e960000","0xa646a95c6d6f59f104c6541d7760757ab392b08c":"0xe3aeb5737240a00000","0xa6484cc684c4c91db53eb68a4da45a6a6bda3067":"0x14542ba12a337c00000","0xa64e5ffb704c2c9139d77ef61d8cdfa31d7a88e9":"0x7c0860e5a80dc0000","0xa65426cff378ed23253513b19f496de45fa7e18f":"0x18650127cc3dc800000","0xa66a4963b27f1ee1932b172be5964e0d3ae54b51":"0x960db77681e940000","0xa67f38819565423aa85f3e3ab61bc763cbab89dd":"0x7377b022c6be080000","0xa68c313445c22d919ee46cc2d0cdff043a755825":"0x41374fd21b0d88000","0xa68e0c30cba3bc5a883e540320f999c7cd558e5c":"0x6192333762a58c8000","0xa690f1a4b20ab7ba34628620de9ca040c43c1963":"0xd8d726b7177a800000","0xa69d7cd17d4842fe03f62a90b2fbf8f6af7bb380":"0x56bc75e2d63100000","0xa6a08252c8595177cc2e60fc27593e2379c81fb1":"0x11651ac3e7a758000","0xa6a0de421ae54f6d17281308f5646d2f39f7775d":"0x6c6b935b8bbd400000","0xa6b2d573297360102c07a18fc21df2e7499ff4eb":"0xd96fce90cfabcc0000","0xa6c910ce4d494a919ccdaaa1fc3b82aa74ba06cf":"0x1b1ae4d6e2ef5000000","0xa6e3baa38e104a1e27a4d82869afb1c0ae6eff8d":"0x11140eead8b710000","0xa6eebbe464d39187bf80ca9c13d72027ec5ba8be":"0xa2a15d09519be00000","0xa6f62b8a3d7f11220701ab9ffffcb327959a2785":"0x1b6e291f18dba80000","0xa6f93307f8bce03195fece872043e8a03f7bd11a":"0x9c734bad5111580000","0xa701df79f594901afe1444485e6b20c3bda2b9b3":"0x3635c9adc5dea00000","0xa7024cfd742c1ec13c01fea18d3042e65f1d5dee":"0x263119a28abd0b08000","0xa718aaad59bf395cba2b23e09b02fe0c89816247":"0x36303c97e468780000","0xa7247c53d059eb7c9310f628d7fc6c6a0a773f08":"0x1b1ae4d6e2ef500000","0xa7253763cf4a75df92ca1e766dc4ee8a2745147b":"0x2463770e90a8f500000","0xa72ee666c4b35e82a506808b443cebd5c632c7dd":"0x2b5e3af16b18800000","0xa74444f90fbb54e56f3ac9b6cfccaa4819e4614a":"0x1158e460913d00000","0xa747439ad0d393b5a03861d77296326de8bb9db9":"0x3635c9adc5dea00000","0xa7607b42573bb6f6b4d4f23c7e2a26b3a0f6b6f0":"0x57473d05dabae80000","0xa76929890a7b47fb859196016c6fdd8289ceb755":"0x10f0cf064dd59200000","0xa76b743f981b693072a131b22ba510965c2fefd7":"0xfc936392801c0000","0xa76d3f156251b72c0ccf4b47a3393cbd6f49a9c5":"0x487a9a304539440000","0xa77428bcb2a0db76fc8ef1e20e461a0a32c5ac15":"0x15be6174e1912e0000","0xa7758cecb60e8f614cce96137ef72b4fbd07774a":"0x1b1ae4d6e2ef500000","0xa7775e4af6a23afa201fb78b915e51a515b7a728":"0x68155a43676e00000","0xa77f3ee19e9388bbbb2215c62397b96560132360":"0xad78ebc5ac6200000","0xa7859fc07f756ea7dcebbccd42f05817582d973f":"0x21e19e0c9bab2400000","0xa7966c489f4c748a7ae980aa27a574251767caf9":"0xa2a15d09519be00000","0xa7a3bb6139b0ada00c1f7f1f9f56d994ba4d1fa8":"0x6c6b935b8bbd400000","0xa7a3f153cdc38821c20c5d8c8241b294a3f82b24":"0x1b1ae4d6e2ef500000","0xa7a517d7ad35820b09d497fa7e5540cde9495853":"0x6c6b935b8bbd400000","0xa7c9d388ebd873e66b1713448397d0f37f8bd3a8":"0x10f0cf064dd59200000","0xa7dcbba9b9bf6762c145416c506a71e3b497209c":"0x6c6acc67d7b1d40000","0xa7e74f0bdb278ff0a805a648618ec52b166ff1be":"0x56bc75e2d63100000","0xa7e83772bc200f9006aa2a260dbaa8483dc52b30":"0xb42d5366637e50000","0xa7ef35ce87eda6c28df248785815053ec97a5045":"0x10f0ce949e00f930000","0xa7f9220c8047826bd5d5183f4e676a6d77bfed36":"0x85068976be81c0000","0xa807104f2703d679f8deafc442befe849e42950b":"0x6c6b935b8bbd400000","0xa80cb1738bac08d4f9c08b4deff515545fa8584f":"0x1b1ae4d6e2ef500000","0xa819d2ece122e028c8e8a04a064d02b9029b08b9":"0x3635c9adc5dea00000","0xa825fd5abb7926a67cf36ba246a24bd27be6f6ed":"0xf43fc2c04ee00000","0xa8285539869d88f8a961533755717d7eb65576ae":"0xad78ebc5ac6200000","0xa83382b6e15267974a8550b98f7176c1a353f9be":"0xbffdaf2fc1b1a40000","0xa8446c4781a737ac4328b1e15b8a0b3fbb0fd668":"0x48794d1f246192a0000","0xa8455b411765d6901e311e726403091e42c56683":"0xb73aec3bfe14500000","0xa86613e6c4a4c9c55f5c10bcda32175dcbb4af60":"0x243d6c2e36be6ae0000","0xa86db07d9f812f4796622d40e03d135874a88a74":"0x1158e460913d00000","0xa87f7abd6fa31194289678efb63cf584ee5e2a61":"0xd8d726b7177a800000","0xa880e2a8bf88a1a82648b4013c49c4594c433cc8":"0x1004e2e45fb7ee00000","0xa88577a073fbaf33c4cd202e00ea70ef711b4006":"0x6c6b935b8bbd400000","0xa8914c95b560ec13f140577338c32bcbb77d3a7a":"0x9c2007651b2500000","0xa89ac93b23370472daac337e9afdf642543f3e57":"0x21e19e0c9bab2400000","0xa89df34859edd7c820db887740d8ff9e15157c7b":"0x6c6b935b8bbd400000","0xa8a43c009100616cb4ae4e033f1fc5d7e0b6f152":"0xd588d078b43f4d8000","0xa8a708e84f82db86a35502193b4c6ee9a76ebe8f":"0x3708baed3d68900000","0xa8a7b68adab4e3eadff19ffa58e34a3fcec0d96a":"0x14542ba12a337c00000","0xa8a8dbdd1a85d1beee2569e91ccc4d09ae7f6ea1":"0x13a6b2b564871a00000","0xa8aca748f9d312ec747f8b6578142694c7e9f399":"0x6c6b935b8bbd400000","0xa8b65ba3171a3f77a6350b9daf1f8d55b4d201eb":"0x2862f3b0d222040000","0xa8beb91c2b99c8964aa95b6b4a184b1269fc3483":"0x15af1d78b58c400000","0xa8c0b02faf02cb5519dda884de7bbc8c88a2da81":"0xe7c2518505060000","0xa8c1d6aa41fe3d65f67bd01de2a866ed1ed9ae52":"0x1a055690d9db80000","0xa8cafac32280d021020bf6f2a9782883d7aabe12":"0x56bc75e2d63100000","0xa8db0b9b201453333c757f6ad9bcb555c02da93b":"0x7742b7830f341d0000","0xa8e42a4e33d7526cca19d9a36dcd6e8040d0ea73":"0x3a8c02c5ea2de00000","0xa8e7201ff619faffc332e6ad37ed41e301bf014a":"0x2086ac351052600000","0xa8ee1df5d44b128469e913569ef6ac81eeda4fc8":"0x1b1ae4d6e2ef500000","0xa8ef9ad274436042903e413c3b0c62f5f52ed584":"0x21e19e0c9bab2400000","0xa8f37f0ab3a1d448a9e3ce40965f97a646083a34":"0x11e0e4f8a50bd40000","0xa8f89dd5cc6e64d7b1eeace00702022cd7d2f03d":"0x25f273933db5700000","0xa90476e2efdfee4f387b0f32a50678b0efb573b5":"0x21e19e0c9bab2400000","0xa9145046fa3628cf5fd4c613927be531e6db1fdd":"0x6124fee993bc00000","0xa914cdb571bfd93d64da66a4e108ea134e50d000":"0x4d8738994713798000","0xa91a5a7b341f99c535144e20be9c6b3bb4c28e4d":"0x126753aa224a70b0000","0xa9252551a624ae513719dabe5207fbefb2fd7749":"0x22b1c8c1227a00000","0xa927d48bb6cb814bc609cbcaa9151f5d459a27e1":"0xeb935090064180000","0xa929c8bd71db0c308dac06080a1747f21b1465aa":"0x1b1ae4d6e2ef500000","0xa94bbb8214cf8da0c2f668a2ac73e86248528d4b":"0x340aad21b3b7000000","0xa951b244ff50cfae591d5e1a148df6a938ef2a1a":"0x5e001584dfcf580000","0xa960b1cadd3b5c1a8e6cb3abcaf52ee7c3d9fa88":"0x528bc3545e52680000","0xa961171f5342b173dd70e7bfe5b5ca238b13bcdd":"0xb82794a9244f0c8000","0xa975b077fcb4cc8efcbf838459b6fa243a4159d6":"0x22b1c8c1227a00000","0xa97beb3a48c45f1528284cb6a95f7de453358ec6":"0x690836c0af5f5600000","0xa97e072144499fe5ebbd354acc7e7efb58985d08":"0x90f534608a72880000","0xa986762f7a4f294f2e0b173279ad2c81a2223458":"0x1158e460913d00000","0xa98f109835f5eacd0543647c34a6b269e3802fac":"0x15af1d78b58c400000","0xa997dfc7986a27050848fa1c64d7a7d6e07acca2":"0x7c0860e5a80dc0000","0xa99991cebd98d9c838c25f7a7416d9e244ca250d":"0x3635c9adc5dea00000","0xa9a1cdc33bfd376f1c0d76fb6c84b6b4ac274d68":"0x10f0cf064dd59200000","0xa9a8eca11a23d64689a2aa3e417dbb3d336bb59a":"0xe3453cd3b67ba8000","0xa9acf600081bb55bb6bfbab1815ffc4e17e85a95":"0xad78ebc5ac6200000","0xa9ad1926bc66bdb331588ea8193788534d982c98":"0x65a4da25d3016c00000","0xa9af21acbe482f8131896a228036ba51b19453c3":"0x2b5e021980cc18000","0xa9b2d2e0494eab18e07d37bbb856d80e80f84cd3":"0x21e19e0c9bab2400000","0xa9ba6f413b82fcddf3affbbdd09287dcf50415ca":"0xd8d726b7177a800000","0xa9be88ad1e518b0bbb024ab1d8f0e73f790e0c76":"0x97c9ce4cf6d5c00000","0xa9bfc410dddb20711e45c07387eab30a054e19ac":"0x3e99601edf4e530000","0xa9d4a2bcbe5b9e0869d70f0fe2e1d6aacd45edc5":"0xac6e77ab663a80000","0xa9d64b4f3bb7850722b58b478ba691375e224e42":"0x14542ba12a337c00000","0xa9d6f871ca781a759a20ac3adb972cf12829a208":"0x3224f42723d4540000","0xa9dc0424c6969d798358b393b1933a1f51bee00a":"0x43c33c1937564800000","0xa9e194661aac704ee9dea043974e9692ded84a5d":"0x1a26a51422a0700000","0xa9e28337e6357193d9e2cb236b01be44b81427df":"0x77432217e683600000","0xa9e6e25e656b762558619f147a21985b8874edfe":"0x6c6b935b8bbd400000","0xa9e9dbce7a2cb03694799897bed7c54d155fdaa8":"0xab5ae8fc99d658000","0xa9ed377b7d6ec25971c1a597a3b0f3bead57c98f":"0x15af1d78b58c400000","0xaa0200f1d17e9c54da0647bb96395d57a78538d8":"0x393ef1a5127c800000","0xaa0ca3737337178a0caac3099c584b056c56301c":"0x2fb474098f67c00000","0xaa136b47962bb8b4fb540db4ccf5fdd042ffb8cf":"0x1b1b6bd7af64c70000","0xaa14422d6f0ae5a758194ed15780c838d67f1ee1":"0x60932056c449de80000","0xaa16269aac9c0d803068d82fc79151dadd334b66":"0xd8d726b7177a800000","0xaa167026d39ab7a85635944ed9edb2bfeba11850":"0x1c1d5e21b4fcf680000","0xaa1b3768c16d821f580e76c8e4c8e86d7dc78853":"0x15af1d78b58c400000","0xaa1df92e51dff70b1973e0e924c66287b494a178":"0x1cf84a30a0a0c00000","0xaa2c670096d3f939305325427eb955a8a60db3c5":"0x6c95590699232d0000","0xaa3135cb54f102cbefe09e96103a1a796718ff54":"0x32222d9c331940000","0xaa321fdbd449180db8ddd34f0fe906ec18ee0914":"0x252248deb6e6940000","0xaa3925dc220bb4ae2177b2883078b6dc346ca1b2":"0x1b1ae4d6e2ef5000000","0xaa3f29601a1331745e05c42830a15e71938a6237":"0x5c283d410394100000","0xaa47a4ffc979363232c99b99fada0f2734b0aeee":"0x1b8489df4dbff940000","0xaa493d3f4fb866491cf8f800efb7e2324ed7cfe5":"0x5c283d410394100000","0xaa56a65dc4abb72f11bae32b6fbb07444791d5c9":"0x2894e975bf496c0000","0xaa5afcfd8309c2df9d15be5e6a504e7d706624c5":"0x13cf422e305a1378000","0xaa8eb0823b07b0e6d20aadda0e95cf3835be192e":"0x1bc16d674ec800000","0xaa91237e740d25a92f7fa146faa18ce56dc6e1f3":"0x3224f42723d4540000","0xaa960e10c52391c54e15387cc67af827b5316dcc":"0x6c6b935b8bbd400000","0xaa9bd4589535db27fa2bc903ca17d679dd654806":"0x6c6b935b8bbd400000","0xaaa8defe11e3613f11067fb983625a08995a8dfc":"0xad78ebc5ac6200000","0xaaaae68b321402c8ebc13468f341c63c0cf03fce":"0x52663ccab1e1c00000","0xaaad1baade5af04e2b17439e935987bf8c2bb4b9":"0x6c6b935b8bbd400000","0xaab00abf5828d7ebf26b47ceaccdb8ba03325166":"0x21e19e0c9bab2400000","0xaabdb35c1514984a039213793f3345a168e81ff1":"0x10cac896d239000000","0xaaca60d9d700e78596bbbbb1f1e2f70f4627f9d8":"0x3635bb77cb4b860000","0xaaced8a9563b1bc311dbdffc1ae7f57519c4440c":"0x6c6b935b8bbd400000","0xaad2b7f8106695078e6c138ec81a7486aaca1eb2":"0xad78ebc5ac6200000","0xaae61e43cb0d0c96b30699f77e00d711d0a3979b":"0x3635c9adc5dea00000","0xaae732eda65988c3a00c7f472f351c463b1c968e":"0x6c6b935b8bbd400000","0xaaf023fef290a49bb78bb7abc95d669c50d528b0":"0xad78ebc5ac6200000","0xaaf5b207b88b0de4ac40d747cee06e172df6e745":"0x6a7b71d7f51d0900000","0xaaf9ee4b886c6d1e95496fd274235bf4ecfcb07d":"0x4be4e7267b6ae00000","0xaafb7b013aa1f8541c7e327bf650adbd194c208f":"0x499e092d01f4780000","0xab098633eeee0ccefdf632f9575456f6dd80fc86":"0x2a5a058fc295ed000000","0xab0ced762e1661fae1a92afb1408889413794825":"0x678a932062e4180000","0xab14d221e33d544629198cd096ed63dfa28d9f47":"0x14542ba12a337c00000","0xab209fdca979d0a647010af9a8b52fc7d20d8cd1":"0x1eee2532c7c2d040000","0xab27ba78c8e5e3daef31ad05aef0ff0325721e08":"0x195ece006e02d00000","0xab2871e507c7be3965498e8fb462025a1a1c4264":"0x2a034919dfbfbc0000","0xab3861226ffec1289187fb84a08ec3ed043264e8":"0x3635c9adc5dea00000","0xab3d86bc82927e0cd421d146e07f919327cdf6f9":"0x678a932062e4180000","0xab3e62e77a8b225e411592b1af300752fe412463":"0x215f835bc769da80000","0xab3e78294ba886a0cfd5d3487fb3a3078d338d6e":"0x6acb3df27e1f880000","0xab4004c0403f7eabb0ea586f212156c4203d67f1":"0x6c6acc67d7b1d40000","0xab416fe30d58afe5d9454c7fce7f830bcc750356":"0x6353701c605db8000","0xab4572fbb1d72b575d69ec6ad17333873e8552fc":"0x6c6ac54cda68470000","0xab5a79016176320973e8cd38f6375530022531c0":"0x3635c9adc5dea00000","0xab5dfc1ea21adc42cf8c3f6e361e243fd0da61e5":"0x1043561a8829300000","0xab6b65eab8dfc917ec0251b9db0ecfa0fa032849":"0x1b1ae4d6e2ef500000","0xab7091932e4bc39dbb552380ca934fd7166d1e6e":"0xb50fcfafebecb00000","0xab7416ff32254951cbbc624ec7fb45fc7ecaa872":"0x126e72a69a50d00000","0xab7c42c5e52d641a07ad75099c62928b7f86622f":"0x12361aa21d14ba0000","0xab7d54c7c6570efca5b4b8ce70f52a5773e5d53b":"0xf283abe9d9f380000","0xab7e0b83ed9a424c6d1e6a6f87a4dbf06409c7d6":"0x821ab0d44149800000","0xab84a0f147ad265400002b85029a41fc9ce57f85":"0x3635c9adc5dea00000","0xab93b26ece0a0aa21365afed1fa9aea31cd54468":"0x572b7b98736c200000","0xab948a4ae3795cbca13126e19253bdc21d3a8514":"0xad78ebc5ac6200000","0xab9ad36e5c74ce2e96399f57839431d0e79f96ab":"0x8e3f50b173c100000","0xabb2e6a72a40ba6ed908cdbcec3c5612583132fe":"0x4f2591f896a6500000","0xabc068b4979b0ea64a62d3b7aa897d73810dc533":"0x6acb3df27e1f880000","0xabc45f84db7382dde54c5f7d8938c42f4f3a3bc4":"0xad78ebc5ac6200000","0xabc4caeb474d4627cb6eb456ecba0ecd08ed8ae1":"0xd5967be4fc3f100000","0xabc74706964960dfe0dca3dca79e9216056f1cf4":"0x878678326eac9000000","0xabc9a99e8a2148a55a6d82bd51b98eb5391fdbaf":"0x14542ba12a337c00000","0xabcdbc8f1dd13af578d4a4774a62182bedf9f9be":"0x1fcc27bc459d20000","0xabd154903513b8da4f019f68284b0656a1d0169b":"0x3635c9adc5dea00000","0xabd21eff954fc6a7de26912a7cbb303a6607804e":"0x523c9aa696eb940000","0xabd4d6c1666358c0406fdf3af248f78ece830104":"0x727de34a24f9000000","0xabd9605b3e91acfd777830d16463478ae0fc7720":"0x73f75d1a085ba0000","0xabdc9f1bcf4d19ee96591030e772c334302f7d83":"0x87e5e11a81cb5f80000","0xabde147b2af789eaa586547e66c4fa2664d328a4":"0xd6b6081f34c128000","0xabe07ced6ac5ddf991eff6c3da226a741bd243fe":"0x21e19e0c9bab2400000","0xabf12fa19e82f76c718f01bdca0003674523ef30":"0x6c6b935b8bbd400000","0xabf728cf9312f22128024e7046c251f5dc5901ed":"0x641e8a13563d8f80000","0xabf8ffe0708a99b528cc1ed4e9ce4b0d0630be8c":"0x7ab5c2aeeee6380000","0xabfcf5f25091ce57875fc674dcf104e2a73dd2f2":"0x11164759ffb320000","0xabfe936425dcc7b74b955082bbaaf2a11d78bc05":"0x4be4e7267b6ae00000","0xac024f594f9558f04943618eb0e6b2ee501dc272":"0x6c6b935b8bbd400000","0xac122a03cd058c122e5fe17b872f4877f9df9572":"0x6ac5c62d9486070000","0xac142eda1157b9a9a64390df7e6ae694fac98905":"0xad78ebc5ac6200000","0xac1dfc984b71a19929a81d81f04a7cbb14073703":"0x2086ac351052600000","0xac21c1e5a3d7e0b50681679dd6c792dbca87decb":"0x152d02c7e14af6800000","0xac2889b5966f0c7f9edb42895cb69d1c04f923a2":"0x10f0cf064dd59200000","0xac28b5edea05b76f8c5f97084541277c96696a4c":"0x3635c9adc5dea00000","0xac2c8e09d06493a63858437bd20be01962450365":"0x678a932062e4180000","0xac2e766dac3f648f637ac6713fddb068e4a4f04d":"0xaadec983fcff40000","0xac3900298dd14d7cc96d4abb428da1bae213ffed":"0x53ca12974851c010000","0xac3da526cfce88297302f34c49ca520dc271f9b2":"0x2b5e3af16b18800000","0xac4460a76e6db2b9fcd152d9c7718d9ac6ed8c6f":"0xad78ebc5ac6200000","0xac4acfc36ed6094a27e118ecc911cd473e8fb91f":"0x61913e14403c0c0000","0xac4cc256ae74d624ace80db078b2207f57198f6b":"0x6c7974123f64a40000","0xac4ee9d502e7d2d2e99e59d8ca7d5f00c94b4dd6":"0x3635c9adc5dea00000","0xac52b77e15664814f39e4f271be641308d91d6cc":"0xbed1d0263d9f00000","0xac5999a89d2dd286d5a80c6dee7e86aad40f9e12":"0xd255d112e103a00000","0xac5f627231480d0d95302e6d89fc32cb1d4fe7e3":"0xad78ebc5ac6200000","0xac608e2bac9dd20728d2947effbbbf900a9ce94b":"0x1454b0db37568fc0000","0xac6d02e9a46b379fac4ac9b1d7b5d47bc850ce16":"0x5f68e8131ecf800000","0xac6f68e837cf1961cb14ab47446da168a16dde89":"0x487a9a304539440000","0xac77bdf00fd5985b5db12bbef800380abc2a0677":"0x3635c9adc5dea00000","0xac7e03702723cb16ee27e22dd0b815dc2d5cae9f":"0x3635c9adc5dea000000","0xac8b509aefea1dbfaf2bb33500d6570b6fd96d51":"0x62a992e53a0af00000","0xac8e87ddda5e78fcbcb9fa7fc3ce038f9f7d2e34":"0x6c6b935b8bbd400000","0xac9fff68c61b011efbecf038ed72db97bb9e7281":"0x205b4dfa1ee74780000","0xaca1e6bc64cc3180f620e94dc5b1bcfd8158e45d":"0x6c6b935b8bbd400000","0xaca2a838330b17302da731d30db48a04f0f207c1":"0x487a9a304539440000","0xacaaddcbf286cb0e215dda55598f7ff0f4ada5c6":"0x3635c9adc5dea00000","0xacb94338554bc488cc88ae2d9d94080d6bdf8410":"0x3635c9adc5dea00000","0xacbc2d19e06c3babbb5b6f052b6bf7fc37e07229":"0xad78ebc5ac6200000","0xacbd185589f7a68a67aa4b1bd65077f8c64e4e21":"0xad78ebc5ac6200000","0xacc062702c59615d3444ef6214b8862b009a02ed":"0x514fcb24ff9c500000","0xacc0909fda2ea6b7b7a88db7a0aac868091ddbf6":"0x133765f1e26c78000","0xacc1c78786ab4d2b3b277135b5ba123e0400486b":"0x44591d67fecc80000","0xacc46a2a555c74ded4a2bd094e821b97843b40c0":"0x692ae8897081d00000","0xacc59f3b30ceffc56461cc5b8df48902240e0e7b":"0x6c6b935b8bbd400000","0xacce01e0a70610dc70bb91e9926fa9957f372fba":"0x1d1c5f3eda20c40000","0xacd8dd91f714764c45677c63d852e56eb9eece2e":"0x6c6b935b8bbd400000","0xace2abb63b0604409fbde3e716d2876d44e8e5dd":"0x83d6c7aab63600000","0xacec91ef6941cf630ba9a3e787a012f4a2d91dd4":"0x10f0cf064dd592000000","0xad0a4ae478e9636e88c604f242cf5439c6d45639":"0xbed1d0263d9f000000","0xad1799aad7602b4540cd832f9db5f11150f1687a":"0x6c6b935b8bbd400000","0xad1d68a038fd2586067ef6d135d9628e79c2c924":"0xfe09a5279e2abc0000","0xad2a5c00f923aaf21ab9f3fb066efa0a03de2fb2":"0x3635bb77cb4b860000","0xad3565d52b688added08168b2d3872d17d0a26ae":"0x56bc75e2d63100000","0xad377cd25eb53e83ae091a0a1d2b4516f484afde":"0x692ae8897081d00000","0xad414d29cb7ee973fec54e22a388491786cf5402":"0x2f6f10780d22cc00000","0xad44357e017e244f476931c7b8189efee80a5d0a":"0x1043561a8829300000","0xad57aa9d00d10c439b35efcc0becac2e3955c313":"0xad78ebc5ac6200000","0xad59a78eb9a74a7fbdaefafa82eada8475f07f95":"0x1b1ae4d6e2ef500000","0xad5a8d3c6478b69f657db3837a2575ef8e1df931":"0x20156e104c1b30000","0xad660dec825522a9f62fcec3c5b731980dc286ea":"0xa2a15d09519be00000","0xad6628352ed3390bafa86d923e56014cfcb360f4":"0x6c6b935b8bbd400000","0xad728121873f0456d0518b80ab6580a203706595":"0x1b1ae4d6e2ef500000","0xad732c976593eec4783b4e2ecd793979780bfedb":"0x6c6b935b8bbd400000","0xad7dd053859edff1cb6f9d2acbed6dd5e332426f":"0x6acb3df27e1f880000","0xad80d865b85c34d2e6494b2e7aefea6b9af184db":"0xd8d726b7177a800000","0xad8bfef8c68a4816b3916f35cb7bfcd7d3040976":"0x878678326eac9000000","0xad8e48a377695de014363a523a28b1a40c78f208":"0x3635c9adc5dea00000","0xad910a23d6850613654af786337ad2a70868ac6d":"0x6c68ccd09b022c0000","0xad927e03d1599a78ca2bf0cad2a183dceb71eac0":"0x6acb3df27e1f880000","0xad92ca066edb7c711dfc5b166192d1edf8e77185":"0x79f905c6fd34e800000","0xad94235fc3b3f47a2413af31e884914908ef0c45":"0x1b1b0142d815840000","0xad9e97a0482f353a05c0f792b977b6c7e811fa5f":"0xad78ebc5ac6200000","0xad9f4c890a3b511cee51dfe6cfd7f1093b76412c":"0x1b767cbfeb0ce40000","0xadaa0e548c035affed64ca678a963fabe9a26bfd":"0x3cb71f51fc5580000","0xadb948b1b6fefe207de65e9bbc2de98e605d0b57":"0x6c6b935b8bbd400000","0xadc19ec835afe3e58d87dc93a8a9213c90451326":"0x6adbe5342282000000","0xadc8228ef928e18b2a807d00fb3c6c79cd1d9e96":"0x13c69df334ee80000","0xaddb26317227f45c87a2cb90dc4cfd02fb23caf8":"0x3635c9adc5dea00000","0xade6f8163bf7c7bb4abe8e9893bd0cc112fe8872":"0x11c25d004d01f80000","0xadeb204aa0c38e179e81a94ed8b3e7d53047c26b":"0x20f5b1eaad8d800000","0xadeb52b604e5f77faaac88275b8d6b49e9f9f97f":"0x71426b00956ed20000","0xadf1acfe99bc8c14b304c8d905ba27657b8a7bc4":"0x43c33c1937564800000","0xadf85203c8376a5fde9815384a350c3879c4cb93":"0x3e31fc675815aa0000","0xadff0d1d0b97471e76d789d2e49c8a74f9bd54ff":"0x65ea3db75546600000","0xae062c448618643075de7a0030342dced63dbad7":"0x2cc6cd8cc282b30000","0xae10e27a014f0d306baf266d4897c89aeee2e974":"0x43c33c1937564800000","0xae126b382cf257fad7f0bc7d16297e54cc7267da":"0x1043561a8829300000","0xae13a08511110f32e53be4127845c843a1a57c7b":"0x1b1ae4d6e2ef500000","0xae179a460db66326743d24e67523a57b246daf7f":"0x10007ae7ce5bbe40000","0xae222865799079aaf4f0674a0cdaab02a6d570ff":"0x6c6b935b8bbd400000","0xae239acffd4ebe2e1ba5b4170572dc79cc6533ec":"0x28a857425466f800000","0xae2f9c19ac76136594432393b0471d08902164d3":"0x25df05c6a897e40000","0xae34861d342253194ffc6652dfde51ab44cad3fe":"0x194608686316bd8000","0xae36f7452121913e800e0fcd1a65a5471c23846f":"0x8e3f50b173c100000","0xae3f98a443efe00f3e711d525d9894dc9a61157b":"0x1004e2e45fb7ee0000","0xae47e2609cfafe369d66d415d939de05081a9872":"0x5baecf025f9b6500000","0xae4f122e35c0b1d1e4069291457c83c07f965fa3":"0x3635c9adc5dea00000","0xae5055814cb8be0c117bb8b1c8d2b63b4698b728":"0x1bc932ec573a38000","0xae538c73c5b38d8d584d7ebdadefb15cabe48357":"0x3627e8f712373c0000","0xae57cc129a96a89981dac60d2ffb877d5dc5e432":"0x3c3a2394b396550000","0xae5aa1e6c2b60f6fd3efe721bb4a719cbe3d6f5d":"0x2b24c6b55a5e620000","0xae5c9bdad3c5c8a1220444aea5c229c1839f1d64":"0x19e2a4c818b9060000","0xae5ce3355a7ba9b332760c0950c2bc45a85fa9a0":"0x15af1d78b58c400000","0xae5d221afcd3d29355f508eadfca408ce33ca903":"0x152d02c7e14af6800000","0xae635bf73831119d2d29c0d04ff8f8d8d0a57a46":"0x487a9a304539440000","0xae648155a658370f929be384f7e001047e49dd46":"0x2df24ae32be20440000","0xae6f0c73fdd77c489727512174d9b50296611c4c":"0x14542ba12a337c00000","0xae70e69d2c4a0af818807b1a2705f79fd0b5dbc4":"0x35659ef93f0fc40000","0xae7739124ed153052503fc101410d1ffd8cd13b7":"0x3634fb9f1489a70000","0xae78bb849139a6ba38ae92a09a69601cc4cb62d1":"0x1b1ae4d6e2ef500000","0xae842210f44d14c4a4db91fc9d3b3b50014f7bf7":"0xd8d726b7177a800000","0xae842e81858ecfedf6506c686dc204ac15bf8b24":"0x22b1c8c1227a00000","0xae8954f8d6166de507cf61297d0fc7ca6b9e7128":"0x1043561a8829300000","0xae9ecd6bdd952ef497c0050ae0ab8a82a91898ce":"0x1a055690d9db80000","0xae9f5c3fbbe0c9bcbf1af8ff74ea280b3a5d8b08":"0x5dc892aa1131c80000","0xaead88d689416b1c91f2364421375b7d3c70fb2e":"0x6c6b935b8bbd400000","0xaeadfcd0978edad74a32bd01a0a51d37f246e661":"0xe18398e7601900000","0xaeb916ebf49d0f86c13f7331cef19e129937512d":"0x2085655b8d1b0a0000","0xaebd4f205de799b64b3564b256d42a711d37ef99":"0x3fcf8b4574f84e0000","0xaec27ce2133e82d052520afb5c576d9f7eb93ed2":"0xdd04120ba09cfe60000","0xaec27ff5d7f9ddda91183f46f9d52543b6cd2b2f":"0x18650127cc3dc80000","0xaee49d68adedb081fd43705a5f78c778fb90de48":"0x1158e460913d00000","0xaef5b12258a18dec07d5ec2e316574919d79d6d6":"0x6c6b935b8bbd400000","0xaefcfe88c826ccf131d54eb4ea9eb80e61e1ee25":"0x126e72a69a50d00000","0xaf06f5fa6d1214ec43967d1bd4dde74ab814a938":"0x4c53ecdc18a600000","0xaf1148ef6c8e103d7530efc91679c9ac27000993":"0xad78ebc5ac6200000","0xaf203e229d7e6d419df4378ea98715515f631485":"0x6acb3df27e1f880000","0xaf2058c7282cf67c8c3cf930133c89617ce75d29":"0x177224aa844c7200000","0xaf26f7c6bf453e2078f08953e4b28004a2c1e209":"0x56bc75e2d63100000","0xaf3087e62e04bf900d5a54dc3e946274da92423b":"0x1158e460913d00000","0xaf3614dcb68a36e45a4e911e62796247222d595b":"0x7a81065f1103bc0000","0xaf3615c789d0b1152ad4db25fe5dcf222804cf62":"0x3635c9adc5dea00000","0xaf3cb5965933e7dad883693b9c3e15beb68a4873":"0x6c6b935b8bbd400000","0xaf4493e8521ca89d95f5267c1ab63f9f45411e1b":"0xad78ebc5ac6200000","0xaf4cf41785161f571d0ca69c94f8021f41294eca":"0x215f835bc769da80000","0xaf529bdb459cc185bee5a1c58bf7e8cce25c150d":"0xaadec983fcff40000","0xaf67fd3e127fd9dc36eb3fcd6a80c7be4f7532b2":"0x5a87e7d7f5f6580000","0xaf771039345a343001bc0f8a5923b126b60d509c":"0x35659ef93f0fc40000","0xaf7f79cb415a1fb8dbbd094607ee8d41fb7c5a3b":"0x21e19e0c9bab2400000","0xaf87d2371ef378957fbd05ba2f1d66931b01e2b8":"0x25f273933db5700000","0xaf880fc7567d5595cacce15c3fc14c8742c26c9e":"0x73f75d1a085ba0000","0xaf8e1dcb314c950d3687434d309858e1a8739cd4":"0xe7eeba3410b740000","0xaf992dd669c0883e5515d3f3112a13f617a4c367":"0x6c6b935b8bbd400000","0xafa1d5ad38fed44759c05b8993c1aa0dace19f40":"0x4563918244f400000","0xafa539586e4719174a3b46b9b3e663a7d1b5b987":"0x10f0cf064dd59200000","0xafa6946effd5ff53154f82010253df47ae280ccc":"0x6acb3df27e1f880000","0xafc8ebe8988bd4105acc4c018e546a1e8f9c7888":"0x1b1ae4d6e2ef500000","0xafcc7dbb8356d842d43ae7e23c8422b022a30803":"0x66ffcbfd5e5a3000000","0xafd019ff36a09155346b69974815a1c912c90aa4":"0x6c6b935b8bbd400000","0xafdac5c1cb56e245bf70330066a817eaafac4cd1":"0x1158e460913d00000","0xafdd1b786162b8317e20f0e979f4b2ce486d765d":"0x1158e460913d00000","0xaff1045adf27a1aa329461b24de1bae9948a698b":"0x1cf84a30a0a0c0000","0xaff107960b7ec34ed690b665024d60838c190f70":"0x1b1ae4d6e2ef500000","0xaff11ccf699304d5f5862af86083451c26e79ae5":"0x6c5db2a4d815dc0000","0xaff161740a6d909fe99c59a9b77945c91cc91448":"0x340aad21b3b700000","0xaffc99d5ebb4a84fe7788d97dce274b038240438":"0x10f0cf064dd59200000","0xaffea0473722cb7f0e0e86b9e11883bf428d8d54":"0x692ae8897081d00000","0xb00996b0566ecb3e7243b8227988dcb352c21899":"0x28a857425466f800000","0xb01e389b28a31d8e4995bdd7d7c81beeab1e4119":"0x3635c9adc5dea00000","0xb02d062873334545cea29218e4057760590f7423":"0xacb6a1c7d93a880000","0xb02fa29387ec12e37f6922ac4ce98c5b09e0b00f":"0x6c6b935b8bbd400000","0xb036916bdacf94b69e5a8a65602975eb026104dd":"0x1158e460913d00000","0xb041310fe9eed6864cedd4bee58df88eb4ed3cac":"0x21e19e0c9bab2400000","0xb055af4cadfcfdb425cf65ba6431078f07ecd5ab":"0x56bc75e2d63100000","0xb0571153db1c4ed7acaefe13ecdfdb72e7e4f06a":"0x110cff796ac195200000","0xb06eab09a610c6a53d56a946b2c43487ac1d5b2d":"0x3635c9adc5dea00000","0xb07249e055044a9155359a402937bbd954fe48b6":"0x56bc75e2d63100000","0xb07618328a901307a1b7a0d058fcd5786e9e72fe":"0x667495d4a4330ce0000","0xb079bb4d9866143a6da72ae7ac0022062981315c":"0x29331e6558f0e00000","0xb07bcc085ab3f729f24400416837b69936ba8873":"0x6c6d84bccdd9ce0000","0xb07bcf1cc5d4462e5124c965ecf0d70dc27aca75":"0x56bc75e2d631000000","0xb07cb9c12405b711807543c4934465f87f98bd2d":"0x6c6b935b8bbd400000","0xb07fdeaff91d4460fe6cd0e8a1b0bd8d22a62e87":"0x11d2529f3535ab00000","0xb09fe6d4349b99bc37938054022d54fca366f7af":"0x2a5a058fc295ed000000","0xb0aa00950c0e81fa3210173e729aaf163a27cd71":"0x878678326eac9000000","0xb0ac4eff6680ee14169cdadbffdb30804f6d25f5":"0x6c6b935b8bbd400000","0xb0b36af9aeeedf97b6b02280f114f13984ea3260":"0x35659ef93f0fc40000","0xb0b779b94bfa3c2e1f587bcc9c7e21789222378f":"0x54069233bf7f780000","0xb0baeb30e313776c4c6d247402ba4167afcda1cc":"0x6acb3df27e1f880000","0xb0bb29a861ea1d424d45acd4bfc492fb8ed809b7":"0x4563918244f400000","0xb0c1b177a220e41f7c74d07cde8569c21c75c2f9":"0x12f939c99edab800000","0xb0c7ce4c0dc3c2bbb99cc1857b8a455f611711ce":"0xd8d726b7177a800000","0xb0cef8e8fb8984a6019f01c679f272bbe68f5c77":"0x83d6c7aab63600000","0xb0d32bd7e4e695b7b01aa3d0416f80557dba9903":"0x3739ff0f6e613300000","0xb0d3c9872b85056ea0c0e6d1ecf7a77e3ce6ab85":"0x10f08eda8e555098000","0xb0e469c886593815b3495638595daef0665fae62":"0x692ae8897081d00000","0xb0e760bb07c081777345e0578e8bc898226d4e3b":"0x6c6b935b8bbd400000","0xb1043004ec1941a8cf4f2b00b15700ddac6ff17e":"0x3635c9adc5dea00000","0xb105dd3d987cffd813e9c8500a80a1ad257d56c6":"0x6c6acc67d7b1d40000","0xb10fd2a647102f881f74c9fbc37da632949f2375":"0x22b1c8c1227a00000","0xb115ee3ab7641e1aa6d000e41bfc1ec7210c2f32":"0x2c0bb3dd30c4e200000","0xb1178ad47383c31c8134a1941cbcd474d06244e2":"0x3635c9adc5dea00000","0xb1179589e19db9d41557bbec1cb24ccc2dec1c7f":"0x152d02c7e14af6800000","0xb119e79aa9b916526581cbf521ef474ae84dcff4":"0x4fba1001e5befe0000","0xb11fa7fb270abcdf5a2eab95aa30c4b53636efbf":"0x2b5e3af16b18800000","0xb124bcb6ffa430fcae2e86b45f27e3f21e81ee08":"0x6c6b935b8bbd400000","0xb129a5cb7105fe810bd895dc7206a991a4545488":"0x1a055690d9db80000","0xb12ed07b8a38ad5506363fc07a0b6d799936bdaf":"0x21e19e0c9bab2400000","0xb134c004391ab4992878337a51ec242f42285742":"0x6c6b935b8bbd400000","0xb13f93af30e8d7667381b2b95bc1a699d5e3e129":"0x16c4abbebea0100000","0xb1459285863ea2db3759e546ceb3fb3761f5909c":"0x3cd72a894087e08000","0xb146a0b925553cf06fcaf54a1b4dfea621290757":"0x6c6e59e67c78540000","0xb14a7aaa8f49f2fb9a8102d6bbe4c48ae7c06fb2":"0x1b1ae4d6e2ef5000000","0xb14bbeff70720975dc6191b2a44ff49f2672873c":"0x7c0860e5a80dc0000","0xb14cc8de33d6338236539a489020ce4655a32bc6":"0x1b1ae4d6e2ef5000000","0xb14ddb0386fb606398b8cc47565afae00ff1d66a":"0xa12aff083e66f00000","0xb153f828dd076d4a7c1c2574bb2dee1a44a318a8":"0x15af1d78b58c400000","0xb1540e94cff3465cc3d187e7c8e3bdaf984659e2":"0xa215e44390e3330000","0xb158db43fa62d30e65f3d09bf781c7b67372ebaa":"0x6c5db2a4d815dc0000","0xb161725fdcedd17952d57b23ef285b7e4b1169e8":"0x2b6dfed3664958000","0xb16479ba8e7df8f63e1b95d149cd8529d735c2da":"0x2de33a6aac32548000","0xb166e37d2e501ae73c84142b5ffb5aa655dd5a99":"0x6c5db2a4d815dc0000","0xb183ebee4fcb42c220e47774f59d6c54d5e32ab1":"0x56f7a9c33c04d10000","0xb188078444027e386798a8ae68698919d5cc230d":"0xe7eeba3410b740000","0xb1896a37e5d8825a2d01765ae5de629977de8352":"0xad78ebc5ac6200000","0xb18e67a5050a1dc9fb190919a33da838ef445014":"0x1158e460913d00000","0xb1a2b43a7433dd150bb82227ed519cd6b142d382":"0x946d620d744b880000","0xb1c0d08b36e184f9952a4037e3e53a667d070a4e":"0x3635c9adc5dea00000","0xb1c328fb98f2f19ab6646f0a7c8c566fda5a8540":"0x878678326eac900000","0xb1c751786939bba0d671a677a158c6abe7265e46":"0x21e19e0c9bab2400000","0xb1cd4bdfd104489a026ec99d597307a04279f173":"0x43c33c1937564800000","0xb1cf94f8091505055f010ab4bac696e0ca0f67a1":"0x55a6e79ccd1d300000","0xb1d6b01b94d854fe8b374aa65e895cf22aa2560e":"0x32f51edbaaa3300000","0xb1dba5250ba9625755246e067967f2ad2f0791de":"0x10f0cf064dd592000000","0xb1e2dd95e39ae9775c55aeb13f12c2fa233053ba":"0x6c6b935b8bbd400000","0xb1e6e810c24ab0488de9e01e574837829f7c77d0":"0x15af1d78b58c400000","0xb1e9c5f1d21e61757a6b2ee75913fc5a1a4101c3":"0x6c6b935b8bbd400000","0xb203d29e6c56b92699c4b92d1f6f84648dc4cfbc":"0x15af1d78b58c400000","0xb216dc59e27c3d7279f5cd5bb2becfb2606e14d9":"0x15af1d78b58c400000","0xb21b7979bf7c5ca01fa82dd640b41c39e6c6bc75":"0x6c6acc67d7b1d40000","0xb223bf1fbf80485ca2b5567d98db7bc3534dd669":"0xd8d726b7177a800000","0xb22d5055d9623135961e6abd273c90deea16a3e7":"0x4be4e7267b6ae00000","0xb22dadd7e1e05232a93237baed98e0df92b1869e":"0x6c6b935b8bbd400000","0xb234035f7544463ce1e22bc553064684c513cd51":"0xd89fa3dc48dcf0000","0xb247cf9c72ec482af3eaa759658f793d670a570c":"0x31708ae00454400000","0xb2676841ee9f2d31c172e82303b0fe9bbf9f1e09":"0xad78ebc5ac6200000","0xb279c7d355c2880392aad1aa21ee867c3b3507df":"0x445be3f2ef87940000","0xb27c1a24204c1e118d75149dd109311e07c073ab":"0xa80d24677efef00000","0xb28181a458a440f1c6bb1de8400281a3148f4c35":"0x14620c57dddae00000","0xb28245037cb192f75785cb86cbfe7c930da258b0":"0x3635c9adc5dea000000","0xb287f7f8d8c3872c1b586bcd7d0aedbf7e732732":"0x1158e460913d00000","0xb28bb39f3466517cd46f979cf59653ee7d8f152e":"0x18650127cc3dc80000","0xb28dbfc6499894f73a71faa00abe0f4bc9d19f2a":"0x56bc75e2d63100000","0xb2968f7d35f208871631c6687b3f3daeabc6616c":"0x875c47f289f760000","0xb29f5b7c1930d9f97a115e067066f0b54db44b3b":"0x3635c9adc5dea00000","0xb2a144b1ea67b9510f2267f9da39d3f93de26642":"0x6c6b935b8bbd400000","0xb2a2c2111612fb8bbb8e7dd9378d67f1a384f050":"0x1158e460913d00000","0xb2a498f03bd7178bd8a789a00f5237af79a3e3f8":"0x41bad155e6512200000","0xb2aa2f1f8e93e79713d92cea9ffce9a40af9c82d":"0x6c6b935b8bbd400000","0xb2b516fdd19e7f3864b6d2cf1b252a4156f1b03b":"0x2e983c76115fc0000","0xb2b7cdb4ff4b61d5b7ce0b2270bbb5269743ec04":"0x6c6b935b8bbd400000","0xb2bdbedf95908476d7148a370cc693743628057f":"0xd8d726b7177a800000","0xb2bfaa58b5196c5cb7f89de15f479d1838de713d":"0x1236efcbcbb340000","0xb2c53efa33fe4a3a1a80205c73ec3b1dbcad0602":"0x6801dab35918938000","0xb2d0360515f17daba90fcbac8205d569b915d6ac":"0x14542ba12a337c00000","0xb2d1e99af91231858e7065dd1918330dc4c747d5":"0x3894f0e6f9b9f700000","0xb2d9ab9664bcf6df203c346fc692fd9cbab9205e":"0x17be78976065180000","0xb2ddb786d3794e270187d0451ad6c8b79e0e8745":"0x15af1d78b58c400000","0xb2e085fddd1468ba07415b274e734e11237fb2a9":"0x56bc75e2d63100000","0xb2e9d76bf50fc36bf7d3944b63e9ca889b699968":"0x9032ea62b74b100000","0xb2f9c972c1e9737755b3ff1b3088738396395b26":"0x43c33c1937564800000","0xb2fc84a3e50a50af02f94da0383ed59f71ff01d7":"0x65a4da25d3016c00000","0xb3050beff9de33c80e1fa15225e28f2c413ae313":"0x25f273933db5700000","0xb31196714a48dff726ea9433cd2912f1a414b3b3":"0x914878a8c05ee00000","0xb3145b74506d1a8d047cdcdc55392a7b5350799a":"0x1b6229741c0d3d5d8000","0xb320834836d1dbfda9e7a3184d1ad1fd4320ccc0":"0x3635c9adc5dea00000","0xb323dcbf2eddc5382ee4bbbb201ca3931be8b438":"0x6c6b935b8bbd400000","0xb32400fd13c5500917cb037b29fe22e7d5228f2d":"0x878678326eac9000000","0xb325674c01e3f7290d5226339fbeac67d221279f":"0x97c9ce4cf6d5c00000","0xb32825d5f3db249ef4e85cc4f33153958976e8bc":"0x1b2df9d219f5798000","0xb32af3d3e8d075344926546f2e32887bf93b16bd":"0xad78ebc5ac6200000","0xb32f1c2689a5ce79f1bc970b31584f1bcf2283e7":"0x1158e460913d00000","0xb33c0323fbf9c26c1d8ac44ef74391d0804696da":"0x1158e460913d00000","0xb34f04b8db65bba9c26efc4ce6efc50481f3d65d":"0x43c33c1937564800000","0xb3557d39b5411b84445f5f54f38f62d2714d0087":"0x2086ac351052600000","0xb358e97c70b605b1d7d729dfb640b43c5eafd1e7":"0x43c33c1937564800000","0xb35e8a1c0dac7e0e66dbac736a592abd44012561":"0xcfce55aa12b30000","0xb3667894b7863c068ad344873fcff4b5671e0689":"0x43c33c1937564800000","0xb3717731dad65132da792d876030e46ac227bb8a":"0x3635c9adc5dea00000","0xb3731b046c8ac695a127fd79d0a5d5fa6ae6d12e":"0x6c4fd1ee246e780000","0xb37c2b9f50637bece0ca959208aefee6463ba720":"0x15af1d78b58c400000","0xb388b5dfecd2c5e4b596577c642556dbfe277855":"0x1158e460913d00000","0xb38c4e537b5df930d65a74d043831d6b485bbde4":"0x15af1d78b58c400000","0xb39139576194a0866195151f33f2140ad1cc86cf":"0x152d02c7e14af6800000","0xb39f4c00b2630cab7db7295ef43d47d501e17fd7":"0xd8d726b7177a800000","0xb3a64b1176724f5409e1414a3523661baee74b4a":"0x16368ff4ff9c10000","0xb3a6bd41f9d9c3201e050b87198fbda399342210":"0xc461e1dd1029b58000","0xb3a8c2cb7d358e5739941d945ba9045a023a8bbb":"0x3635c9adc5dea00000","0xb3ae54fba09d3ee1d6bdd1e957923919024c35fa":"0x38d2cee65b22a8000","0xb3b7f493b44a2c8d80ec78b1cdc75a652b73b06c":"0x6c6b935b8bbd400000","0xb3c228731d186d2ded5b5fbe004c666c8e469b86":"0x19274b259f6540000","0xb3c260609b9df4095e6c5dff398eeb5e2df49985":"0xdc55fdb17647b0000","0xb3c65b845aba6cd816fbaae983e0e46c82aa8622":"0x3635c9adc5dea00000","0xb3c94811e7175b148b281c1a845bfc9bb6fbc115":"0xad78ebc5ac6200000","0xb3e20eb4de18bd060221689894bee5aeb25351ee":"0x3fc80cce516598000","0xb3e3c439069880156600c2892e448d4136c92d9b":"0x2e141ea081ca080000","0xb3f82a87e59a39d0d2808f0751eb72c2329cdcc5":"0x10f0cf064dd59200000","0xb3fc1d6881abfcb8becc0bb021b8b73b7233dd91":"0x2b5e3af16b1880000","0xb40594c4f3664ef849cca6227b8a25aa690925ee":"0xd8d726b7177a800000","0xb41eaf5d51a5ba1ba39bb418dbb54fab750efb1f":"0x3635c9adc5dea00000","0xb424d68d9d0d00cec1938c854e15ffb880ba0170":"0xad78ebc5ac6200000","0xb4256273962bf631d014555cc1da0dcc31616b49":"0x6c6b935b8bbd400000","0xb43067fe70d9b55973ba58dc64dd7f311e554259":"0xad78ebc5ac6200000","0xb43657a50eecbc3077e005d8f8d94f377876bad4":"0x1ec1b3a1ff75a0000","0xb43c27f7a0a122084b98f483922541c8836cee2c":"0x26c29e47c4844c0000","0xb4413576869c08f9512ad311fe925988a52d3414":"0x21e19e0c9bab2400000","0xb44605552471a6eee4daab71ff3bb41326d473e0":"0x2d7e3d51ba53d00000","0xb447571dacbb3ecbb6d1cf0b0c8f3838e52324e2":"0x1a318667fb4058000","0xb44783c8e57b480793cbd69a45d90c7b4f0c48ac":"0x1158e460913d00000","0xb44815a0f28e569d0e921a4ade8fb2642526497a":"0x302379bf2ca2e0000","0xb4496ddb27799a222457d73979116728e8a1845b":"0x8d819ea65fa62f8000","0xb4524c95a7860e21840296a616244019421c4aba":"0x1b1ae4d6e2ef5000000","0xb45cca0d36826662683cf7d0b2fdac687f02d0c4":"0x3635c9adc5dea00000","0xb46440c797a556e04c7d9104660491f96bb076bf":"0xcec76f0e71520000","0xb46ace865e2c50ea4698d216ab455dff5a11cd72":"0x3635c9adc5dea00000","0xb46d1182e5aacaff0d26b2fcf72f3c9ffbcdd97d":"0xaa2a603cdd7f2c0000","0xb48921c9687d5510744584936e8886bdbf2df69b":"0x3635c9adc5dea00000","0xb498bb0f520005b6216a4425b75aa9adc52d622b":"0xd8d726b7177a800000","0xb4b11d109f608fa8edd3fea9f8c315649aeb3d11":"0x10f0cf064dd59200000","0xb4b14bf45455d0ab0803358b7524a72be1a2045b":"0x1b1ae4d6e2ef500000","0xb4b185d943ee2b58631e33dff5af6854c17993ac":"0x3635c9adc5dea00000","0xb4bf24cb83686bc469869fefb044b909716993e2":"0x6c6b935b8bbd400000","0xb4c20040ccd9a1a3283da4d4a2f365820843d7e2":"0x3635c9adc5dea00000","0xb4c8170f7b2ab536d1d9a25bdd203ae1288dc3d5":"0xad78ebc5ac6200000","0xb4d82f2e69943f7de0f5f7743879406fac2e9cec":"0x22b1c8c1227a00000","0xb4dd460cd016725a64b22ea4f8e06e06674e033e":"0x1231bb8748547a80000","0xb4dd5499daeb2507fb2de12297731d4c72b16bb0":"0x1158e460913d00000","0xb5046cb3dc1dedbd364514a2848e44c1de4ed147":"0x37b7d9bb820405e0000","0xb508f987b2de34ae4cf193de85bff61389621f88":"0x14542ba12a337c00000","0xb50955aa6e341571986608bdc891c2139f540cdf":"0x6acb3df27e1f880000","0xb50c149a1906fad2786ffb135aab501737e9e56f":"0x150894e849b3900000","0xb50c9f5789ae44e2dce017c714caf00c830084c2":"0x155bd9307f9fe80000","0xb514882c979bb642a80dd38754d5b8c8296d9a07":"0x33c5499031720c0000","0xb51ddcb4dd4e8ae6be336dd9654971d9fec86b41":"0x16d464f83de2948000","0xb51e558eb5512fbcfa81f8d0bd938c79ebb5242b":"0x26c29e47c4844c0000","0xb523fff9749871b35388438837f7e6e0dea9cb6b":"0x6c6b935b8bbd400000","0xb52dfb45de5d74e3df208332bc571c809b8dcf32":"0x14542ba12a337c00000","0xb535f8db879fc67fec58824a5cbe6e5498aba692":"0x678a932062e4180000","0xb537d36a70eeb8d3e5c80de815225c1158cb92c4":"0x5150ae84a8cdf00000","0xb53bcb174c2518348b818aece020364596466ba3":"0x6c6b935b8bbd400000","0xb5493ef173724445cf345c035d279ba759f28d51":"0x1158e460913d00000","0xb553d25d6b5421e81c2ad05e0b8ba751f8f010e3":"0x6c6b935b8bbd400000","0xb55474ba58f0f2f40e6cbabed4ea176e011fcad6":"0x6acb3df27e1f880000","0xb555d00f9190cc3677aef314acd73fdc39399259":"0x6c6b935b8bbd400000","0xb557ab9439ef50d237b553f02508364a466a5c03":"0xad78ebc5ac6200000","0xb56a780028039c81caf37b6775c620e786954764":"0x6c6b935b8bbd400000","0xb56ad2aec6c8c3f19e1515bbb7dd91285256b639":"0x3635c9adc5dea00000","0xb57413060af3f14eb479065f1e9d19b3757ae8cc":"0x22b1c8c1227a00000","0xb57549bfbc9bdd18f736b22650e48a73601fa65c":"0x182d7e4cfda0380000","0xb577b6befa054e9c040461855094b002d7f57bd7":"0x1823f3cf621d23400000","0xb57b04fa23d1203fae061eac4542cb60f3a57637":"0xa5aa85009e39c0000","0xb5870ce342d43343333673038b4764a46e925f3e":"0x3635c9adc5dea00000","0xb587b44a2ca79e4bc1dd8bfdd43a207150f2e7e0":"0x222c8eb3ff66400000","0xb589676d15a04448344230d4ff27c95edf122c49":"0x3635c9adc5dea00000","0xb58b52865ea55d8036f2fab26098b352ca837e18":"0xfc936392801c0000","0xb5906b0ae9a28158e8ac550e39da086ee3157623":"0xad78ebc5ac6200000","0xb5a4679685fa14196c2e9230c8c4e33bffbc10e2":"0x4be4e7267b6ae00000","0xb5a589dd9f4071dbb6fba89b3f5d5dae7d96c163":"0x6c6b935b8bbd400000","0xb5a606f4ddcbb9471ec67f658caf2b00ee73025e":"0xea756ea92afc740000","0xb5ad5157dda921e6bafacd9086ae73ae1f611d3f":"0x6c6b935b8bbd400000","0xb5add1e7809f7d03069bfe883b0a932210be8712":"0x3635c9adc5dea00000","0xb5ba29917c78a1d9e5c5c713666c1e411d7f693a":"0xa80d24677efef00000","0xb5c816a8283ca4df68a1a73d63bd80260488df08":"0xad78ebc5ac6200000","0xb5cac5ed03477d390bb267d4ebd46101fbc2c3da":"0xaadec983fcff40000","0xb5cdbc4115406f52e5aa85d0fea170d2979cc7ba":"0x487a9a304539440000","0xb5d9934d7b292bcf603b2880741eb760288383a0":"0xe7c2518505060000","0xb5dd50a15da34968890a53b4f13fe1af081baaaa":"0xd8d726b7177a800000","0xb5fa8184e43ed3e0b8ab91216461b3528d84fd09":"0x914878a8c05ee00000","0xb5fb7ea2ddc1598b667a9d57dd39e85a38f35d56":"0x1b1ae4d6e2ef500000","0xb600429752f399c80d0734744bae0a022eca67c6":"0x1158e460913d00000","0xb600feab4aa96c537504d96057223141692c193a":"0x15af1d78b58c400000","0xb6047cdf932db3e4045f4976122341537ed5961e":"0x1158e460913d00000","0xb615e940143eb57f875893bc98a61b3d618c1e8c":"0x1158e460913d00000","0xb61c34fcacda701a5aa8702459deb0e4ae838df8":"0x7695a92c20d6fe00000","0xb63064bd3355e6e07e2d377024125a33776c4afa":"0x8375a2abcca24400000","0xb635a4bc71fb28fdd5d2c322983a56c284426e69":"0x93739534d28680000","0xb646df98b49442746b61525c81a3b04ba3106250":"0x6acb3df27e1f880000","0xb65941d44c50d24666670d364766e991c02e11c2":"0x2086ac351052600000","0xb65bd780c7434115162027565223f44e5498ff8c":"0x43c30fb0884a96c0000","0xb66411e3a02dedb726fa79107dc90bc1cae64d48":"0x6c6b935b8bbd400000","0xb66675142e3111a1c2ea1eb2419cfa42aaf7a234":"0x3635c9adc5dea00000","0xb66f92124b5e63035859e390628869dbdea9485e":"0x215f835bc769da80000","0xb672734afcc224e2e609fc51d4f059732744c948":"0x1004e2e45fb7ee0000","0xb6771b0bf3427f9ae7a93e7c2e61ee63941fdb08":"0x3fb26692954bfc00000","0xb67a80f170197d96cdcc4ab6cba627b4afa6e12c":"0x821ab0d44149800000","0xb68899e7610d4c93a23535bcc448945ba1666f1c":"0xad78ebc5ac6200000","0xb6a82933c9eadabd981e5d6d60a6818ff806e36b":"0x15af1d78b58c400000","0xb6aacb8cb30bab2ae4a2424626e6e12b02d04605":"0x1b1ae4d6e2ef5000000","0xb6b34a263f10c3d2eceb0acc559a7b2ab85ce565":"0xd8d726b7177a800000","0xb6bfe1c3ef94e1846fb9e3acfe9b50c3e9069233":"0x6c6acc67d7b1d40000","0xb6cd7432d5161be79768ad45de3e447a07982063":"0xd8d726b7177a800000","0xb6ce4dc560fc73dc69fb7a62e388db7e72ea764f":"0x345df169e9a3580000","0xb6decf82969819ba02de29b9b593f21b64eeda0f":"0x281d901f4fdd100000","0xb6e6c3222b6b6f9be2875d2a89f127fb64100fe2":"0x1b21d5323cc30200000","0xb6e8afd93dfa9af27f39b4df06076710bee3dfab":"0x15af1d78b58c40000","0xb6f78da4f4d041b3bc14bc5ba519a5ba0c32f128":"0x247dd32c3fe195048000","0xb6fb39786250081426a342c70d47ee521e5bc563":"0x32d26d12e980b600000","0xb70dba9391682b4a364e77fe99256301a6c0bf1f":"0xad78ebc5ac6200000","0xb71623f35107cf7431a83fb3d204b29ee0b1a7f4":"0x11164759ffb320000","0xb71a13ba8e95167b80331b52d69e37054fe7a826":"0xad78ebc5ac6200000","0xb71b62f4b448c02b1201cb5e394ae627b0a560ee":"0x1b1ae4d6e2ef500000","0xb72220ade364d0369f2d2da783ca474d7b9b34ce":"0x1b1ab319f5ec750000","0xb7230d1d1ff2aca366963914a79df9f7c5ea2c98":"0x1b1ae4d6e2ef5000000","0xb7240af2af90b33c08ae9764103e35dce3638428":"0x1cadd2fe9686e638000","0xb727a9fc82e1cffc5c175fa1485a9befa2cdbdd1":"0x3627e8f712373c0000","0xb72c2a011c0df50fbb6e28b20ae1aad217886790":"0xd8d726b7177a800000","0xb7382d37db0398ac72410cf9813de9f8e1ec8dad":"0x3636c25e66ece70000","0xb73b4ff99eb88fd89b0b6d57a9bc338e886fa06a":"0x1bc16d674ec800000","0xb73d6a77559c86cf6574242903394bacf96e3570":"0x4f1a77ccd3ba00000","0xb74372dbfa181dc9242f39bf1d3731dffe2bdacf":"0x6c6b935b8bbd400000","0xb7479dab5022c4d5dbaaf8de171b4e951dd1a457":"0x4563918244f400000","0xb749b54e04d5b19bdcedfb84da7701ab478c27ae":"0x914878a8c05ee00000","0xb74ed2666001c16333cf7af59e4a3d4860363b9c":"0xa7ebd5e4363a00000","0xb75149e185f6e3927057739073a1822ae1cf0df2":"0xd8d8583fa2d52f0000","0xb753a75f9ed10b21643a0a3dc0517ac96b1a4068":"0x15c8185b2c1ff40000","0xb756ad52f3bf74a7d24c67471e0887436936504c":"0x43c33c1937564800000","0xb7576e9d314df41ec5506494293afb1bd5d3f65d":"0x1158e460913d00000","0xb758896f1baa864f17ebed16d953886fee68aae6":"0x3635c9adc5dea00000","0xb768b5234eba3a9968b34d6ddb481c8419b3655d":"0xcfce55aa12b30000","0xb782bfd1e2de70f467646f9bc09ea5b1fcf450af":"0xe7eeba3410b740000","0xb7a2c103728b7305b5ae6e961c94ee99c9fe8e2b":"0xa968163f0a57b400000","0xb7a31a7c38f3db09322eae11d2272141ea229902":"0x6c6b935b8bbd400000","0xb7a6791c16eb4e2162f14b6537a02b3d63bfc602":"0x2a526391ac93760000","0xb7a7f77c348f92a9f1100c6bd829a8ac6d7fcf91":"0x62a992e53a0af00000","0xb7c077946674ba9341fb4c747a5d50f5d2da6415":"0x3635c9adc5dea00000","0xb7c0d0cc0b4d342d4062bac624ccc3c70cc6da3f":"0xd8d726b7177a800000","0xb7c9f12b038e73436d17e1c12ffe1aeccdb3f58c":"0x1d460162f516f00000","0xb7cc6b1acc32d8b295df68ed9d5e60b8f64cb67b":"0x1043561a8829300000","0xb7ce684b09abda53389a875369f71958aeac3bdd":"0x6c6b935b8bbd400000","0xb7d12e84a2e4c4a6345af1dd1da9f2504a2a996e":"0xad78ebc5ac6200000","0xb7d252ee9402b0eef144295f0e69f0db586c0871":"0x23c757072b8dd00000","0xb7d581fe0af1ec383f3b3c416783f385146a7612":"0x43c33c1937564800000","0xb7f67314cb832e32e63b15a40ce0d7ffbdb26985":"0x398279264a818d0000","0xb8040536958d5998ce4bec0cfc9c2204989848e9":"0x52ea70d498fd50a0000","0xb8310a16cc6abc465007694b930f978ece1930bd":"0x281d901f4fdd100000","0xb834acf3015322c58382eeb2b79638906e88b6de":"0x5150ae84a8cdf000000","0xb84b53d0bb125656cddc52eb852ab71d7259f3d5":"0x3635c9adc5dea000000","0xb84c8b9fd33ece00af9199f3cf5fe0cce28cd14a":"0xcf152640c5c8300000","0xb85218f342f8012eda9f274e63ce2152b2dcfdab":"0xa80d24677efef00000","0xb8555010776e3c5cb311a5adeefe9e92bb9a64b9":"0xd8d726b7177a800000","0xb85f26dd0e72d9c29ebaf697a8af77472c2b58b5":"0x28519acc7190c700000","0xb85ff03e7b5fc422981fae5e9941dacbdaba7584":"0x487a9a304539440000","0xb86607021b62d340cf2652f3f95fd2dc67698bdf":"0x10f0cf064dd59200000","0xb87de1bcd29269d521b8761cc39cfb4319d2ead5":"0x3635c9adc5dea00000","0xb87f5376c2de0b6cc3c179c06087aa473d6b4674":"0x487a9a304539440000","0xb884add88d83dc564ab8e0e02cbdb63919aea844":"0x6c6b935b8bbd400000","0xb88a37c27f78a617d5c091b7d5b73a3761e65f2a":"0x6c6b935b8bbd400000","0xb8947822d5ace7a6ad8326e95496221e0be6b73d":"0x1158e460913d00000","0xb89c036ed7c492879921be41e10ca1698198a74c":"0x62a992e53a0af00000","0xb89f4632df5909e58b2a9964f74feb9a3b01e0c5":"0x48875bcc6e7cbeb8000","0xb8a79c84945e47a9c3438683d6b5842cff7684b1":"0x6c6b935b8bbd400000","0xb8a979352759ba09e35aa5935df175bff678a108":"0x1158e460913d00000","0xb8ab39805bd821184f6cbd3d2473347b12bf175c":"0x6685ac1bfe32c0000","0xb8ac117d9f0dba80901445823c4c9d4fa3fedc6e":"0x3564c4427a8fc7d8000","0xb8bc9bca7f71b4ed12e620438d620f53c114342f":"0x1b1ae4d6e2ef500000","0xb8bedd576a4b4c2027da735a5bc3f533252a1808":"0x6c6b935b8bbd400000","0xb8c2703d8c3f2f44c584bc10e7c0a6b64c1c097e":"0x12cddb8ead6f9f80000","0xb8cc0f060aad92d4eb8b36b3b95ce9e90eb383d7":"0x1fc3842bd1f071c00000","0xb8d2ddc66f308c0158ae3ccb7b869f7d199d7b32":"0x2dcbf4840eca000000","0xb8d389e624a3a7aebce4d3e5dbdf6cdc29932aed":"0xad78ebc5ac6200000","0xb8d531a964bcea13829620c0ced72422dadb4cca":"0x93715cc5ab8a70000","0xb8d5c324a8209d7c8049d0d4aede02ba80ab578b":"0x393928629fff75e8000","0xb8f20005b61352ffa7699a1b52f01f5ab39167f1":"0x21e19e0c9bab2400000","0xb8f30758faa808dbc919aa7b425ec922b93b8129":"0x3636d7af5ec98e0000","0xb9013c51bd078a098fae05bf2ace0849c6be17a5":"0x4563918244f400000","0xb9144b677c2dc614ceefdf50985f1183208ea64c":"0x6c6b935b8bbd400000","0xb916b1a01cdc4e56e7657715ea37e2a0f087d106":"0x826e3181e027068000","0xb91d9e916cd40d193db60e79202778a0087716fc":"0x15f1ba7f4716200000","0xb9231eb26e5f9e4b4d288f03906704fab96c87d6":"0x42bf06b78ed3b500000","0xb92427ad7578b4bfe20a9f63a7c5506d5ca12dc8":"0x6c6b935b8bbd400000","0xb927abd2d28aaaa24db31778d27419df8e1b04bb":"0x17e11c2a26f478000","0xb94d47b3c052a5e50e4261ae06a20f45d8eee297":"0x6c6b935b8bbd400000","0xb95396daaa490df2569324fcc6623be052f132ca":"0x6c6b935b8bbd400000","0xb959dce02e91d9db02b1bd8b7d17a9c41a97af09":"0x1b1ae4d6e2ef5000000","0xb95c9b10aa981cf4a67a71cc52c504dee8cf58bd":"0xd8d726b7177a800000","0xb95cfda8465ba9c2661b249fc3ab661bdfa35ff0":"0x114a4e79a2c2108000","0xb96841cabbc7dbd69ef0cf8f81dff3c8a5e21570":"0x28a857425466f800000","0xb97a6733cd5fe99864b3b33460d1672434d5cafd":"0x6c65bbaa46c2cf8000","0xb981ad5e6b7793a23fc6c1e8692eb2965d18d0da":"0x21e18d2c821c7520000","0xb98ca31785ef06be49a1e47e864f60d076ca472e":"0xd8d726b7177a800000","0xb9920fd0e2c735c256463caa240fb7ac86a93dfa":"0x5f68e8131ecf800000","0xb992a967308c02b98af91ee760fd3b6b4824ab0e":"0x6c6b935b8bbd400000","0xb9a985501ee950829b17fae1c9cf348c3156542c":"0xff17517ca9a620000","0xb9b0a3219a3288d9b35b091b14650b8fe23dce2b":"0x2f6f10780d22cc00000","0xb9cf71b226583e3a921103a5316f855a65779d1b":"0x5150ae84a8cdf000000","0xb9e90c1192b3d5d3e3ab0700f1bf655f5dd4347a":"0x1b19e50b44977c0000","0xb9fd3833e88e7cf1fa9879bdf55af4b99cd5ce3f":"0x3635c9adc5dea00000","0xba0249e01d945bef93ee5ec61925e03c5ca509fd":"0xd8d726b7177a800000","0xba0f39023bdb29eb1862a9f9059cab5d306e662f":"0x6c6b935b8bbd400000","0xba10f2764290f875434372f79dbf713801caac01":"0x33c5499031720c0000","0xba1531fb9e791896bcf3a80558a359f6e7c144bd":"0xd5967be4fc3f100000","0xba176dbe3249e345cd4fa967c0ed13b24c47e586":"0x15aef9f1c31c7f0000","0xba1f0e03cb9aa021f4dcebfa94e5c889c9c7bc9e":"0x6d190c475169a200000","0xba1fcaf223937ef89e85675503bdb7ca6a928b78":"0x22b1c8c1227a000000","0xba24fc436753a739db2c8d40e6d4d04c528e86fa":"0x2c0bb3dd30c4e200000","0xba42f9aace4c184504abf5425762aca26f71fbdc":"0x207077dd8a79c0000","0xba469aa5c386b19295d4a1b5473b540353390c85":"0x6c6b935b8bbd400000","0xba6440aeb3737b8ef0f1af9b0c15f4c214ffc7cf":"0x3635c9adc5dea00000","0xba6d31b9a261d640b5dea51ef2162c3109f1eba8":"0x10f0cf064dd59200000","0xba70e8b4759c0c3c82cc00ac4e9a94dd5bafb2b8":"0x3043fa33c412d70000","0xba8a63f3f40de4a88388bc50212fea8e064fbb86":"0x6c6b935b8bbd400000","0xba8e46d69d2e2343d86c60d82cf42c2041a0c1c2":"0x56bc75e2d63100000","0xbaa4b64c2b15b79f5f204246fd70bcbd86e4a92a":"0x1b1ae4d6e2ef500000","0xbac8922c4acc7d2cb6fd59a14eb45cf3e702214b":"0x2b5e3af16b18800000","0xbad235d5085dc7b068a67c412677b03e1836884c":"0x6c6b935b8bbd400000","0xbad4425e171c3e72975eb46ac0a015db315a5d8f":"0x6c6b935b8bbd400000","0xbadc2aef9f5951a8d78a6b35c3d0b3a4e6e2e739":"0x14542ba12a337c00000","0xbade43599e02f84f4c3014571c976b13a36c65ab":"0xd8d726b7177a800000","0xbae9b82f7299631408659dd74e891cb8f3860fe5":"0x6acb3df27e1f880000","0xbb0366a7cfbd3445a70db7fe5ae34885754fd468":"0x14def2c42ebd6400000","0xbb076aac92208069ea318a31ff8eeb14b7e996e3":"0x813ca56906d340000","0xbb0857f1c911b24b86c8a70681473fe6aaa1cce2":"0x56bc75e2d63100000","0xbb19bf91cbad74cceb5f811db27e411bc2ea0656":"0xf43fc2c04ee00000","0xbb27c6a7f91075475ab229619040f804c8ec7a6a":"0x21e19e0c9bab2400000","0xbb371c72c9f0316cea2bd9c6fbb4079e775429ef":"0x5f68e8131ecf800000","0xbb3b010b18e6e2be1135871026b7ba15ea0fde24":"0x2207c80309b77700000","0xbb3b9005f46fd2ca3b30162599928c77d9f6b601":"0x1b1ae7f2b1bf7db0000","0xbb3fc0a29c034d710812dcc775c8cab9d28d6975":"0x39d4e844d1cf5f0000","0xbb48eaf516ce2dec3e41feb4c679e4957641164f":"0xcf152640c5c8300000","0xbb4b4a4b548070ff41432c9e08a0ca6fa7bc9f76":"0x2e141ea081ca080000","0xbb56a404723cff20d0685488b05a02cdc35aacaa":"0x1158e460913d00000","0xbb618e25221ad9a740b299ed1406bc3934b0b16d":"0x3635c9adc5dea00000","0xbb61a04bffd57c10470d45c39103f64650347616":"0x3635c9adc5dea00000","0xbb6823a1bd819f13515538264a2de052b4442208":"0x16368ff4ff9c10000","0xbb6c284aac8a69b75cddb00f28e145583b56bece":"0x6c6b935b8bbd400000","0xbb75cb5051a0b0944b4673ca752a97037f7c8c15":"0xad78ebc5ac6200000","0xbb993b96ee925ada7d99d786573d3f89180ce3aa":"0x6c6b935b8bbd400000","0xbba3c68004248e489573abb2743677066b24c8a7":"0x6c6b935b8bbd400000","0xbba4fac3c42039d828e742cde0efffe774941b39":"0x6c6ad382d4fb610000","0xbba8ab22d2fedbcfc63f684c08afdf1c175090b5":"0x55f29f37e4e3b8000","0xbba976f1a1215f7512871892d45f7048acd356c8":"0x6c6b935b8bbd400000","0xbbab000b0408ed015a37c04747bc461ab14e151b":"0x14542ba12a337c00000","0xbbabf6643beb4bd01c120bd0598a0987d82967d1":"0xb5328178ad0f2a0000","0xbbb4ee1d82f2e156442cc93338a2fc286fa28864":"0x4a4491bd6dcd280000","0xbbb5a0f4802c8648009e8a6998af352cde87544f":"0x52d542804f1ce0000","0xbbb643d2187b364afc10a6fd368d7d55f50d1a3c":"0x3635c9adc5dea00000","0xbbb8ffe43f98de8eae184623ae5264e424d0b8d7":"0x5d53ffde928080000","0xbbbd6ecbb5752891b4ceb3cce73a8f477059376f":"0x1f399b1438a100000","0xbbbf39b1b67995a42241504f9703d2a14a515696":"0x55a6e79ccd1d300000","0xbbc8eaff637e94fcc58d913c7770c88f9b479277":"0xad78ebc5ac6200000","0xbbc9d8112e5beb02dd29a2257b1fe69b3536a945":"0x6c6b935b8bbd400000","0xbbca65b3266ea2fb73a03f921635f912c7bede00":"0x6acb3df27e1f880000","0xbbf84292d954acd9e4072fb860b1504106e077ae":"0x5150ae84a8cdf00000","0xbbf85aaaa683738f073baef44ac9dc34c4c779ea":"0x6c6b935b8bbd400000","0xbbf8616d97724af3def165d0e28cda89b800009a":"0x62ef12e2b17618000","0xbbfe0a830cace87b7293993a7e9496ce64f8e394":"0x14542ba12a337c00000","0xbc0ca4f217e052753614d6b019948824d0d8688b":"0x15af1d78b58c400000","0xbc0e8745c3a549445c2be900f52300804ab56289":"0x7029bf5dd4c53b28000","0xbc0f98598f88056a26339620923b8f1eb074a9fd":"0xad78ebc5ac6200000","0xbc1609d685b76b48ec909aa099219022f89b2ccd":"0x40138b917edfb80000","0xbc171e53d17ac9b61241ae436deec7af452e7496":"0x121ea68c114e5100000","0xbc1b021a78fde42d9b5226d6ec26e06aa3670090":"0x4563918244f400000","0xbc1e80c181616342ebb3fb3992072f1b28b802c6":"0xd8d726b7177a800000","0xbc237148d30c13836ffa2cad520ee4d2e5c4eeff":"0x6acb3df27e1f880000","0xbc46d537cf2edd403565bde733b2e34b215001bd":"0x43c33c1937564800000","0xbc4e471560c99c8a2a4b1b1ad0c36aa6502b7c4b":"0x28a857425466f800000","0xbc62b3096a91e7dc11a1592a293dd2542150d751":"0x3635c9adc5dea00000","0xbc69a0d2a31c3dbf7a9122116901b2bdfe9802a0":"0xa2a15d09519be00000","0xbc6b58364bf7f1951c309e0cba0595201cd73f9a":"0x62401a457e45f80000","0xbc73f7b1ca3b773b34249ada2e2c8a9274cc17c2":"0x6c6b935b8bbd400000","0xbc7afc8477412274fc265df13c054473427d43c6":"0x70c95920ce3250000","0xbc967fe4418c18b99858966d870678dca2b88879":"0x1d9cbdd8d7ed2100000","0xbc999e385c5aebcac8d6f3f0d60d5aa725336d0d":"0x6c6b935b8bbd400000","0xbc9c95dfab97a574cea2aa803b5caa197cef0cff":"0x16c4abbebea0100000","0xbc9e0ec6788f7df4c7fc210aacd220c27e45c910":"0x1b1ae4d6e2ef500000","0xbca3ffd4683fba0ad3bbc90734b611da9cfb457e":"0xad78ebc5ac6200000","0xbcaed0acb6a76f113f7c613555a2c3b0f5bf34a5":"0xa7ebd5e4363a00000","0xbcaf347918efb2d63dde03e39275bbe97d26df50":"0x56bc75e2d63100000","0xbcb422dc4dd2aae94abae95ea45dd1731bb6b0ba":"0x18424f5f0b1b4e0000","0xbcbd31252ec288f91e298cd812c92160e738331a":"0x6b1bc2cac09a590000","0xbcbf6ba166e2340db052ea23d28029b0de6aa380":"0xd255d112e103a00000","0xbcc84597b91e73d5c5b4d69c80ecf146860f779a":"0xed70b5e9c3f2f00000","0xbcc9593b2da6df6a34d71b1aa38dacf876f95b88":"0x1158e460913d00000","0xbcd95ef962462b6edfa10fda87d72242fe3edb5c":"0x121d06e12fff988000","0xbcd99edc2160f210a05e3a1fa0b0434ced00439b":"0x6c6b935b8bbd400000","0xbcdfacb9d9023c3417182e9100e8ea1d373393a3":"0x3342d60dff1960000","0xbce13e22322acfb355cd21fd0df60cf93add26c6":"0xad78ebc5ac6200000","0xbce40475d345b0712dee703d87cd7657fc7f3b62":"0x1a420db02bd7d580000","0xbcedc4267ccb89b31bb764d7211171008d94d44d":"0xad78ebc5ac6200000","0xbcfc98e5c82b6adb180a3fcb120b9a7690c86a3f":"0x6acb3df27e1f880000","0xbd043b67c63e60f841ccca15b129cdfe6590c8e3":"0xad78ebc5ac6200000","0xbd047ff1e69cc6b29ad26497a9a6f27a903fc4dd":"0x2ee449550898e40000","0xbd08e0cddec097db7901ea819a3d1fd9de8951a2":"0x1158e460913d00000","0xbd09126c891c4a83068059fe0e15796c4661a9f4":"0x2b5e3af16b18800000","0xbd0c5cd799ebc48642ef97d74e8e429064fee492":"0x11ac28a8c729580000","0xbd17eed82b9a2592019a1b1b3c0fbad45c408d22":"0xd8d726b7177a80000","0xbd1803370bddb129d239fd16ea8526a6188ae58e":"0x1b1ae4d6e2ef500000","0xbd2b70fecc37640f69514fc7f3404946aad86b11":"0x410d586a20a4c00000","0xbd3097a79b3c0d2ebff0e6e86ab0edadbed47096":"0x5a87e7d7f5f6580000","0xbd325d4029e0d8729f6d399c478224ae9e7ae41e":"0xd255d112e103a00000","0xbd432a3916249b4724293af9146e49b8280a7f2a":"0xd8d726b7177a800000","0xbd47f5f76e3b930fd9485209efa0d4763da07568":"0x3635c9adc5dea00000","0xbd4b60faec740a21e3071391f96aa534f7c1f44e":"0x9ddc1e3b901180000","0xbd4bd5b122d8ef7b7c8f0667450320db2116142e":"0x2086ac351052600000","0xbd51ee2ea143d7b1d6b77e7e44bdd7da12f485ac":"0x477e06ccb2b9280000","0xbd59094e074f8d79142ab1489f148e32151f2089":"0x1158e460913d00000","0xbd5a8c94bd8be6470644f70c8f8a33a8a55c6341":"0xad78ebc5ac6200000","0xbd5e473abce8f97a6932f77c2facaf9cc0a00514":"0x3c9258a106a6b70000","0xbd5f46caab2c3d4b289396bbb07f203c4da82530":"0x4563918244f400000","0xbd66ffedb530ea0b2e856dd12ac2296c31fe29e0":"0xad78ebc5ac6200000","0xbd67d2e2f82da8861341bc96a2c0791fddf39e40":"0xad7c07947c8fb0000","0xbd6a474d66345bcdd707594adb63b30c7822af54":"0xd8d726b7177a800000","0xbd723b289a7367b6ece2455ed61edb49670ab9c4":"0x10f0cdea164213f8000","0xbd73c3cbc26a175062ea0320dd84b253bce64358":"0x155bd9307f9fe80000","0xbd7419dc2a090a46e2873d7de6eaaad59e19c479":"0x170bcb671759f080000","0xbd8765f41299c7f479923c4fd18f126d7229047d":"0xd8d726b7177a800000","0xbd93e550403e2a06113ed4c3fba1a8913b19407e":"0x6c6b935b8bbd400000","0xbd9e56e902f4be1fc8768d8038bac63e2acbbf8e":"0x36356633ebd8ea0000","0xbda4be317e7e4bed84c0495eee32d607ec38ca52":"0x7d32277978ef4e8000","0xbdb60b823a1173d45a0792245fb496f1fd3301cf":"0x6c6b935b8bbd400000","0xbdbaf6434d40d6355b1e80e40cc4ab9c68d96116":"0x56bc75e2d63100000","0xbdc02cd4330c93d6fbda4f6db2a85df22f43c233":"0x6c6b935b8bbd400000","0xbdc461462b6322b462bdb33f22799e8108e2417d":"0x243d4d18229ca20000","0xbdc739a699700b2e8e2c4a4c7b058a0e513ddebe":"0x6c6b935b8bbd400000","0xbdc74873af922b9df474853b0fa7ff0bf8c82695":"0xd8c9460063d31c0000","0xbdca2a0ff34588af625fa8e28fc3015ab5a3aa00":"0x7ed73f773552fc0000","0xbdd3254e1b3a6dc6cc2c697d45711aca21d516b2":"0x6c6b935b8bbd400000","0xbddfa34d0ebf1b04af53b99b82494a9e3d8aa100":"0x28a857425466f800000","0xbde4c73f969b89e9ceae66a2b51844480e038e9a":"0x3635c9adc5dea00000","0xbde9786a84e75b48f18e726dd78d70e4af3ed802":"0x1369fb96128ac480000","0xbded11612fb5c6da99d1e30e320bc0995466141e":"0x15af1d78b58c400000","0xbded7e07d0711e684de65ac8b2ab57c55c1a8645":"0x2009c5c8bf6fdc0000","0xbdf693f833c3fe471753184788eb4bfe4adc3f96":"0x6acb3df27e1f880000","0xbdf6e68c0cd7584080e847d72cbb23aad46aeb1d":"0x6acb3df27e1f880000","0xbe0a2f385f09dbfce96732e12bb40ac349871ba8":"0x574c115e02b8be0000","0xbe0c2a80b9de084b172894a76cf4737a4f529e1a":"0x6c6acc67d7b1d40000","0xbe1cd7f4c472070968f3bde268366b21eeea8321":"0xe91a7cd19fa3b00000","0xbe2346a27ff9b702044f500deff2e7ffe6824541":"0x1158e460913d00000","0xbe2471a67f6047918772d0e36839255ed9d691ae":"0xd8d726b7177a800000","0xbe2b2280523768ea8ac35cd9e888d60a719300d4":"0x6c6b935b8bbd400000","0xbe2b326e78ed10e550fee8efa8f8070396522f5a":"0x857e0d6f1da76a00000","0xbe305a796e33bbf7f9aeae6512959066efda1010":"0x24dce54d34a1a000000","0xbe478e8e3dde6bd403bb2d1c657c4310ee192723":"0x1ab2cf7c9f87e20000","0xbe4e7d983f2e2a636b1102ec7039efebc842e98d":"0x393ef1a5127c80000","0xbe4fd073617022b67f5c13499b827f763639e4e3":"0x6c6b935b8bbd400000","0xbe525a33ea916177f17283fca29e8b350b7f530b":"0x8f019aaf46e8780000","0xbe53322f43fbb58494d7cce19dda272b2450e827":"0xad7ceaf425c150000","0xbe538246dd4e6f0c20bf5ad1373c3b463a131e86":"0xad78ebc5ac6200000","0xbe5a60689998639ad75bc105a371743eef0f7940":"0x1b327c73e1257a0000","0xbe5cba8d37427986e8ca2600e858bb03c359520f":"0xa030dcebbd2f4c0000","0xbe60037e90714a4b917e61f193d834906703b13a":"0x5c283d410394100000","0xbe633a3737f68439bac7c90a52142058ee8e8a6f":"0x340aad21b3b7000000","0xbe659d85e7c34f8833ea7f488de1fbb5d4149bef":"0x1ebd23ad9d5bb720000","0xbe73274d8c5aa44a3cbefc8263c37ba121b20ad3":"0x1b1ae4d6e2ef500000","0xbe86d0b0438419ceb1a038319237ba5206d72e46":"0x3634fb9f1489a70000","0xbe8d7f18adfe5d6cc775394989e1930c979d007d":"0x3635c9adc5dea00000","0xbe9186c34a52514abb9107860f674f97b821bd5b":"0x1ba01ee40603100000","0xbe935793f45b70d8045d2654d8dd3ad24b5b6137":"0x2fb474098f67c00000","0xbe98a77fd41097b34f59d7589baad021659ff712":"0x30ca024f987b900000","0xbe9b8c34b78ee947ff81472eda7af9d204bc8466":"0x821ab0d4414980000","0xbea00df17067a43a82bc1daecafb6c14300e89e6":"0x62a992e53a0af00000","0xbea0afc93aae2108a3fac059623bf86fa582a75e":"0x5c283d410394100000","0xbeb3358c50cf9f75ffc76d443c2c7f55075a0589":"0x90f534608a72880000","0xbeb4fd315559436045dcb99d49dcec03f40c42dc":"0x6c6b935b8bbd400000","0xbec2e6de39c07c2bae556acfbee2c4728b9982e3":"0x1f0ff8f01daad40000","0xbec6640f4909b58cbf1e806342961d607595096c":"0x6c6acc67d7b1d40000","0xbec8caf7ee49468fee552eff3ac5234eb9b17d42":"0x6c6b935b8bbd400000","0xbecef61c1c442bef7ce04b73adb249a8ba047e00":"0x363b56c3a754c80000","0xbed4649df646e2819229032d8868556fe1e053d3":"0xfc936392801c0000","0xbed4c8f006a27c1e5f7ce205de75f516bfb9f764":"0x3635c9adc5dea000000","0xbee8d0b008421954f92d000d390fb8f8e658eaee":"0x3635c9adc5dea00000","0xbeecd6af900c8b064afcc6073f2d85d59af11956":"0x6c6b935b8bbd400000","0xbeef94213879e02622142bea61290978939a60d7":"0x136857b32ad86048000","0xbef07d97c3481f9d6aee1c98f9d91a180a32442b":"0x152d02c7e14af6800000","0xbefb448c0c5f683fb67ee570baf0db5686599751":"0x6acb3df27e1f880000","0xbf05070c2c34219311c4548b2614a438810ded6d":"0x6c6b935b8bbd400000","0xbf05ff5ecf0df2df887759fb8274d93238ac267d":"0x2b5e3af16b18800000","0xbf09d77048e270b662330e9486b38b43cd781495":"0x5c539b7bf4ff28800000","0xbf17f397f8f46f1bae45d187148c06eeb959fa4d":"0x3649c59624bb300000","0xbf183641edb886ce60b8190261e14f42d93cce01":"0x15b3557f1937f8000","0xbf2aea5a1dcf6ed3b5e8323944e983fedfd1acfb":"0x55a6e79ccd1d300000","0xbf4096bc547dbfc4e74809a31c039e7b389d5e17":"0xd5967be4fc3f100000","0xbf49c14898316567d8b709c2e50594b366c6d38c":"0x27bf38c6544df50000","0xbf4c73a7ede7b164fe072114843654e4d8781dde":"0x6c6b935b8bbd400000","0xbf50ce2e264b9fe2b06830617aedf502b2351b45":"0x3635c9adc5dea00000","0xbf59aee281fa43fe97194351a9857e01a3b897b2":"0x2086ac351052600000","0xbf68d28aaf1eeefef646b65e8cc8d190f6c6da9c":"0x6c6b935b8bbd400000","0xbf6925c00751008440a6739a02bf2b6cdaab5e3a":"0x3635c9adc5dea00000","0xbf7701fc6225d5a17815438a8941d21ebc5d059d":"0x65ea3db75546600000","0xbf8b8005d636a49664f74275ef42438acd65ac91":"0xad78ebc5ac6200000","0xbf92418a0c6c31244d220260cb3e867dd7b4ef49":"0x56900d33ca7fc0000","0xbf9acd4445d9c9554689cabbbab18800ff1741c2":"0x3635c9adc5dea00000","0xbf9f271f7a7e12e36dd2fe9facebf385fe6142bd":"0x366f84f7bb7840000","0xbfa8c858df102cb12421008b0a31c4c7190ad560":"0xad78ebc5ac6200000","0xbfaeb91067617dcf8b44172b02af615674835dba":"0x8b59e884813088000","0xbfb0ea02feb61dec9e22a5070959330299c43072":"0x43c33c1937564800000","0xbfbca418d3529cb393081062032a6e1183c6b2dc":"0x1b1ae4d6e2ef5000000","0xbfbe05e88c9cbbcc0e92a405fac1d85de248ee24":"0x56bc75e2d63100000","0xbfbfbcb656c2992be8fcde8219fbc54aadd59f29":"0x21e18d2c821c7520000","0xbfc57aa666fae28e9f107a49cb5089a4e22151dd":"0x3635c9adc5dea00000","0xbfcb9730246304700da90b4153e71141622e1c41":"0x3635c9adc5dea00000","0xbfd93c90c29c07bc5fb5fc49aeea55a40e134f35":"0x5ede20f01a459800000","0xbfe3a1fc6e24c8f7b3250560991f93cba2cf8047":"0x10f0cf064dd592000000","0xbfe6bcb0f0c07852643324aa5df5fd6225abc3ca":"0x409e52b48369a0000","0xbff5df769934b8943ca9137d0efef2fe6ebbb34e":"0x56bc75e2d63100000","0xbffb6929241f788693273e7022e60e3eab1fe84f":"0x6c6b935b8bbd400000","0xc0064f1d9474ab915d56906c9fb320a2c7098c9b":"0x13683f7f3c15d80000","0xc007f0bdb6e7009202b7af3ea90902697c721413":"0xa2a0e43e7fb9830000","0xc00ab080b643e1c2bae363e0d195de2efffc1c44":"0x1b1ae4d6e2ef500000","0xc02077449a134a7ad1ef7e4d927affeceeadb5ae":"0xfc936392801c0000","0xc02471e3fc2ea0532615a7571d493289c13c36ef":"0x1158e460913d00000","0xc02d6eadeacf1b78b3ca85035c637bb1ce01f490":"0xd8d726b7177a800000","0xc033b1325a0af45472c25527853b1f1c21fa35de":"0x6c6b935b8bbd400000","0xc033be10cb48613bd5ebcb33ed4902f38b583003":"0xa2a15d09519be00000","0xc0345b33f49ce27fe82cf7c84d141c68f590ce76":"0x3635c9adc5dea00000","0xc03de42a109b657a64e92224c08dc1275e80d9b2":"0x1158e460913d00000","0xc04069dfb18b096c7867f8bee77a6dc7477ad062":"0x90f534608a72880000","0xc0413f5a7c2d9a4b8108289ef6ecd271781524f4":"0xa968163f0a57b400000","0xc043f2452dcb9602ef62bd360e033dd23971fe84":"0x6c6b935b8bbd400000","0xc04f4bd4049f044685b883b62959ae631d667e35":"0x13b80b99c5185700000","0xc056d4bd6bf3cbacac65f8f5a0e3980b852740ae":"0x56bc75e2d63100000","0xc05b740620f173f16e52471dc38b9c514a0b1526":"0x796e3ea3f8ab00000","0xc069ef0eb34299abd2e32dabc47944b272334824":"0x68155a43676e00000","0xc06cebbbf7f5149a66f7eb976b3e47d56516da2f":"0x6c6b935b8bbd400000","0xc0725ec2bdc33a1d826071dea29d62d4385a8c25":"0x8a08513463aa6100000","0xc07e3867ada096807a051a6c9c34cc3b3f4ad34a":"0x60f06620a849450000","0xc0895efd056d9a3a81c3da578ada311bfb9356cf":"0xad78ebc5ac6200000","0xc090fe23dcd86b358c32e48d2af91024259f6566":"0xad78ebc5ac6200000","0xc09a66172aea370d9a63da04ff71ffbbfcff7f94":"0x6c6b935b8bbd400000","0xc09e3cfc19f605ff3ec9c9c70e2540d7ee974366":"0x1b1ae4d6e2ef500000","0xc0a02ab94ebe56d045b41b629b98462e3a024a93":"0x56bc75e2d63100000","0xc0a39308a80e9e84aaaf16ac01e3b01d74bd6b2d":"0x7664ddd4c1c0b8000","0xc0a6cbad77692a3d88d141ef769a99bb9e3c9951":"0x56bc75e2d63100000","0xc0a7e8435dff14c25577739db55c24d5bf57a3d9":"0xa6dd90cae5114480000","0xc0ae14d724832e2fce2778de7f7b8daf7b12a93e":"0x1158e460913d00000","0xc0afb7d8b79370cfd663c68cc6b9702a37cd9eff":"0x3635c9adc5dea00000","0xc0b0b7a8a6e1acdd05e47f94c09688aa16c7ad8d":"0x37b6d02ac76710000","0xc0b3f244bca7b7de5b48a53edb9cbeab0b6d88c0":"0x13b80b99c5185700000","0xc0c04d0106810e3ec0e54a19f2ab8597e69a573d":"0x2b5e3af16b1880000","0xc0ca3277942e7445874be31ceb902972714f1823":"0xd8d726b7177a80000","0xc0cbad3ccdf654da22cbcf5c786597ca1955c115":"0x6c6b935b8bbd400000","0xc0cbf6032fa39e7c46ff778a94f7d445fe22cf30":"0x10ce1d3d8cb3180000","0xc0e0b903088e0c63f53dd069575452aff52410c3":"0xa2a15d09519be00000","0xc0e457bd56ec36a1246bfa3230fff38e5926ef22":"0x692ae8897081d00000","0xc0ed0d4ad10de03435b153a0fc25de3b93f45204":"0xab4dcf399a3a600000","0xc0f29ed0076611b5e55e130547e68a48e26df5e4":"0xa2a15d09519be00000","0xc1132878235c5ddba5d9f3228b5236e47020dc6f":"0x3635c9adc5dea00000","0xc1170dbaadb3dee6198ea544baec93251860fda5":"0x410d586a20a4c00000","0xc126573d87b0175a5295f1dd07c575cf8cfa15f2":"0x21e19e0c9bab2400000","0xc127aab59065a28644a56ba3f15e2eac13da2995":"0x2086ac351052600000","0xc12b7f40df9a2f7bf983661422ab84c9c1f50858":"0x1b1ae4d6e2ef5000000","0xc12cfb7b3df70fceca0ede263500e27873f8ed16":"0x3635c9adc5dea00000","0xc12f881fa112b8199ecbc73ec4185790e614a20f":"0x6c6b935b8bbd400000","0xc1384c6e717ebe4b23014e51f31c9df7e4e25b31":"0x1b1ae4d6e2ef500000","0xc1438c99dd51ef1ca8386af0a317e9b041457888":"0xc1daf81d8a3ce0000","0xc1631228efbf2a2e3a4092ee8900c639ed34fbc8":"0x33c5499031720c0000","0xc175be3194e669422d15fee81eb9f2c56c67d9c9":"0xad78ebc5ac6200000","0xc1827686c0169485ec15b3a7c8c01517a2874de1":"0x22b1c8c1227a00000","0xc18ab467feb5a0aadfff91230ff056464d78d800":"0x6c6b935b8bbd400000","0xc1950543554d8a713003f662bb612c10ad4cdf21":"0xfc936392801c0000","0xc1a41a5a27199226e4c7eb198b031b59196f9842":"0xa5aa85009e39c0000","0xc1b2a0fb9cad45cd699192cd27540b88d3384279":"0x1b1ae4d6e2ef500000","0xc1b2aa8cb2bf62cdc13a47ecc4657facaa995f98":"0x363793fa96e6a68000","0xc1b500011cfba95d7cd636e95e6cbf6167464b25":"0xad78ebc5ac6200000","0xc1b9a5704d351cfe983f79abeec3dbbbae3bb629":"0x1158e460913d00000","0xc1cbd2e2332a524cf219b10d871ccc20af1fb0fa":"0x3635c9adc5dea00000","0xc1cdc601f89c0428b31302d187e0dc08ad7d1c57":"0x14542ba12a337c00000","0xc1d4af38e9ba799040894849b8a8219375f1ac78":"0x43c33c1937564800000","0xc1e1409ca52c25435134d006c2a6a8542dfb7273":"0x1dd1e4bd8d1ee0000","0xc1eba5684aa1b24cba63150263b7a9131aeec28d":"0x1158e460913d00000","0xc1ec81dd123d4b7c2dd9b4d438a7072c11dc874c":"0x6c6b935b8bbd400000","0xc1f39bd35dd9cec337b96f47c677818160df37b7":"0x1158e460913d00000","0xc1ffad07db96138c4b2a530ec1c7de29b8a0592c":"0xf43fc2c04ee00000","0xc21fa6643a1f14c02996ad7144b75926e87ecb4b":"0x43c33c1937564800000","0xc2340a4ca94c9678b7494c3c852528ede5ee529f":"0x2a36b05a3fd7c8000","0xc239abdfae3e9af5457f52ed2b91fd0ab4d9c700":"0x6c6b935b8bbd400000","0xc23b2f921ce4a37a259ee4ad8b2158d15d664f59":"0x1608995e8bd3f8000","0xc24399b4bf86f7338fbf645e3b22b0e0b7973912":"0x6c6b935b8bbd400000","0xc24ccebc2344cce56417fb684cf81613f0f4b9bd":"0x54069233bf7f780000","0xc25266c7676632f13ef29be455ed948add567792":"0x487a9a304539440000","0xc25cf826550c8eaf10af2234fef904ddb95213be":"0x3635c9adc5dea00000","0xc2663f8145dbfec6c646fc5c49961345de1c9f11":"0x2567ac70392b880000","0xc270456885342b640b4cfc1b520e1a544ee0d571":"0x62a992e53a0af00000","0xc27376f45d21e15ede3b26f2655fcee02ccc0f2a":"0x1158e460913d00000","0xc2779771f0536d79a8708f6931abc44b3035e999":"0x43c4f8300dcb3480000","0xc27f4e08099d8cf39ee11601838ef9fc06d7fc41":"0x61093d7c2c6d380000","0xc282e6993fbe7a912ea047153ffd9274270e285b":"0x7960b331247638000","0xc2836188d9a29253e0cbda6571b058c289a0bb32":"0x6c6b935b8bbd400000","0xc2aa74847e86edfdd3f3db22f8a2152feee5b7f7":"0x6f118886b784a20000","0xc2b2cbe65bc6c2ee7a3c75b2e47c189c062e8d8b":"0x43c33c1937564800000","0xc2bae4a233c2d85724f0dabebda0249d833e37d3":"0x10f0cf064dd59200000","0xc2c13e72d268e7150dc799e7c6cf03c88954ced7":"0x25f273933db5700000","0xc2cb1ada5da9a0423873814793f16144ef36b2f3":"0x48557e3b7017df0000","0xc2d1778ef6ee5fe488c145f3586b6ebbe3fbb445":"0x3e1ff1e03b55a80000","0xc2d9eedbc9019263d9d16cc5ae072d1d3dd9db03":"0x43c33c1937564800000","0xc2e0584a71348cc314b73b2029b6230b92dbb116":"0x6c6b935b8bbd400000","0xc2e2d498f70dcd0859e50b023a710a6d4b2133bd":"0x383911f00cbce10000","0xc2ed5ffdd1add855a2692fe062b5d618742360d4":"0x410d586a20a4c00000","0xc2ee91d3ef58c9d1a589844ea1ae3125d6c5ba69":"0x34957444b840e80000","0xc2fafdd30acb6d6706e9293cb02641f9edbe07b5":"0x5100860b430f480000","0xc2fd0bf7c725ef3e047e5ae1c29fe18f12a7299c":"0x487a9a304539440000","0xc2fe7d75731f636dcd09dbda0671393ba0c82a7d":"0x77432217e683600000","0xc3107a9af3322d5238df0132419131629539577d":"0x1ab4e464d414310000","0xc3110be01dc9734cfc6e1ce07f87d77d1345b7e1":"0x10f0ce949e00f930000","0xc32038ca52aee19745be5c31fcdc54148bb2c4d0":"0x2b5aad72c65200000","0xc325c352801ba883b3226c5feb0df9eae2d6e653":"0xd5967be4fc3f100000","0xc32ec7e42ad16ce3e2555ad4c54306eda0b26758":"0x6c6b935b8bbd400000","0xc332df50b13c013490a5d7c75dbfa366da87b6d6":"0xd8d726b7177a800000","0xc33acdb3ba1aab27507b86b15d67faf91ecf6293":"0x6c6b935b8bbd400000","0xc33ece935a8f4ef938ea7e1bac87cb925d8490ca":"0x7038c16781f78480000","0xc340f9b91c26728c31d121d5d6fc3bb56d3d8624":"0x6c6b935b8bbd400000","0xc346cb1fbce2ab285d8e5401f42dd7234d37e86d":"0x486cb9799191e0000","0xc3483d6e88ac1f4ae73cc4408d6c03abe0e49dca":"0x39992648a23c8a00000","0xc348fc5a461323b57be303cb89361b991913df28":"0x152d02c7e14af6800000","0xc34e3ba1322ed0571183a24f94204ee49c186641":"0x327afefa4a7bc0000","0xc35b95a2a3737cb8f0f596b34524872bd30da234":"0x198be85235e2d500000","0xc3631c7698b6c5111989bf452727b3f9395a6dea":"0x243275896641dbe0000","0xc36c0b63bfd75c2f8efb060883d868cccd6cbdb4":"0xa2a15d09519be00000","0xc3756bcdcc7eec74ed896adfc335275930266e08":"0x14542ba12a337c00000","0xc384ac6ee27c39e2f278c220bdfa5baed626d9d3":"0x2086ac351052600000","0xc3a046e3d2b2bf681488826e32d9c061518cfe8c":"0x8cf23f909c0fa00000","0xc3a9226ae275df2cab312b911040634a9c9c9ef6":"0xd8d726b7177a800000","0xc3b928a76fad6578f04f0555e63952cd21d1520a":"0x6c6b935b8bbd400000","0xc3c2297329a6fd99117e54fc6af379b4d556547e":"0x14542ba12a337c00000","0xc3c3c2510d678020485a63735d1307ec4ca6302b":"0x3635c9adc5dea00000","0xc3cb6b36af443f2c6e258b4a39553a818747811f":"0x57473d05dabae80000","0xc3db5657bb72f10d58f231fddf11980aff678693":"0x14061b9d77a5e980000","0xc3db9fb6f46c480af34465d79753b4e2b74a67ce":"0x43c33c1937564800000","0xc3dd58903886303b928625257ae1a013d71ae216":"0x6c6b935b8bbd400000","0xc3e0471c64ff35fa5232cc3121d1d38d1a0fb7de":"0x6c6b935b8bbd400000","0xc3e20c96df8d4e38f50b265a98a906d61bc51a71":"0x6c6b935b8bbd400000","0xc3e387b03ce95ccfd7fa51dd840183bc43532809":"0x6c6b935b8bbd400000","0xc3f8f67295a5cd049364d05d23502623a3e52e84":"0x14542ba12a337c00000","0xc401c427cccff10decb864202f36f5808322a0a8":"0xb47b51a69cd4020000","0xc4088c025f3e85013f5439fb3440a17301e544fe":"0x7e09db4d9f3f340000","0xc41461a3cfbd32c9865555a4813137c076312360":"0x3635c6204739d98000","0xc420388fbee84ad656dd68cdc1fbaa9392780b34":"0xa2dca63aaf4c58000","0xc42250b0fe42e6b7dcd5c890a6f0c88f5f5fb574":"0x81ee4825359840000","0xc42d6aeb710e3a50bfb44d6c31092969a11aa7f3":"0x82263cafd8cea0000","0xc440c7ca2f964b6972ef664a2261dde892619d9c":"0x43c33c1937564800000","0xc44bdec8c36c5c68baa2ddf1d431693229726c43":"0x152d02c7e14af6800000","0xc44f4ab5bc60397c737eb0683391b633f83c48fa":"0x3635c9adc5dea00000","0xc452e0e4b3d6ae06b836f032ca09db409ddfe0fb":"0x2b5e3af16b18800000","0xc45a1ca1036b95004187cdac44a36e33a94ab5c3":"0xdd00f720301880000","0xc45d47ab0c9aa98a5bd62d16223ea2471b121ca4":"0x202e68f2c2aee40000","0xc4681e73bb0e32f6b726204831ff69baa4877e32":"0x62a992e53a0af00000","0xc46bbdef76d4ca60d316c07f5d1a780e3b165f7e":"0x6c6b935b8bbd400000","0xc47d610b399250f70ecf1389bab6292c91264f23":"0xfa7e7b5df3cd00000","0xc4803bb407c762f90b7596e6fde194931e769590":"0xd8d726b7177a800000","0xc48651c1d9c16bff4c9554886c3f3f26431f6f68":"0x23ab9599c43f080000","0xc489c83ffbb0252ac0dbe3521217630e0f491f14":"0xd8d726b7177a800000","0xc48b693cacefdbd6cb5d7895a42e3196327e261c":"0x3635c9adc5dea00000","0xc493489e56c3bdd829007dc2f956412906f76bfa":"0x2a791488e71540000","0xc496cbb0459a6a01600fc589a55a32b454217f9d":"0xeda838c4929080000","0xc49cfaa967f3afbf55031061fc4cef88f85da584":"0x6c6b935b8bbd400000","0xc4b6e5f09cc1b90df07803ce3d4d13766a9c46f4":"0x14542ba12a337c00000","0xc4bec96308a20f90cab18399c493fd3d065abf45":"0x2f6f10780d22cc00000","0xc4c01afc3e0f045221da1284d7878574442fb9ac":"0x1923c688b73ab040000","0xc4c15318d370c73318cc18bdd466dbaa4c6603bf":"0x11164759ffb320000","0xc4c6cb723dd7afa7eb535615e53f3cef14f18118":"0x6c6b8fce0d18798000","0xc4cc45a2b63c27c0b4429e58cd42da59be739bd6":"0x3635c9adc5dea00000","0xc4cf930e5d116ab8d13b9f9a7ec4ab5003a6abde":"0x1158e460913d000000","0xc4d916574e68c49f7ef9d3d82d1638b2b7ee0985":"0x55a6e79ccd1d300000","0xc4dac5a8a0264fbc1055391c509cc3ee21a6e04c":"0x1606b7fa039ce740000","0xc4dd048bfb840e2bc85cb53fcb75abc443c7e90f":"0xc971dc07c9c7900000","0xc4f2913b265c430fa1ab8adf26c333fc1d9b66f2":"0x1158e460913d00000","0xc4f7b13ac6d4eb4db3d4e6a252af8a07bd5957da":"0xad78ebc5ac6200000","0xc4f7d2e2e22084c44f70feaab6c32105f3da376f":"0x6acb3df27e1f880000","0xc4ff6fbb1f09bd9e102ba033d636ac1c4c0f5304":"0x3635c9adc5dea00000","0xc4ffadaaf2823fbea7bff702021bffc4853eb5c9":"0x24a19c1bd6f128000","0xc500b720734ed22938d78c5e48b2ba9367a575ba":"0x7129e1cdf373ee00000","0xc50fe415a641b0856c4e75bf960515441afa358d":"0x6c6b935b8bbd400000","0xc5134cfbb1df7a20b0ed7057622eeed280947dad":"0xcdff97fabcb4600000","0xc517d0315c878813c717e18cafa1eab2654e01da":"0x21e19e0c9bab2400000","0xc518799a5925576213e21896e0539abb85b05ae3":"0x3635c9adc5dea00000","0xc522e20fbf04ed7f6b05a37b4718d6fce0142e1a":"0xd8d726b7177a800000","0xc524086d46c8112b128b2faf6f7c7d8160a8386c":"0x15af1d78b58c400000","0xc52d1a0c73c2a1be84915185f8b34faa0adf1de3":"0x4be4eab3fa0fa68000","0xc53594c7cfb2a08f284cc9d7a63bbdfc0b319732":"0xa6b2328ff3a62c00000","0xc5374928cdf193705443b14cc20da423473cd9cf":"0x77d10509bb3af8000","0xc538a0ff282aaa5f4b75cfb62c70037ee67d4fb5":"0x6c6b935b8bbd400000","0xc53b50fd3b2b72bc6c430baf194a515585d3986d":"0x1158e460913d00000","0xc53d79f7cb9b70952fd30fce58d54b9f0b59f647":"0x113e2d6744345f80000","0xc549df83c6f65eec0f1dc9a0934a5c5f3a50fd88":"0x9dc05cce28c2b80000","0xc55005a6c37e8ca7e543ce259973a3cace961a4a":"0x6c6b935b8bbd400000","0xc555b93156f09101233c6f7cf6eb3c4f196d3346":"0xa2a15d09519be00000","0xc55a6b4761fd11e8c85f15174d74767cd8bd9a68":"0x73f75d1a085ba0000","0xc56e6b62ba6e40e52aab167d21df025d0055754b":"0x6c6b935b8bbd400000","0xc573e841fa08174a208b060ccb7b4c0d7697127f":"0x243d4d18229ca20000","0xc57612de91110c482e6f505bcd23f3c5047d1d61":"0xc2127af858da700000","0xc5843399d150066bf7979c34ba294620368ad7c0":"0xad78ebc5ac6200000","0xc58b9cc61dedbb98c33f224d271f0e228b583433":"0xd255d112e103a00000","0xc58f62fee9711e6a05dc0910b618420aa127f288":"0xd7c198710e66b00000","0xc593b546b7698710a205ad468b2c13152219a342":"0x54069233bf7f780000","0xc593d6e37d14b566643ac4135f243caa0787c182":"0x28a857425466f800000","0xc5a3b98e4593fea0b38c4f455a5065f051a2f815":"0x44cf468af25bf770000","0xc5a48a8500f9b4e22f0eb16c6f4649687674267d":"0x2c0ec50385043e8000","0xc5a629a3962552cb8eded889636aafbd0c18ce65":"0x21e19e0c9bab2400000","0xc5ae86b0c6c7e3900f1368105c56537faf8d743e":"0xa31062beeed700000","0xc5b009baeaf788a276bd35813ad65b400b849f3b":"0x3635c9adc5dea00000","0xc5b56cd234267c28e89c6f6b2266b086a12f970c":"0xd8d726b7177a800000","0xc5c6a4998a33feb764437a8be929a73ba34a0764":"0xa968163f0a57b400000","0xc5c73d61cce7c8fe4c8fce29f39092cd193e0fff":"0x1b1ae4d6e2ef5000000","0xc5c7590b5621ecf8358588de9b6890f2626143f1":"0xa2a15d09519be00000","0xc5cdcee0e85d117dabbf536a3f4069bf443f54e7":"0x6ac5c62d9486070000","0xc5d48ca2db2f85d8c555cb0e9cfe826936783f9e":"0xad78ebc5ac6200000","0xc5de1203d3cc2cea31c82ee2de5916880799eafd":"0x10f0cf064dd59200000","0xc5e488cf2b5677933971f64cb8202dd05752a2c0":"0x3635c9adc5dea00000","0xc5e812f76f15f2e1f2f9bc4823483c8804636f67":"0x3f514193abb840000","0xc5e9939334f1252ed2ba26814487dfd2982b3128":"0x3cb71f51fc5580000","0xc5eb42295e9cadeaf2af12dede8a8d53c579c469":"0xcf152640c5c8300000","0xc5edbbd2ca0357654ad0ea4793f8c5cecd30e254":"0x14542ba12a337c00000","0xc5f64babb7033142f20e46d7aa6201ed86f67103":"0x6c6b935b8bbd400000","0xc5f687717246da8a200d20e5e9bcac60b67f3861":"0x18d993f34aef10000","0xc6045b3c350b4ce9ca0c6b754fb41a69b97e9900":"0x3224f42723d4540000","0xc60b04654e003b4683041f1cbd6bc38fda7cdbd6":"0x6c6b935b8bbd400000","0xc61446b754c24e3b1642d9e51765b4d3e46b34b6":"0x6c6b935b8bbd400000","0xc618521321abaf5b26513a4a9528086f220adc6f":"0x176b344f2a78c0000","0xc6234657a807384126f8968ca1708bb07baa493c":"0x1158e460913d00000","0xc625f8c98d27a09a1bcabd5128b1c2a94856af30":"0xad78ebc5ac6200000","0xc6355ec4768c70a49af69513cd83a5bca7e3b9cd":"0x14542ba12a337c00000","0xc63ac417992e9f9b60386ed953e6d7dff2b090e8":"0xd8d8583fa2d52f0000","0xc63cd7882118b8a91e074d4c8f4ba91851303b9a":"0xe18398e7601900000","0xc652871d192422c6bc235fa063b44a7e1d43e385":"0x8670e9ec6598c0000","0xc667441e7f29799aba616451d53b3f489f9e0f48":"0x2f29ace68addd800000","0xc66ae4cee87fb3353219f77f1d6486c580280332":"0x19a16b06ff8cb0000","0xc674f28c8afd073f8b799691b2f0584df942e844":"0x6c6b935b8bbd400000","0xc697b70477cab42e2b8b266681f4ae7375bb2541":"0x12e5732baba5c980000","0xc69b855539ce1b04714728eec25a37f367951de7":"0x6c6b935b8bbd400000","0xc69be440134d6280980144a9f64d84748a37f349":"0x26c29e47c4844c0000","0xc69d663c8d60908391c8d236191533fdf7775613":"0x1a4aba225c20740000","0xc6a286e065c85f3af74812ed8bd3a8ce5d25e21d":"0xfc936392801c0000","0xc6a30ef5bb3320f40dc5e981230d52ae3ac19322":"0x9ddc1e3b901180000","0xc6ae287ddbe1149ba16ddcca4fe06aa2eaa988a9":"0x15af1d78b58c400000","0xc6c7c191379897dd9c9d9a33839c4a5f62c0890d":"0xd8d854b22430688000","0xc6cd68ec35362c5ad84c82ad4edc232125912d99":"0x5e0549c9632e1d80000","0xc6d8954e8f3fc533d2d230ff025cb4dce14f3426":"0x15af1d78b58c400000","0xc6dbdb9efd5ec1b3786e0671eb2279b253f215ed":"0x3635c9adc5dea00000","0xc6df2075ebd240d44869c2be6bdf82e63d4ef1f5":"0x1158e460913d00000","0xc6e2f5af979a03fd723a1b6efa728318cf9c1800":"0x243d4d18229ca20000","0xc6e324beeb5b36765ecd464260f7f26006c5c62e":"0x6c6b935b8bbd400000","0xc6e4cc0c7283fc1c85bc4813effaaf72b49823c0":"0xf031ec9c87dd30000","0xc6ee35934229693529dc41d9bb71a2496658b88e":"0x42bf06b78ed3b500000","0xc6fb1ee37417d080a0d048923bdabab095d077c6":"0xad78ebc5ac6200000","0xc70527d444c490e9fc3f5cc44e66eb4f306b380f":"0xd8d726b7177a800000","0xc70d856d621ec145303c0a6400cd17bbd6f5eaf7":"0x1158e460913d00000","0xc70fa45576bf9c865f983893002c414926f61029":"0x15b4aa8e9702680000","0xc71145e529c7a714e67903ee6206e4c3042b6727":"0x4d853c8f8908980000","0xc71b2a3d7135d2a85fb5a571dcbe695e13fc43cd":"0x3635c9adc5dea00000","0xc71f1d75873f33dcb2dd4b3987a12d0791a5ce27":"0x3708baed3d68900000","0xc71f92a3a54a7b8c2f5ea44305fccb84eee23148":"0x2b59ca131d2060000","0xc721b2a7aa44c21298e85039d00e2e460e670b9c":"0x7a1fe160277000000","0xc72cb301258e91bc08998a805dd192f25c2f9a35":"0x2009c5c8bf6fdc0000","0xc7368b9709a5c1b51c0adf187a65df14e12b7dba":"0x2026fc77f03e5ae8000","0xc739259e7f85f2659bef5f609ed86b3d596c201e":"0xad78ebc5ac6200000","0xc73e2112282215dc0762f32b7e807dcd1a7aae3e":"0x1760cbc623bb3500000","0xc749668042e71123a648975e08ed6382f83e05e2":"0x2f6f10780d22cc00000","0xc74a3995f807de1db01a2eb9c62e97d0548f696f":"0x3635c9adc5dea00000","0xc7506c1019121ff08a2c8c1591a65eb4bdfb4a3f":"0x2086ac351052600000","0xc75c37ce2da06bbc40081159c6ba0f976e3993b1":"0x3a7923151ecf580000","0xc75d2259306aec7df022768c69899a652185dbc4":"0xd8d726b7177a800000","0xc760971bbc181c6a7cf77441f24247d19ce9b4cf":"0x6c6b935b8bbd400000","0xc76130c73cb9210238025c9df95d0be54ac67fbe":"0x5150ae84a8cdf00000","0xc765e00476810947816af142d46d2ee7bca8cc4f":"0x1b1ae4d6e2ef500000","0xc7675e5647b9d8daf4d3dff1e552f6b07154ac38":"0x9c2007651b2500000","0xc77b01a6e911fa988d01a3ab33646beef9c138f3":"0x271b6fa5dbe6cc0000","0xc7837ad0a0bf14186937ace06c5546a36aa54f46":"0xd8d726b7177a800000","0xc79806032bc7d828f19ac6a640c68e3d820fa442":"0x1158e460913d00000","0xc799e34e88ff88be7de28e15e4f2a63d0b33c4cb":"0xad78ebc5ac6200000","0xc79d5062c796dd7761f1f13e558d73a59f82f38b":"0x1b1ae4d6e2ef5000000","0xc7a018f0968a51d1f6603c5c49dc545bcb0ff293":"0xd8d726b7177a800000","0xc7aff91929797489555a2ff1d14d5c695a108355":"0x3635c9adc5dea00000","0xc7b1c83e63203f9547263ef6282e7da33b6ed659":"0xfc936392801c0000","0xc7b39b060451000ca1049ba154bcfa00ff8af262":"0x152d02c7e14af6800000","0xc7bf17c4c11f98941f507e77084fffbd2dbd3db5":"0x3635c9adc5dea00000","0xc7bf2ed1ed312940ee6aded1516e268e4a604856":"0x14542ba12a337c00000","0xc7d44fe32c7f8cd5f1a97427b6cd3afc9e45023e":"0x55a6e79ccd1d300000","0xc7d5c7054081e918ec687b5ab36e973d18132935":"0x9ddc1e3b901180000","0xc7de5e8eafb5f62b1a0af2195cf793c7894c9268":"0x3635c9adc5dea00000","0xc7e330cd0c890ac99fe771fcc7e7b009b7413d8a":"0xd8d726b7177a800000","0xc7eac31abce6d5f1dea42202b6a674153db47a29":"0x2009c5c8bf6fdc0000","0xc7ec62b804b1f69b1e3070b5d362c62fb309b070":"0x2c46bf5416066110000","0xc7f72bb758016b374714d4899bce22b4aec70a31":"0x3a26c9478f5e2d0000","0xc80b36d1beafba5fcc644d60ac6e46ed2927e7dc":"0xb98bc829a6f90000","0xc811c2e9aa1ac3462eba5e88fcb5120e9f6e2ca2":"0x4be6d887bd876e0000","0xc817df1b91faf30fe3251571727c9711b45d8f06":"0x6c6acc67d7b1d40000","0xc81fb7d20fd2800192f0aac198d6d6a37d3fcb7d":"0xe1149331c2dde0000","0xc820c711f07705273807aaaa6de44d0e4b48be2e":"0x8670e9ec6598c0000","0xc8231ba5a411a13e222b29bfc1083f763158f226":"0x3637096c4bcc690000","0xc836e24a6fcf29943b3608e662290a215f6529ea":"0xfd45064eaee100000","0xc83ba6dd9549be1d3287a5a654d106c34c6b5da2":"0x17b7883c06916600000","0xc83e9d6a58253beebeb793e6f28b054a58491b74":"0xf46c2b6f5a9140000","0xc841884fa4785fb773b28e9715fae99a5134305d":"0x6c6b935b8bbd400000","0xc84d9bea0a7b9f140220fd8b9097cfbfd5edf564":"0x6ab9ec291ad7d8000","0xc852428d2b586497acd30c56aa13fb5582f84402":"0x3342d60dff19600000","0xc853215b9b9f2d2cd0741e585e987b5fb80c212e":"0x54069233bf7f780000","0xc85325eab2a59b3ed863c86a5f2906a04229ffa9":"0x193d7f7d253de00000","0xc85ef27d820403805fc9ed259fff64acb8d6346a":"0x6c6b935b8bbd400000","0xc8616b4ec09128cdff39d6e4b9ac86eec471d5f2":"0x10d3aa536e2940000","0xc86190904b8d079ec010e462cbffc90834ffaa5c":"0x22385a827e815500000","0xc8710d7e8b5a3bd69a42fe0fa8b87c357fddcdc8":"0xd8d726b7177a800000","0xc87352dba582ee2066b9c002a962e003134f78b1":"0x1b1ae4d6e2ef500000","0xc87c77e3c24adecdcd1038a38b56e18dead3b702":"0x1dd0c885f9a0d800000","0xc87d3ae3d88704d9ab0009dcc1a0067131f8ba3c":"0x6ac5c62d9486070000","0xc8814e34523e38e1f927a7dce8466a447a093603":"0x21e19e0c9bab2400000","0xc88255eddcf521c6f81d97f5a42181c9073d4ef1":"0xfc39044d00a2a8000","0xc885a18aabf4541b7b7b7ecd30f6fae6869d9569":"0x6c6b935b8bbd400000","0xc88ca1e6e5f4d558d13780f488f10d4ad3130d34":"0x54069233bf7f780000","0xc88eec54d305c928cc2848c2fee23531acb96d49":"0x6c6ad382d4fb610000","0xc89cf504b9f3f835181fd8424f5ccbc8e1bddf7d":"0x21e19e0c9bab2400000","0xc8a2c4e59e1c7fc54805580438aed3e44afdf00e":"0x2629f66e0c5300000","0xc8aa49e3809f0899f28ab57e6743709d58419033":"0x2fb474098f67c00000","0xc8ab1a3cf46cb8b064df2e222d39607394203277":"0x6c6b935b8bbd400000","0xc8b1850525d946f2ae84f317b15188c536a5dc86":"0x918ddc3a42a3d40000","0xc8d4e1599d03b79809e0130a8dc38408f05e8cd3":"0x9fad06241279160000","0xc8dd27f16bf22450f5771b9fe4ed4ffcb30936f4":"0xaadec983fcff40000","0xc8de7a564c7f4012a6f6d10fd08f47890fbf07d4":"0x1043561a8829300000","0xc8e2adeb545e499d982c0c117363ceb489c5b11f":"0x35659ef93f0fc40000","0xc8e558a3c5697e6fb23a2594c880b7a1b68f9860":"0x21e19e0c9bab2400000","0xc8f2b320e6dfd70906c597bad2f9501312c78259":"0x51934b8b3a57d00000","0xc90300cb1d4077e6a6d7e169a460468cf4a492d7":"0x6c6b935b8bbd400000","0xc90c3765156bca8e4897ab802419153cbe5225a9":"0xad78ebc5ac6200000","0xc910a970556c9716ea53af66ddef93143124913d":"0x55a6e79ccd1d300000","0xc9127b7f6629ee13fc3f60bc2f4467a20745a762":"0x37c9aa4e7ce421d8000","0xc91bb562e42bd46130e2d3ae4652b6a4eb86bc0f":"0x1d460162f516f00000","0xc9308879056dfe138ef8208f79a915c6bc7e70a8":"0x21e19e0c9bab2400000","0xc934becaf71f225f8b4a4bf7b197f4ac9630345c":"0x43c33c1937564800000","0xc93fbde8d46d2bcc0fa9b33bd8ba7f8042125565":"0x4be4e7267b6ae00000","0xc94089553ae4c22ca09fbc98f57075cf2ec59504":"0xd8d726b7177a800000","0xc94110e71afe578aa218e4fc286403b0330ace8d":"0x6c6b935b8bbd400000","0xc946d5acc1346eba0a7279a0ac1d465c996d827e":"0x3783d545fdf0aa40000","0xc94a28fb3230a9ddfa964e770f2ce3c253a7be4f":"0xad78ebc5ac6200000","0xc94a585203da7bbafd93e15884e660d4b1ead854":"0x17b7883c06916600000","0xc94f7c35c027d47df8ef4f9df85a9248a17dd23b":"0x19f8e7559924c0000","0xc951900c341abbb3bafbf7ee2029377071dbc36a":"0x11c25d004d01f80000","0xc953f934c0eb2d0f144bdab00483fd8194865ce7":"0x6c6b935b8bbd400000","0xc96626728aaa4c4fb3d31c26df3af310081710d1":"0xb50fcfafebecb00000","0xc96751656c0a8ef4357b7344322134b983504aca":"0x6c6b935b8bbd400000","0xc98048687f2bfcc9bd90ed18736c57edd352b65d":"0x3635c9adc5dea00000","0xc981d312d287d558871edd973abb76b979e5c35e":"0x6acb3df27e1f880000","0xc982586d63b0d74c201b1af8418372e30c7616be":"0x56bc75e2d63100000","0xc989434f825aaf9c552f685eba7c11db4a5fc73a":"0x1b28c58d9696b40000","0xc989eec307e8839b9d7237cfda08822962abe487":"0x15af1d78b58c400000","0xc992be59c6721caf4e028f9e8f05c25c55515bd4":"0x1158e460913d00000","0xc9957ba94c1b29e5277ec36622704904c63dc023":"0x683efc6782642c0000","0xc99a9cd6c9c1be3534eecd92ecc22f5c38e9515b":"0x105593b3a169d770000","0xc9ac01c3fb0929033f0ccc7e1acfeaaba7945d47":"0x2a36a9e9ca4d2038000","0xc9b698e898d20d4d4f408e4e4d061922aa856307":"0x22b1c8c1227a00000","0xc9b6b686111691ee6aa197c7231a88dc60bd295d":"0x1b1ae4d6e2ef500000","0xc9c7ac0bdd9342b5ead4360923f68c72a6ba633a":"0x1b1ae4d6e2ef500000","0xc9c80dc12e7bab86e949d01e4c3ed35f2b9bba5f":"0x6c6b935b8bbd400000","0xc9d76446d5aadff80b68b91b08cd9bc8f5551ac1":"0x26b4bd9110dce80000","0xc9dcbb056f4db7d9da39936202c5bd8230b3b477":"0x43c33c1937564800000","0xc9e02608066828848aeb28c73672a12925181f4d":"0x1b1b6bd7af64c70000","0xca0432cb157b5179f02ebba5c9d1b54fec4d88ca":"0x3635c9adc5dea00000","0xca122cf0f2948896b74843f49afed0ba1618eed7":"0x1e5b8fa8fe2ac00000","0xca22cda3606da5cad013b8074706d7e9e721a50c":"0x17181c6fa3981940000","0xca23f62dff0d6460036c62e840aec5577e0befd2":"0x7a1fe160277000000","0xca25ff34934c1942e22a4e7bd56f14021a1af088":"0xaadec983fcff40000","0xca373fe3c906b8c6559ee49ccd07f37cd4fb5266":"0x61093d7c2c6d380000","0xca41ccac30172052d522cd2f2f957d248153409f":"0x6acb3df27e1f880000","0xca4288014eddc5632f5facb5e38517a8f8bc5d98":"0x126e72a69a50d00000","0xca428863a5ca30369892d612183ef9fb1a04bcea":"0x52663ccab1e1c00000","0xca49a5f58adbefae23ee59eea241cf0482622eaa":"0x4d853c8f8908980000","0xca4ca9e4779d530ecbacd47e6a8058cfde65d98f":"0x2b5e3af16b18800000","0xca657ec06fe5bc09cf23e52af7f80cc3689e6ede":"0x30ca024f987b900000","0xca66b2280fa282c5b67631ce552b62ee55ad8474":"0x6ac422f53492880000","0xca6c818befd251361e02744068be99d8aa60b84a":"0x14542ba12a337c00000","0xca70f4ddbf069d2143bd6bbc7f696b52789b32e7":"0xa2a15d09519be00000","0xca747576446a4c8f30b08340fee198de63ec92cf":"0x17c8e1206722a300000","0xca7ba3ff536c7e5f0e153800bd383db8312998e0":"0x931ac3d6bb2400000","0xca8276c477b4a07b80107b843594189607b53bec":"0x14542ba12a337c00000","0xca8409083e01b397cf12928a05b68455ce6201df":"0x56bc75e2d631000000","0xca98c7988efa08e925ef9c9945520326e9f43b99":"0xd8d726b7177a800000","0xca9a042a6a806ffc92179500d24429e8ab528117":"0x3ba1910bf341b00000","0xca9dec02841adf5cc920576a5187edd2bd434a18":"0x1b1ae4d6e2ef500000","0xca9faa17542fafbb388eab21bc4c94e8a7b34788":"0x6c6b8fce0d18798000","0xcaaa68ee6cdf0d34454a769b0da148a1faaa1865":"0x1872e1de7fe52c00000","0xcaad9dc20d589ce428d8fda3a9d53a607b7988b5":"0xd8d726b7177a800000","0xcab0d32cf3767fa6b3537c84328baa9f50458136":"0x1e5b8fa8fe2ac000000","0xcab9a301e6bd46e940355028eccd40ce4d5a1ac3":"0x15af1d78b58c400000","0xcab9a97ada065c87816e6860a8f1426fe6b3d775":"0x3635c9adc5dea00000","0xcabab6274ed15089737e287be878b757934864e2":"0x43c33c1937564800000","0xcabdaf354f4720a466a764a528d60e3a482a393c":"0x3635c9adc5dea00000","0xcacb675e0996235404efafbb2ecb8152271b55e0":"0x25f273933db5700000","0xcad14f9ebba76680eb836b079c7f7baaf481ed6d":"0xcef3d7bd7d0340000","0xcae3a253bcb2cf4e13ba80c298ab0402da7c2aa0":"0x124bc0ddd92e5600000","0xcaef027b1ab504c73f41f2a10979b474f97e309f":"0xad78ebc5ac6200000","0xcaf4481d9db78dc4f25f7b4ac8bd3b1ca0106b31":"0x10f0cf064dd59200000","0xcafde855864c2598da3cafc05ad98df2898e8048":"0x300a8ed96ff4a940000","0xcb0dd7cf4e5d8661f6028943a4b9b75c914436a7":"0x1969368974c05b000000","0xcb1bb6f1da5eb10d4899f7e61d06c1b00fdfb52d":"0x384524cc70b7780000","0xcb3d766c983f192bcecac70f4ee03dd9ff714d51":"0x56bc75e2d63100000","0xcb42b44eb5fd60b5837e4f9eb47267523d1a229c":"0x2ee449550898e40000","0xcb47bd30cfa8ec5468aaa6a94642ced9c819c8d4":"0xd8d726b7177a800000","0xcb48fe8265d9af55eb7006bc335645b0a3a183be":"0xa2a15d09519be00000","0xcb4a914d2bb029f32e5fef5c234c4fec2d2dd577":"0x6194049f30f7200000","0xcb4abfc282aed76e5d57affda542c1f382fcacf4":"0x1b90f11c3183faa0000","0xcb4ad0c723da46ab56d526da0c1d25c73daff10a":"0x1ba5abf9e779380000","0xcb4bb1c623ba28dc42bdaaa6e74e1d2aa1256c2a":"0x6c6acc67d7b1d40000","0xcb50587412822304ebcba07dab3a0f09fffee486":"0x4a4491bd6dcd280000","0xcb58990bcd90cfbf6d8f0986f6fa600276b94e2d":"0x3634bf39ab98788000","0xcb68ae5abe02dcf8cbc5aa719c25814651af8b85":"0x1b1ae4d6e2ef500000","0xcb7479109b43b26657f4465f4d18c6f974be5f42":"0x62a992e53a0af00000","0xcb7d2b8089e9312cc9aeaa2773f35308ec6c2a7b":"0x21e19e0c9bab2400000","0xcb86edbc8bbb1f9131022be649565ebdb09e32a1":"0x6c6b935b8bbd400000","0xcb93199b9c90bc4915bd859e3d42866dc8c18749":"0xc90df07def78c0000","0xcb94e76febe208116733e76e805d48d112ec9fca":"0x3635c9adc5dea00000","0xcb9b5103e4ce89af4f64916150bff9eecb9faa5c":"0x1b1ae4d6e2ef500000","0xcba25c7a503cc8e0d04971ca05c762f9b762b48b":"0x1b1ae4d6e2ef500000","0xcba288cd3c1eb4d59ddb06a6421c14c345a47b24":"0xd8d726b7177a800000","0xcbb3189e4bd7f45f178b1c30c76e26314d4a4b0a":"0xffe0b677c65a98000","0xcbb7be17953f2ccc93e1bc99805bf45511434e4c":"0xaae5b9df56d2f200000","0xcbc04b4d8b82caf670996f160c362940d66fcf1a":"0x14542ba12a337c00000","0xcbde9734b8e6aa538c291d6d7facedb0f338f857":"0x6c6b935b8bbd400000","0xcbe1b948864d8474e765145858fca4550f784b92":"0x21e19e0c9bab2400000","0xcbe52fc533d7dd608c92a260b37c3f45deb4eb33":"0x3635c9adc5dea00000","0xcbe810fe0fecc964474a1db97728bc87e973fcbd":"0x21e19e0c9bab2400000","0xcbf16a0fe2745258cd52db2bf21954c975fc6a15":"0x1043561a8829300000","0xcbf37ff854a2f1ce53934494777892d3ec655782":"0x21e19e0c9bab2400000","0xcbfa6af6c283b046e2772c6063b0b21553c40106":"0x6c6b935b8bbd400000","0xcbfa76db04ce38fb205d37b8d377cf1380da0317":"0x4d853c8f8908980000","0xcc034985d3f28c2d39b1a34bced4d3b2b6ca234e":"0x9ddc1e3b901180000","0xcc043c4388d345f884c6855e71142a9f41fd6935":"0x1158e460913d00000","0xcc1d6ead01aada3e8dc7b95dca25df26eefa639d":"0x6c6b935b8bbd400000","0xcc2b5f448f3528d3fe41cc7d1fa9c0dc76f1b776":"0x340aad21b3b700000","0xcc2d04f0a4017189b340ca77198641dcf6456b91":"0xd5967be4fc3f100000","0xcc419fd9912b85135659e77a93bc3df182d45115":"0x21e19e0c9bab2400000","0xcc45fb3a555bad807b388a0357c855205f7c75e8":"0x2ee449550898e40000","0xcc48414d2ac4d42a5962f29eee4497092f431352":"0x8ba52e6fc45e40000","0xcc4a2f2cf86cf3e43375f360a4734691195f1490":"0x4915053bd129098000","0xcc4f0ff2aeb67d54ce3bc8c6510b9ae83e9d328b":"0x15af1d78b58c400000","0xcc4faac00be6628f92ef6b8cb1b1e76aac81fa18":"0xb22a2eab0f0fd0000","0xcc4feb72df98ff35a138e01761d1203f9b7edf0a":"0x17b7883c06916600000","0xcc606f511397a38fc7872bd3b0bd03c71bbd768b":"0x3635c9adc5dea00000","0xcc60f836acdef3548a1fefcca13ec6a937db44a0":"0x4b06dbbb40f4a0000","0xcc6c03bd603e09de54e9c4d5ac6d41cbce715724":"0x556f64c1fe7fa0000","0xcc6c2df00e86eca40f21ffda1a67a1690f477c65":"0xab4dcf399a3a600000","0xcc6d7b12061bc96d104d606d65ffa32b0036eb07":"0x21e19e0c9bab2400000","0xcc73dd356b4979b579b401d4cc7a31a268ddce5a":"0x1b1ae4d6e2ef500000","0xcc758d071d25a6320af68c5dc9c4f6955ba94520":"0x14542ba12a337c00000","0xcc7b0481cc32e6faef2386a07022bcb6d2c3b4fc":"0xab4dcf399a3a600000","0xcc943be1222cd1400a2399dd1b459445cf6d54a9":"0x2a740ae6536fc880000","0xcc9519d1f3985f6b255eaded12d5624a972721e1":"0x3635c9adc5dea00000","0xcc9ac715cd6f2610c52b58676456884297018b29":"0xb98bc829a6f90000","0xcca07bb794571d4acf041dad87f0d1ef3185b319":"0x6c6b935b8bbd400000","0xccabc6048a53464424fcf76eeb9e6e1801fa23d4":"0x2ab7b260ff3fd0000","0xccae0d3d852a7da3860f0636154c0a6ca31628d4":"0x5c6d12b6bc1a00000","0xccca24d8c56d6e2c07db086ec07e585be267ac8d":"0xad78ebc5ac6200000","0xccd521132d986cb96869842622a7dda26c3ed057":"0x6c6b935b8bbd400000","0xccf43975b76bfe735fec3cb7d4dd24f805ba0962":"0x340aad21b3b700000","0xccf62a663f1353ba2ef8e6521dc1ecb673ec8ef7":"0x83d6c7aab63600000","0xccf7110d1bd9a74bfd1d7d7d2d9d55607e7b837d":"0x30ca024f987b900000","0xccfd725760a68823ff1e062f4cc97e1360e8d997":"0x15ac56edc4d12c0000","0xcd020f8edfcf524798a9b73a640334bbf72f80a5":"0x73f75d1a085ba0000","0xcd06f8c1b5cdbd28e2d96b6346c3e85a0483ba24":"0x3635c9adc5dea00000","0xcd072e6e1833137995196d7bb1725fef8761f655":"0x14542ba12a337c00000","0xcd0a161bc367ae0927a92aac9cf6e5086714efca":"0x6c6b935b8bbd400000","0xcd0af3474e22f069ec3407870dd770443d5b12b0":"0x8e5eb4ee77b2ef0000","0xcd0b0257e783a3d2c2e3ba9d6e79b75ef98024d4":"0x9fad06241279160000","0xcd102cd6db3df14ad6af0f87c72479861bfc3d24":"0x6c6b935b8bbd400000","0xcd1e66ed539dd92fc40bbaa1fa16de8c02c14d45":"0xc77e4256863d80000","0xcd1ed263fbf6f6f7b48aef8f733d329d4382c7c7":"0x100bd33fb98ba0000","0xcd2a36d753e9e0ed012a584d716807587b41d56a":"0xe2ba75b0b1f1c0000","0xcd32a4a8a27f1cc63954aa634f7857057334c7a3":"0x3ad166576c72d40000","0xcd35ff010ec501a721a1b2f07a9ca5877dfcf95a":"0xd96fce90cfabcc0000","0xcd4306d7f6947ac1744d4e13b8ef32cb657e1c00":"0x1b1ab319f5ec750000","0xcd43258b7392a930839a51b2ef8ad23412f75a9f":"0x6c6b935b8bbd400000","0xcd49bf185e70d04507999f92a4de4455312827d0":"0x3635c9adc5dea00000","0xcd5510a242dfb0183de925fba866e312fabc1657":"0x821ab0d44149800000","0xcd566ad7b883f01fd3998a9a58a9dee4724ddca5":"0x330ae1835be300000","0xcd59f3dde77e09940befb6ee58031965cae7a336":"0x21e19e0c9bab2400000","0xcd725d70be97e677e3c8e85c0b26ef31e9955045":"0x487a9a304539440000","0xcd7e47909464d871b9a6dc76a8e9195db3485e7a":"0x215f835bc769da80000","0xcd7ece086b4b619b3b369352ee38b71ddb06439a":"0xad78ebc5ac6200000","0xcd7f09d7ed66d0c38bc5ad4e32b7f2b08dc1b30d":"0x3e3bb34da2a4700000","0xcd9529492b5c29e475acb941402b3d3ba50686b0":"0x6acb3df27e1f880000","0xcd95fa423d6fc120274aacde19f4eeb766f10420":"0xad78ebc5ac6200000","0xcd9b4cef73390c83a8fd71d7b540a7f9cf8b8c92":"0x4e1003b28d9280000","0xcda1741109c0265b3fb2bf8d5ec9c2b8a3346b63":"0x1158e460913d00000","0xcda1b886e3a795c9ba77914e0a2fe5676f0f5ccf":"0x5bf60ea42c2040000","0xcda4530f4b9bc50905b79d17c28fc46f95349bdf":"0x3310e04911f1f80000","0xcdab46a5902080646fbf954204204ae88404822b":"0x1d8a96e5c606eb0000","0xcdb597299030183f6e2d238533f4642aa58754b6":"0x15af1d78b58c400000","0xcdd5d881a7362c9070073bdfbc75e72453ac510e":"0x2da518eae48ee80000","0xcdd60d73efaad873c9bbfb178ca1b7105a81a681":"0x1bc16d674ec800000","0xcdd9efac4d6d60bd71d95585dce5d59705c13564":"0x56bc75e2d63100000","0xcde36d81d128c59da145652193eec2bfd96586ef":"0xd8d726b7177a800000","0xcdea386f9d0fd804d02818f237b7d9fa7646d35e":"0xa349d36d80ec578000","0xcdecf5675433cdb0c2e55a68db5d8bbe78419dd2":"0x1158e460913d00000","0xcdfd8217339725d7ebac11a63655f265eff1cc3d":"0x10f0c696410e3a90000","0xce079f51887774d8021cb3b575f58f18e9acf984":"0x9c2007651b2500000","0xce1884ddbbb8e10e4dba6e44feeec2a7e5f92f05":"0xd8d726b7177a800000","0xce1b0cb46aaecfd79b880cad0f2dda8a8dedd0b1":"0x1158e460913d00000","0xce26f9a5305f8381094354dbfc92664e84f902b5":"0xc7aaab0591eec0000","0xce2deab51c0a9ae09cd212c4fa4cc52b53cc0dec":"0x6c6b935b8bbd400000","0xce2e0da8934699bb1a553e55a0b85c169435bea3":"0x10f0c696410e3a90000","0xce3a61f0461b00935e85fa1ead82c45e5a64d488":"0x1b1ae4d6e2ef500000","0xce4b065dbcb23047203262fb48c1188364977470":"0x1b1ae4d6e2ef500000","0xce53c8cdd74296aca987b2bc19c2b875a48749d0":"0xa2a15d09519be00000","0xce5e04f0184369bcfa06aca66ffa91bf59fa0fb9":"0x22b1c8c1227a00000","0xce5eb63a7bf4fbc2f6e4baa0c68ab1cb4cf98fb4":"0x6c6b935b8bbd400000","0xce62125adec3370ac52110953a4e760be9451e3b":"0x83d6c7aab63600000","0xce71086d4c602554b82dcbfce88d20634d53cc4d":"0x92896529baddc880000","0xce8a6b6d5033b1498b1ffeb41a41550405fa03a2":"0xd8d726b7177a800000","0xce9786d3712fa200e9f68537eeaa1a06a6f45a4b":"0x61093d7c2c6d380000","0xce9d21c692cd3c01f2011f505f870036fa8f6cd2":"0x15af1d78b58c400000","0xcea2896623f4910287a2bdc5be83aea3f2e6de08":"0x1fb5a3751e490dc0000","0xcea34a4dd93dd9aefd399002a97d997a1b4b89cd":"0x5150ae84a8cdf00000","0xcea43f7075816b60bbfce68b993af0881270f6c4":"0x6c6b935b8bbd400000","0xcea8743341533cb2f0b9c6efb8fda80d77162825":"0x56bc75e2d63100000","0xceb089ec8a78337e8ef88de11b49e3dd910f748f":"0x3635c9adc5dea00000","0xceb33d78e7547a9da2e87d51aec5f3441c87923a":"0x1158e460913d00000","0xceb389381d48a8ae4ffc483ad0bb5e204cfdb1ec":"0x2827e6e4dd62ba8000","0xcec6fc65853f9cce5f8e844676362e1579015f02":"0x6c6b935b8bbd400000","0xced3c7be8de7585140952aeb501dc1f876ecafb0":"0xd8d726b7177a800000","0xced81ec3533ff1bfebf3e3843ee740ad11758d3e":"0x6acb3df27e1f880000","0xcedcb3a1d6843fb6bef643617deaf38f8e98dd5f":"0x19e2a4c818b9060000","0xcee699c0707a7836252b292f047ce8ad289b2f55":"0x119a1e21aa69560000","0xceed47ca5b899fd1623f21e9bd4db65a10e5b09d":"0x73877404c1eee0000","0xcef77451dfa2c643e00b156d6c6ff84e2373eb66":"0xa31062beeed700000","0xcf1169041c1745e45b172435a2fc99b49ace2b00":"0x1bb88baab2d7c0000","0xcf157612764e0fd696c8cb5fba85df4c0ddc3cb0":"0x65a4da25d3016c00000","0xcf1bdb799b2ea63ce134668bdc198b54840f180b":"0xfc936392801c0000","0xcf2288ef4ebf88e86db13d8a0e0bf52a056582c3":"0x89506fbf9740740000","0xcf264e6925130906c4d7c18591aa41b2a67f6f58":"0x6c6b935b8bbd400000","0xcf26b47bd034bc508e6c4bcfd6c7d30034925761":"0x6194049f30f7200000","0xcf2e2ad635e9861ae95cb9bafcca036b5281f5ce":"0x77432217e6836000000","0xcf2e734042a355d05ffb2e3915b16811f45a695e":"0x6c6b935b8bbd400000","0xcf348f2fe47b7e413c077a7baf3a75fbf8428692":"0x6c6b935b8bbd400000","0xcf3f9128b07203a3e10d7d5755c0c4abc6e2cac2":"0x10f0cf064dd59200000","0xcf3fbfa1fd32d7a6e0e6f8ef4eab57be34025c4c":"0x39a1c0f7594d480000","0xcf4166746e1d3bc1f8d0714b01f17e8a62df1464":"0x3677036edf0af60000","0xcf4f1138f1bd6bf5b6d485cce4c1017fcb85f07d":"0x2fd0bc77c32bff0000","0xcf5a6f9df75579c644f794711215b30d77a0ce40":"0x6c6b935b8bbd400000","0xcf5e0eacd1b39d0655f2f77535ef6608eb950ba0":"0x6c6b935b8bbd400000","0xcf684dfb8304729355b58315e8019b1aa2ad1bac":"0x177224aa844c720000","0xcf694081c76d18c64ca71382be5cd63b3cb476f8":"0x3635c9adc5dea00000","0xcf6e52e6b77480b1867efec6446d9fc3cc3577e8":"0xc0901f6bd98790000","0xcf883a20329667ea226a1e3c765dbb6bab32219f":"0xa4be3564d616660000","0xcf8882359c0fb23387f5674074d8b17ade512f98":"0x14542ba12a337c00000","0xcf89f7460ba3dfe83c5a1d3a019ee1250f242f0f":"0x356813cdcefd028000","0xcf923a5d8fbc3d01aa079d1cfe4b43ce071b1611":"0x6c6b935b8bbd400000","0xcf9be9b9ab86c66b59968e67b8d4dcff46b1814a":"0x23c757072b8dd00000","0xcfa8b37127149bdbfee25c34d878510951ea10eb":"0x6c6b935b8bbd400000","0xcfac2e1bf33205b05533691a02267ee19cd81836":"0x3635c9adc5dea00000","0xcfbb32b7d024350e3321fa20c9a914035372ffc6":"0x15be6174e1912e0000","0xcfc4e6f7f8b011414bfba42f23adfaa78d4ecc5e":"0x6449e84e47a8a80000","0xcfd2728dfb8bdbf3bf73598a6e13eaf43052ea2b":"0x93739534d28680000","0xcfd47493c9f89fe680bda5754dd7c9cfe7cb5bbe":"0x2f473513448fe0000","0xcfde0fc75d6f16c443c3038217372d99f5d907f7":"0x83225e6396b5ec0000","0xcfe2caaf3cec97061d0939748739bffe684ae91f":"0x21e19e0c9bab2400000","0xcfeacaaed57285e0ac7268ce6a4e35ecfdb242d7":"0x3ae4d4240190600000","0xcfecbea07c27002f65fe534bb8842d0925c78402":"0xd8d726b7177a800000","0xcfee05c69d1f29e7714684c88de5a16098e91399":"0x6acb3df27e1f880000","0xcff6a6fe3e9a922a12f21faa038156918c4fcb9c":"0x44591d67fecc80000","0xcff7f89a4d4219a38295251331568210ffc1c134":"0x5f68e8131ecf800000","0xcff8d06b00e3f50c191099ad56ba6ae26571cd88":"0x3635c9adc5dea00000","0xcffc49c1787eebb2b56cabe92404b636147d4558":"0x133e0308f40a3da8000","0xd008513b27604a89ba1763b6f84ce688b346945b":"0x3635c9adc5dea00000","0xd00f067286c0fbd082f9f4a61083ec76deb3cee6":"0x3635c9adc5dea00000","0xd015f6fcb84df7bb410e8c8f04894a881dcac237":"0x384524cc70b7780000","0xd01af9134faf5257174e8b79186f42ee354e642d":"0x3635c9adc5dea00000","0xd02108d2ae3cab10cbcf1657af223e027c8210f6":"0x6c6d84bccdd9ce0000","0xd02afecf8e2ec2b62ac8ad204161fd1fae771d0e":"0x6c6b935b8bbd400000","0xd0319139fbab2e8e2accc1d924d4b11df6696c5a":"0xad78ebc5ac6200000","0xd037d215d11d1df3d54fbd321cd295c5465e273b":"0x4be4e7267b6ae00000","0xd03a2da41e868ed3fef5745b96f5eca462ff6fda":"0xa2a15d09519be00000","0xd03fc165576aaed525e5502c8e140f8b2e869639":"0x17356d8b32501c80000","0xd043a011ec4270ee7ec8b968737515e503f83028":"0x1b1ae4d6e2ef500000","0xd04b861b3d9acc563a901689941ab1e1861161a2":"0x1158e460913d00000","0xd05a447c911dbb275bfb2e5a37e5a703a56f9997":"0xad78ebc5ac6200000","0xd05ffb2b74f867204fe531653b0248e21c13544e":"0x3635c9adc5dea00000","0xd062588171cf99bbeb58f126b870f9a3728d61ec":"0xf3f20b8dfa69d00000","0xd0638ea57189a6a699024ad78c71d939c1c2ff8c":"0x8eae566710fc200000","0xd0648a581b3508e135a2935d12c9657045d871ca":"0x1b2df9d219f57980000","0xd071192966eb69c3520fca3aa4dd04297ea04b4e":"0x5f68e8131ecf80000","0xd0718520eae0a4d62d70de1be0ca431c5eea2482":"0x6c6b935b8bbd400000","0xd0775dba2af4c30a3a78365939cd71c2f9de95d2":"0x692ae8897081d00000","0xd07be0f90997caf903c8ac1d53cde904fb190741":"0x36389038b699b40000","0xd07e511864b1cf9969e3560602829e32fc4e71f5":"0x2b5e3af16b1880000","0xd0809498c548047a1e2a2aa6a29cd61a0ee268bd":"0x6c6b935b8bbd400000","0xd082275f745a2cac0276fbdb02d4b2a3ab1711fe":"0x1a055690d9db80000","0xd08fc09a0030fd0928cd321198580182a76aae9f":"0x3635c9adc5dea00000","0xd093e829819fd2e25b973800bb3d5841dd152d05":"0xd8d726b7177a800000","0xd0944aa185a1337061ae20dc9dd96c83b2ba4602":"0xad78ebc5ac6200000","0xd096565b7c7407d06536580355fdd6d239144aa1":"0xd8d726b7177a80000","0xd09cb2e6082d693a13e8d2f68dd1dd8461f55840":"0x3635c9adc5dea00000","0xd0a6c6f9e9c4b383d716b31de78d56414de8fa91":"0x1043561a8829300000","0xd0a7209b80cf60db62f57d0a5d7d521a69606655":"0x8ac7230489e800000","0xd0a8abd80a199b54b08b65f01d209c27fef0115b":"0x161c626dc61a2ef8000","0xd0abcc70c0420e0e172f97d43b87d5e80c336ea9":"0x21e19e0c9bab2400000","0xd0ae735d915e946866e1fea77e5ea466b5cadd16":"0x6c6b935b8bbd400000","0xd0b11d6f2bce945e0c6a5020c3b52753f803f9d1":"0xad78ebc5ac6200000","0xd0c101fd1f01c63f6b1d19bc920d9f932314b136":"0x43c33c1937564800000","0xd0c55abf976fdc3db2afe9be99d499484d576c02":"0x3635c9adc5dea00000","0xd0d0a2ad45f59a9dccc695d85f25ca46ed31a5a3":"0x2d89577d7d40200000","0xd0d62c47ea60fb90a3639209bbfdd4d933991cc6":"0xa844a7424d9c80000","0xd0db456178206f5c4430fe005063903c3d7a49a7":"0x26491e45a753c08000","0xd0e194f34b1db609288509ccd2e73b6131a2538b":"0x36356633ebd8ea0000","0xd0e35e047646e759f4517093d6408642517f084d":"0xd58fa46818eccb8000","0xd0ee4d02cf24382c3090d3e99560de3678735cdf":"0x821ab0d44149800000","0xd0f04f52109aebec9a7b1e9332761e9fe2b97bb5":"0xd8d726b7177a800000","0xd0f9597811b0b992bb7d3757aa25b4c2561d32e2":"0x1b1ae4d6e2ef500000","0xd10302faa1929a326904d376bf0b8dc93ad04c4c":"0x61093d7c2c6d380000","0xd1100dd00fe2ddf18163ad964d0b69f1f2e9658a":"0x143120955b2506b0000","0xd116f3dcd5db744bd008887687aa0ec9fd7292aa":"0x3635c9adc5dea00000","0xd119417c46732cf34d1a1afb79c3e7e2cd8eece4":"0x6c6b935b8bbd400000","0xd12d77ae01a92d35117bac705aacd982d02e74c1":"0x3635c9adc5dea00000","0xd135794b149a18e147d16e621a6931f0a40a969a":"0x43c33c1937564800000","0xd1432538e35b7664956ae495a32abdf041a7a21c":"0x42bf06b78ed3b500000","0xd1438267231704fc7280d563adf4763844a80722":"0xad78ebc5ac6200000","0xd1538e9a87e59ca9ec8e5826a5b793f99f96c4c3":"0x3635c9adc5dea00000","0xd1648503b1ccc5b8be03fa1ec4f3ee267e6adf7b":"0x13befbf51eec0900000","0xd1682c2159018dc3d07f08240a8c606daf65f8e1":"0x2a5a058fc295ed000000","0xd171c3f2258aef35e599c7da1aa07300234da9a6":"0x6c6b935b8bbd400000","0xd1778c13fbd968bc083cb7d1024ffe1f49d02caa":"0xd9ecb4fd208e500000","0xd17fbe22d90462ed37280670a2ea0b3086a0d6d6":"0xad6eedd17cf3b8000","0xd1811c55976980f083901d8a0db269222dfb5cfe":"0x54069233bf7f780000","0xd18eb9e1d285dabe93e5d4bae76beefe43b521e8":"0x243d4d18229ca20000","0xd193e583d6070563e7b862b9614a47e99489f3e5":"0x36356633ebd8ea0000","0xd1978f2e34407fab1dc2183d95cfda6260b35982":"0x2ab7b260ff3fd00000","0xd19caf39bb377fdf2cf19bd4fb52591c2631a63c":"0x3635c9adc5dea00000","0xd1a396dcdab2c7494130b3fd307820340dfd8c1f":"0xf92250e2dfd00000","0xd1a71b2d0858e83270085d95a3b1549650035e23":"0x327bb09d06aa8500000","0xd1acb5adc1183973258d6b8524ffa28ffeb23de3":"0xd8d726b7177a800000","0xd1b37f03cb107424e9c4dd575ccd4f4cee57e6cd":"0x6c6b935b8bbd400000","0xd1b5a454ac3405bb4179208c6c84de006bcb9be9":"0x1b1ae4d6e2ef500000","0xd1c45954a62b911ad701ff2e90131e8ceb89c95c":"0x4b91a2de457e880000","0xd1c96e70f05ae0e6cd6021b2083750a7717cde56":"0x1b1ae4d6e2ef500000","0xd1d5b17ffe2d7bbb79cc7d7930bcb2e518fb1bbf":"0xa2a15d09519be00000","0xd1da0c8fb7c210e0f2ec618f85bdae7d3e734b1c":"0x6acb3df27e1f880000","0xd1dd79fb158160e5b4e8e23f312e6a907fbc4d4e":"0x1b1ae4d6e2ef500000","0xd1de5aad3a5fd803f1b1aeb6103cb8e14fe723b7":"0x1158e460913d00000","0xd1e1f2b9c16c309874dee7fac32675aff129c398":"0x3f24d8e4a00700000","0xd1e5e234a9f44266a4a6241a84d7a1a55ad5a7fe":"0x43c33c1937564800000","0xd1ea4d72a67b5b3e0f315559f52bd0614d713069":"0x6c6b935b8bbd400000","0xd1ee905957fe7cc70ec8f2868b43fe47b13febff":"0x2629f66e0c5300000","0xd1f1694d22671b5aad6a94995c369fbe6133676f":"0x3635c9adc5dea00000","0xd1f4dc1ddb8abb8848a8b14e25f3b55a8591c266":"0xd8d726b7177a80000","0xd1fed0aee6f5dfd7e25769254c3cfad15adeccaa":"0x2792c8fc4b53280000","0xd2051cb3cb6704f0548cc890ab0a19db3415b42a":"0x121b2e5e6464780000","0xd206aaddb336d45e7972e93cb075471d15897b5d":"0x2086ac351052600000","0xd209482bb549abc4777bea6d7f650062c9c57a1c":"0x11651ac3e7a7580000","0xd20dcb0b78682b94bc3000281448d557a20bfc83":"0x30849ebe16369c0000","0xd2107b353726c3a2b46566eaa7d9f80b5d21dbe3":"0x1158e460913d00000","0xd211b21f1b12b5096181590de07ef81a89537ead":"0x6c6b935b8bbd400000","0xd218efb4db981cdd6a797f4bd48c7c26293ceb40":"0xa1466b31c6431c0000","0xd21a7341eb84fd151054e5e387bb25d36e499c09":"0x2f6f10780d22cc00000","0xd224f880f9479a89d32f09e52be990b288135cef":"0x3a9d5baa4abf1d00000","0xd22f0ca4cd479e661775053bcc49e390f670dd8a":"0x3635c9adc5dea00000","0xd231929735132102471ba59007b6644cc0c1de3e":"0x3637096c4bcc690000","0xd235d15cb5eceebb61299e0e827fa82748911d89":"0xd8d726b7177a800000","0xd23a24d7f9468343c143a41d73b88f7cbe63be5e":"0xad78ebc5ac6200000","0xd23d7affacdc3e9f3dae7afcb4006f58f8a44600":"0xc328093e61ee400000","0xd243184c801e5d79d2063f3578dbae81e7b3a9cb":"0x6bdca2681e1aba0000","0xd24b6644f439c8051dfc64d381b8c86c75c17538":"0x6c6b935b8bbd400000","0xd24bf12d2ddf457decb17874efde2052b65cbb49":"0x2f6f10780d22cc00000","0xd251f903ae18727259eee841a189a1f569a5fd76":"0x21e19e0c9bab2400000","0xd252960b0bf6b2848fdead80136db5f507f8be02":"0x6c6b935b8bbd400000","0xd2581a55ce23ab10d8ad8c44378f59079bd6f658":"0x1dd0c885f9a0d800000","0xd25aecd7eb8bd6345b063b5dbd271c77d3514494":"0x62a992e53a0af00000","0xd27c234ff7accace3d996708f8f9b04970f97d36":"0x487a9a304539440000","0xd28298524df5ec4b24b0ffb9df85170a145a9eb5":"0xf98a3b9b337e20000","0xd283b8edb10a25528a4404de1c65e7410dbcaa67":"0x28a857425466f800000","0xd284a50382f83a616d39b8a9c0f396e0ebbfa95d":"0x3636c25e66ece70000","0xd288e7cb7ba9f620ab0f7452e508633d1c5aa276":"0xd8d726b7177a800000","0xd29dc08efbb3d72e263f78ab7610d0226de76b00":"0x28a857425466f800000","0xd2a030ac8952325f9e1db378a71485a24e1b07b2":"0x6c6b935b8bbd400000","0xd2a479404347c5543aab292ae1bb4a6f158357fa":"0xd8d726b7177a800000","0xd2a5a024230a57ccc666760b89b0e26cafd189c7":"0xa96595a5c6e8a3f8000","0xd2a80327cbe55c4c7bd51ff9dde4ca648f9eb3f8":"0x2b5e3af16b1880000","0xd2a84f75675c62d80c88756c428eee2bcb185421":"0x410d586a20a4c00000","0xd2abd84a181093e5e229136f42d835e8235de109":"0x56be03ca3e47d8000","0xd2ac0d3a58605e1d0f0eb3de25b2cad129ed6058":"0xd8d726b7177a800000","0xd2bf67a7f3c6ce56b7be41675dbbadfe7ea93a33":"0x15af1d78b58c400000","0xd2dbebe89b0357aea98bbe8e496338debb28e805":"0xd8d726b7177a800000","0xd2e21ed56868fab28e0947927adaf29f23ebad6c":"0x6c184f1355d0e80000","0xd2e817738abf1fb486583f80c350318bed860c80":"0xd02cecf5f5d810000","0xd2edd1ddd6d86dc005baeb541d22b640d5c7cae5":"0x1158e460913d00000","0xd2f1998e1cb1580cec4f6c047dcd3dcec54cf73c":"0xad78ebc5ac6200000","0xd2f241255dd7c3f73c07043071ec08ddd9c5cde5":"0x1b1ae4d6e2ef500000","0xd2ff672016f63b2f85398f4a6fedbb60a50d3cce":"0x1291246f5b734a0000","0xd30d4c43adcf55b2cb53d68323264134498d89ce":"0x3635c9adc5dea00000","0xd30ee9a12b4d68abace6baca9ad7bf5cd1faf91c":"0x514fcb24ff9c500000","0xd3118ea3c83505a9d893bb67e2de142d537a3ee7":"0x1158e460913d00000","0xd311bcd7aa4e9b4f383ff3d0d6b6e07e21e3705d":"0xad78ebc5ac6200000","0xd315deea1d8c1271f9d1311263ab47c007afb6f5":"0x3c81d4e654b400000","0xd32b2c79c36478c5431901f6d700b04dbe9b8810":"0x15779a9de6eeb00000","0xd32b45564614516c91b07fa9f72dcf787cce4e1c":"0xfc66fae3746ac0000","0xd330728131fe8e3a15487a34573c93457e2afe95":"0xd8d726b7177a800000","0xd331c823825a9e5263d052d8915d4dcde07a5c37":"0x1e931283ccc8500000","0xd333627445f2d787901ef33bb2a8a3675e27ffec":"0x15af1d78b58c400000","0xd33cf82bf14c592640a08608914c237079d5be34":"0x6c6b935b8bbd400000","0xd34d708d7398024533a5a2b2309b19d3c55171bb":"0x15af1d78b58c400000","0xd34e03d36a2bd4d19a5fa16218d1d61e3ffa0b15":"0x1158e460913d000000","0xd35075ca61fe59d123969c36a82d1ab2d918aa38":"0x90f534608a72880000","0xd367009ab658263b62c2333a1c9e4140498e1389":"0x6c6b935b8bbd400000","0xd3679a47df2d99a49b01c98d1c3e0c987ce1e158":"0xf2dc7d47f15600000","0xd38fa2c4cc147ad06ad5a2f75579281f22a7cc1f":"0x43c33c1937564800000","0xd39a5da460392b940b3c69bc03757bf3f2e82489":"0x17c83a97d6b6ca50000","0xd39b7cbc94003fc948f0cde27b100db8ccd6e063":"0x15af1d78b58c400000","0xd3a10ec7a5c9324999dd9e9b6bde7c911e584bda":"0x2086ac351052600000","0xd3a941c961e8ca8b1070f23c6d6d0d2a758a4444":"0xad78ebc5ac6200000","0xd3bb59fa31258be62f8ed232f1a7d47b4a0b41ee":"0x56bc75e2d63100000","0xd3bc730937fa75d8452616ad1ef1fe7fffe0d0e7":"0x484e4ded2eae38000","0xd3c24d4b3a5e0ff8a4622d518edd73f16ab28610":"0x1158e460913d00000","0xd3c6f1e0f50ec3d2a67e6bcd193ec7ae38f1657f":"0x166c5480889db770000","0xd3d6e9fb82542fd29ed9ea3609891e151396b6f7":"0xb6f588aa7bcf5c00000","0xd3dad1b6d08d4581ccae65a8732db6ac69f0c69e":"0x14542ba12a337c00000","0xd3df3b53cb3b4755de54e180451cc44c9e8ae0aa":"0x23c49409b977828000","0xd3f873bd9956135789ab00ebc195b922e94b259d":"0x6c6b935b8bbd400000","0xd402b4f6a099ebe716cb14df4f79c0cd01c6071b":"0x6c6b935b8bbd400000","0xd40d0055fd9a38488aff923fd03d35ec46d711b3":"0x10f08eda8e555098000","0xd40ed66ab3ceff24ca05ecd471efb492c15f5ffa":"0x1b1ae4d6e2ef500000","0xd418870bc2e4fa7b8a6121ae0872d55247b62501":"0x55a6e79ccd1d300000","0xd41d7fb49fe701baac257170426cc9b38ca3a9b2":"0x98a7d9b8314c00000","0xd4205592844055b3c7a1f80cefe3b8eb509bcde7":"0x9b3bfd342a9fc8000","0xd42b20bd0311608b66f8a6d15b2a95e6de27c5bf":"0x6c6b935b8bbd400000","0xd4344f7d5cad65d17e5c2d0e7323943d6f62fe92":"0xe7eeba3410b740000","0xd43ee438d83de9a37562bb4e286cb1bd19f4964d":"0x3635c9adc5dea00000","0xd44334b4e23a169a0c16bd21e866bba52d970587":"0x8cf23f909c0fa00000","0xd44d81e18f46e2cfb5c1fcf5041bc8569767d100":"0x7b442e684f65aa40000","0xd44f4ac5fad76bdc1537a3b3af6472319b410d9d":"0x56bc75e2d631000000","0xd44f5edf2bcf2433f211dadd0cc450db1b008e14":"0xe7eeba3410b740000","0xd44f6ac3923b5fd731a4c45944ec4f7ec52a6ae4":"0x21e19e0c9bab2400000","0xd45b3341e8f15c80329320c3977e3b90e7826a7e":"0x1b1ae4d6e2ef500000","0xd45d5daa138dd1d374c71b9019916811f4b20a4e":"0x1f399b1438a1000000","0xd460a4b908dd2b056759b488850b66a838fc77a8":"0x6acb3df27e1f880000","0xd467cf064c0871989b90d8b2eb14ccc63b360823":"0xad78ebc5ac6200000","0xd46bae61b027e5bb422e83a3f9c93f3c8fc77d27":"0x6c6b935b8bbd400000","0xd46f8223452982a1eea019a8816efc2d6fc00768":"0x76d41c62494840000","0xd475477fa56390d33017518d6711027f05f28dbf":"0x6b111333d4fd4c0000","0xd47c242edffea091bc54d57df5d1fdb93101476c":"0x9df7dfa8f760480000","0xd47d8685faee147c520fd986709175bf2f886bef":"0x6c6b935b8bbd400000","0xd47f50df89a1cff96513bef1b2ae3a2971accf2c":"0x2d89577d7d40200000","0xd482e7f68e41f238fe517829de15477fe0f6dd1d":"0x1b1ae4d6e2ef500000","0xd4879fd12b1f3a27f7e109761b23ca343c48e3d8":"0x241a9b4f617a280000","0xd48e3f9357e303513841b3f84bda83fc89727587":"0x3635c9adc5dea00000","0xd49a75bb933fca1fca9aa1303a64b6cb44ea30e1":"0x21e19e0c9bab2400000","0xd4b085fb086f3d0d68bf12926b1cc3142cae8770":"0xc893d09c8f51500000","0xd4b2ff3bae1993ffea4d3b180231da439f7502a2":"0x6c6b935b8bbd400000","0xd4b38a5fdb63e01714e9801db47bc990bd509183":"0x14534d95bef905c0000","0xd4b8bdf3df9a51b0b91d16abbea05bb4783c8661":"0x3635c9adc5dea00000","0xd4c4d1a7c3c74984f6857b2f5f07e8face68056d":"0x6c6b935b8bbd400000","0xd4c6ac742e7c857d4a05a04c33d4d05c1467571d":"0xad78ebc5ac6200000","0xd4cb21e590c5a0e06801366aff342c7d7db16424":"0x1ac7a08ead02f80000","0xd4d92c62b280e00f626d8657f1b86166cb1f740f":"0xad7f23634cbd60000","0xd4ebb1929a23871cf77fe049ab9602be08be0a73":"0x678a932062e4180000","0xd4ee4919fb37f2bb970c3fff54aaf1f3dda6c03f":"0x878678326eac9000000","0xd4feed99e8917c5c5458635f3603ecb7e817a7d0":"0x1043c43cde1d398000","0xd4ff46203efa23064b1caf00516e28704a82a4f8":"0x487a9a304539440000","0xd500e4d1c9824ba9f5b635cfa3a8c2c38bbd4ced":"0x15af1d78b58c400000","0xd508d39c70916f6abc4cc7f999f011f077105802":"0x5724d24afe77f0000","0xd50f7fa03e389876d3908b60a537a6706304fb56":"0x56bc75e2d63100000","0xd513a45080ff2febe62cd5854abe29ee4467f996":"0x84e13bc4fc5d80000","0xd5276f0cd5ffd5ffb63f98b5703d5594ede0838b":"0x15af1d78b58c400000","0xd5294b666242303b6df0b1c88d37429bc8c965aa":"0x104d0d00d2b7f60000","0xd52aecc6493938a28ca1c367b701c21598b6a02e":"0x3ba1910bf341b00000","0xd53c567f0c3ff2e08b7d59e2b5c73485437fc58d":"0x2086ac351052600000","0xd541ac187ad7e090522de6da3213e9a7f4439673":"0x6c6b935b8bbd400000","0xd54ba2d85681dc130e5b9b02c4e8c851391fd9b9":"0xd5967be4fc3f100000","0xd55508adbbbe9be81b80f97a6ea89add68da674f":"0x6c6b935b8bbd400000","0xd5550caaf743b037c56fd2558a1c8ed235130750":"0x121e4d49036255b0000","0xd5586da4e59583c8d86cccf71a86197f17996749":"0x6c6b935b8bbd400000","0xd55c1c8dfbe1e02cacbca60fdbdd405b09f0b75f":"0x6c6b935b8bbd400000","0xd561cbbc05515de73ab8cf9eae1357341e7dfdf4":"0x14542ba12a337c00000","0xd56a144d7af0ae8df649abae535a15983aa04d02":"0x10f0cf064dd59200000","0xd572309169b1402ec8131a17a6aac3222f89e6eb":"0x2ec1978c47766a00000","0xd5787668c2c5175b01a8ee1ac3ecc9c8b2aba95a":"0x6c6acc67d7b1d40000","0xd588c3a5df228185d98ee7e60748255cdea68b01":"0xd8d726b7177a800000","0xd58a52e078a805596b0d56ea4ae1335af01c66eb":"0xe7eeba3410b740000","0xd5903e9978ee20a38c3f498d63d57f31a39f6a06":"0x232b36ffc672ab00000","0xd59638d3c5faa7711bf085745f9d5bdc23d498d8":"0x6c6b935b8bbd400000","0xd59d92d2c8701980cc073c375d720af064743c0c":"0x405fdf7e5af85e00000","0xd5a7bec332adde18b3104b5792546aa59b879b52":"0x6c6b935b8bbd400000","0xd5b117ec116eb846418961eb7edb629cd0dd697f":"0xa2a15d09519be00000","0xd5b284040130abf7c1d163712371cc7e28ad66da":"0x6acb3df27e1f880000","0xd5b9d277d8aad20697a51f76e20978996bffe055":"0x7c3fe3c076ab50000","0xd5bd5e8455c130169357c471e3e681b7996a7276":"0x2d9e288f8abb360000","0xd5cba5b26bea5d73fabb1abafacdef85def368cc":"0xad78ebc5ac6200000","0xd5ce55d1b62f59433c2126bcec09bafc9dfaa514":"0xaadec983fcff40000","0xd5e55100fbd1956bbed2ca518d4b1fa376032b0b":"0x56bc75e2d63100000","0xd5e5c135d0c4c3303934711993d0d16ff9e7baa0":"0x6c6b935b8bbd400000","0xd5e656a1b916f9bf45afb07dd8afaf73b4c56f41":"0x542253a126ce40000","0xd5ea472cb9466018110af00c37495b5c2c713112":"0x10eee686c854f440000","0xd5f07552b5c693c20067b378b809cee853b8f136":"0x1b67c6df88c6fa0000","0xd5f7c41e07729dfa6dfc64c4423160a22c609fd3":"0x61093d7c2c6d380000","0xd604abce4330842e3d396ca73ddb5519ed3ec03f":"0x8e31fe1689d8a0000","0xd60651e393783423e5cc1bc5f889e44ef7ea243e":"0x159e76371129c80000","0xd609bf4f146eea6b0dc8e06ddcf4448a1fccc9fa":"0x6c6b935b8bbd400000","0xd609ec0be70d0ad26f6e67c9d4762b52ee51122c":"0x3635c9adc5dea00000","0xd60a52580728520df7546bc1e283291788dbae0c":"0x363489ef3ff0d70000","0xd60b247321a32a5affb96b1e279927cc584de943":"0x7ad020d6ddd7760000","0xd6110276cfe31e42825a577f6b435dbcc10cf764":"0x3635c9adc5dea00000","0xd612597bc31743c78633f633f239b1e9426bd925":"0x1017f7df96be17800000","0xd6234aaf45c6f22e66a225ffb93add629b4ef80f":"0x3635c9adc5dea00000","0xd62edb96fce2969aaf6c545e967cf1c0bc805205":"0x4a565536a5ada8000","0xd6300b3215b11de762ecde4b70b7927d01291582":"0x6c6b935b8bbd400000","0xd6395db5a4bb66e60f4cfbcdf0057bb4d97862e2":"0x3154c9729d05780000","0xd64a2d50f8858537188a24e0f50df1681ab07ed7":"0x8375a2abcca24400000","0xd6580ab5ed4c7dfa506fa6fe64ad5ce129707732":"0xd8d726b7177a800000","0xd6598b1386e93c5ccb9602ff4bbbecdbd3701dc4":"0xc25f4ecb041f00000","0xd6644d40e90bc97fe7dfe7cabd3269fd579ba4b3":"0x89e917994f71c0000","0xd6670c036df754be43dadd8f50feea289d061fd6":"0x144a2903448cef78000","0xd668523a90f0293d65c538d2dd6c57673710196e":"0x2242c30b853ee0000","0xd66ab79294074c8b627d842dab41e17dd70c5de5":"0x3635c9adc5dea00000","0xd66acc0d11b689cea6d9ea5ff4014c224a5dc7c4":"0xfc936392801c0000","0xd66ddf1159cf22fd8c7a4bc8d5807756d433c43e":"0x77432217e683600000","0xd687cec0059087fdc713d4d2d65e77daefedc15f":"0x340aad21b3b700000","0xd688e785c98f00f84b3aa1533355c7a258e87948":"0x1b1ae4d6e2ef500000","0xd6a22e598dabd38ea6e958bd79d48ddd9604f4df":"0x3635c9adc5dea00000","0xd6a7ac4de7b510f0e8de519d973fa4c01ba83400":"0x65ea3db75546600000","0xd6acc220ba2e51dfcf21d443361eea765cbd35d8":"0x1158e460913d00000","0xd6acffd0bfd99c382e7bd56ff0e6144a9e52b08e":"0x8ac7230489e800000","0xd6c0d0bc93a62e257174700e10f024c8b23f1f87":"0x6c6b935b8bbd400000","0xd6cf5c1bcf9da662bcea2255905099f9d6e84dcc":"0x1c49e420157d9c20000","0xd6d03572a45245dbd4368c4f82c95714bd2167e2":"0x3f00c3d66686fc0000","0xd6d6776958ee23143a81adadeb08382009e996c2":"0xa2a15d09519be00000","0xd6d9e30f0842012a7176a917d9d2048ca0738759":"0xd8d726b7177a800000","0xd6e09e98fe1300332104c1ca34fbfac554364ed9":"0x6c6b935b8bbd400000","0xd6e8e97ae9839b9ee507eedb28edfb7477031439":"0x6c6b935b8bbd400000","0xd6eea898d4ae2b718027a19ce9a5eb7300abe3ca":"0x17d4aceee63db8000","0xd6f1e55b1694089ebcb4fe7d7882aa66c8976176":"0x43c23bdbe929db30000","0xd6f4a7d04e8faf20e8c6eb859cf7f78dd23d7a15":"0x724ded1c748140000","0xd6fc0446c6a8d40ae3551db7e701d1fa876e4a49":"0x6c6b935b8bbd400000","0xd703c6a4f11d60194579d58c2766a7ef16c30a29":"0x6c6b935b8bbd400000","0xd7052519756af42590f15391b723a03fa564a951":"0xfa3631480d01fd8000","0xd70a612bd6dda9eab0dddcff4aaf4122d38feae4":"0x1d460162f516f00000","0xd70ad2c4e9eebfa637ef56bd486ad2a1e5bce093":"0xad78ebc5ac6200000","0xd7140c8e5a4307fab0cc27badd9295018bf87970":"0x5f1016b5076d00000","0xd7164aa261c09ad9b2b5068d453ed8eb6aa13083":"0xa2a15d09519be00000","0xd71e43a45177ad51cbe0f72184a5cb503917285a":"0xad78ebc5ac6200000","0xd71fb130f0150c565269e00efb43902b52a455a6":"0xad78ebc5ac6200000","0xd7225738dcf3578438f8e7c8b3837e42e04a262f":"0x182b8cebbb83aa0000","0xd7274d50804d9c77da93fa480156efe57ba501de":"0x692ae8897081d00000","0xd731bb6b5f3c37395e09ceaccd14a918a6060789":"0xd5967be4fc3f100000","0xd73ed2d985b5f21b55b274643bc6da031d8edd8d":"0xa6dd90cae5114480000","0xd744ac7e5310be696a63b003c40bd039370561c6":"0x5a87e7d7f5f6580000","0xd74a6e8d6aab34ce85976814c1327bd6ea0784d2":"0x152d02c7e14af6800000","0xd75a502a5b677287470f65c5aa51b87c10150572":"0x3130b4646385740000","0xd76dbaebc30d4ef67b03e6e6ecc6d84e004d502d":"0x6d76b9188e13850000","0xd771d9e0ca8a08a113775731434eb3270599c40d":"0x1158e460913d00000","0xd7788ef28658aa06cc53e1f3f0de58e5c371be78":"0x16a6502f15a1e540000","0xd77892e2273b235d7689e430e7aeed9cbce8a1f3":"0x6c6b935b8bbd400000","0xd781f7fc09184611568570b4986e2c72872b7ed0":"0x1159561065d5d0000","0xd785a8f18c38b9bc4ffb9b8fa8c7727bd642ee1c":"0x3635c9adc5dea00000","0xd78ecd25adc86bc2051d96f65364866b42a426b7":"0xd23058bf2f26120000","0xd78f84e38944a0e0255faece48ba4950d4bd39d2":"0x10f0cf064dd59200000","0xd79483f6a8444f2549d611afe02c432d15e11051":"0x1158e460913d00000","0xd79835e404fb86bf845fba090d6ba25e0c8866a6":"0x821ab0d44149800000","0xd79aff13ba2da75d46240cac0a2467c656949823":"0x5dc892aa1131c80000","0xd79db5ab43621a7a3da795e58929f3dd25af67d9":"0x6c6acc67d7b1d40000","0xd7a1431ee453d1e49a0550d1256879b4f5d10201":"0x5a87e7d7f5f6580000","0xd7ad09c6d32657685355b5c6ec8e9f57b4ebb982":"0x6acb3df27e1f880000","0xd7b740dff8c457668fdf74f6a266bfc1dcb723f9":"0x1158e460913d00000","0xd7c2803ed7b0e0837351411a8e6637d168bc5b05":"0x641daf5c91bd9358000","0xd7c6265dea11876c903b718e4cd8ab24fe265bde":"0x6c6b935b8bbd400000","0xd7ca7fdcfebe4588eff5421d1522b61328df7bf3":"0xd8e6001e6c302b0000","0xd7cdbd41fff20df727c70b6255c1ba7606055468":"0xad78ebc5ac6200000","0xd7d157e4c0a96437a6d285741dd23ec4361fa36b":"0x6c6b935b8bbd400000","0xd7d2c6fca8ad1f75395210b57de5dfd673933909":"0x126e72a69a50d00000","0xd7d3c75920590438b82c3e9515be2eb6ed7a8b1a":"0xcb49b44ba602d800000","0xd7d7f2caa462a41b3b30a34aeb3ba61010e2626f":"0x6c6b935b8bbd400000","0xd7e74afdbad55e96cebc5a374f2c8b768680f2b0":"0x55de6a779bbac0000","0xd7eb903162271c1afa35fe69e37322c8a4d29b11":"0x21e19e0c9bab2400000","0xd7ebddb9f93987779b680155375438db65afcb6a":"0x5741afeff944c0000","0xd7ef340e66b0d7afcce20a19cb7bfc81da33d94e":"0xa2a15d09519be00000","0xd7f370d4bed9d57c6f49c999de729ee569d3f4e4":"0xad78ebc5ac6200000","0xd7fa5ffb6048f96fb1aba09ef87b1c11dd7005e4":"0x3635c9adc5dea00000","0xd8069f84b521493f4715037f3226b25f33b60586":"0x678a932062e4180000","0xd815e1d9f4e2b5e57e34826b7cfd8881b8546890":"0xf015f25736420000","0xd81bd54ba2c44a6f6beb1561d68b80b5444e6dc6":"0x3f170d7ee43c430000","0xd82251456dc1380f8f5692f962828640ab9f2a03":"0x1088b53b2c202be0000","0xd82c6fedbdac98af2eed10b00f32b00056ca5a6d":"0xad78ebc5ac6200000","0xd82fd9fdf6996bedad2843159c06f37e0924337d":"0x5b8ccedc5aa7b00000","0xd83ad260e9a6f432fb6ea28743299b4a09ad658c":"0x6c6b935b8bbd400000","0xd843ee0863ce933e22f89c802d31287b9671e81c":"0xb98bc829a6f90000","0xd84b922f7841fc5774f00e14604ae0df42c8551e":"0xd96fce90cfabcc0000","0xd855b03ccb029a7747b1f07303e0a664793539c8":"0x6c6b935b8bbd400000","0xd85fdeaf2a61f95db902f9b5a53c9b8f9266c3ac":"0x6cf65a7e9047280000","0xd8715ef9176f850b2e30eb8e382707f777a6fbe9":"0x6c6b935b8bbd400000","0xd874b9dfae456a929ba3b1a27e572c9b2cecdfb3":"0x93739534d28680000","0xd8930a39c77357c30ad3a060f00b06046331fd62":"0x2c73c937742c500000","0xd89bc271b27ba3ab6962c94a559006ae38d5f56a":"0x6c6b935b8bbd400000","0xd8b77db9b81bbe90427b62f702b201ffc29ff618":"0x326d1e4396d45c0000","0xd8cd64e0284eec53aa4639afc4750810b97fab56":"0x1158e460913d00000","0xd8d64384249b776794063b569878d5e3b530a4b2":"0x9a043d0b2f9568000","0xd8d65420c18c2327cc5af97425f857e4a9fd51b3":"0x5f68e8131ecf800000","0xd8e5c9675ef4deed266b86956fc4590ea7d4a27d":"0x3635c9adc5dea00000","0xd8e8474292e7a051604ca164c0707783bb2885e8":"0x2d4ca05e2b43ca80000","0xd8eb78503ec31a54a90136781ae109004c743257":"0x3635c9adc5dea00000","0xd8eef4cf4beb01ee20d111748b61cb4d3f641a01":"0x9489237adb9a500000","0xd8f4bae6f84d910d6d7d5ac914b1e68372f94135":"0x56bc75e2d63100000","0xd8f62036f03b7635b858f1103f8a1d9019a892b6":"0x2b5e3af16b1880000","0xd8f665fd8cd5c2bcc6ddc0a8ae521e4dc6aa6060":"0x5c283d410394100000","0xd8f9240c55cff035523c6d5bd300d370dc8f0c95":"0xf732b66015a540000","0xd8f94579496725b5cb53d7985c989749aff849c0":"0x39992648a23c8a00000","0xd8fdf546674738c984d8fab857880b3e4280c09e":"0x1158e460913d00000","0xd8fe088fffce948f5137ee23b01d959e84ac4223":"0xc5b54a94fc0170000","0xd90f3009db437e4e11c780bec8896f738d65ef0d":"0xd8d726b7177a800000","0xd9103bb6b67a55a7fece2d1af62d457c2178946d":"0x3635c9adc5dea00000","0xd913f0771949753c4726acaa2bd3619c5c20ff77":"0xa2a15d09519be00000","0xd91d889164479ce436ece51763e22cda19b22d6b":"0xb66d88126800880000","0xd929c65d69d5bbaea59762662ef418bc21ad924a":"0x3635c9adc5dea00000","0xd930b27a78876485d0f48b70dd5336549679ca8f":"0x22b1c8c1227a00000","0xd931ac2668ba6a84481ab139735aec14b7bfbabf":"0x6c6b935b8bbd400000","0xd9383d4b6d17b3f9cd426e10fb944015c0d44bfb":"0x2b5e3af16b18800000","0xd942de4784f7a48716c0fd4b9d54a6e54c5f2f3e":"0x43c33c1937564800000","0xd944c8a69ff2ca1249690c1229c7192f36251062":"0x6acb3df27e1f880000","0xd94a57882a52739bbe2a0647c80c24f58a2b4f1c":"0x48b54e2adbe12b0000","0xd95342953c8a21e8b635eefac7819bea30f17047":"0x13f06c7ffef05d400000","0xd95c90ffbe5484864780b867494a83c89256d6e4":"0x58e7926ee858a00000","0xd96711540e2e998343d4f590b6fc8fac3bb8b31d":"0x5f5a4068b71cb00000","0xd96ac2507409c7a383ab2eee1822a5d738b36b56":"0xad78ebc5ac6200000","0xd96db33b7b5a950c3efa2dc31b10ba10a532ef87":"0x6c6b935b8bbd400000","0xd9775965b716476675a8d513eb14bbf7b07cd14a":"0x1132e6d2d23c5e40000","0xd97bc84abd47c05bbf457b2ef659d61ca5e5e48f":"0x69d17119dc5a80000","0xd97f4526dea9b163f8e8e33a6bcf92fb907de6ec":"0xf654aaf4db2f00000","0xd97fe6f53f2a58f6d76d752adf74a8a2c18e9074":"0x10cdf9b69a43570000","0xd99999a2490d9494a530cae4daf38554f4dd633e":"0x68155a43676e00000","0xd99df7421b9382e42c89b006c7f087702a0757c0":"0x1a055690d9db800000","0xd9b783d31d32adc50fa3eacaa15d92b568eaeb47":"0x733af90374c1b280000","0xd9d370fec63576ab15b318bf9e58364dc2a3552a":"0x56bc75e2d63100000","0xd9d42fd13ebd4bf69cac5e9c7e82483ab46dd7e9":"0x121ea68c114e5100000","0xd9e27eb07dfc71a706060c7f079238ca93e88539":"0x3635c9adc5dea00000","0xd9e3857efd1e202a441770a777a49dcc45e2e0d3":"0xc1daf81d8a3ce0000","0xd9ec2efe99ff5cf00d03a8317b92a24aef441f7e":"0x6c6b935b8bbd400000","0xd9ec8fe69b7716c0865af888a11b2b12f720ed33":"0xd8d726b7177a800000","0xd9f1b26408f0ec67ad1d0d6fe22e8515e1740624":"0x14d1120d7b1600000","0xd9f547f2c1de0ed98a53d161df57635dd21a00bd":"0x556f64c1fe7fa0000","0xd9ff115d01266c9f73b063c1c238ef3565e63b36":"0x24dce54d34a1a00000","0xda06044e293c652c467fe74146bf185b21338a1c":"0x3635c9adc5dea00000","0xda0b48e489d302b4b7bf204f957c1c9be383b0df":"0x6c6b935b8bbd400000","0xda0d4b7ef91fb55ad265f251142067f10376ced6":"0x43c33c1937564800000","0xda10978a39a46ff0bb848cf65dd9c77509a6d70e":"0x6c6b935b8bbd400000","0xda16dd5c3d1a2714358fe3752cae53dbab2be98c":"0x41bad155e6512200000","0xda214c023e2326ff696c00393168ce46ffac39ec":"0x3635c9adc5dea00000","0xda2a14f9724015d79014ed8e5909681d596148f1":"0x2a10f0f8a91ab8000","0xda2ad58e77deddede2187646c465945a8dc3f641":"0x23c757072b8dd00000","0xda3017c150dd0dce7fcf881b0a48d0d1c756c4c7":"0x56bf91b1a65eb0000","0xda34b2eae30bafe8daeccde819a794cd89e09549":"0x6c6b935b8bbd400000","0xda4a5f557f3bab390a92f49b9b900af30c46ae80":"0x21e19e0c9bab2400000","0xda505537537ffb33c415fec64e69bae090c5f60f":"0x8ac7230489e800000","0xda698d64c65c7f2b2c7253059cd3d181d899b6b7":"0x1004e2e45fb7ee0000","0xda7732f02f2e272eaf28df972ecc0ddeed9cf498":"0xb20bfbf6967890000","0xda7ad025ebde25d22243cb830ea1d3f64a566323":"0x1b1ae4d6e2ef500000","0xda855d53477f505ec4c8d5e8bb9180d38681119c":"0x12f939c99edab800000","0xda875e4e2f3cabe4f37e0eaed7d1f6dcc6ffef43":"0x6c6b935b8bbd400000","0xda8bbee182e455d2098acb338a6d45b4b17ed8b6":"0x6c6b935b8bbd400000","0xda982e9643ffece723075a40fe776e5ace04b29b":"0x8b8b6c9999bf20000","0xda9f55460946d7bfb570ddec757ca5773b58429a":"0x1b845d769eb4480000","0xdaa1bd7a9148fb865cd612dd35f162861d0f3bdc":"0xa638ab72d92c138000","0xdaa63cbda45dd487a3f1cd4a746a01bb5e060b90":"0x10416d9b02a89240000","0xdaa776a6754469d7b9267a89b86725e740da0fa0":"0x6acb3df27e1f880000","0xdaac91c1e859d5e57ed3084b50200f9766e2c52b":"0x15af1d78b58c400000","0xdaacdaf42226d15cb1cf98fa15048c7f4ceefe69":"0x1043561a8829300000","0xdab6bcdb83cf24a0ae1cb21b3b5b83c2f3824927":"0xa968163f0a57b400000","0xdabb0889fc042926b05ef57b2520910abc4b4149":"0x6c6b935b8bbd400000","0xdabc225042a6592cfa13ebe54efa41040878a5a2":"0xe11fad5d85ca30000","0xdac0c177f11c5c3e3e78f2efd663d13221488574":"0x3635c9adc5dea00000","0xdad136b88178b4837a6c780feba226b98569a94c":"0xad78ebc5ac6200000","0xdadbfafd8b62b92a24efd75256dd83abdbd7bbdb":"0x11164759ffb320000","0xdadc00ab7927603c2fcf31cee352f80e6c4d6351":"0x6c66e9a55378b80000","0xdae0d33eaa341569fa9ff5982684854a4a328a6e":"0x3635c9adc5dea00000","0xdae7201eab8c063302930d693929d07f95e71962":"0x91aec028b419810000","0xdaedd4ad107b271e89486cbf80ebd621dd974578":"0x6c6b935b8bbd400000","0xdb04fad9c49f9e880beb8fcf1d3a3890e4b3846f":"0x435ae6cc0c58e50000","0xdb0cc78f74d9827bdc8a6473276eb84fdc976212":"0x6c6b935b8bbd400000","0xdb1293a506e90cad2a59e1b8561f5e66961a6788":"0x6c6b935b8bbd400000","0xdb19a3982230368f0177219cb10cb259cdb2257c":"0x6c6b935b8bbd400000","0xdb23a6fef1af7b581e772cf91882deb2516fc0a7":"0xad78ebc5ac6200000","0xdb244f97d9c44b158a40ed9606d9f7bd38913331":"0x58788cb94b1d80000","0xdb288f80ffe232c2ba47cc94c763cf6fc9b82b0d":"0x49b9ca9a694340000","0xdb2a0c9ab64df58ddfb1dbacf8ba0d89c85b31b4":"0xd8d726b7177a800000","0xdb34745ede8576b499db01beb7c1ecda85cf4abe":"0x4563918244f400000","0xdb3f258ab2a3c2cf339c4499f75a4bd1d3472e9e":"0x5150ae84a8cdf00000","0xdb4bc83b0e6baadb1156c5cf06e0f721808c52c7":"0x2fb474098f67c00000","0xdb63122de7037da4971531fae9af85867886c692":"0xf0425b0641f340000","0xdb6c2a73dac7424ab0d031b66761122566c01043":"0xa2a15d09519be00000","0xdb6e560c9bc620d4bea3a94d47f7880bf47f2d5f":"0x4da0fdfcf05760000","0xdb6ff71b3db0928f839e05a7323bfb57d29c87aa":"0x3154c9729d05780000","0xdb73460b59d8e85045d5e752e62559875e42502e":"0x36330322d5238c0000","0xdb77b88dcb712fd17ee91a5b94748d720c90a994":"0x6c6b935b8bbd400000","0xdb7d4037081f6c65f9476b0687d97f1e044d0a1d":"0x23c757072b8dd00000","0xdb882eacedd0eff263511b312adbbc59c6b8b25b":"0x1ed4fde7a2236b00000","0xdb9371b30c4c844e59e03e924be606a938d1d310":"0x6c6b935b8bbd400000","0xdba4796d0ceb4d3a836b84c96f910afc103f5ba0":"0x908f493f737410000","0xdbadc61ed5f0460a7f18e51b2fb2614d9264a0e0":"0x22b1c8c1227a00000","0xdbb6ac484027041642bbfd8d80f9d0c1cf33c1eb":"0x6c6b935b8bbd400000","0xdbbcbb79bf479a42ad71dbcab77b5adfaa872c58":"0x5dc892aa1131c80000","0xdbc1ce0e49b1a705d22e2037aec878ee0d75c703":"0xd8d726b7177a80000","0xdbc1d0ee2bab531140de137722cd36bdb4e47194":"0xad78ebc5ac6200000","0xdbc59ed88973dead310884223af49763c05030f1":"0x1158e460913d00000","0xdbc66965e426ff1ac87ad6eb78c1d95271158f9f":"0xfc936392801c0000","0xdbcbcd7a57ea9db2349b878af34b1ad642a7f1d1":"0xad78ebc5ac6200000","0xdbd51cdf2c3bfacdff106221de2e19ad6d420414":"0x5f68e8131ecf800000","0xdbd71efa4b93c889e76593de609c3b04cbafbe08":"0x1158e460913d00000","0xdbf5f061a0f48e5e69618739a77d2ec19768d201":"0x83d6c7aab63600000","0xdbf8b13967f55125272de0562536c450ba5655a0":"0x6ef578f06e0ccb0000","0xdbfb1bb464b8a58e500d2ed8de972c45f5f1c0fb":"0x56bc75e2d631000000","0xdc067ed3e12d711ed475f5156ef7e71a80d934b9":"0x205b4dfa1ee74780000","0xdc087f9390fb9e976ac23ab689544a0942ec2021":"0x62a992e53a0af00000","0xdc1eb9b6e64351f56424509645f83e79eee76cf4":"0xd8d726b7177a800000","0xdc1f1979615f082140b8bb78c67b27a1942713b1":"0x340aad21b3b700000","0xdc23b260fcc26e7d10f4bd044af794579460d9da":"0x1b1b6bd7af64c70000","0xdc29119745d2337320da51e19100c948d980b915":"0x8ac7230489e800000","0xdc2d15a69f6bb33b246aef40450751c2f6756ad2":"0x6c341080bd1fb00000","0xdc3dae59ed0fe18b58511e6fe2fb69b219689423":"0x56bc75e2d63100000","0xdc3f0e7672f71fe7525ba30b9755183a20b9166a":"0x2089cf57b5b3e968000","0xdc4345d6812e870ae90c568c67d2c567cfb4f03c":"0x16b352da5e0ed300000","0xdc44275b1715baea1b0345735a29ac42c9f51b4f":"0x3f19beb8dd1ab00000","0xdc46c13325cd8edf0230d068896486f007bf4ef1":"0x487a9a304539440000","0xdc51b2dc9d247a1d0e5bc36ca3156f7af21ff9f6":"0x3635c9adc5dea00000","0xdc5305b4020a06b49d657c7ca34c35c91c5f2c56":"0x17df6c10dbeba970000","0xdc57345b38e0f067c9a31d9deac5275a10949321":"0xad78ebc5ac6200000","0xdc57477dafa42f705c7fe40eae9c81756e0225f1":"0x1b1b8128a7416e0000","0xdc5f5ad663a6f263327d64cac9cb133d2c960597":"0x6c6b935b8bbd400000","0xdc703a5f3794c84d6cb3544918cae14a35c3bd4f":"0x6449e84e47a8a80000","0xdc738fb217cead2f69594c08170de1af10c419e3":"0x152d02c7e14af6800000","0xdc76e85ba50b9b31ec1e2620bce6e7c8058c0eaf":"0x1158e460913d00000","0xdc83b6fd0d512131204707eaf72ea0c8c9bef976":"0x6c6b935b8bbd400000","0xdc8c2912f084a6d184aa73638513ccbc326e0102":"0x4633bc36cbc2dc0000","0xdc911cf7dc5dd0813656670528e9338e67034786":"0x6c6b935b8bbd400000","0xdcb03bfa6c1131234e56b7ea7c4f721487546b7a":"0x487a9a304539440000","0xdcb64df43758c7cf974fa660484fbb718f8c67c1":"0x43c33c1937564800000","0xdcc52d8f8d9fc742a8b82767f0555387c563efff":"0x1b1ae4d6e2ef500000","0xdccb370ed68aa922283043ef7cad1b9d403fc34a":"0xd8d726b7177a800000","0xdccca42045ec3e16508b603fd936e7fd7de5f36a":"0x11164759ffb320000","0xdcd10c55bb854f754434f1219c2c9a98ace79f03":"0xd8d8583fa2d52f0000","0xdcd5bca2005395b675fde5035659b26bfefc49ee":"0xaadec983fcff40000","0xdcdbbd4e2604e40e1710cc6730289dccfad3892d":"0xf95dd2ec27cce00000","0xdce30c31f3ca66721ecb213c809aab561d9b52e4":"0x6c6b935b8bbd400000","0xdcf33965531380163168fc11f67e89c6f1bc178a":"0x122776853406b08000","0xdcf6b657266e91a4dae6033ddac15332dd8d2b34":"0x5f68e8131ecf800000","0xdcf9719be87c6f46756db4891db9b611d2469c50":"0x3635c9adc5dea00000","0xdcfff3e8d23c2a34b56bd1b3bd45c79374432239":"0x10f0cf064dd59200000","0xdd04eee74e0bf30c3f8d6c2c7f52e0519210df93":"0x4563918244f400000","0xdd26b429fd43d84ec179825324bad5bfb916b360":"0x116bf95bc8432980000","0xdd2a233adede66fe1126d6c16823b62a021feddb":"0x6c6b935b8bbd400000","0xdd2bdfa917c1f310e6fa35aa8af16939c233cd7d":"0x15af1d78b58c400000","0xdd35cfdbcb993395537aecc9f59085a8d5ddb6f5":"0x3635c9adc5dea00000","0xdd47189a3e64397167f0620e484565b762bfbbf4":"0x6449e84e47a8a80000","0xdd4dd6d36033b0636fcc8d0938609f4dd64f4a86":"0x340aad21b3b700000","0xdd4f5fa2111db68f6bde3589b63029395b69a92d":"0x8963dd8c2c5e00000","0xdd63042f25ed32884ad26e3ad959eb94ea36bf67":"0x484d7fde7d593f00000","0xdd65f6e17163b5d203641f51cc7b24b00f02c8fb":"0xad78ebc5ac6200000","0xdd6c062193eac23d2fdbf997d5063a346bb3b470":"0x1158e460913d00000","0xdd7bcda65924aaa49b80984ae173750258b92847":"0x21e19e0c9bab2400000","0xdd7ff441ba6ffe3671f3c0dabbff1823a5043370":"0x6c6b935b8bbd400000","0xdd8254121a6e942fc90828f2431f511dad7f32e6":"0xa39b29e1f360e80000","0xdd8af9e7765223f4446f44d3d509819a3d3db411":"0x21e19e0c9bab2400000","0xdd95dbe30f1f1877c5dd7684aeef302ab6885192":"0x1c5d8d6eb3e32500000","0xdd967c4c5f8ae47e266fb416aad1964ee3e7e8c3":"0x1a420db02bd7d580000","0xdd9b485a3b1cd33a6a9c62f1e5bee92701856d25":"0xc3383ed031b7e8000","0xdda371e600d30688d4710e088e02fdf2b9524d5f":"0x177224aa844c7200000","0xdda4ed2a58a8dd20a73275347b580d71b95bf99a":"0x15a13cc201e4dc0000","0xdda4ff7de491c687df4574dd1b17ff8f246ba3d1":"0x42684a41abfd8400000","0xddab6b51a9030b40fb95cf0b748a059c2417bec7":"0x6c6b935b8bbd400000","0xddab75fb2ff9fecb88f89476688e2b00e367ebf9":"0x41bad155e6512200000","0xddabf13c3c8ea4e3d73d78ec717afafa430e5479":"0x8cf23f909c0fa000000","0xddac312a9655426a9c0c9efa3fd82559ef4505bf":"0x15be6174e1912e0000","0xddac6bf4bbdd7d597d9c686d0695593bedccc7fa":"0x2ee449550898e40000","0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121a":"0x21e19e0c9bab2400000","0xddbddd1bbd38ffade0305d30f02028d92e9f3aa8":"0x6c6b935b8bbd400000","0xddbee6f094eae63420b003fb4757142aea6cd0fd":"0x6c6b935b8bbd400000","0xddd69c5b9bf5eb5a39cee7c3341a120d973fdb34":"0x6bc14b8f8e1b350000","0xdddd7b9e6eab409b92263ac272da801b664f8a57":"0x69e10de76676d0800000","0xdde670d01639667576a22dd05d3246d61f06e083":"0x1731790534df20000","0xdde77a4740ba08e7f73fbe3a1674912931742eeb":"0x434fe4d4382f1d48000","0xdde8f0c31b7415511dced1cd7d46323e4bd12232":"0x57473d05dabae80000","0xdde969aef34ea87ac299b7597e292b4a0155cc8a":"0x1032f2594a01738000","0xddf0cce1fe996d917635f00712f4052091dff9ea":"0x6c6b935b8bbd400000","0xddf3ad76353810be6a89d731b787f6f17188612b":"0x43c33c1937564800000","0xddf5810a0eb2fb2e32323bb2c99509ab320f24ac":"0x3ca5c66d9bc44300000","0xddf95c1e99ce2f9f5698057c19d5c94027ee4a6e":"0x14542ba12a337c00000","0xddfafdbc7c90f1320e54b98f374617fbd01d109f":"0xb98bc829a6f90000","0xddfcca13f934f0cfbe231da13039d70475e6a1d0":"0x3638221660a5aa8000","0xde027efbb38503226ed871099cb30bdb02af1335":"0x3635c9adc5dea00000","0xde06d5ea777a4eb1475e605dbcbf43444e8037ea":"0xa968163f0a57b400000","0xde07fb5b7a464e3ba7fbe09e9acb271af5338c58":"0x2b5e3af16b1880000","0xde1121829c9a08284087a43fbd2fc1142a3233b4":"0x3635c9adc5dea00000","0xde176b5284bcee3a838ba24f67fc7cbf67d78ef6":"0x209ce08c962b00000","0xde212293f8f1d231fa10e609470d512cb8ffc512":"0x6c6b935b8bbd400000","0xde30e49e5ab313214d2f01dcabce8940b81b1c76":"0xaadec983fcff40000","0xde33d708a3b89e909eaf653b30fdc3a5d5ccb4b3":"0x99c88229fd4c20000","0xde374299c1d07d79537385190f442ef9ca24061f":"0x73f75d1a085ba0000","0xde42fcd24ce4239383304367595f068f0c610740":"0x2722a70f1a9a00000","0xde50868eb7e3c71937ec73fa89dd8b9ee10d45aa":"0x3635c9adc5dea00000","0xde55de0458f850b37e4d78a641dd2eb2dd8f38ce":"0xd8d726b7177a800000","0xde5b005fe8daae8d1f05de3eda042066c6c4691c":"0x3ba1910bf341b00000","0xde612d0724e84ea4a7feaa3d2142bd5ee82d3201":"0x1158e460913d00000","0xde6d363106cc6238d2f092f0f0372136d1cd50c6":"0x121ea68c114e5100000","0xde7dee220f0457a7187d56c1c41f2eb00ac56021":"0x2225f39c85052a0000","0xde82cc8d4a1bb1d9434392965b3e80bad3c03d4f":"0x50186e75de97a60000","0xde97f4330700b48c496d437c91ca1de9c4b01ba4":"0x9dcc0515b56e0c0000","0xde9eff4c798811d968dccb460d9b069cf30278e0":"0x15af1d78b58c400000","0xdeb1bc34d86d4a4dde2580d8beaf074eb0e1a244":"0x55a6e79ccd1d300000","0xdeb2495d6aca7b2a6a2d138b6e1a42e2dc311fdd":"0x6c6b935b8bbd400000","0xdeb97254474c0d2f5a7970dcdb2f52fb1098b896":"0x3635c9adc5dea00000","0xdeb9a49a43873020f0759185e20bbb4cf381bb8f":"0xb78edb0bf2e5e0000","0xdebbdd831e0f20ae6e378252decdf92f7cf0c658":"0x6c6b935b8bbd400000","0xdec3eec2640a752c466e2b7e7ee685afe9ac41f4":"0x47c99753596b288000","0xdec82373ade8ebcf2acb6f8bc2414dd7abb70d77":"0xad78ebc5ac6200000","0xdec8a1a898f1b895d8301fe64ab3ad5de941f689":"0x2ab4f67e8a730f8000","0xdec99e972fca7177508c8e1a47ac22d768acab7c":"0x6c6b935b8bbd400000","0xded877378407b94e781c4ef4af7cfc5bc220b516":"0x143179d86911020000","0xdee942d5caf5fac11421d86b010b458e5c392990":"0xd8d726b7177a800000","0xdeee2689fa9006b59cf285237de53b3a7fd01438":"0x186579f29e20250000","0xdefddfd59b8d2c154eecf5c7c167bf0ba2905d3e":"0x512cb5e2647420000","0xdefe9141f4704599159d7b223de42bffd80496b3":"0x56bc75e2d63100000","0xdf098f5e4e3dffa51af237bda8652c4f73ed9ca6":"0x1b36a6444a3e180000","0xdf0d08617bd252a911df8bd41a39b83ddf809673":"0x21e19e0c9bab2400000","0xdf0ff1f3d27a8ec9fb8f6b0cb254a63bba8224a5":"0xecc5202945d0020000","0xdf1fa2e20e31985ebe2c0f0c93b54c0fb67a264b":"0xad78ebc5ac6200000","0xdf211cd21288d6c56fae66c3ff54625dd4b15427":"0x8786cd764e1f2c0000","0xdf236bf6abf4f3293795bf0c28718f93e3b1b36b":"0x487a9a304539440000","0xdf31025f5649d2c6eea41ed3bdd3471a790f759a":"0x1158e460913d00000","0xdf37c22e603aedb60a627253c47d8ba866f6d972":"0x5150ae84a8cdf000000","0xdf3b72c5bd71d4814e88a62321a93d4011e3578b":"0xd8d726b7177a800000","0xdf3f57b8ee6434d047223def74b20f63f9e4f955":"0xd9462c6cb4b5a0000","0xdf44c47fc303ac76e74f97194cca67b5bb3c023f":"0x2009c5c8bf6fdc0000","0xdf47a61b72535193c561cccc75c3f3ce0804a20e":"0x15935c0b4e3d780000","0xdf47a8ef95f2f49f8e6f58184154145d11f72797":"0x678a932062e4180000","0xdf53003346d65c5e7a646bc034f2b7d32fcbe56a":"0x6c6b935b8bbd400000","0xdf57353aaff2aadb0a04f9014e8da7884e86589c":"0x84886a66e4fb00000","0xdf60f18c812a11ed4e2776e7a80ecf5e5305b3d6":"0x30ca024f987b900000","0xdf6485c4297ac152b289b19dde32c77ec417f47d":"0x3635c9adc5dea00000","0xdf660a91dab9f730f6190d50c8390561500756ca":"0x6c6b935b8bbd400000","0xdf6ed6006a6abe886ed33d95a4de28fc12183927":"0x3154c9729d05780000","0xdf8510793eee811c2dab1c93c6f4473f30fbef5b":"0x3635c9adc5dea00000","0xdf8d48b1eb07b3c217790e6c2df04dc319e7e848":"0x1b1ae4d6e2ef500000","0xdfa6b8b8ad3184e357da282951d79161cfb089bc":"0x15af1d78b58c400000","0xdfaf31e622c03d9e18a0ddb8be60fbe3e661be0a":"0x21e171a3ec9f72c0000","0xdfb1626ef48a1d7d7552a5e0298f1fc23a3b482d":"0x5ce895dd949efa0000","0xdfb4d4ade52fcc818acc7a2c6bb2b00224658f78":"0x1a420db02bd7d580000","0xdfbd4232c17c407a980db87ffbcda03630e5c459":"0x1dfc7f924923530000","0xdfcbdf09454e1a5e4a40d3eef7c5cf1cd3de9486":"0xd8d726b7177a800000","0xdfdbcec1014b96da2158ca513e9c8d3b9af1c3d0":"0x6c6b935b8bbd400000","0xdfded2574b27d1613a7d98b715159b0d00baab28":"0x43c33c1937564800000","0xdfdf43393c649caebe1bb18059decb39f09fb4e8":"0x15af1d78b58c400000","0xdfe3c52a92c30396a4e33a50170dc900fcf8c9cf":"0x2b5e3af16b1880000","0xdfe549fe8430e552c6d07cc3b92ccd43b12fb50f":"0x48875eaf6562a0000","0xdfe929a61c1b38eddbe82c25c2d6753cb1e12d68":"0x15d1cf4176aeba0000","0xdff1b220de3d8e9ca4c1b5be34a799bcded4f61c":"0x14e4e353ea39420000","0xdff4007931786593b229efe5959f3a4e219e51af":"0x10afc1ade3b4ed40000","0xdffcea5421ec15900c6ecfc777184e140e209e24":"0x115473824344e0000","0xe001aba77c02e172086c1950fffbcaa30b83488f":"0x6acb3df27e1f880000","0xe00484788db50fc6a48e379d123e508b0f6e5ab1":"0x3635c9adc5dea00000","0xe0060462c47ff9679baef07159cae08c29f274a9":"0x6c6b935b8bbd400000","0xe00d153b10369143f97f54b8d4ca229eb3e8f324":"0x83d6c7aab63600000","0xe012db453827a58e16c1365608d36ed658720507":"0x6c6b935b8bbd400000","0xe01547ba42fcafaf93938becf7699f74290af74f":"0x6c6b935b8bbd400000","0xe016dc138e25815b90be3fe9eee8ffb2e105624f":"0x1b1ae4d6e2ef500000","0xe01859f242f1a0ec602fa8a3b0b57640ec89075e":"0x1e162c177be5cc0000","0xe020e86362b487752836a6de0bc02cd8d89a8b6a":"0x14542ba12a337c00000","0xe023f09b2887612c7c9cf1988e3a3a602b3394c9":"0x6c6b935b8bbd400000","0xe0272213e8d2fd3e96bd6217b24b4ba01b617079":"0x1158e460913d00000","0xe02b74a47628be315b1f76b315054ad44ae9716f":"0xd8d726b7177a800000","0xe03220c697bcd28f26ef0b74404a8beb06b2ba7b":"0x1b1ae4d6e2ef5000000","0xe0352fdf819ba265f14c06a6315c4ac1fe131b2e":"0x3635c9adc5dea00000","0xe0388aeddd3fe2ad56f85748e80e710a34b7c92e":"0x1b1ae4d6e2ef500000","0xe03c00d00388ecbf4f263d0ac778bb41a57a40d9":"0x3636c9796436740000","0xe04920dc6ecc1d6ecc084f88aa0af5db97bf893a":"0x9ddc1e3b901180000","0xe04972a83ca4112bc871c72d4ae1616c2f0728db":"0xe81c77f29a32f0000","0xe04ff5e5a7e2af995d8857ce0290b53a2b0eda5d":"0x3635c9adc5dea00000","0xe05029aceb0778675bef1741ab2cd2931ef7c84b":"0x10f0dbae61009528000","0xe056bf3ff41c26256fef51716612b9d39ade999c":"0x56be757a12e0a8000","0xe061a4f2fc77b296d19ada238e49a5cb8ecbfa70":"0xd8d726b7177a800000","0xe0663e8cd66792a641f56e5003660147880f018e":"0x6c6b935b8bbd400000","0xe0668fa82c14d6e8d93a53113ef2862fa81581bc":"0x2f2f39fc6c54000000","0xe069c0173352b10bf6834719db5bed01adf97bbc":"0x10634f8e5323b0000","0xe06c29a81517e0d487b67fb0b6aabc4f57368388":"0x15be6174e1912e0000","0xe06cb6294704eea7437c2fc3d30773b7bf38889a":"0x116dc3a8994b30000","0xe07137ae0d116d033533c4eab496f8a9fb09569c":"0x4be4e7267b6ae00000","0xe076db30ab486f79194ebbc45d8fab9a9242f654":"0x106607e3494baa00000","0xe07ebbc7f4da416e42c8d4f842aba16233c12580":"0x6c6b935b8bbd400000","0xe081ca1f4882db6043d5a9190703fde0ab3bf56d":"0x15af1d78b58c400000","0xe083d34863e0e17f926b7928edff317e998e9c4b":"0x15af1d78b58c400000","0xe08b9aba6bd9d28bc2056779d2fbf0f2855a3d9d":"0x6c6b935b8bbd400000","0xe08bc29c2b48b169ff2bdc16714c586e6cb85ccf":"0x1158e460913d00000","0xe08c60313106e3f9334fe6f7e7624d211130c077":"0x22b1c8c1227a00000","0xe09c68e61998d9c81b14e4ee802ba7adf6d74cdb":"0xd8d726b7177a800000","0xe09fea755aee1a44c0a89f03b5deb762ba33006f":"0x3ba289bc944ff70000","0xe0a254ac09b9725bebc8e460431dd0732ebcabbf":"0x14542ba12a337c00000","0xe0aa69365555b73f282333d1e30c1bbd072854e8":"0x17b7883c06916600000","0xe0bad98eee9698dbf6d76085b7923de5754e906d":"0x90d972f32323c0000","0xe0c4ab9072b4e6e3654a49f8a8db026a4b3386a9":"0x6c6b935b8bbd400000","0xe0ce80a461b648a501fd0b824690c8868b0e4de8":"0x1b1ae4d6e2ef500000","0xe0cf698a053327ebd16b7d7700092fe2e8542446":"0x52a34cbb61f578000","0xe0d231e144ec9107386c7c9b02f1702ceaa4f700":"0x10f0dbae61009528000","0xe0d76b7166b1f3a12b4091ee2b29de8caa7d07db":"0x6c6b935b8bbd400000","0xe0e0b2e29dde73af75987ee4446c829a189c95bc":"0x813ca56906d340000","0xe0e978753d982f7f9d1d238a18bd4889aefe451b":"0x20dd68aaf3289100000","0xe0f372347c96b55f7d4306034beb83266fd90966":"0x15af1d78b58c400000","0xe0f903c1e48ac421ab48528f3d4a2648080fe043":"0x3708baed3d68900000","0xe0ff0bd9154439c4a5b7233e291d7d868af53f33":"0x1579216a51bbfb0000","0xe10ac19c546fc2547c61c139f5d1f45a6666d5b0":"0x102da6fd0f73a3c0000","0xe10c540088113fa6ec00b4b2c8824f8796e96ec4":"0x320f4509ab1ec7c00000","0xe1173a247d29d8238df0922f4df25a05f2af77c3":"0x878c95d560f30478000","0xe1203eb3a723e99c2220117ca6afeb66fa424f61":"0x200ef929e3256fe0000","0xe131f87efc5ef07e43f0f2f4a747b551d750d9e6":"0x43c25e0dcc1bd1c0000","0xe1334e998379dfe983177062791b90f80ee22d8d":"0x1b1ae4d6e2ef500000","0xe13540ecee11b212e8b775dc8e71f374aae9b3f8":"0x6c6b935b8bbd400000","0xe13b3d2bbfdcbc8772a23315724c1425167c5688":"0x37f379141ed04b8000","0xe1443dbd95cc41237f613a48456988a04f683282":"0xd8d8583fa2d52f0000","0xe14617f6022501e97e7b3e2d8836aa61f0ff2dba":"0xad78ebc5ac6200000","0xe149b5726caf6d5eb5bf2acc41d4e2dc328de182":"0x692ae8897081d00000","0xe154daeadb545838cbc6aa0c55751902f528682a":"0x10afc1ade3b4ed40000","0xe16ce35961cd74bd590d04c4ad4a1989e05691c6":"0x7ea28327577080000","0xe172dfc8f80cd1f8cd8539dc26082014f5a8e3e8":"0xa2a15d09519be00000","0xe177e0c201d335ba3956929c571588b51c5223ae":"0x6c6b935b8bbd400000","0xe17812f66c5e65941e186c46922b6e7b2f0eeb46":"0x62a992e53a0af00000","0xe180de9e86f57bafacd7904f9826b6b4b26337a3":"0x2d041d705a2c600000","0xe192489b85a982c1883246d915b229cb13207f38":"0x10f0cf064dd59200000","0xe1953c6e975814c571311c34c0f6a99cdf48ab82":"0x2b5e3af16b1880000","0xe1ae029b17e373cde3de5a9152201a14cac4e119":"0x56b55ae58ca400000","0xe1b2aca154b8e0766c4eba30bc10c7f35036f368":"0x115473824344e0000","0xe1b39b88d9900dbc4a6cdc481e1060080a8aec3c":"0x6c6b935b8bbd400000","0xe1b63201fae1f129f95c7a116bd9dde5159c6cda":"0x4d60573a2f0c9ef0000","0xe1bfaa5a45c504428923c4a61192a55b1400b45d":"0x90f534608a72880000","0xe1c607c0a8a060da8f02a8eb38a013ea8cda5b8c":"0x2ba39e82ed5d740000","0xe1cb83ec5eb6f1eeb85e99b2fc63812fde957184":"0x43c33c1937564800000","0xe1d91b0954cede221d6f24c7985fc59965fb98b8":"0x6c6b935b8bbd400000","0xe1dfb5cc890ee8b2877e885d267c256187d019e6":"0x56bc75e2d63100000","0xe1e8c50b80a352b240ce7342bbfdf5690cc8cb14":"0x155bd9307f9fe80000","0xe1f63ebbc62c7b7444040eb99623964f7667b376":"0x1158e460913d00000","0xe206fb7324e9deb79e19903496d6961b9be56603":"0x56bc75e2d63100000","0xe207578e1f4ddb8ff6d5867b39582d71b9812ac5":"0xd255d112e103a00000","0xe208812a684098f3da4efe6aba256256adfe3fe6":"0x6c6b935b8bbd400000","0xe20954d0f4108c82d4dcb2148d26bbd924f6dd24":"0x21e19e0c9bab2400000","0xe20bb9f3966419e14bbbaaaa6789e92496cfa479":"0xbbd825030752760000","0xe20d1bcb71286dc7128a9fc7c6ed7f733892eef5":"0x3664f8e7c24af40000","0xe2191215983f33fd33e22cd4a2490054da53fddc":"0xdb44e049bb2c0000","0xe2198c8ca1b399f7521561fd5384a7132fba486b":"0x3708baed3d68900000","0xe21c778ef2a0d7f751ea8c074d1f812243863e4e":"0x11fc70e2c8c8ae18000","0xe229e746a83f2ce253b0b03eb1472411b57e5700":"0x1369fb96128ac480000","0xe22b20c77894463baf774cc256d5bddbbf7ddd09":"0x3635c9adc5dea00000","0xe230fe1bff03186d0219f15d4c481b7d59be286a":"0x1fd741e8088970000","0xe237baa4dbc9926e32a3d85d1264402d54db012f":"0x6c6b935b8bbd400000","0xe24109be2f513d87498e926a286499754f9ed49e":"0x300ea8ad1f27ca0000","0xe246683cc99db7c4a52bcbacaab0b32f6bfc93d7":"0x6c6b935b8bbd400000","0xe25a167b031e84616d0f013f31bda95dcc6350b9":"0x23c757072b8dd000000","0xe25b9f76b8ad023f057eb11ad94257a0862e4e8c":"0x6c6b935b8bbd400000","0xe26657f0ed201ea2392c9222b80a7003608ddf30":"0x22b1c8c1227a00000","0xe26bf322774e18288769d67e3107deb7447707b8":"0x6c6b935b8bbd400000","0xe2728a3e8c2aaac983d05dc6877374a8f446eee9":"0xab640391201300000","0xe28b062259e96eeb3c8d4104943f9eb325893cf5":"0x487a9a304539440000","0xe28dbc8efd5e416a762ec0e018864bb9aa83287b":"0x531f200ab3e030a8000","0xe2904b1aefa056398b6234cb35811288d736db67":"0x22b1c8c1227a00000","0xe29d8ae452dcf3b6ac645e630409385551faae0a":"0x45a0da4adf5420000","0xe2bbf84641e3541f6c33e6ed683a635a70bde2ec":"0x1b413cfcbf59b78000","0xe2cf360aa2329eb79d2bf7ca04a27a17c532e4d8":"0x58788cb94b1d80000","0xe2df23f6ea04becf4ab701748dc0963184555cdb":"0x6c6b935b8bbd400000","0xe2e15c60dd381e3a4be25071ab249a4c5c5264da":"0x7f6bc49b81b5370000","0xe2e26e4e1dcf30d048cc6ecf9d51ec1205a4e926":"0xd8d726b7177a800000","0xe2ee691f237ee6529b6557f2fcdd3dcf0c59ec63":"0x127729c14687c200000","0xe2efa5fca79538ce6068bf31d2c516d4d53c08e5":"0x71cc408df63400000","0xe2efd0a9bc407ece03d67e8ec8e9d283f48d2a49":"0x299b33bf9c584e00000","0xe2f40d358f5e3fe7463ec70480bd2ed398a7063b":"0x1158e460913d00000","0xe2f9383d5810ea7b43182b8704b62b27f5925d39":"0x15af1d78b58c400000","0xe2ff9ee4b6ecc14141cc74ca52a9e7a2ee14d908":"0x4be4e7267b6ae00000","0xe30212b2011bb56bdbf1bc35690f3a4e0fd905ea":"0x1b2df9d219f57980000","0xe303167f3d4960fe881b32800a2b4aeff1b088d4":"0x6c6b935b8bbd400000","0xe304a32f05a83762744a9542976ff9b723fa31ea":"0x5572f240a346200000","0xe308435204793764f5fcbe65eb510f5a744a655a":"0xad78ebc5ac6200000","0xe309974ce39d60aadf2e69673251bf0e04760a10":"0xdc55fdb17647b0000","0xe31b4eef184c24ab098e36c802714bd4743dd0d4":"0xad78ebc5ac6200000","0xe321bb4a946adafdade4571fb15c0043d39ee35f":"0x556475382b4c9e0000","0xe3263ce8af6db3e467584502ed7109125eae22a5":"0x6c6b935b8bbd400000","0xe32b1c4725a1875449e98f970eb3e54062d15800":"0xad78ebc5ac6200000","0xe32f95766d57b5cd4b173289d6876f9e64558194":"0x56bc75e2d63100000","0xe33840d8bca7da98a6f3d096d83de78b70b71ef8":"0x6c6b935b8bbd400000","0xe338e859fe2e8c15554848b75caecda877a0e832":"0x61acff81a78ad40000","0xe33d980220fab259af6a1f4b38cf0ef3c6e2ea1a":"0x6c6b935b8bbd400000","0xe33df4ce80ccb62a76b12bcdfcecc46289973aa9":"0x14542ba12a337c00000","0xe33ff987541dde5cdee0a8a96dcc3f33c3f24cc2":"0x2a5a058fc295ed000000","0xe3410bb7557cf91d79fa69d0dfea0aa075402651":"0x6c6b935b8bbd400000","0xe341642d40d2afce2e9107c67079ac7a2660086c":"0x15af1d78b58c400000","0xe35453eef2cc3c7a044d0ac134ba615908fa82ee":"0x7ff1ccb7561df0000","0xe36a8ea87f1e99e8a2dc1b2608d166667c9dfa01":"0x56bc75e2d63100000","0xe3712701619ca7623c55db3a0ad30e867db0168b":"0x1158e460913d00000","0xe37f5fdc6ec97d2f866a1cfd0d3a4da4387b22b5":"0x21e19e0c9bab2400000","0xe3878f91ca86053fced5444686a330e09cc388fb":"0xa844a7424d9c80000","0xe38b91b35190b6d9deed021c30af094b953fdcaa":"0x1ceaf795b6b860000","0xe38ef28a5ed984a7db24a1ae782dfb87f397dfc6":"0x7c0860e5a80dc0000","0xe3925509c8d0b2a6738c5f6a72f35314491248ce":"0x36e9a8669a44768000","0xe3933d61b77dcdc716407f8250bc91e4ffaeb09d":"0x1256986c95891c200000","0xe3951de5aefaf0458768d774c254f7157735e505":"0x56c95de8e8ca1d0000","0xe399c81a1d701b44f0b66f3399e66b275aaaf8c1":"0x3635c9adc5dea00000","0xe39b11a8ab1ff5e22e5ae6517214f73c5b9b55dc":"0x6c6b935b8bbd400000","0xe39e46e15d22ce56e0c32f1877b7d1a264cf94f3":"0x43c33c1937564800000","0xe3a4621b66004588e31206f718cb00a319889cf0":"0x6c6b935b8bbd400000","0xe3a4f83c39f85af9c8b1b312bfe5fc3423afa634":"0x18d993f34aef10000","0xe3a89a1927cc4e2d43fbcda1e414d324a7d9e057":"0xb23e2a936dec60000","0xe3ab3ca9b870e3f548517306bba4de2591afafc2":"0x410e34aecc8cd30000","0xe3b3d2c9bf570be6a2f72adca1862c310936a43c":"0x56d2aa3a5c09a0000","0xe3c0c128327a9ad80148139e269773428e638cb0":"0x6c6b935b8bbd400000","0xe3c812737ac606baf7522ad817428a36050e7a34":"0x692ae8897081d00000","0xe3cffe239c64e7e20388e622117391301b298696":"0x1b1ae4d6e2ef500000","0xe3d3eaa299887865569e88be219be507189be1c9":"0x18ba6fa92e93160000","0xe3d8bf4efe84b1616d1b89e427ddc6c8830685ae":"0x6c6b935b8bbd400000","0xe3d915eda3b825d6ee4af9328d32ac18ada35497":"0x1b1ae4d6e2ef500000","0xe3da4f3240844c9b6323b4996921207122454399":"0x27190a952df4be58000","0xe3eb2c0a132a524f72ccc0d60fee8b41685d39e2":"0x6acb3df27e1f880000","0xe3ec18a74ed43855409a26ade7830de8e42685ef":"0x11164759ffb320000","0xe3ece1f632711d13bfffa1f8f6840871ee58fb27":"0xd8d726b7177a800000","0xe3f80b40fb83fb97bb0d5230af4f6ed59b1c7cc8":"0x487a9a304539440000","0xe3ffb02cb7d9ea5243701689afd5d417d7ed2ece":"0x43a77aabd00780000","0xe400d651bb3f2d23d5f849e6f92d9c5795c43a8a":"0x90f534608a72880000","0xe406f5dd72cab66d8a6ecbd6bfb494a7b6b09afe":"0x56bc75e2d63100000","0xe408aa99835307eea4a6c5eb801fe694117f707d":"0x1b1ae4d6e2ef500000","0xe408fceaa1b98f3c640f48fcba39f056066d6308":"0x21e19e0c9bab2400000","0xe40a7c82e157540a0b00901dbb86c716e1a062da":"0x2b31d2425f6740000","0xe41aea250b877d423a63ba2bce2f3a61c0248d56":"0xe18398e7601900000","0xe430c0024fdbf73a82e21fccf8cbd09138421c21":"0xd8d726b7177a800000","0xe4324912d64ea3aef76b3c2ff9df82c7e13ae991":"0x6c6b935b8bbd400000","0xe4368bc1420b35efda95fafbc73090521916aa34":"0xd8d726b7177a800000","0xe437acbe0f6227b0e36f36e4bcf7cf613335fb68":"0xad78ebc5ac6200000","0xe44b7264dd836bee8e87970340ed2b9aed8ed0a5":"0x138e7faa01a803a0000","0xe44ea51063405154aae736be2bf1ee3b9be639ae":"0xd8d726b7177a800000","0xe4625501f52b7af52b19ed612e9d54fdd006b492":"0xb5a905a56ddd00000","0xe4715956f52f15306ee9506bf82bccc406b3895e":"0xee79d4f48c5000000","0xe47fbaed99fc209962604ebd20e240f74f4591f1":"0x6c6b935b8bbd400000","0xe482d255ede56b04c3e8df151f56e9ca62aaa8c2":"0x1b1ae4d6e2ef500000","0xe48e65125421880d42bdf1018ab9778d96928f3f":"0xe3aeb5737240a00000","0xe492818aa684e5a676561b725d42f3cc56ae5198":"0x2b5e3af16b18800000","0xe49936a92a8ccf710eaac342bc454b9b14ebecb1":"0x6c6b935b8bbd400000","0xe49af4f34adaa2330b0e49dc74ec18ab2f92f827":"0x6c6b935b8bbd400000","0xe49ba0cd96816c4607773cf8a5970bb5bc16a1e6":"0x5a87e7d7f5f6580000","0xe4a47e3933246c3fd62979a1ea19ffdf8c72ef37":"0x809b383ea7d7e8000","0xe4b6ae22c7735f5b89f34dd77ad0975f0acc9181":"0x3635c9adc5dea00000","0xe4ca0a5238564dfc91e8bf22bade2901619a1cd4":"0x3635c9adc5dea00000","0xe4cafb727fb5c6b70bb27533b8a9ccc9ef6888e1":"0x10497bf4af4caf8000","0xe4dc22ed595bf0a337c01e03cc6be744255fc9e8":"0xa5aa85009e39c0000","0xe4fb26d1ca1eecba3d8298d9d148119ac2bbf580":"0x15af1d78b58c400000","0xe4fc13cfcbac1b17ce7783acd423a845943f6b3a":"0x1158e460913d00000","0xe50b464ac9de35a5618b7cbf254674182b81b97e":"0xde42ee1544dd900000","0xe5102c3b711b810344197419b1cd8a7059f13e32":"0x1043528d0984698000","0xe510d6797fba3d6693835a844ea2ad540691971b":"0x3ae39d47383e8740000","0xe51421f8ee2210c71ed870fe618276c8954afbe9":"0x487a9a304539440000","0xe51eb87e7fb7311f5228c479b48ec9878831ac4c":"0x6c6b935b8bbd400000","0xe5215631b14248d45a255296bed1fbfa0330ff35":"0x4703e6eb5291b80000","0xe528a0e5a267d667e9393a6584e19b34dc9be973":"0x12f939c99edab800000","0xe53425d8df1f11c341ff58ae5f1438abf1ca53cf":"0x1174a5cdf88bc80000","0xe53c68796212033e4e6f9cff56e19c461eb454f9":"0x3635c9adc5dea00000","0xe54102534de8f23effb093b31242ad3b233facfd":"0xd8d726b7177a800000","0xe545ee84ea48e564161e9482d59bcf406a602ca2":"0x6449e84e47a8a80000","0xe5481a7fed42b901bbed20789bd4ade50d5f83b9":"0x6c6b935b8bbd400000","0xe559b5fd337b9c5572a9bf9e0f2521f7d446dbe4":"0xad78ebc5ac6200000","0xe55c80520a1b0f755b9a2cd3ce214f7625653e8a":"0x6c6b935b8bbd400000","0xe56d431324c92911a1749df292709c14b77a65cd":"0x1bc85dc2a89bb200000","0xe57d2995b0ebdf3f3ca6c015eb04260dbb98b7c6":"0x6c6b935b8bbd400000","0xe587b16abc8a74081e3613e14342c03375bf0847":"0x6c6b935b8bbd400000","0xe589fa76984db5ec4004b46ee8a59492c30744ce":"0x97c9ce4cf6d5c00000","0xe58dd23238ee6ea7c2138d385df500c325f376be":"0x62a992e53a0af00000","0xe5953fea497104ef9ad2d4e5841c271f073519c2":"0x2629f66e0c53000000","0xe5968797468ef767101b761d431fce14abffdbb4":"0x1b3d969fa411ca00000","0xe597f083a469c4591c3d2b1d2c772787befe27b2":"0xf2dc7d47f15600000","0xe59b3bd300893f97233ef947c46f7217e392f7e9":"0x3635c9adc5dea00000","0xe5a365343cc4eb1e770368e1f1144a77b832d7e0":"0x1158e460913d00000","0xe5a3d7eb13b15c100177236d1beb30d17ee15420":"0x6c6b935b8bbd400000","0xe5aa0b833bb916dc19a8dd683f0ede241d988eba":"0xa2a15d09519be00000","0xe5b7af146986c0ff8f85d22e6cc334077d84e824":"0x6c6b935b8bbd400000","0xe5b826196c0e1bc1119b021cf6d259a610c99670":"0xad78ebc5ac6200000","0xe5b96fc9ac03d448c1613ac91d15978145dbdfd1":"0xad78ebc5ac6200000","0xe5b980d28eece2c06fca6c9473068b37d4a6d6e9":"0x25afd68cac2b900000","0xe5bab4f0afd8a9d1a381b45761aa18f3d3cce105":"0x51bfd7c13878d10000","0xe5bcc88c3b256f6ed5fe550e4a18198b943356ad":"0x6c6b935b8bbd400000","0xe5bdf34f4ccc483e4ca530cc7cf2bb18febe92b3":"0x6d835a10bbcd20000","0xe5dc9349cb52e161196122cf87a38936e2c57f34":"0x6c6b935b8bbd400000","0xe5e33800a1b2e96bde1031630a959aa007f26e51":"0x487a9a304539440000","0xe5e37e19408f2cfbec83349dd48153a4a795a08f":"0xe3aeb5737240a00000","0xe5edc73e626f5d3441a45539b5f7a398c593edf6":"0x2ee449550898e40000","0xe5edf8123f2403ce1a0299becf7aac744d075f23":"0xada55474b81340000","0xe5f8ef6d970636b0dcaa4f200ffdc9e75af1741c":"0x6c6b935b8bbd400000","0xe5fb31a5caee6a96de393bdbf89fbe65fe125bb3":"0x3635c9adc5dea00000","0xe5fbe34984b637196f331c679d0c0c47d83410e1":"0x6c6c44fe47ec050000","0xe60955dc0bc156f6c41849f6bd776ba44b0ef0a1":"0x10431627a0933b0000","0xe60a55f2df996dc3aedb696c08dde039b2641de8":"0x6c6b935b8bbd400000","0xe6115b13f9795f7e956502d5074567dab945ce6b":"0x152d02c7e14af6800000","0xe61f280915c774a31d223cf80c069266e5adf19b":"0x2fb474098f67c00000","0xe62f98650712eb158753d82972b8e99ca3f61877":"0x6c6b935b8bbd400000","0xe62f9d7c64e8e2635aeb883dd73ba684ee7c1079":"0x1b1ae4d6e2ef5000000","0xe63e787414b9048478a50733359ecdd7e3647aa6":"0x55a6e79ccd1d300000","0xe646665872e40b0d7aa2ff82729caaba5bc3e89e":"0x15af1d78b58c400000","0xe64ef012658d54f8e8609c4e9023c09fe865c83b":"0x18493fba64ef00000","0xe64f6e1d6401b56c076b64a1b0867d0b2f310d4e":"0x2cbad71c53ae50000","0xe667f652f957c28c0e66d0b63417c80c8c9db878":"0x209d922f5259c50000","0xe677c31fd9cb720075dca49f1abccd59ec33f734":"0x1a6d6beb1d42ee00000","0xe67c2c1665c88338688187629f49e99b60b2d3ba":"0xad78ebc5ac6200000","0xe69a6cdb3a8a7db8e1f30c8b84cd73bae02bc0f8":"0x394fdc2e452f6718000","0xe69d1c378b771e0feff051db69d966ac6779f4ed":"0x1dfa6aaa1497040000","0xe69fcc26ed225f7b2e379834c524d70c1735e5bc":"0x6c6b935b8bbd400000","0xe6a3010f0201bc94ff67a2f699dfc206f9e76742":"0x2fa7cbf66464980000","0xe6a6f6dd6f70a456f4ec15ef7ad5e5dbb68bd7dc":"0xad78ebc5ac6200000","0xe6b20f980ad853ad04cbfc887ce6601c6be0b24c":"0xd8d726b7177a800000","0xe6b3ac3f5d4da5a8857d0b3f30fc4b2b692b77d7":"0x4f2591f896a6500000","0xe6b9545f7ed086e552924639f9a9edbbd5540b3e":"0xcbd47b6eaa8cc00000","0xe6bcd30a8fa138c5d9e5f6c7d2da806992812dcd":"0x370ea0d47cf61a800000","0xe6c81ffcecb47ecdc55c0b71e4855f3e5e97fc1e":"0x121ea68c114e510000","0xe6cb260b716d4c0ab726eeeb07c8707204e276ae":"0x3635c9adc5dea00000","0xe6cb3f3124c9c9cc3834b1274bc3336456a38bac":"0x172b1de0a213ff0000","0xe6d22209ffd0b87509ade3a8e2ef429879cb89b5":"0x3a7aa9e1899ca300000","0xe6d49f86c228f47367a35e886caacb271e539429":"0x165ec09da7a1980000","0xe6e621eaab01f20ef0836b7cad47464cb5fd3c96":"0x11219342afa24b0000","0xe6e886317b6a66a5b4f81bf164c538c264351765":"0x6c6b935b8bbd400000","0xe6e9a39d750fe994394eb68286e5ea62a6997882":"0x2086ac351052600000","0xe6ec5cf0c49b9c317e1e706315ef9eb7c0bf11a7":"0x3a469f3467e8ec00000","0xe6f5eb649afb99599c414b27a9c9c855357fa878":"0x90f534608a72880000","0xe6fe0afb9dcedd37b2e22c451ba6feab67348033":"0x21e19e0c9bab2400000","0xe710dcd09b8101f9437bd97db90a73ef993d0bf4":"0x14ee36c05ac2520000","0xe727e67ef911b81f6cf9c73fcbfebc2b02b5bfc6":"0x6c6b935b8bbd400000","0xe72e1d335cc29a96b9b1c02f003a16d971e90b9d":"0x55a6e79ccd1d300000","0xe7311c9533f0092c7248c9739b5b2c864a34b1ce":"0x97f97d6cc26dfe0000","0xe73bfeada6f0fd016fbc843ebcf6e370a65be70c":"0x6acb3df27e1f880000","0xe73ccf436725c151e255ccf5210cfce5a43f13e3":"0x1154e53217ddb0000","0xe742b1e6069a8ffc3c4767235defb0d49cbed222":"0x2b5e3af16b18800000","0xe74608f506866ada6bfbfdf20fea440be76989ef":"0x6c6acc67d7b1d40000","0xe7533e270cc61fa164ac1553455c105d04887e14":"0x696d8590020bb0000","0xe75c1fb177089f3e58b1067935a6596ef1737fb5":"0x56a879fa775470000","0xe75c3b38a58a3f33d55690a5a59766be185e0284":"0x1b1ae4d6e2ef500000","0xe761d27fa3502cc76bb1a608740e1403cf9dfc69":"0xf2dc7d47f15600000","0xe766f34ff16f3cfcc97321721f43ddf5a38b0cf4":"0x54069233bf7f780000","0xe76d945aa89df1e457aa342b31028a5e9130b2ce":"0x3708baed3d68900000","0xe7735ec76518fc6aa92da8715a9ee3f625788f13":"0x6c4d160bafa1b78000","0xe77a89bd45dc04eeb4e41d7b596b707e6e51e74c":"0x28a857425466f800000","0xe77d7deab296c8b4fa07ca3be184163d5a6d606c":"0x5043904b671190000","0xe77febabdf080f0f5dca1d3f5766f2a79c0ffa7c":"0x4b229d28a843680000","0xe780a56306ba1e6bb331952c22539b858af9f77d":"0xa968163f0a57b400000","0xe781ec732d401202bb9bd13860910dd6c29ac0b6":"0x433874f632cc600000","0xe784dcc873aa8c1513ec26ff36bc92eac6d4c968":"0xad78ebc5ac6200000","0xe7912d4cf4562c573ddc5b71e37310e378ef86c9":"0x155bd9307f9fe80000","0xe791d585b89936b25d298f9d35f9f9edc25a2932":"0x6c6b935b8bbd400000","0xe792349ce9f6f14f81d0674096befa1f9221cdea":"0x5b5d234a0db4388000","0xe796fd4e839b4c95d7510fb7c5c72b83c6c3e3c7":"0x1bc433f23f83140000","0xe7a42f59fee074e4fb13ea9e57ecf1cc48282249":"0x43c33c1937564800000","0xe7a4560c84b20e0fb54c49670c2903b0a96c42a4":"0x206aeac7a903980000","0xe7a8e471eafb798f4554cc6e526730fd56e62c7d":"0x3635c9adc5dea00000","0xe7be82c6593c1eeddd2ae0b15001ff201ab57b2f":"0x10910d4cdc9f60000","0xe7c6b5fc05fc748e5b4381726449a1c0ad0fb0f1":"0x6c6b935b8bbd400000","0xe7d17524d00bad82497c0f27156a647ff51d2792":"0x1158e460913d00000","0xe7d213947fcb904ad738480b1eed2f5c329f27e8":"0x103c3b1d3e9c30000","0xe7d6240620f42c5edbb2ede6aec43da4ed9b5757":"0x3635c9adc5dea00000","0xe7da609d40cde80f00ce5b4ffb6aa9d0b03494fc":"0x3635c9adc5dea00000","0xe7f06f699be31c440b43b4db0501ec0e25261644":"0x1b1ae4d6e2ef500000","0xe7f4d7fe6f561f7fa1da3005fd365451ad89df89":"0xad78ebc5ac6200000","0xe7fd8fd959aed2767ea7fa960ce1db53af802573":"0x3635c9adc5dea00000","0xe80e7fef18a5db15b01473f3ad6b78b2a2f8acd9":"0x1b1ae4d6e2ef500000","0xe8137fc1b2ec7cc7103af921899b4a39e1d959a1":"0x50c5e761a444080000","0xe81c2d346c0adf4cc56708f6394ba6c8c8a64a1e":"0x6c6b935b8bbd400000","0xe82c58c579431b673546b53a86459acaf1de9b93":"0x3635c9adc5dea00000","0xe834c64318205ca7dd4a21abcb08266cb21ff02c":"0x3635c6204739d98000","0xe83604e4ff6be7f96f6018d3ec3072ec525dff6b":"0x9ddc1e3b901180000","0xe845e387c4cbdf982280f6aa01c40e4be958ddb2":"0x54b40b1f852bda00000","0xe848ca7ebff5c24f9b9c316797a43bf7c356292d":"0x62e115c008a880000","0xe84b55b525f1039e744b918cb3332492e45eca7a":"0xad78ebc5ac6200000","0xe84f8076a0f2969ecd333eef8de41042986291f2":"0x176b344f2a78c00000","0xe864fec07ed1214a65311e11e329de040d04f0fd":"0x59ca83f5c404968000","0xe87dbac636a37721df54b08a32ef4959b5e4ff82":"0x6c6b935b8bbd400000","0xe87e9bbfbbb71c1a740c74c723426df55d063dd9":"0x1b1928c00c7a6380000","0xe87eac6d602b4109c9671bf57b950c2cfdb99d55":"0x2b4f21972ecce0000","0xe881bbbe69722d81efecaa48d1952a10a2bfac8f":"0x3635c9adc5dea000000","0xe89249738b7eced7cb666a663c49cbf6de8343ea":"0x6c6b935b8bbd400000","0xe89c22f1a4e1d4746ecfaa59ed386fee12d51e37":"0x26f8e87f0a7da0000","0xe89da96e06beaf6bd880b378f0680c43fd2e9d30":"0x209a1a01a56fec0000","0xe8a91da6cf1b9d65c74a02ec1f96eecb6dd241f3":"0x692ae8897081d00000","0xe8a9a41740f44f54c3688b53e1ddd42e43c9fe94":"0xd8d726b7177a800000","0xe8b28acda971725769db8f563d28666d41ddab6c":"0x21e19e0c9bab2400000","0xe8be24f289443ee473bc76822f55098d89b91cc5":"0x6c6b935b8bbd400000","0xe8c3d3b0e17f97d1e756e684f94e1470f99c95a1":"0x15af1d78b58c400000","0xe8c3f045bb7d38c9d2f395b0ba8492b253230901":"0x1e7e4171bf4d3a00000","0xe8cc43bc4f8acf39bff04ebfbf42aac06a328470":"0x15af1d78b58c400000","0xe8d942d82f175ecb1c16a405b10143b3f46b963a":"0x1ed2e8ff6d971c0000","0xe8ddbed732ebfe754096fde9086b8ea4a4cdc616":"0x6c6b935b8bbd400000","0xe8de725eca5def805ff7941d31ac1c2e342dfe95":"0x857e0d6f1da76a0000","0xe8e9850586e94f5299ab494bb821a5f40c00bd04":"0xcf152640c5c8300000","0xe8ead1bb90ccc3aea2b0dcc5b58056554655d1d5":"0x1a4aba225c207400000","0xe8eaf12944092dc3599b3953fa7cb1c9761cc246":"0x6194049f30f7200000","0xe8ed51bbb3ace69e06024b33f86844c47348db9e":"0x22f9ea89f4a7d6c40000","0xe8ef100d7ce0895832f2678df72d4acf8c28b8e3":"0x1b1b6bd7af64c70000","0xe8f29969e75c65e01ce3d86154207d0a9e7c76f2":"0xa22fa9a73a27198000","0xe8fc36b0131ec120ac9e85afc10ce70b56d8b6ba":"0xad78ebc5ac6200000","0xe90a354cec04d69e5d96ddc0c5138d3d33150aa0":"0x1b1a7dcf8a44d38000","0xe9133e7d31845d5f2b66a2618792e869311acf66":"0x517c0cbf9a390880000","0xe91dac0195b19e37b59b53f7c017c0b2395ba44c":"0x65ea3db75546600000","0xe91fa0badaddb9a97e88d3f4db7c55d6bb7430fe":"0x14620c57dddae00000","0xe923c06177b3427ea448c0a6ff019b54cc548d95":"0x1f780014667f28000","0xe93d47a8ca885d540c4e526f25d5c6f2c108c4b8":"0x17da3a04c7b3e0000000","0xe9458f68bb272cb5673a04f781b403556fd3a387":"0x34e8b88cee2d40000","0xe94941b6036019b4016a30c1037d5a6903babaad":"0x2a48acab6204b00000","0xe9495ba5842728c0ed97be37d0e422b98d69202c":"0x6c6b935b8bbd400000","0xe94ded99dcb572b9bb1dcba32f6dee91e057984e":"0x155bd9307f9fe80000","0xe95179527deca5916ca9a38f215c1e9ce737b4c9":"0x21e19e0c9bab2400000","0xe9559185f166fc9513cc71116144ce2deb0f1d4b":"0x43c33c1937564800000","0xe95e92bbc6de07bf3a660ebf5feb1c8a3527e1c5":"0xfc936392801c0000","0xe965daa34039f7f0df62375a37e5ab8a72b301e7":"0x103fddecdb3f5700000","0xe969ea1595edc5c4a707cfde380929633251a2b0":"0xad78ebc5ac6200000","0xe96b184e1f0f54924ac874f60bbf44707446b72b":"0x9dcc0515b56e0c0000","0xe96d7d4cdd15553a4e4d316d6d6480ca3cea1e38":"0x2955d02e1a135a00000","0xe96e2d3813efd1165f12f602f97f4a62909d3c66":"0x7caee97613e6700000","0xe97fde0b67716325cf0ecce8a191a3761b2c791d":"0x3677036edf0af60000","0xe982e6f28c548f5f96f45e63f7ab708724f53fa1":"0x157ae829a41f3b0000","0xe9864c1afc8eaad37f3ba56fcb7477cc622009b7":"0x448586170a7dc0000","0xe987e6139e6146a717fef96bc24934a5447fe05d":"0x6c6b935b8bbd400000","0xe989733ca1d58d9e7b5029ba5d444858bec03172":"0x1f87408313df4f8000","0xe98c91cadd924c92579e11b41217b282956cdaa1":"0x75c9a8480320c0000","0xe99aece90541cae224b87da673965e0aeb296afd":"0x31df9095a18f600000","0xe99de258a4173ce9ac38ede26c0b3bea3c0973d5":"0x59d0b805e5bb300000","0xe9a2b4914e8553bf0d7c00ca532369b879f931bf":"0x6c6b935b8bbd400000","0xe9a39a8bac0f01c349c64cedb69897f633234ed2":"0xd7c198710e66b00000","0xe9a5ae3c9e05977dd1069e9fd9d3aefbae04b8df":"0x6acb3df27e1f880000","0xe9ac36376efa06109d40726307dd1a57e213eaa9":"0xa844a7424d9c80000","0xe9b1f1fca3fa47269f21b061c353b7f5e96d905a":"0x1b1ae4d6e2ef500000","0xe9b36fe9b51412ddca1a521d6e94bc901213dda8":"0x21e19e0c9bab2400000","0xe9b4a4853577a9dbcc2e795be0310d1bed28641a":"0x3635c9adc5dea00000","0xe9b6a790009bc16642c8d820b7cde0e9fd16d8f5":"0xc55325ca7415e00000","0xe9b9a2747510e310241d2ece98f56b3301d757e0":"0x6c6b935b8bbd400000","0xe9c35c913ca1fceab461582fe1a5815164b4fd21":"0x1b1ae4d6e2ef5000000","0xe9c6dfae97f7099fc5f4e94b784db802923a1419":"0x2a53c6d724f100000","0xe9c758f8da41e3346e4350e5ac3976345c6c1082":"0x68a0d3092826ad0000","0xe9caf827be9d607915b365c83f0d3b7ea8c79b50":"0xa2a15d09519be00000","0xe9cafe41a5e8bbd90ba02d9e06585b4eb546c57f":"0x6c6b935b8bbd400000","0xe9d599456b2543e6db80ea9b210e908026e2146e":"0xad78ebc5ac6200000","0xe9e1f7cb00a110edd0ebf8b377ef8a7bb856117f":"0xad78ebc5ac6200000","0xea14bfda0a6e76668f8788321f07df37824ec5df":"0x2a5a058fc295ed000000","0xea1ea0c599afb9cd36caacbbb52b5bbb97597377":"0x39fbae8d042dd00000","0xea1efb3ce789bedec3d67c3e1b3bc0e9aa227f90":"0x27ca4bd719f0b80000","0xea2c197d26e98b0da83e1b72c787618c979d3db0":"0x11164759ffb320000","0xea3779d14a13f6c78566bcde403591413a6239db":"0x29b76432b94451200000","0xea4e809e266ae5f13cdbe38f9d0456e6386d1274":"0xf3f20b8dfa69d00000","0xea53c954f4ed97fd4810111bdab69ef981ef25b9":"0x3a9d5baa4abf1d00000","0xea53d26564859d9e90bb0e53b7abf560e0162c38":"0x15af1d78b58c400000","0xea60436912de6bf187d3a472ff8f5333a0f7ed06":"0x11164759ffb320000","0xea60549ec7553f511d2149f2d4666cbd9243d93c":"0x6c6b935b8bbd400000","0xea66e7b84dcdbf36eea3e75b85382a75f1a15d96":"0x5dbc9191266f118000","0xea686c5057093c171c66db99e01b0ececb308683":"0x14dda85d2ce1478000","0xea6afe2cc928ac8391eb1e165fc40040e37421e7":"0xa27fa063b2e2e68000","0xea79057dabef5e64e7b44f7f18648e7e533718d2":"0xad78ebc5ac6200000","0xea7c4d6dc729cd6b157c03ad237ca19a209346c3":"0x6c6b935b8bbd400000","0xea8168fbf225e786459ca6bb18d963d26b505309":"0x1b1ae4d6e2ef500000","0xea81ca8638540cd9d4d73d060f2cebf2241ffc3e":"0x6acb3df27e1f880000","0xea8317197959424041d9d7c67a3ece1dbb78bb55":"0x155bd9307f9fe80000","0xea8527febfa1ade29e26419329d393b940bbb7dc":"0x6c6acc67d7b1d40000","0xea8f30b6e4c5e65290fb9864259bc5990fa8ee8a":"0x1158e460913d00000","0xea94f32808a2ef8a9bf0861d1d2404f7b7be258a":"0x1158e460913d00000","0xeaa45cea02d87d2cc8fda9434e2d985bd4031584":"0x681fc2cc6e2b8b0000","0xeab0bd148309186cf8cbd13b7232d8095acb833a":"0x2439a881c6a717c0000","0xeabb90d37989aab31feae547e0e6f3999ce6a35d":"0x6c6b935b8bbd400000","0xeac0827eff0c6e3ff28a7d4a54f65cb7689d7b99":"0x9ad9e69f9d47520000","0xeac1482826acb6111e19d340a45fb851576bed60":"0x1be8bab04d9be8000","0xeac17b81ed5191fb0802aa54337313834107aaa4":"0x1b1ae4d6e2ef5000000","0xeac3af5784927fe9a598fc4eec38b8102f37bc58":"0x3635c9adc5dea00000","0xeac6b98842542ea10bb74f26d7c7488f698b6452":"0x43c33c1937564800000","0xeac768bf14b8f9432e69eaa82a99fbeb94cd0c9c":"0x14dbb2195ca228900000","0xead21c1deccfbf1c5cd96688a2476b69ba07ce4a":"0x3f24d8e4a00700000","0xead4d2eefb76abae5533961edd11400406b298fc":"0xd255d112e103a00000","0xead65262ed5d122df2b2751410f98c32d1238f51":"0x58317ed46b9b80000","0xead75016e3a0815072b6b108bcc1b799acf0383e":"0x6c6b935b8bbd400000","0xeaea23aa057200e7c9c15e8ff190d0e66c0c0e83":"0x6c6b935b8bbd400000","0xeaed16eaf5daab5bf0295e5e077f59fb8255900b":"0xd8d726b7177a800000","0xeaedcc6b8b6962d5d9288c156c579d47c0a9fcff":"0x49b9ca9a694340000","0xeaf52388546ec35aca6f6c6393d8d609de3a4bf3":"0x1158e460913d00000","0xeb10458daca79e4a6b24b29a8a8ada711b7f2eb6":"0xd8bb6549b02bb80000","0xeb1cea7b45d1bd4d0e2a007bd3bfb354759e2c16":"0xabbcd4ef377580000","0xeb25481fcd9c221f1ac7e5fd1ecd9307a16215b8":"0xaadec983fcff40000","0xeb2ef3d38fe652403cd4c9d85ed7f0682cd7c2de":"0x90f534608a728800000","0xeb3bdd59dcdda5a9bb2ac1641fd02180f5f36560":"0x165c96647b38a200000","0xeb3ce7fc381c51db7d5fbd692f8f9e058a4c703d":"0xad78ebc5ac6200000","0xeb453f5a3adddd8ab56750fadb0fe7f94d9c89e7":"0x1158e460913d00000","0xeb4f00e28336ea09942588eeac921811c522143c":"0x6c6b935b8bbd400000","0xeb52ab10553492329c1c54833ae610f398a65b9d":"0x83d6c7aab63600000","0xeb570dba975227b1c42d6e8dea2c56c9ad960670":"0x6c6b935b8bbd400000","0xeb6394a7bfa4d28911d5a5b23e93f35e340c2294":"0x43a77aabd00780000","0xeb6810691d1ae0d19e47bd22cebee0b3ba27f88a":"0x87856315d878150000","0xeb76424c0fd597d3e341a9642ad1ee118b2b579d":"0xd8d726b7177a800000","0xeb7c202b462b7cc5855d7484755f6e26ef43a115":"0x6c6b935b8bbd400000","0xeb835c1a911817878a33d167569ea3cdd387f328":"0x3635c9adc5dea00000","0xeb89a882670909cf377e9e78286ee97ba78d46c2":"0x2b7cc2e9c3225c0000","0xeb90c793b3539761e1c814a29671148692193eb4":"0x28a857425466f800000","0xeb9cc9fe0869d2dab52cc7aae8fd57adb35f9feb":"0x6a93bb17af81f80000","0xeba388b0da27c87b1cc0eac6c57b2c5a0b459c1a":"0x170a0f5040e50400000","0xebaa216de9cc5a43031707d36fe6d5bedc05bdf0":"0x6ac5c62d9486070000","0xebac2b4408ef5431a13b8508e86250982114e145":"0xd8d726b7177a800000","0xebb62cf8e22c884b1b28c6fa88fbbc17938aa787":"0x2b42798403c9b80000","0xebb7d2e11bc6b58f0a8d45c2f6de3010570ac891":"0x1731790534df20000","0xebbb4f2c3da8be3eb62d1ffb1f950261cf98ecda":"0x6c6b935b8bbd400000","0xebbd4db9019952d68b1b0f6d8cf0683c00387bb5":"0x120401563d7d910000","0xebbeeb259184a6e01cccfc2207bbd883785ac90a":"0x219bc1b04783d30000","0xebd356156a383123343d48843bffed6103e866b3":"0x6acb3df27e1f880000","0xebd37b256563e30c6f9289a8e2702f0852880833":"0x6c6acc67d7b1d40000","0xebe46cc3c34c32f5add6c3195bb486c4713eb918":"0x3635c9adc5dea00000","0xebff84bbef423071e604c361bba677f5593def4e":"0x21e19e0c9bab2400000","0xec0927bac7dc36669c28354ab1be83d7eec30934":"0x6c6b935b8bbd400000","0xec0e18a01dc4dc5daae567c3fa4c7f8f9b590205":"0x111ffe404a41e60000","0xec11362cec810985d0ebbd7b73451444985b369f":"0x65a4e49577057318000","0xec2cb8b9378dff31aec3c22e0e6dadff314ab5dd":"0x6c6b935b8bbd400000","0xec30addd895b82ee319e54fb04cb2bb03971f36b":"0x6c6b935b8bbd400000","0xec3b8b58a12703e581ce5ffd7e21c57d1e5c663f":"0x5c283d410394100000","0xec4867d2175ab5b9469361595546554684cda460":"0xa2a15d09519be00000","0xec4d08aa2e47496dca87225de33f2b40a8a5b36f":"0x890b0c2e14fb80000","0xec58bc0d0c20d8f49465664153c5c196fe59e6be":"0x15af1d78b58c400000","0xec5b198a00cfb55a97b5d53644cffa8a04d2ab45":"0x6c6b935b8bbd400000","0xec5df227bfa85d7ad76b426e1cee963bc7f519dd":"0x3635c9adc5dea00000","0xec5feafe210c12bfc9a5d05925a123f1e73fbef8":"0x608fcf3d88748d000000","0xec6904bae1f69790591709b0609783733f2573e3":"0x1b1ae4d6e2ef500000","0xec73114c5e406fdbbe09b4fa621bd70ed54ea1ef":"0x53025cd216fce500000","0xec73833de4b810bb027810fc8f69f544e83c12d1":"0x3635c9adc5dea00000","0xec75b4a47513120ba5f86039814f1998e3817ac3":"0x9b0bce2e8fdba0000","0xec76f12e57a65504033f2c0bce6fc03bd7fa0ac4":"0xc2127af858da700000","0xec8014efc7cbe5b0ce50f3562cf4e67f8593cd32":"0xf015f25736420000","0xec82f50d06475f684df1b392e00da341aa145444":"0x6c6b935b8bbd400000","0xec83e798c396b7a55e2a2224abcd834b27ea459c":"0x28a857425466f800000","0xec89f2b678a1a15b9134ec5eb70c6a62071fbaf9":"0xad78ebc5ac6200000","0xec8c1d7b6aaccd429db3a91ee4c9eb1ca4f6f73c":"0xe664992288f2280000","0xec9851bd917270610267d60518b54d3ca2b35b17":"0x878678326eac9000000","0xec99e95dece46ffffb175eb6400fbebb08ee9b95":"0x56bc75e2d63100000","0xeca5f58792b8c62d2af556717ee3ee3028be4dce":"0x6c6b935b8bbd400000","0xecab5aba5b828de1705381f38bc744b32ba1b437":"0x32f51edbaaa3300000","0xecaf3350b7ce144d068b186010852c84dd0ce0f0":"0x6c6b935b8bbd400000","0xecb94c568bfe59ade650645f4f26306c736cace4":"0xe7eeba3410b740000","0xecbe425e670d39094e20fb5643a9d818eed236de":"0x10f0cf064dd59200000","0xecbe5e1c9ad2b1dccf0a305fc9522f4669dd3ae7":"0x10f0cf064dd59200000","0xeccf7a0457b566b346ca673a180f444130216ac3":"0x56bc75e2d63100000","0xecd1a62802351a41568d23033004acc6c005a5d3":"0x2b5e3af16b1880000","0xecd276af64c79d1bd9a92b86b5e88d9a95eb88f8":"0x1158e460913d00000","0xecd486fc196791b92cf612d348614f9156488b7e":"0x28a857425466f800000","0xecdaf93229b45ee672f65db506fb5eca00f7fce6":"0x5701f96dcc40ee8000","0xece111670b563ccdbebca52384290ecd68fe5c92":"0x1158e460913d00000","0xece1152682b7598fe2d1e21ec15533885435ac85":"0xd8d726b7177a800000","0xece1290877b583e361a2d41b009346e6274e2538":"0x1043561a8829300000","0xecf05d07ea026e7ebf4941002335baf2fed0f002":"0xad78ebc5ac6200000","0xecf24cdd7c22928c441e694de4aa31b0fab59778":"0x2086ac351052600000","0xecfd004d02f36cd4d8b4a8c1a9533b6af85cd716":"0x10f41acb4bb3b9c0000","0xed0206cb23315128f8caff26f6a30b985467d022":"0x878678326eac9000000","0xed1065dbcf9d73c04ffc7908870d881468c1e132":"0x6c6b935b8bbd400000","0xed1276513b6fc68628a74185c2e20cbbca7817bf":"0xa5aa85009e39c0000","0xed12a1ba1fb8adfcb20dfa19582e525aa3b74524":"0x16a6502f15a1e540000","0xed16ce39feef3bd7f5d162045e0f67c0f00046bb":"0x1158e460913d00000","0xed1a5c43c574d4e934299b24f1472cdc9fd6f010":"0xad78ebc5ac6200000","0xed1b24b6912d51b334ac0de6e771c7c0454695ea":"0x22b1c8c1227a00000","0xed1f1e115a0d60ce02fb25df014d289e3a0cbe7d":"0x1b1ae4d6e2ef500000","0xed31305c319f9273d3936d8f5b2f71e9b1b22963":"0x56bc75e2d63100000","0xed327a14d5cfadd98103fc0999718d7ed70528ea":"0x4e1003b28d92800000","0xed3cbc3782cebd67989b305c4133b2cde32211eb":"0x15af1d78b58c400000","0xed4014538cee664a2fbcb6dc669f7ab16d0ba57c":"0xad78ebc5ac6200000","0xed41e1a28f5caa843880ef4e8b08bd6c33141edf":"0x2ad5ddfa7a8d830000","0xed4be04a052d7accb3dcce90319dba4020ab2c68":"0x7f37a70eaf362178000","0xed52a2cc0869dc9e9f842bd0957c47a8e9b0c9ff":"0x205b4dfa1ee74780000","0xed5b4c41e762d942404373caf21ed4615d25e6c1":"0x6d2d4f3d9525b40000","0xed60c4ab6e540206317e35947a63a9ca6b03e2cb":"0x31ad9ad0b467f8000","0xed641e06368fb0efaa1703e01fe48f4a685309eb":"0xad78ebc5ac6200000","0xed6643c0e8884b2d3211853785a08bf8f33ed29f":"0x487a9a304539440000","0xed70a37cdd1cbda9746d939658ae2a6181288578":"0x2086ac3510526000000","0xed7346766e1a676d0d06ec821867a276a083bf31":"0xd98a0931cc2d490000","0xed862616fcbfb3becb7406f73c5cbff00c940755":"0x5c283d410394100000","0xed9e030ca75cb1d29ea01d0d4cdfdccd3844b6e4":"0x1acc116cfafb18000","0xed9ebccba42f9815e78233266dd6e835b6afc31b":"0x14542ba12a337c00000","0xed9fb1f5af2fbf7ffc5029cee42b70ff5c275bf5":"0xf2dc7d47f15600000","0xeda4b2fa59d684b27a810df8978a73df308a63c2":"0xd8d726b7177a800000","0xedb473353979a206879de144c10a3c51d7d7081a":"0x14542ba12a337c00000","0xedb71ec41bda7dce86e766e6e8c3e9907723a69b":"0x1158e460913d00000","0xedbac9527b54d6df7ae2e000cca3613ba015cae3":"0x6acb3df27e1f880000","0xedc22fb92c638e1e21ff5cf039daa6e734dafb29":"0x102794ad20da680000","0xeddacd94ec89a2ef968fcf977a08f1fae2757869":"0x1b1ae4d6e2ef5000000","0xeddbaafbc21be8f25562f1ed6d05d6afb58f02c2":"0x6c6b935b8bbd400000","0xede0147ec032c3618310c1ff25690bf172193dac":"0x6c6b935b8bbd400000","0xede5de7c7fb7eee0f36e64530a41440edfbefacf":"0x21755ee1ef2b180000","0xede79ae1ff4f1606d59270216fa46ab2ddd4ecaa":"0x7ea28327577080000","0xede8c2cb876fbe8a4cca8290361a7ea01a69fdf8":"0x1a78c6b44f841838000","0xedeb4894aadd0081bbddd3e8846804b583d19f27":"0x6c6b935b8bbd400000","0xedf603890228d7d5de9309942b5cad4219ef9ad7":"0x10f0cf064dd59200000","0xedf8a3e1d40f13b79ec8e3e1ecf262fd92116263":"0x890b0c2e14fb80000","0xedfda2d5db98f9380714664d54b4ee971a1cae03":"0x22bb8ddd679be0000","0xee0007b0960d00908a94432a737557876aac7c31":"0x2e0421e69c4cc8000","0xee049af005974dd1c7b3a9ca8d9aa77175ba53aa":"0x1211ecb56d13488000","0xee25b9a7032679b113588ed52c137d1a053a1e94":"0xad50f3f4eea8e0000","0xee31167f9cc93b3c6465609d79db0cde90e8484c":"0x6c6b935b8bbd400000","0xee34c7e7995db9f187cff156918cfb6f13f6e003":"0x6a4076cf7995a00000","0xee3564f5f1ba0f94ec7bac164bddbf31c6888b55":"0x56bc75e2d63100000","0xee58fb3db29070d0130188ce472be0a172b89055":"0x21f42dcdc58e39c0000","0xee655bb4ee0e8d5478526fb9f15e4064e09ff3dd":"0xad78ebc5ac6200000","0xee6959de2b67967b71948c891ab00d8c8f38c7dc":"0x6685ac1bfe32c0000","0xee6c03429969ca1262cb3f0a4a54afa7d348d7f5":"0xde219f91fc18a0000","0xee71793e3acf12a7274f563961f537529d89c7de":"0x6c6b935b8bbd400000","0xee7288d91086d9e2eb910014d9ab90a02d78c2a0":"0x6c6b935b8bbd400000","0xee7c3ded7c28f459c92fe13b4d95bafbab02367d":"0x25f273933db5700000","0xee867d20916bd2e9c9ece08aa04385db667c912e":"0xa968163f0a57b400000","0xee899b02cbcb3939cd61de1342d50482abb68532":"0x5f68e8131ecf800000","0xee906d7d5f1748258174be4cbc38930302ab7b42":"0xad78ebc5ac6200000","0xee97aa8ac69edf7a987d6d70979f8ec1fbca7a94":"0x14620c57dddae00000","0xeea1e97988de75d821cd28ad6822b22cce988b31":"0x1c30731cec03200000","0xeed28c3f068e094a304b853c950a6809ebcb03e0":"0x3a9d5baa4abf1d00000","0xeed384ef2d41d9d203974e57c12328ea760e08ea":"0x3635c9adc5dea00000","0xeedf6c4280e6eb05b934ace428e11d4231b5905b":"0xad78ebc5ac6200000","0xeee761847e33fd61d99387ee14628694d1bfd525":"0x6c6b935b8bbd400000","0xeee9d0526eda01e43116a395322dda8970578f39":"0x21e1999bbd5d2be0000","0xeef1bbb1e5a83fde8248f88ee3018afa2d1332eb":"0xad78ebc5ac6200000","0xeefba12dfc996742db790464ca7d273be6e81b3e":"0x3635c9adc5dea00000","0xeefd05b0e3c417d55b3343060486cdd5e92aa7a6":"0x4d853c8f8908980000","0xef0dc7dd7a53d612728bcbd2b27c19dd4d7d666f":"0x26411c5b35f05a0000","0xef115252b1b845cd857f002d630f1b6fa37a4e50":"0x6acb3df27e1f880000","0xef1c0477f1184d60accab374d374557a0a3e10f3":"0x83d6c7aab63600000","0xef2c34bb487d3762c3cca782ccdd7a8fbb0a9931":"0x9c2007651b2500000","0xef35f6d4b1075e6aa139151c974b2f4658f70538":"0x3c3bc33f94e50d8000","0xef39ca9173df15531d73e6b72a684b51ba0f2bb4":"0x56a0b4756ee2380000","0xef463c2679fb279164e20c3d2691358773a0ad95":"0x6c6b935b8bbd400000","0xef47cf073e36f271d522d7fa4e7120ad5007a0bc":"0x878678326eac900000","0xef61155ba009dcdebef10b28d9da3d1bc6c9ced4":"0x3342d60dff1960000","0xef69781f32ffce33346f2c9ae3f08493f3e82f89":"0xfc936392801c0000","0xef76a4cd8febcbc9b818f17828f8d93473f3f3cb":"0xd8d726b7177a800000","0xef93818f684db0c3675ec81332b3183ecc28a495":"0x54069233bf7f780000","0xef9f59aeda418c1494682d941aab4924b5f4929a":"0x152d02c7e14af6800000","0xefa6b1f0db603537826891b8b4bc163984bb40cd":"0x35659ef93f0fc40000","0xefbd52f97da5fd3a673a46cbf330447b7e8aad5c":"0x56c3c9b80a0a68000","0xefc8cf1963c9a95267b228c086239889f4dfd467":"0x21e19e0c9bab2400000","0xefcaae9ff64d2cd95b5249dcffe7faa0a0c0e44d":"0x15be6174e1912e0000","0xefcce06bd6089d0e458ef561f5a689480afe7000":"0x2086ac351052600000","0xefe0675da98a5dda70cd96196b87f4e726b43348":"0x3f19beb8dd1ab00000","0xefe8ff87fc260e0767638dd5d02fc4672e0ec06d":"0x6c6b935b8bbd400000","0xefeb1997aad277cc33430e6111ed0943594048b8":"0x6c6b935b8bbd400000","0xefeea010756f81da4ba25b721787f058170befbd":"0x1c29c9cf770ef0000","0xeff51d72adfae143edf3a42b1aec55a2ccdd0b90":"0x1043561a8829300000","0xeff86b5123bcdc17ed4ce8e05b7e12e51393a1f7":"0x1b1ae4d6e2ef500000","0xeffc15e487b1beda0a8d1325bdb4172240dc540a":"0x3853939eee1de0000","0xf01195d657ef3c942e6cb83949e5a20b5cfa8b1e":"0x57473d05dabae800000","0xf02796295101674288c1d93467053d042219b794":"0x281d901f4fdd100000","0xf039683d7b3d225bc7d8dfadef63163441be41e2":"0x1dd1e4bd8d1ee0000","0xf04a6a379708b9428d722aa2b06b77e88935cf89":"0x1043561a8829300000","0xf04d2c91efb6e9c45ffbe74b434c8c5f2b028f1f":"0x3635c9adc5dea00000","0xf057aa66ca767ede124a1c5b9cc5fc94ef0b0137":"0x70a24bcab6f45d0000","0xf05ba8d7b68539d933300bc9289c3d9474d0419e":"0x6da27024dd9600000","0xf05ceeab65410564709951773c8445ad9f4ec797":"0x10431627a0933b0000","0xf05fcd4c0d73aa167e5553c8c0d6d4f2faa39757":"0x2d2d66c3170b2980000","0xf067e1f1d683556a4cc4fd0c0313239f32c4cfd8":"0x3635c9adc5dea00000","0xf067fb10dfb293e998abe564c055e3348f9fbf1e":"0x6c6b935b8bbd400000","0xf068dfe95d15cd3a7f98ffa688b4346842be2690":"0x440ad819e0974c0000","0xf06a854a3c5dc36d1c49f4c87d6db333b57e4add":"0x21e19e0c9bab2400000","0xf079e1b1265f50e8c8a98ec0c7815eb3aeac9eb4":"0x116dc3a8994b30000","0xf07bd0e5c2ce69c7c4a724bd26bbfa9d2a17ca03":"0x14061b9d77a5e980000","0xf0832a6bb25503eeca435be31b0bf905ca1fcf57":"0x16a6502f15a1e540000","0xf09b3e87f913ddfd57ae8049c731dba9b636dfc3":"0x20f5b1eaad8d800000","0xf0b1340b996f6f0bf0d9561c849caf7f4430befa":"0x56bc75e2d63100000","0xf0b1f9e27832c6de6914d70afc238c749995ace4":"0x6c6b935b8bbd400000","0xf0b469eae89d400ce7d5d66a9695037036b88903":"0x43c33c1937564800000","0xf0b9d683cea12ba600baace219b0b3c97e8c00e4":"0x56bc75e2d63100000","0xf0be0faf4d7923fc444622d1980cf2d990aab307":"0x6c6b935b8bbd400000","0xf0c081da52a9ae36642adf5e08205f05c54168a6":"0x6046f37e5945c0000","0xf0c70d0d6dab7663aa9ed9ceea567ee2c6b02765":"0x71438ac5a791a08000","0xf0cbef84e169630098d4e301b20208ef05846ac9":"0xe0b8345506b4e0000","0xf0d21663d8b0176e05fde1b90ef31f8530fda95f":"0x6c6acc67d7b1d40000","0xf0d5c31ccb6cbe30c7c9ea19f268d159851f8c9c":"0x3894f0e6f9b9f700000","0xf0d64cf9df09741133d170485fd24b005011d520":"0x1b089341e14fcc0000","0xf0d858105e1b648101ac3f85a0f8222bf4f81d6a":"0x2086ac351052600000","0xf0dc43f205619127507b2b1c1cfdf32d28310920":"0x105eb79b9417088000","0xf0e1dfa42adeac2f17f6fdf584c94862fd563393":"0x1b1ae4d6e2ef500000","0xf0e2649c7e6a3f2c5dfe33bbfbd927ca3c350a58":"0x6c6b935b8bbd400000","0xf0e7fb9e420a5340d536f40408344feaefc06aef":"0x3635c9adc5dea00000","0xf10462e58fcc07f39584a187639451167e859201":"0x934dd5d33bc970000","0xf10661ff94140f203e7a482572437938bec9c3f7":"0x43c33c1937564800000","0xf114ff0d0f24eff896edde5471dea484824a99b3":"0xbe202d6a0eda0000","0xf116b0b4680f53ab72c968ba802e10aa1be11dc8":"0x1158e460913d00000","0xf11cf5d363746fee6864d3ca336dd80679bb87ae":"0x878678326eac9000000","0xf11e01c7a9d12499005f4dae7716095a34176277":"0x15af1d78b58c400000","0xf13b083093ba564e2dc631568cf7540d9a0ec719":"0x6c6acc67d7b1d40000","0xf14f0eb86db0eb68753f16918e5d4b807437bd3e":"0xad78ebc5ac6200000","0xf15178ffc43aa8070ece327e930f809ab1a54f9d":"0xab640391201300000","0xf156dc0b2a981e5b55d3f2f03b8134e331dbadb7":"0x56bc75e2d63100000","0xf15d9d5a21b1929e790371a17f16d95f0c69655c":"0x6c6b935b8bbd400000","0xf15e182c4fbbad79bd93342242d4dccf2be58925":"0x692ae8897081d00000","0xf1624d980b65336feac5a6d54125005cfcf2aacb":"0x6c6b935b8bbd400000","0xf167f5868dcf4233a7830609682caf2df4b1b807":"0x81e542e1a7383f0000","0xf16de1891d8196461395f9b136265b3b9546f6ef":"0x1b28e1f98bbce8000","0xf17a92e0361dbacecdc5de0d1894955af6a9b606":"0x6c6b935b8bbd400000","0xf17adb740f45cbbde3094e7e13716f8103f563bd":"0x6c6b935b8bbd400000","0xf18b14cbf6694336d0fe12ac1f25df2da0c05dbb":"0xd8d4602c26bf6c0000","0xf19b39389d47b11b8a2c3f1da9124decffbefaf7":"0x6c6b935b8bbd400000","0xf19f193508393e4d2a127b20b2031f39c82581c6":"0xbdbd7a83bd2f6c0000","0xf1a1f320407964fd3c8f2e2cc8a4580da94f01ea":"0x6c6c2177557c440000","0xf1b4ecc63525f7432c3d834ffe2b970fbeb87212":"0xa2a24068facd800000","0xf1b58faffa8794f50af8e88309c7a6265455d51a":"0x36330322d5238c0000","0xf1c8c4a941b4628c0d6c30fda56452d99c7e1b64":"0x4e8cea1ede75040000","0xf1da40736f99d5df3b068a5d745fafc6463fc9b1":"0x696ca23058da10000","0xf1dc8ac81042c67a9c3c6792b230c46ac016ca10":"0xad78ebc5ac6200000","0xf1df55dcc34a051012b575cb968bc9c458ea09c9":"0xd8d726b7177a800000","0xf1e980c559a1a8e5e50a47f8fffdc773b7e06a54":"0x65ffbcdea04b7480000","0xf1f391ca92808817b755a8b8f4e2ca08d1fd1108":"0x14542ba12a337c00000","0xf1f766b0e46d73fcd4d52e7a72e1b9190cc632b3":"0x1b1ae4d6e2ef5000000","0xf2049532fd458a83ca1bff2eebacb6d5ca63f4a4":"0xc48c991dc1545c8000","0xf206d328e471d0117b246d2a4619827709e96df3":"0xa2af3dc00543440000","0xf20c9a99b74759d782f25c1ceca802a27e0b436c":"0x5a87e7d7f5f6580000","0xf2127d54188fedef0f338a5f38c7ff73ad9f6f42":"0x43c33c1937564800000","0xf2133431d1d9a37ba2f0762bc40c5acc8aa6978e":"0x6c6b935b8bbd400000","0xf21549bdd1487912f900a7523db5f7626121bba3":"0x21e19e0c9bab2400000","0xf218bd848ee7f9d38bfdd1c4eb2ed2496ae4305f":"0x1b1ae4d6e2ef500000","0xf224eb900b37b4490eee6a0b6420d85c947d8733":"0x34957444b840e80000","0xf2294adbb6f0dcc76e632ebef48ab49f124dbba4":"0x4e43393600a7b10000","0xf22f4078febbbaa8b0e78e642c8a42f35d433905":"0x6c6acc67d7b1d40000","0xf237ef05261c34d79cc22b860de0f17f793c3860":"0xad78ebc5ac6200000","0xf23c7b0cb8cd59b82bd890644a57daf40c85e278":"0x2b66aafe326ff0000","0xf23d01589eb12d439f7448ff54307529f191858d":"0x6c6b935b8bbd400000","0xf23e5c633221a8f7363e65870c9f287424d2a960":"0x4acf58e07257100000","0xf242da845d42d4bf779a00f295b40750fe49ea13":"0x3635c9adc5dea00000","0xf25259a5c939cd25966c9b6303d3731c53ddbc4c":"0xad78ebc5ac6200000","0xf25e4c70bc465632c89e5625a832a7722f6bffab":"0xf34b82fd8e91200000","0xf26bcedce3feadcea3bc3e96eb1040dfd8ffe1a0":"0x2a034919dfbfbc0000","0xf270792576f05d514493ffd1f5e84bec4b2df810":"0x3635c9adc5dea00000","0xf2732cf2c13b8bb8e7492a988f5f89e38273ddc8":"0x2086ac351052600000","0xf2742e6859c569d5f2108351e0bf4dca352a48a8":"0x21e19e0c9bab2400000","0xf2813a64c5265d020235cb9c319b6c96f906c41e":"0x12f939c99edab80000","0xf287ff52f461117adb3e1daa71932d1493c65f2e":"0xc55325ca7415e00000","0xf2ab1161750244d0ecd048ee0d3e51abb143a2fd":"0x42fe2b907373bc0000","0xf2b4ab2c9427a9015ef6eefff5edb60139b719d1":"0x26db992a3b18000000","0xf2c03e2a38998c21648760f1e5ae7ea3077d8522":"0x8f3f7193ab079c0000","0xf2c2904e9fa664a11ee25656d8fd2cc0d9a522a0":"0xb98bc829a6f90000","0xf2c362b0ef991bc82fb36e66ff75932ae8dd8225":"0x402f4cfee62e80000","0xf2d0e986d814ea13c8f466a0538c53dc922651f0":"0x4acf58e07257100000","0xf2d1b7357724ec4c03185b879b63f57e26589153":"0x14542ba12a337c00000","0xf2d5763ce073127e2cedde6faba786c73ca94141":"0x1ac4286100191f00000","0xf2d59c8923759073d6f415aaf8eb065ff2f3b685":"0x1ab2cf7c9f87e200000","0xf2e99f5cbb836b7ad36247571a302cbe4b481c69":"0x6acb3df27e1f880000","0xf2ed3e77254acb83231dc0860e1a11242ba627db":"0x6b56051582a9700000","0xf2edde37f9a8c39ddea24d79f4015757d06bf786":"0x152d02c7e14af6800000","0xf2efe96560c9d97b72bd36447843885c1d90c231":"0x6c6b935b8bbd400000","0xf2fbb6d887f8b8cc3a869aba847f3d1f643c53d6":"0xd8c9460063d31c0000","0xf3034367f87d24d3077fa9a2e38a8b0ccb1104ef":"0x3635c9adc5dea00000","0xf303d5a816affd97e83d9e4dac2f79072bb0098f":"0x340aad21b3b7000000","0xf3159866c2bc86bba40f9d73bb99f1eee57bb9d7":"0x3635c9adc5dea00000","0xf316ef1df2ff4d6c1808dba663ec8093697968e0":"0x61464d6cdc80f00000","0xf32d25eb0ea2b8b3028a4c7a155dc1aae865784d":"0x13593a9297fdad60000","0xf332c0f3e05a27d9126fd0b641a8c2d4060608fd":"0x10f1b62c4d9644e8000","0xf338459f32a159b23db30ac335769ab2351aa63c":"0x65a4da25d3016c00000","0xf33efc6397aa65fb53a8f07a0f893aae30e8bcee":"0x7cf2381f619f150000","0xf34083ecea385017aa40bdd35ef7effb4ce7762d":"0x15af1d78b58c400000","0xf346d7de92741c08fc58a64db55b062dde012d14":"0xfff6b1f761e6d0000","0xf355d3ec0cfb907d8dbb1bf3464e458128190bac":"0x10b046e7f0d80100000","0xf36df02fbd89607347afce2969b9c4236a58a506":"0x6c6b935b8bbd400000","0xf373e9daac0c8675f53b797a160f6fc034ae6b23":"0x56bc75e2d63100000","0xf37b426547a1642d8033324814f0ede3114fc212":"0x15be6174e1912e0000","0xf37bf78c5875154711cb640d37ea6d28cfcb1259":"0xad78ebc5ac6200000","0xf382df583155d8548f3f93440cd5f68cb79d6026":"0x38757d027fc1fd5c0000","0xf382e4c20410b951089e19ba96a2fee3d91cce7e":"0x111fa56eec2a8380000","0xf38a6ca80168537e974d14e1c3d13990a44c2c1b":"0x14542ba12a337c00000","0xf39a9d7aa3581df07ee4279ae6c312ef21033658":"0xd8d726b7177a800000","0xf3b668b3f14d920ebc379092db98031b67b219b3":"0xad6eedd17cf3b8000","0xf3be99b9103ce7550aa74ff1db18e09dfe32e005":"0x6c6b935b8bbd400000","0xf3c1abd29dc57b41dc192d0e384d021df0b4f6d4":"0x97ae0cdf8f86f80000","0xf3c4716d1ee5279a86d0163a14618181e16136c7":"0x3635c9adc5dea00000","0xf3cc8bcb559465f81bfe583bd7ab0a2306453b9e":"0x43c33c1937564800000","0xf3d688f06bbdbf50f9932c4145cbe48ecdf68904":"0x1158e460913d00000","0xf3dbcf135acb9dee1a489c593c024f03c2bbaece":"0x6c6b935b8bbd400000","0xf3de5f26ef6aded6f06d3b911346ee70401da4a0":"0x133ab37d9f9d030000","0xf3df63a97199933330383b3ed7570b96c4812334":"0x6c6b935b8bbd400000","0xf3e74f470c7d3a3f0033780f76a89f3ef691e6cb":"0xa3cfe631d143640000","0xf3eb1948b951e22df1617829bf3b8d8680ec6b68":"0xd8d726b7177a800000","0xf3f1fa3918ca34e2cf7e84670b1f4d8eca160db3":"0x24dce54d34a1a00000","0xf3f24fc29e20403fc0e8f5ebbb553426f78270a2":"0x56bc75e2d63100000","0xf3fa723552a5d0512e2b62f48dca7b2b8105305b":"0x76d41c62494840000","0xf3fe51fde34413c73318b9c85437fe7e820f561a":"0x3662325cd18fe00000","0xf400f93d5f5c7e3fc303129ac8fb0c2f786407fa":"0x6c6b935b8bbd400000","0xf40b134fea22c6b29c8457f49f000f9cda789adb":"0x2086ac351052600000","0xf41557dfdfb1a1bdcefefe2eba1e21fe0a4a9942":"0x6acb3df27e1f880000","0xf4177a0d85d48b0e264211ce2aa2efd3f1b47f08":"0xc2ccca26b7e80e8000","0xf42f905231c770f0a406f2b768877fb49eee0f21":"0xaadec983fcff40000","0xf432b9dbaf11bdbd73b6519fc0a904198771aac6":"0x83d6c7aab63600000","0xf43da3a4e3f5fab104ca9bc1a0f7f3bb4a56f351":"0x6c6acc67d7b1d40000","0xf447108b98df64b57e871033885c1ad71db1a3f9":"0x176f49ead3483508000","0xf44f8551ace933720712c5c491cdb6f2f951736c":"0xd8d726b7177a800000","0xf456055a11ab91ff668e2ec922961f2a23e3db25":"0xfc936392801c0000","0xf456a75bb99655a7412ce97da081816dfdb2b1f2":"0xad78ebc5ac6200000","0xf45b1dcb2e41dc27ffa024daadf619c11175c087":"0x11164759ffb320000","0xf463a90cb3f13e1f0643423636beab84c123b06d":"0x22b1c8c1227a00000","0xf468906e7edf664ab0d8be3d83eb7ab3f7ffdc78":"0x5c283d410394100000","0xf46980e3a4a9d29a6a6e90604537a3114bcb2897":"0x1b1ae4d6e2ef500000","0xf46b6b9c7cb552829c1d3dfd8ffb11aabae782f6":"0x1236efcbcbb340000","0xf476e1267f86247cc908816f2e7ad5388c952db0":"0xd8d726b7177a800000","0xf476f2cb7208a32e051fd94ea8662992638287a2":"0x56bc75e2d63100000","0xf47bb134da30a812d003af8dccb888f44bbf5724":"0x11959b7fe3395580000","0xf483f607a21fcc28100a018c568ffbe140380410":"0x3635c9adc5dea00000","0xf48e1f13f6af4d84b371d7de4b273d03a263278e":"0x2086ac351052600000","0xf49c47b3efd86b6e6a5bc9418d1f9fec814b69ef":"0x43c33c1937564800000","0xf49f6f9baabc018c8f8e119e0115f491fc92a8a4":"0x21e19e0c9bab2400000","0xf4a367b166d2991a2bfda9f56463a09f252c1b1d":"0x6acb3df27e1f880000","0xf4a51fce4a1d5b94b0718389ba4e7814139ca738":"0x1043561a8829300000","0xf4a9d00cefa97b7a58ef9417fc6267a5069039ee":"0x12e89287fa7840000","0xf4aaa3a6163e3706577b49c0767e948a681e16ee":"0x6c6b935b8bbd400000","0xf4b1626e24f30bcad9273c527fcc714b5d007b8f":"0xad78ebc5ac6200000","0xf4b49100757772f33c177b9a76ba95226c8f3dd8":"0x16b352da5e0ed300000","0xf4b6cdcfcb24230b337d770df6034dfbd4e1503f":"0x405fdf7e5af85e00000","0xf4b759cc8a1c75f80849ebbcda878dc8f0d66de4":"0x15af1d78b58c400000","0xf4ba6a46d55140c439cbcf076cc657136262f4f8":"0x6c6b935b8bbd400000","0xf4d67a9044b435b66e8977ff39a28dc4bd53729a":"0xad78ebc5ac6200000","0xf4d97664cc4eec9edbe7fa09f4750a663b507d79":"0xd8d726b7177a800000","0xf4dc7ba85480bbb3f535c09568aaa3af6f3721c6":"0x1871fb6307e35e50000","0xf4ebf50bc7e54f82e9b9bd24baef29438e259ce6":"0x21e19e0c9bab2400000","0xf4ec8e97a20aa5f8dd206f55207e06b813df2cc0":"0xad78ebc5ac6200000","0xf4ed848ec961739c2c7e352f435ba70a7cd5db38":"0x6acb3df27e1f880000","0xf4fc4d39bc0c2c4068a36de50e4ab4d4db7e340a":"0x16037df87ef6a0000","0xf504943aaf16796e0b341bbcdf21d11cc586cdd1":"0x1e7e4171bf4d3a00000","0xf5061ee2e5ee26b815503677130e1de07a52db07":"0x56bc75e2d63100000","0xf509557e90183fbf0f0651a786487bcc428ba175":"0xa844a7424d9c80000","0xf50abbd4aa45d3eb88515465a8ba0b310fd9b521":"0x16a6502f15a1e540000","0xf50ae7fab4cfb5a646ee04ceadf9bf9dd5a8e540":"0xd8d67c2f5895480000","0xf50cbafd397edd556c0678988cb2af5c2617e0a2":"0x26d07efe782bb00000","0xf51fded80acb502890e87369741f3722514cefff":"0x43c3456ca3c6d110000","0xf52a5882e8927d944b359b26366ba2b9cacfbae8":"0x54b41ce2fe63ba80000","0xf52c0a7877345fe0c233bb0f04fd6ab18b6f14ba":"0x54cbe55989f38de00000","0xf5437e158090b2a2d68f82b54a5864b95dd6dbea":"0xd96c16703b2bfe0000","0xf54c19d9ef3873bfd1f7a622d02d86249a328f06":"0x960ae127af32fb28000","0xf5500178cb998f126417831a08c2d7abfff6ab5f":"0x46f4f4a5875a9f8000","0xf5534815dc635efa5cc84b2ac734723e21b29372":"0x55a6e79ccd1d300000","0xf555a27bb1e2fd4e2cc784caee92939fc06e2fc9":"0x6c6b935b8bbd400000","0xf558a2b2dd26dd9593aae04531fd3c3cc3854b67":"0xabbcd4ef377580000","0xf56048dd2181d4a36f64fcecc6215481e42abc15":"0xad78ebc5ac6200000","0xf56442f60e21691395d0bffaa9194dcaff12e2b7":"0xe18398e7601900000","0xf579714a45eb8f52c3d57bbdefd2c15b2e2f11df":"0x54915956c409600000","0xf593c65285ee6bbd6637f3be8f89ad40d489f655":"0xa2a15d09519be00000","0xf598db2e09a8a5ee7d720d2b5c43bb126d11ecc2":"0xad78ebc5ac6200000","0xf59dab1bf8df11327e61f9b7a14b563a96ec3554":"0x14542ba12a337c00000","0xf59f9f02bbc98efe097eabb78210979021898bfd":"0x21e171a3ec9f72c0000","0xf5a5459fcdd5e5b273830df88eea4cb77ddadfb9":"0x409e52b48369a0000","0xf5a7676ad148ae9c1ef8b6f5e5a0c2c473be850b":"0xad78ebc5ac6200000","0xf5b068989df29c253577d0405ade6e0e7528f89e":"0x57473d05dabae80000","0xf5b6e9061a4eb096160777e26762cf48bdd8b55d":"0xdc55fdb17647b0000","0xf5cffbba624e7eb321bc83c60ca68199b4e36671":"0x6c6b935b8bbd400000","0xf5d14552b1dce0d6dc1f320da6ffc8a331cd6f0c":"0x487a9a304539440000","0xf5d61ac4ca95475e5b7bffd5f2f690b316759615":"0x692ae8897081d000000","0xf5d9cf00d658dd45517a48a9d3f5f633541a533d":"0x64f5fdf494f780000","0xf5eadcd2d1b8657a121f33c458a8b13e76b65526":"0xd8b0f5a5ac24a0000","0xf607c2150d3e1b99f24fa1c7d540add35c4ebe1e":"0xa7f1aa07fc8faa0000","0xf60bd735543e6bfd2ea6f11bff627340bc035a23":"0x6c6b935b8bbd400000","0xf60c1b45f164b9580e20275a5c39e1d71e35f891":"0x6c6b935b8bbd400000","0xf60f62d73937953fef35169e11d872d2ea317eec":"0x121ea68c114e5100000","0xf61283b4bd8504058ca360e993999b62cbc8cd67":"0xdd2d5fcf3bc9c0000","0xf617b967b9bd485f7695d2ef51fb7792d898f500":"0x1b1ae4d6e2ef500000","0xf618d9b104411480a863e623fc55232d1a4f48aa":"0xe689e6d44b1668000","0xf622e584a6623eaaf99f2be49e5380c5cbcf5cd8":"0xad78ebc5ac6200000","0xf632adff490da4b72d1236d04b510f74d2faa3cd":"0x4be4e7267b6ae00000","0xf639ac31da9f67271bd10402b7654e5ce763bd47":"0x15af0f42baf9260000","0xf63a579bc3eac2a9490410128dbcebe6d9de8243":"0x50c5e761a444080000","0xf645dd7c890093e8e4c8aa92a6bb353522d3dc98":"0x7439fa2099e580000","0xf648ea89c27525710172944e79edff847803b775":"0x152d02c7e14af6800000","0xf64a4ac8d540a9289c68d960d5fb7cc45a77831c":"0x6c6b935b8bbd400000","0xf64ecf2117931c6d535a311e4ffeaef9d49405b8":"0x90f534608a72880000","0xf64fe0939a8d1eea2a0ecd9a9730fd7958e33109":"0x11de1e6db450c0000","0xf65616be9c8b797e7415227c9138faa0891742d7":"0x2ad373ce668e980000","0xf657fcbe682eb4e8db152ecf892456000b513d15":"0x692ae8897081d00000","0xf65819ac4cc14c137f05dd7977c7dae08d1a4ab5":"0x58788cb94b1d80000","0xf67bb8e2118bbcd59027666eedf6943ec9f880a5":"0xd8d726b7177a800000","0xf68464bf64f2411356e4d3250efefe5c50a5f65b":"0x1158e460913d00000","0xf686785b89720b61145fea80978d6acc8e0bc196":"0xd8d726b7177a800000","0xf68c5e33fa97139df5b2e63886ce34ebf3e4979c":"0xb3fa4169e2d8e00000","0xf6a8635757c5e8c134d20d028cf778cf8609e46a":"0x4f1d772faec17c0000","0xf6b782f4dcd745a6c0e2e030600e04a24b25e542":"0x15af1d78b58c400000","0xf6bc37b1d2a3788d589b6de212dc1713b2f6e78e":"0x10f0cf064dd59200000","0xf6c3c48a1ac0a34799f04db86ec7a975fe7768f3":"0x6acb3df27e1f880000","0xf6d25d3f3d846d239f525fa8cac97bc43578dbac":"0x30927f74c9de000000","0xf6eaac7032d492ef17fd6095afc11d634f56b382":"0x1b1b6bd7af64c70000","0xf6ead67dbf5b7eb13358e10f36189d53e643cfcf":"0x878678326eac9000000","0xf6f1a44309051c6b25e47dff909b179bb9ab591c":"0x692ae8897081d00000","0xf70328ef97625fe745faa49ee0f9d4aa3b0dfb69":"0x3635c9adc5dea00000","0xf70a998a717b338d1dd99854409b1a338deea4b0":"0x6c6b935b8bbd400000","0xf70d637a845c06db6cdc91e6371ce7c4388a628e":"0x1158e460913d00000","0xf7155213449892744bc60f2e04400788bd041fdd":"0x39fbae8d042dd0000","0xf71b4534f286e43093b1e15efea749e7597b8b57":"0x161c13d3341c87280000","0xf734ec03724ddee5bb5279aa1afcf61b0cb448a1":"0xe5bf2cc9b097800000","0xf736dc96760012388fe88b66c06efe57e0d7cf0a":"0x71d75ab9b920500000","0xf73ac46c203be1538111b151ec8220c786d84144":"0xff7377817b82b8000","0xf73dd9c142b71bce11d06e30e7e7d032f2ec9c9e":"0x6acb3df27e1f880000","0xf7418aa0e713d248228776b2e7434222ae75e3a5":"0x6c6b935b8bbd400000","0xf74e6e145382b4db821fe0f2d98388f45609c69f":"0x56bc75e2d63100000","0xf7500c166f8bea2f82347606e5024be9e4f4ce99":"0x1158e460913d00000","0xf757fc8720d3c4fa5277075e60bd5c411aebd977":"0x6c6b935b8bbd400000","0xf75bb39c799779ebc04a336d260da63146ed98d0":"0x15af1d78b58c40000","0xf768f321fd6433d96b4f354d3cc1652c1732f57f":"0x21e19e0c9bab2400000","0xf76f69cee4faa0a63b30ae1e7881f4f715657010":"0xad78ebc5ac6200000","0xf777361a3dd8ab62e5f1b9b047568cc0b555704c":"0x3635c9adc5dea00000","0xf77c7b845149efba19e261bc7c75157908afa990":"0x6c6b935b8bbd400000","0xf77f9587ff7a2d7295f1f571c886bd33926a527c":"0x6c68ccd09b022c0000","0xf78258c12481bcdddbb72a8ca0c043097261c6c5":"0x1158e460913d00000","0xf798d16da4e460c460cd485fae0fa0599708eb82":"0x3635c9adc5dea00000","0xf7a1ade2d0f529123d1055f19b17919f56214e67":"0x1b1ae4d6e2ef500000","0xf7acff934b84da0969dc37a8fcf643b7d7fbed41":"0x6c6acc67d7b1d40000","0xf7b151cc5e571c17c76539dbe9964cbb6fe5de79":"0x74717cfb6883100000","0xf7b29b82195c882dab7897c2ae95e77710f57875":"0x7735416132dbfc0000","0xf7bc4c44910d5aedd66ed2355538a6b193c361ec":"0x541de2c2d8d620000","0xf7c00cdb1f020310d5acab7b496aaa44b779085e":"0x5a87e7d7f5f6580000","0xf7c1b443968b117b5dd9b755572fcd39ca5ec04b":"0x18b968c292f1b50000","0xf7c50f922ad16b61c6d1baa045ed816815bac48f":"0x2a9396a9784ad7d0000","0xf7c708015071d4fb0a3a2a09a45d156396e3349e":"0xa2a15d09519be00000","0xf7cbdba6be6cfe68dbc23c2b0ff530ee05226f84":"0x1158e460913d00000","0xf7d0d310acea18406138baaabbfe0571e80de85f":"0x487a9a304539440000","0xf7d7af204c56f31fd94398e40df1964bd8bf123c":"0x821d221b5291f8000","0xf7dc251196fbcbb77c947d7c1946b0ff65021cea":"0x3635c9adc5dea00000","0xf7e45a12aa711c709acefe95f33b78612d2ad22a":"0xe0655e2f26bc9180000","0xf7f4898c4c526d955f21f055cb6e47b915e51964":"0x7c0860e5a80dc00000","0xf7f91e7acb5b8129a306877ce3168e6f438b66a1":"0x98a7d9b8314c00000","0xf7fc45abf76f5088e2e5b5a8d132f28a4d4ec1c0":"0x6c6b935b8bbd400000","0xf8063af4cc1dd9619ab5d8bff3fcd1faa8488221":"0x6c6b935b8bbd400000","0xf8086e42661ea929d2dda1ab6c748ce3055d111e":"0x3635c9adc5dea00000","0xf8087786b42da04ed6d1e0fe26f6c0eefe1e9f5a":"0x21e19e0c9bab2400000","0xf80d3619702fa5838c48391859a839fb9ce7160f":"0x6c07a7d1b16e700000","0xf814799f6ddf4dcb29c7ee870e75f9cc2d35326d":"0x3635c9adc5dea00000","0xf815c10a032d13c34b8976fa6e3bd2c9131a8ba9":"0x487a9a304539440000","0xf81622e55757daea6675975dd93538da7d16991e":"0x6c6b935b8bbd400000","0xf824ee331e4ac3cc587693395b57ecf625a6c0c2":"0x56c95de8e8ca1d0000","0xf827d56ed2d32720d4abf103d6d0ef4d3bcd559b":"0x16c80065791a28000","0xf8298591523e50b103f0b701d623cbf0f74556f6":"0xad78ebc5ac6200000","0xf848fce9ab611c7d99206e23fac69ad488b94fe1":"0x2a1129d0936720000","0xf84f090adf3f8db7e194b350fbb77500699f66fd":"0x6acb3df27e1f880000","0xf851b010f633c40af1a8f06a73ebbaab65077ab5":"0xee86442fcd06c00000","0xf858171a04d357a13b4941c16e7e55ddd4941329":"0x246a5218f2a000000","0xf85bab1cb3710fc05fa19ffac22e67521a0ba21d":"0x6c95357fa6b36c0000","0xf86a3ea8071f7095c7db8a05ae507a8929dbb876":"0x1236efcbcbb3400000","0xf8704c16d2fd5ba3a2c01d0eb20484e6ecfa3109":"0xad78ebc5ac6200000","0xf870995fe1e522321d754337a45c0c9d7b38951c":"0x1158e460913d00000","0xf873e57a65c93b6e18cb75f0dc077d5b8933dc5c":"0xaadec983fcff40000","0xf875619d8a23e45d8998d184d480c0748970822a":"0xd8d726b7177a800000","0xf87bb07b289df7301e54c0efda6a2cf291e89200":"0x4be4e7267b6ae00000","0xf88900db737955b1519b1a7d170a18864ce590eb":"0xfc936392801c0000","0xf88b58db37420b464c0be88b45ee2b95290f8cfa":"0x22b1c8c1227a00000","0xf8962b75db5d24c7e8b7cef1068c3e67cebb30a5":"0xf2dc7d47f15600000","0xf8a065f287d91d77cd626af38ffa220d9b552a2b":"0x678a932062e4180000","0xf8a49ca2390c1f6d5c0e62513b079571743f7cc6":"0xa2a15d09519be00000","0xf8a50cee2e688ceee3aca4d4a29725d4072cc483":"0x6c6b935b8bbd400000","0xf8ac4a39b53c11307820973b441365cffe596f66":"0x6c6b935b8bbd400000","0xf8ae857b67a4a2893a3fbe7c7a87ff1c01c6a6e7":"0xd8d726b7177a800000","0xf8bf9c04874e5a77f38f4c38527e80c676f7b887":"0x6c6b935b8bbd400000","0xf8c7f34a38b31801da43063477b12b27d0f203ff":"0x1ad2baba6fef480000","0xf8ca336c8e91bd20e314c20b2dd4608b9c8b9459":"0x2ddc9bc5b32c780000","0xf8d17424c767bea31205739a2b57a7277214eebe":"0x246ddf97976680000","0xf8d52dcc5f96cc28007b3ecbb409f7e22a646caa":"0x81690e18128480000","0xf8dce867f0a39c5bef9eeba609229efa02678b6c":"0x6c6b935b8bbd400000","0xf8f226142a428434ab17a1864a2597f64aab2f06":"0x9598b2fb2e9f28000","0xf8f6645e0dee644b3dad81d571ef9baf840021ad":"0x6c6b935b8bbd400000","0xf901c00fc1db88b69c4bc3252b5ca70ea6ee5cf6":"0x15af1d78b58c400000","0xf93d5bcb0644b0cce5fcdda343f5168ffab2877d":"0xb6207b67d26f90000","0xf9570e924c95debb7061369792cf2efec2a82d5e":"0x1158e460913d00000","0xf9642086b1fbae61a6804dbe5fb15ec2d2b537f4":"0x6c6b935b8bbd400000","0xf96488698590dc3b2c555642b871348dfa067ad5":"0x1b1ae4d6e2ef500000","0xf964d98d281730ba35b2e3a314796e7b42fedf67":"0x53b0876098d80c0000","0xf9650d6989f199ab1cc479636ded30f241021f65":"0x2e141ea081ca080000","0xf96883582459908c827627e86f28e646f9c7fc7a":"0x1c4a78737cdcfb80000","0xf96b4c00766f53736a8574f822e6474c2f21da2d":"0x15af1d78b58c400000","0xf9729d48282c9e87166d5eef2d01eda9dbf78821":"0x56b83ddc728548000","0xf9767e4ecb4a5980527508d7bec3d45e4c649c13":"0x678a932062e4180000","0xf978b025b64233555cc3c19ada7f4199c9348bf7":"0x54b40b1f852bda000000","0xf97b56ebd5b77abc9fbacbabd494b9d2c221cd03":"0x6acb3df27e1f880000","0xf9811fa19dadbf029f8bfe569adb18228c80481a":"0xad78ebc5ac6200000","0xf98250730c4c61c57f129835f2680894794542f3":"0xd8d726b7177a800000","0xf989346772995ec1906faffeba2a7fe7de9c6bab":"0x16a6502f15a1e540000","0xf998ca3411730a6cd10e7455b0410fb0f6d3ff80":"0x6c6b935b8bbd400000","0xf99aee444b5783c093cfffd1c4632cf93c6f050c":"0x15af1d78b58c400000","0xf99eeece39fa7ef5076d855061384009792cf2e0":"0x1b1ae4d6e2ef500000","0xf9a59c3cc5ffacbcb67be0fc7256f64c9b127cb4":"0x6c6b935b8bbd400000","0xf9a94bd56198da245ed01d1e6430b24b2708dcc0":"0x28a77afda87ee50000","0xf9b37825f03073d31e249378c30c795c33f83af2":"0xad9aabf8c9bfc0000","0xf9b617f752edecae3e909fbb911d2f8192f84209":"0x90f534608a72880000","0xf9bfb59d538afc4874d4f5941b08c9730e38e24b":"0x22b1c8c1227a00000","0xf9dd239008182fb519fb30eedd2093fed1639be8":"0x1b1ae4d6e2ef500000","0xf9debaecb5f339beea4894e5204bfa340d067f25":"0x5a42844673b1640000","0xf9e37447406c412197b2e2aebc001d6e30c98c60":"0x1c479bb4349c0ee0000","0xf9e7222faaf0f4da40c1c4a40630373a09bed7b6":"0x9b4fdcb09456240000","0xf9ece022bccd2c92346911e79dd50303c01e0188":"0x3635c9adc5dea00000","0xfa00c376e89c05e887817a9dd0748d96f341aa89":"0x104d0d00d2b7f60000","0xfa0c1a988c8a17ad3528eb28b3409daa58225f26":"0xad78ebc5ac6200000","0xfa105f1a11b6e4b1f56012a27922e2ac2da4812f":"0x205b4dfa1ee74780000","0xfa142fe47eda97e6503b386b18a2bedd73ccb5b1":"0x2e153ad81548100000","0xfa14b566234abee73042c31d21717182cba14aa1":"0x11c7ea162e78200000","0xfa19d6f7a50f4f079893d167bf14e21d0073d196":"0x1cbb3a3ff08d080000","0xfa1f1971a775c3504fef5079f640c2c4bce7ac05":"0x6c6b935b8bbd400000","0xfa279bfd8767f956bf7fa0bd5660168da75686bd":"0x90f534608a72880000","0xfa27cc49d00b6c987336a875ae39da58fb041b2e":"0x21e19e0c9bab2400000","0xfa283299603d8758e8cab082125d2c8f7d445429":"0x15bcacb1e0501ae8000","0xfa2bbca15d3fe39f8a328e91f90da14f7ac6253d":"0xad78ebc5ac6200000","0xfa2fd29d03fee9a07893df3a269f56b72f2e1e64":"0x21e19e0c9bab2400000","0xfa33553285a973719a0d5f956ff861b2d89ed304":"0x1158e460913d00000","0xfa3a0c4b903f6ea52ea7ab7b8863b6a616ad6650":"0x1158e460913d00000","0xfa3a1aa4488b351aa7560cf5ee630a2fd45c3222":"0x2fa47e6aa7340d0000","0xfa410971ad229c3036f41acf852f2ac999281950":"0xd8b311a8ddfa7c0000","0xfa44a855e404c86d0ca8ef3324251dfb349c539e":"0x542253a126ce400000","0xfa5201fe1342af11307b9142a041243ca92e2f09":"0x2038116a3ac043980000","0xfa60868aafd4ff4c5c57914b8ed58b425773dfa9":"0x1cfe5c808f39fbc0000","0xfa67b67b4f37a0150915110ede073b05b853bda2":"0x2319ba947371ad0000","0xfa68e0cb3edf51f0a6f211c9b2cb5e073c9bffe6":"0xfc936392801c00000","0xfa6a37f018e97967937fc5e8617ba1d786dd5f77":"0x43c30fb0884a96c0000","0xfa7606435b356cee257bd2fcd3d9eacb3cd1c4e1":"0x56bc75e2d63100000","0xfa7adf660b8d99ce15933d7c5f072f3cbeb99d33":"0x14061b9d77a5e980000","0xfa86ca27bf2854d98870837fb6f6dfe4bf6453fc":"0x11757e8525cf148000","0xfa8cf4e627698c5d5788abb7880417e750231399":"0xe61a3696eef6100000","0xfa8e3b1f13433900737daaf1f6299c4887f85b5f":"0x26c29e47c4844c0000","0xfa9ec8efe08686fa58c181335872ba698560ecab":"0x6c6acc67d7b1d40000","0xfaad905d847c7b23418aeecbe3addb8dd3f8924a":"0x6acb3df27e1f880000","0xfaaeba8fc0bbda553ca72e30ef3d732e26e82041":"0x488d282aafc9f68000","0xfab487500df20fb83ebed916791d561772adbebf":"0x6c6b4c4da6ddbe0000","0xfac5ca94758078fbfccd19db3558da7ee8a0a768":"0x3728a62b0dcff60000","0xfad96ab6ac768ad5099452ac4777bd1a47edc48f":"0x56bc75e2d63100000","0xfae76719d97eac41870428e940279d97dd57b2f6":"0x14dbb2195ca228900000","0xfae881937047895a660cf229760f27e66828d643":"0x9ddc1e3b901180000","0xfae92c1370e9e1859a5df83b56d0f586aa3b404c":"0x5c5b4f3d843980000","0xfaf5f0b7b6d558f5090d9ea1fb2d42259c586078":"0x15affb8420c6b640000","0xfb126f0ec769f49dcefca2f200286451583084b8":"0x10fcbc2350396bf0000","0xfb135eb15a8bac72b69915342a60bbc06b7e077c":"0x43c33c1937564800000","0xfb223c1e22eac1269b32ee156a5385922ed36fb8":"0x6c6b935b8bbd400000","0xfb37cf6b4f81a9e222fba22e9bd24b5098b733cf":"0x21a754a6dc5280000","0xfb3860f4121c432ebdc8ec6a0331b1b709792e90":"0x208c394af1c8880000","0xfb39189af876e762c71d6c3e741893df226cedd6":"0xd8d726b7177a800000","0xfb3a0b0d6b6a718f6fc0292a825dc9247a90a5d0":"0xad6dd199e975b0000","0xfb3fa1ac08aba9cc3bf0fe9d483820688f65b410":"0x65a4da25d3016c00000","0xfb3fe09bb836861529d7518da27635f538505615":"0x4be39216fda0700000","0xfb5125bf0f5eb0b6f020e56bfc2fdf3d402c097e":"0x14061b9d77a5e980000","0xfb5518714cefc36d04865de5915ef0ff47dfe743":"0x6c6b935b8bbd400000","0xfb5ffaa0f7615726357891475818939d2037cf96":"0x1158e460913d00000","0xfb685c15e439965ef626bf0d834cd1a89f2b5695":"0xd5967be4fc3f100000","0xfb744b951d094b310262c8f986c860df9ab1de65":"0x2d1c515f1cb4a8000","0xfb79abdb925c55b9f98efeef64cfc9eb61f51bb1":"0x6140c056fb0ac80000","0xfb8113f94d9173eefd5a3073f516803a10b286ae":"0x4563918244f400000","0xfb842ca2c5ef133917a236a0d4ac40690110b038":"0x10969a62be15880000","0xfb91fb1a695553f0c68e21276decf0b83909b86d":"0x56c003617af780000","0xfb9473cf7712350a1fa0395273fc80560752e4fb":"0x6af2198ba85aa0000","0xfb949c647fdcfd2514c7d58e31f28a532d8c5833":"0x43c33c1937564800000","0xfba5486d53c6e240494241abf87e43c7600d413a":"0x6bbf61494948340000","0xfbb161fe875f09290a4b262bc60110848f0d2226":"0x6c6b935b8bbd400000","0xfbbbebcfbe235e57dd2306ad1a9ec581c7f9f48f":"0x22b1c8c1227a00000","0xfbc01db54e47cdc3c438694ab717a856c23fe6e9":"0x1ca7150ab174f470000","0xfbcfcc4a7b0f26cf26e9f3332132e2fc6a230766":"0x1b1ae4d6e2ef5000000","0xfbe71622bcbd31c1a36976e7e5f670c07ffe16de":"0x15af1d78b58c400000","0xfbede32c349f3300ef4cd33b4de7dc18e443d326":"0xab4dcf399a3a600000","0xfbf204c813f836d83962c7870c7808ca347fd33e":"0x1158e460913d00000","0xfbf75933e01b75b154ef0669076be87f62dffae1":"0x10846372f249d4c00000","0xfc0096b21e95acb8d619d176a4a1d8d529badbef":"0x14d9693bcbec028000","0xfc00a420a36107dfd5f495128a5fe5abb2db0f34":"0x143179d869110200000","0xfc018a690ad6746dbe3acf9712ddca52b6250039":"0x21e19e0c9bab2400000","0xfc02734033e57f70517e0afc7ee62461f06fad8e":"0x155bd9307f9fe80000","0xfc0ee6f7c2b3714ae9916c45566605b656f32441":"0x5f68e8131ecf800000","0xfc10b7a67b3268d5331bfb6a14def5ea4a162ca3":"0xad78ebc5ac6200000","0xfc15cb99a8d1030b12770add033a79ee0d0c908c":"0x12fa00bd52e6240000","0xfc2952b4c49fedd0bc0528a308495e6d6a1c71d6":"0x6c6b935b8bbd400000","0xfc2c1f88961d019c3e9ea33009152e0693fbf88a":"0x1b1ae4d6e2ef5000000","0xfc361105dd90f9ede566499d69e9130395f12ac8":"0x53a4fe2f204e80e00000","0xfc372ff6927cb396d9cf29803500110da632bc52":"0x6c6b935b8bbd400000","0xfc39be41094b1997d2169e8264c2c3baa6c99bc4":"0x6c6b935b8bbd400000","0xfc3d226bb36a58f526568857b0bb12d109ec9301":"0x6c6b935b8bbd400000","0xfc43829ac787ff88aaf183ba352aadbf5a15b193":"0xd6ac0a2b0552e00000","0xfc49c1439a41d6b3cf26bb67e0365224e5e38f5f":"0x3636d7af5ec98e0000","0xfc5500825105cf712a318a5e9c3bfc69c89d0c12":"0xd8d726b7177a800000","0xfc66faba277f4b5de64ad45eb19c31e00ced3ed5":"0x131beb925ffd3200000","0xfc7e22a503ec5abe9b08c50bd14999f520fa4884":"0x15a477dfbe1ea148000","0xfc8215a0a69913f62a43bf1c8590b9ddcd0d8ddb":"0x6c6b935b8bbd400000","0xfc989cb487bf1a7d17e4c1b7c4b7aafdda6b0a8d":"0x1158e460913d00000","0xfc9b347464b2f9929d807e039dae48d3d98de379":"0x2f6f10780d22cc00000","0xfca43bbc23a0d321ba9e46b929735ce7d8ef0c18":"0x1158e460913d00000","0xfca73eff8771c0103ba3cc1a9c259448c72abf0b":"0x3635c9adc5dea00000","0xfcada300283f6bcc134a91456760b0d77de410e0":"0x6c6b935b8bbd400000","0xfcbc5c71ace79741450b012cf6b8d3f17db68a70":"0x205b4dfa1ee74780000","0xfcbd85feea6a754fcf3449449e37ff9784f7773c":"0xa74ada69abd7780000","0xfcc9d4a4262e7a027ab7519110d802c495ceea39":"0x1595182224b26480000","0xfccd0d1ecee27addea95f6857aeec8c7a04b28ee":"0x21e19e0c9bab2400000","0xfcd0b4827cd208ffbf5e759dba8c3cc61d8c2c3c":"0x1b1ae4d6e2ef5000000","0xfce089635ce97abac06b44819be5bb0a3e2e0b37":"0x503920a7630a78000","0xfcf199f8b854222f182e4e1d099d4e323e2aae01":"0x3635c9adc5dea00000","0xfcfc3a5004d678613f0b36a642269a7f371c3f6a":"0x3635c9adc5dea00000","0xfd191a35157d781373fb411bf9f25290047c5eef":"0x3635c9adc5dea00000","0xfd1faa347b0fcc804c2da86c36d5f1d18b7087bb":"0x2d6eb247a96f60000","0xfd1fb5a89a89a721b8797068fbc47f3e9d52e149":"0xcd0b5837fc6580000","0xfd204f4f4aba2525ba728afdf78792cbdeb735ae":"0x6c6b935b8bbd400000","0xfd2757cc3551a095878d97875615fe0c6a32aa8a":"0x206db15299beac0000","0xfd2872d19e57853cfa16effe93d0b1d47b4f93fb":"0xd8d726b7177a800000","0xfd2929271e9d2095a264767e7b0df52ea0d1d400":"0xa2a1eb251b5ae40000","0xfd377a385272900cb436a3bb7962cdffe93f5dad":"0x6c6b935b8bbd400000","0xfd40242bb34a70855ef0fd90f3802dec2136b327":"0x68a875073e29240000","0xfd452c3969ece3801c542020f1cdcaa1c71ed23d":"0x152d02c7e14af6800000","0xfd4b551f6fdbcda6c511b5bb372250a6b783e534":"0x11de1e6db450c0000","0xfd4b989558ae11be0c3b36e2d6f2a54a9343ca2e":"0x6c6b935b8bbd400000","0xfd4de8e3748a289cf7d060517d9d38388db01fb8":"0xd8d726b7177a80000","0xfd5a63157f914fd398eab19c137dd9550bb7715c":"0x56bc75e2d63100000","0xfd60d2b5af3d35f7aaf0c393052e79c4d823d985":"0x30eb50d2e14080000","0xfd686de53fa97f99639e2568549720bc588c9efc":"0x6ac5c62d9486070000","0xfd7ede8f5240a06541eb699d782c2f9afb2170f6":"0x487a9a304539440000","0xfd812bc69fb170ef57e2327e80affd14f8e4b6d2":"0x6c6b935b8bbd400000","0xfd88d114220f081cb3d5e15be8152ab07366576a":"0x1043561a8829300000","0xfd918536a8efa6f6cefe1fa1153995fef5e33d3b":"0x1b1ae4d6e2ef500000","0xfd920f722682afb5af451b0544d4f41b3b9d5742":"0x7e52056a123f3c0000","0xfd9579f119bbc819a02b61e38d8803c942f24d32":"0x5b97e9081d9400000","0xfda0ce15330707f10bce3201172d2018b9ddea74":"0x2d041d705a2c60000","0xfda3042819af3e662900e1b92b4358eda6e92590":"0x1907a284d58f63e00000","0xfda6810ea5ac985d6ffbf1c511f1c142edcfddf7":"0xd8d726b7177a800000","0xfdb33944f2360615e5be239577c8a19ba52d9887":"0x209d922f5259c50000","0xfdba5359f7ec3bc770ac49975d844ec9716256f1":"0x3635c9adc5dea00000","0xfdc4d4765a942f5bf96931a9e8cc7ab8b757ff4c":"0x126c478a0e3ea8600000","0xfdcd5d80b105897a57abc47865768b2900524295":"0x15af1d78b58c4000000","0xfdd1195f797d4f35717d15e6f9810a9a3ff55460":"0xfc936392801c0000","0xfdd502a74e813bcfa355ceda3c176f6a6871af7f":"0x15af1d78b58c400000","0xfde395bc0b6d5cbb4c1d8fea3e0b4bff635e9db7":"0x6c6b935b8bbd400000","0xfdeaac2acf1d138e19f2fc3f9fb74592e3ed818a":"0x243d4d18229ca20000","0xfdecc82ddfc56192e26f563c3d68cb544a96bfed":"0x17da3a04c7b3e00000","0xfdf42343019b0b0c6bf260b173afab7e45b9d621":"0x6c6acc67d7b1d40000","0xfdf449f108c6fb4f5a2b081eed7e45e6919e4d25":"0x6c6b935b8bbd400000","0xfdfd6134c04a8ab7eb16f00643f8fed7daaaecb2":"0x15af1d78b58c400000","0xfe00bf439911a553982db638039245bcf032dbdc":"0x155bd9307f9fe80000","0xfe016ec17ec5f10e3bb98ff4a1eda045157682ab":"0x145f5402e7b2e60000","0xfe0e30e214290d743dd30eb082f1f0a5225ade61":"0xad78ebc5ac6200000","0xfe210b8f04dc6d4f76216acfcbd59ba83be9b630":"0x1158e460913d00000","0xfe22a0b388668d1ae2643e771dacf38a434223cc":"0xd8db5ebd7b26380000","0xfe362688845fa244cc807e4b1130eb3741a8051e":"0x3635c9adc5dea00000","0xfe3827d57630cf8761d512797b0b858e478bbd12":"0x1158e460913d00000","0xfe418b421a9c6d373602790475d2303e11a75930":"0x3708baed3d68900000","0xfe4249127950e2f896ec0e7e2e3d055aab10550f":"0x243d4d18229ca20000","0xfe4d8403216fd571572bf1bdb01d00578978d688":"0x215f835bc769da80000","0xfe53b94989d89964da2061539526bbe979dd2ea9":"0x68a875073e29240000","0xfe549bbfe64740189892932538daaf46d2b61d4f":"0x22b1c8c1227a00000","0xfe615d975c0887e0c9113ec7298420a793af8b96":"0x1b1ae4d6e2ef5000000","0xfe65c4188d7922576909642044fdc52395560165":"0xd8d726b7177a800000","0xfe697ff22ca547bfc95e33d960da605c6763f35b":"0x47d4119fd960940000","0xfe6a895b795cb4bf85903d3ce09c5aa43953d3bf":"0xb8507a820728200000","0xfe6f5f42b6193b1ad16206e4afb5239d4d7db45e":"0x5dc892aa1131c80000","0xfe7011b698bf3371132d7445b19eb5b094356aee":"0x6c6b935b8bbd400000","0xfe80e9232deaff19baf99869883a4bdf0004e53c":"0x2e62f20a69be400000","0xfe8e6e3665570dff7a1bda697aa589c0b4e9024a":"0x6c6b935b8bbd400000","0xfe8f1fdcab7fbec9a6a3fcc507619600505c36a3":"0x11164759ffb320000","0xfe91eccf2bd566afa11696c5049fa84c69630a52":"0x692ae8897081d00000","0xfe96c4cd381562401aa32a86e65b9d52fa8aee27":"0x8f1d5c1cae37400000","0xfe98c664c3e447a95e69bd582171b7176ea2a685":"0xd8d726b7177a800000","0xfe9ad12ef05d6d90261f96c8340a0381974df477":"0x6c6b935b8bbd400000","0xfe9c0fffefb803081256c0cf4d6659e6d33eb4fb":"0x52d542804f1ce00000","0xfe9cfc3bb293ddb285e625f3582f74a6b0a5a6cd":"0x6acb3df27e1f880000","0xfe9e1197d7974a7648dcc7a03112a88edbc9045d":"0x10afc1ade3b4ed40000","0xfeaca2ac74624bf348dac9985143cfd652a4be55":"0x5897fcbb02914088000","0xfead1803e5e737a68e18472d9ac715f0994cc2be":"0x1b1ae4d6e2ef500000","0xfeb8b8e2af716ae41fc7c04bcf29540156461e6b":"0x545174a528a77a0000","0xfeb92d30bf01ff9a1901666c5573532bfa07eeec":"0x3635c9adc5dea00000","0xfebc3173bc9072136354002b7b4fb3bfc53f22f1":"0x140ec80fa7ee880000","0xfebd48d0ffdbd5656cd5e686363a61145228f279":"0x97c9ce4cf6d5c00000","0xfebd9f81cf78bd5fb6c4b9a24bd414bb9bfa4c4e":"0x6be10fb8ed6e138000","0xfec06fe27b44c784b2396ec92f7b923ad17e9077":"0x6c6b935b8bbd400000","0xfec14e5485de2b3eef5e74c46146db8e454e0335":"0x9b41fbf9e0aec0000","0xfed8476d10d584b38bfa6737600ef19d35c41ed8":"0x62a992e53a0af00000","0xfeef3b6eabc94affd3310c1c4d0e65375e131119":"0x1158e460913d00000","0xfef09d70243f39ed8cd800bf9651479e8f4aca3c":"0xad78ebc5ac6200000","0xfef3b3dead1a6926d49aa32b12c22af54d9ff985":"0x3635c9adc5dea00000","0xff0b7cb71da9d4c1ea6ecc28ebda504c63f82fd1":"0x388a885df2fc6c0000","0xff0c3c7798e8733dd2668152891bab80a8be955c":"0x45946b0f9e9d60000","0xff0cb06c42e3d88948e45bd7b0d4e291aefeea51":"0x678a932062e4180000","0xff0cc8dac824fa24fc3caa2169e6e057cf638ad6":"0xd8d726b7177a800000","0xff0e2fec304207467e1e3307f64cbf30af8fd9cd":"0x6c6b935b8bbd400000","0xff128f4b355be1dc4a6f94fa510d7f15d53c2aff":"0x93739534d286800000","0xff12e49d8e06aa20f886293c0b98ed7eff788805":"0xd8d726b7177a800000","0xff207308ced238a6c01ad0213ca9eb4465d42590":"0x6c6acc67d7b1d40000","0xff26138330274df4e0a3081e6df7dd983ec6e78f":"0x6c6b935b8bbd400000","0xff2726294148b86c78a9372497e459898ed3fee3":"0x6acb3df27e1f880000","0xff3ded7a40d3aff0d7a8c45fa6136aa0433db457":"0x6c68ccd09b022c0000","0xff3eee57c34d6dae970d8b311117c53586cd3502":"0x5c283d410394100000","0xff3ef6ba151c21b59986ae64f6e8228bc9a2c733":"0x6c6b935b8bbd400000","0xff41d9e1b4effe18d8b0d1f63fc4255fb4e06c3d":"0x487a9a304539440000","0xff45cb34c928364d9cc9d8bb00373474618f06f3":"0x56bc75e2d63100000","0xff49a775814ec00051a795a875de24592ea400d4":"0x2a5a058fc295ed000000","0xff4a408f50e9e72146a28ce4fc8d90271f116e84":"0x6acb3df27e1f880000","0xff4d9c8484c43c42ff2c5ab759996498d323994d":"0xd8d726b7177a800000","0xff4fc66069046c525658c337a917f2d4b832b409":"0x6c6b935b8bbd400000","0xff5162f2354dc492c75fd6e3a107268660eecb47":"0x5c283d410394100000","0xff545bbb66fbd00eb5e6373ff4e326f5feb5fe12":"0x1158e460913d00000","0xff5e7ee7d5114821e159dca5e81f18f1bfffbff9":"0x6c6b935b8bbd400000","0xff61c9c1b7a3d8b53bba20b34466544b7b216644":"0x6c6b935b8bbd400000","0xff65511cada259260c1ddc41974ecaecd32d6357":"0x5f68e8131ecf800000","0xff7843c7010aa7e61519b762dfe49124a76b0e4e":"0xc5b17924412b9bb00000","0xff78541756ab2b706e0d70b18adb700fc4f1643d":"0x92896529baddc880000","0xff83855051ee8ffb70b4817dba3211ed2355869d":"0x15af1d78b58c400000","0xff850e3be1eb6a4d726c08fa73aad358f39706da":"0x692ae8897081d00000","0xff86e5e8e15b53909600e41308dab75f0e24e46b":"0x30eb50d2e140800000","0xff88ebacc41b3687f39e4b59e159599b80cba33f":"0x15af1d78b58c400000","0xff8a2ca5a81333f19998255f203256e1a819c0aa":"0xc249fdd3277800000","0xff8eb07de3d49d9d52bbe8e5b26dbe1d160fa834":"0xd814dcb94453080000","0xffa4aff1a37f984b0a67272149273ae9bd41e3bc":"0x21e19e0c9bab2400000","0xffa696ecbd787e66abae4fe87b635f07ca57d848":"0x487a9a304539440000","0xffac3db879a6c7158e8dec603b407463ba0d31cf":"0x6acb3df27e1f880000","0xffad3dd74e2c1f796ac640de56dc99b4c792a402":"0x10f0cf064dd59200000","0xffb04726dfa41afdc819168418610472970d7bfc":"0xd8d726b7177a800000","0xffb3bcc3196a8c3cb834cec94c34fed35b3e1054":"0x48a43c54602f700000","0xffb974673367f5c07be5fd270dc4b7138b074d57":"0x85ebc8bdb9066d8000","0xffb9c7217e66743031eb377af65c77db7359dcda":"0x22b1c8c1227a00000","0xffbc3da0381ec339c1c049eb1ed9ee34fdcea6ca":"0xd8d726b7177a800000","0xffc5fc4b7e8a0293ff39a3a0f7d60d2646d37a74":"0x6c6b935b8bbd400000","0xffc9cc3094b041ad0e076f968a0de3b167255866":"0x1770c1650beee80000","0xffd5170fd1a8118d558e7511e364b24906c4f6b3":"0x341d8cd27f1588000","0xffd6da958eecbc016bab91058440d39b41c7be83":"0x43c33c1937564800000","0xffe0e997f1977a615f5a315af413fd4869343ba0":"0x56cd55fc64dfe0000","0xffe28db53c9044b4ecd4053fd1b4b10d7056c688":"0x56bc75e2d63100000","0xffe2e28c3fb74749d7e780dc8a5d422538e6e451":"0xdbb81e05bc12d8000","0xffe8cbc1681e5e9db74a0f93f8ed25897519120f":"0x51b1d3839261ac0000","0xffeac0305ede3a915295ec8e61c7f881006f4474":"0x556f64c1fe7fa0000","0xffec0913c635baca2f5e57a37aa9fb7b6c9b6e26":"0x2ba39e82ed5d740000","0xfff33a3bd36abdbd412707b8e310d6011454a7ae":"0x1b1ae4d6e2ef5000000","0xfff4bad596633479a2a29f9a8b3f78eefd07e6ee":"0x56bc75e2d63100000","0xfff7ac99c8e4feb60c9750054bdc14ce1857f181":"0x3635c9adc5dea00000"},require$$7$1={"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x0","0x000000000000000000000000000000000000000b":"0x0","0x000000000000000000000000000000000000000c":"0x0","0x000000000000000000000000000000000000000d":"0x0","0x000000000000000000000000000000000000000e":"0x0","0x000000000000000000000000000000000000000f":"0x0","0x0000000000000000000000000000000000000010":"0x0","0x0000000000000000000000000000000000000011":"0x0","0x0000000000000000000000000000000000000012":"0x0","0x0000000000000000000000000000000000000013":"0x0","0x0000000000000000000000000000000000000014":"0x0","0x0000000000000000000000000000000000000015":"0x0","0x0000000000000000000000000000000000000016":"0x0","0x0000000000000000000000000000000000000017":"0x0","0x0000000000000000000000000000000000000018":"0x0","0x0000000000000000000000000000000000000019":"0x0","0x000000000000000000000000000000000000001a":"0x0","0x000000000000000000000000000000000000001b":"0x0","0x000000000000000000000000000000000000001c":"0x0","0x000000000000000000000000000000000000001d":"0x0","0x000000000000000000000000000000000000001e":"0x0","0x000000000000000000000000000000000000001f":"0x0","0x0000000000000000000000000000000000000020":"0x0","0x0000000000000000000000000000000000000021":"0x0","0x0000000000000000000000000000000000000022":"0x0","0x0000000000000000000000000000000000000023":"0x0","0x0000000000000000000000000000000000000024":"0x0","0x0000000000000000000000000000000000000025":"0x0","0x0000000000000000000000000000000000000026":"0x0","0x0000000000000000000000000000000000000027":"0x0","0x0000000000000000000000000000000000000028":"0x0","0x0000000000000000000000000000000000000029":"0x0","0x000000000000000000000000000000000000002a":"0x0","0x000000000000000000000000000000000000002b":"0x0","0x000000000000000000000000000000000000002c":"0x0","0x000000000000000000000000000000000000002d":"0x0","0x000000000000000000000000000000000000002e":"0x0","0x000000000000000000000000000000000000002f":"0x0","0x0000000000000000000000000000000000000030":"0x0","0x0000000000000000000000000000000000000031":"0x0","0x0000000000000000000000000000000000000032":"0x0","0x0000000000000000000000000000000000000033":"0x0","0x0000000000000000000000000000000000000034":"0x0","0x0000000000000000000000000000000000000035":"0x0","0x0000000000000000000000000000000000000036":"0x0","0x0000000000000000000000000000000000000037":"0x0","0x0000000000000000000000000000000000000038":"0x0","0x0000000000000000000000000000000000000039":"0x0","0x000000000000000000000000000000000000003a":"0x0","0x000000000000000000000000000000000000003b":"0x0","0x000000000000000000000000000000000000003c":"0x0","0x000000000000000000000000000000000000003d":"0x0","0x000000000000000000000000000000000000003e":"0x0","0x000000000000000000000000000000000000003f":"0x0","0x0000000000000000000000000000000000000040":"0x0","0x0000000000000000000000000000000000000041":"0x0","0x0000000000000000000000000000000000000042":"0x0","0x0000000000000000000000000000000000000043":"0x0","0x0000000000000000000000000000000000000044":"0x0","0x0000000000000000000000000000000000000045":"0x0","0x0000000000000000000000000000000000000046":"0x0","0x0000000000000000000000000000000000000047":"0x0","0x0000000000000000000000000000000000000048":"0x0","0x0000000000000000000000000000000000000049":"0x0","0x000000000000000000000000000000000000004a":"0x0","0x000000000000000000000000000000000000004b":"0x0","0x000000000000000000000000000000000000004c":"0x0","0x000000000000000000000000000000000000004d":"0x0","0x000000000000000000000000000000000000004e":"0x0","0x000000000000000000000000000000000000004f":"0x0","0x0000000000000000000000000000000000000050":"0x0","0x0000000000000000000000000000000000000051":"0x0","0x0000000000000000000000000000000000000052":"0x0","0x0000000000000000000000000000000000000053":"0x0","0x0000000000000000000000000000000000000054":"0x0","0x0000000000000000000000000000000000000055":"0x0","0x0000000000000000000000000000000000000056":"0x0","0x0000000000000000000000000000000000000057":"0x0","0x0000000000000000000000000000000000000058":"0x0","0x0000000000000000000000000000000000000059":"0x0","0x000000000000000000000000000000000000005a":"0x0","0x000000000000000000000000000000000000005b":"0x0","0x000000000000000000000000000000000000005c":"0x0","0x000000000000000000000000000000000000005d":"0x0","0x000000000000000000000000000000000000005e":"0x0","0x000000000000000000000000000000000000005f":"0x0","0x0000000000000000000000000000000000000060":"0x0","0x0000000000000000000000000000000000000061":"0x0","0x0000000000000000000000000000000000000062":"0x0","0x0000000000000000000000000000000000000063":"0x0","0x0000000000000000000000000000000000000064":"0x0","0x0000000000000000000000000000000000000065":"0x0","0x0000000000000000000000000000000000000066":"0x0","0x0000000000000000000000000000000000000067":"0x0","0x0000000000000000000000000000000000000068":"0x0","0x0000000000000000000000000000000000000069":"0x0","0x000000000000000000000000000000000000006a":"0x0","0x000000000000000000000000000000000000006b":"0x0","0x000000000000000000000000000000000000006c":"0x0","0x000000000000000000000000000000000000006d":"0x0","0x000000000000000000000000000000000000006e":"0x0","0x000000000000000000000000000000000000006f":"0x0","0x0000000000000000000000000000000000000070":"0x0","0x0000000000000000000000000000000000000071":"0x0","0x0000000000000000000000000000000000000072":"0x0","0x0000000000000000000000000000000000000073":"0x0","0x0000000000000000000000000000000000000074":"0x0","0x0000000000000000000000000000000000000075":"0x0","0x0000000000000000000000000000000000000076":"0x0","0x0000000000000000000000000000000000000077":"0x0","0x0000000000000000000000000000000000000078":"0x0","0x0000000000000000000000000000000000000079":"0x0","0x000000000000000000000000000000000000007a":"0x0","0x000000000000000000000000000000000000007b":"0x0","0x000000000000000000000000000000000000007c":"0x0","0x000000000000000000000000000000000000007d":"0x0","0x000000000000000000000000000000000000007e":"0x0","0x000000000000000000000000000000000000007f":"0x0","0x0000000000000000000000000000000000000080":"0x0","0x0000000000000000000000000000000000000081":"0x0","0x0000000000000000000000000000000000000082":"0x0","0x0000000000000000000000000000000000000083":"0x0","0x0000000000000000000000000000000000000084":"0x0","0x0000000000000000000000000000000000000085":"0x0","0x0000000000000000000000000000000000000086":"0x0","0x0000000000000000000000000000000000000087":"0x0","0x0000000000000000000000000000000000000088":"0x0","0x0000000000000000000000000000000000000089":"0x0","0x000000000000000000000000000000000000008a":"0x0","0x000000000000000000000000000000000000008b":"0x0","0x000000000000000000000000000000000000008c":"0x0","0x000000000000000000000000000000000000008d":"0x0","0x000000000000000000000000000000000000008e":"0x0","0x000000000000000000000000000000000000008f":"0x0","0x0000000000000000000000000000000000000090":"0x0","0x0000000000000000000000000000000000000091":"0x0","0x0000000000000000000000000000000000000092":"0x0","0x0000000000000000000000000000000000000093":"0x0","0x0000000000000000000000000000000000000094":"0x0","0x0000000000000000000000000000000000000095":"0x0","0x0000000000000000000000000000000000000096":"0x0","0x0000000000000000000000000000000000000097":"0x0","0x0000000000000000000000000000000000000098":"0x0","0x0000000000000000000000000000000000000099":"0x0","0x000000000000000000000000000000000000009a":"0x0","0x000000000000000000000000000000000000009b":"0x0","0x000000000000000000000000000000000000009c":"0x0","0x000000000000000000000000000000000000009d":"0x0","0x000000000000000000000000000000000000009e":"0x0","0x000000000000000000000000000000000000009f":"0x0","0x00000000000000000000000000000000000000a0":"0x0","0x00000000000000000000000000000000000000a1":"0x0","0x00000000000000000000000000000000000000a2":"0x0","0x00000000000000000000000000000000000000a3":"0x0","0x00000000000000000000000000000000000000a4":"0x0","0x00000000000000000000000000000000000000a5":"0x0","0x00000000000000000000000000000000000000a6":"0x0","0x00000000000000000000000000000000000000a7":"0x0","0x00000000000000000000000000000000000000a8":"0x0","0x00000000000000000000000000000000000000a9":"0x0","0x00000000000000000000000000000000000000aa":"0x0","0x00000000000000000000000000000000000000ab":"0x0","0x00000000000000000000000000000000000000ac":"0x0","0x00000000000000000000000000000000000000ad":"0x0","0x00000000000000000000000000000000000000ae":"0x0","0x00000000000000000000000000000000000000af":"0x0","0x00000000000000000000000000000000000000b0":"0x0","0x00000000000000000000000000000000000000b1":"0x0","0x00000000000000000000000000000000000000b2":"0x0","0x00000000000000000000000000000000000000b3":"0x0","0x00000000000000000000000000000000000000b4":"0x0","0x00000000000000000000000000000000000000b5":"0x0","0x00000000000000000000000000000000000000b6":"0x0","0x00000000000000000000000000000000000000b7":"0x0","0x00000000000000000000000000000000000000b8":"0x0","0x00000000000000000000000000000000000000b9":"0x0","0x00000000000000000000000000000000000000ba":"0x0","0x00000000000000000000000000000000000000bb":"0x0","0x00000000000000000000000000000000000000bc":"0x0","0x00000000000000000000000000000000000000bd":"0x0","0x00000000000000000000000000000000000000be":"0x0","0x00000000000000000000000000000000000000bf":"0x0","0x00000000000000000000000000000000000000c0":"0x0","0x00000000000000000000000000000000000000c1":"0x0","0x00000000000000000000000000000000000000c2":"0x0","0x00000000000000000000000000000000000000c3":"0x0","0x00000000000000000000000000000000000000c4":"0x0","0x00000000000000000000000000000000000000c5":"0x0","0x00000000000000000000000000000000000000c6":"0x0","0x00000000000000000000000000000000000000c7":"0x0","0x00000000000000000000000000000000000000c8":"0x0","0x00000000000000000000000000000000000000c9":"0x0","0x00000000000000000000000000000000000000ca":"0x0","0x00000000000000000000000000000000000000cb":"0x0","0x00000000000000000000000000000000000000cc":"0x0","0x00000000000000000000000000000000000000cd":"0x0","0x00000000000000000000000000000000000000ce":"0x0","0x00000000000000000000000000000000000000cf":"0x0","0x00000000000000000000000000000000000000d0":"0x0","0x00000000000000000000000000000000000000d1":"0x0","0x00000000000000000000000000000000000000d2":"0x0","0x00000000000000000000000000000000000000d3":"0x0","0x00000000000000000000000000000000000000d4":"0x0","0x00000000000000000000000000000000000000d5":"0x0","0x00000000000000000000000000000000000000d6":"0x0","0x00000000000000000000000000000000000000d7":"0x0","0x00000000000000000000000000000000000000d8":"0x0","0x00000000000000000000000000000000000000d9":"0x0","0x00000000000000000000000000000000000000da":"0x0","0x00000000000000000000000000000000000000db":"0x0","0x00000000000000000000000000000000000000dc":"0x0","0x00000000000000000000000000000000000000dd":"0x0","0x00000000000000000000000000000000000000de":"0x0","0x00000000000000000000000000000000000000df":"0x0","0x00000000000000000000000000000000000000e0":"0x0","0x00000000000000000000000000000000000000e1":"0x0","0x00000000000000000000000000000000000000e2":"0x0","0x00000000000000000000000000000000000000e3":"0x0","0x00000000000000000000000000000000000000e4":"0x0","0x00000000000000000000000000000000000000e5":"0x0","0x00000000000000000000000000000000000000e6":"0x0","0x00000000000000000000000000000000000000e7":"0x0","0x00000000000000000000000000000000000000e8":"0x0","0x00000000000000000000000000000000000000e9":"0x0","0x00000000000000000000000000000000000000ea":"0x0","0x00000000000000000000000000000000000000eb":"0x0","0x00000000000000000000000000000000000000ec":"0x0","0x00000000000000000000000000000000000000ed":"0x0","0x00000000000000000000000000000000000000ee":"0x0","0x00000000000000000000000000000000000000ef":"0x0","0x00000000000000000000000000000000000000f0":"0x0","0x00000000000000000000000000000000000000f1":"0x0","0x00000000000000000000000000000000000000f2":"0x0","0x00000000000000000000000000000000000000f3":"0x0","0x00000000000000000000000000000000000000f4":"0x0","0x00000000000000000000000000000000000000f5":"0x0","0x00000000000000000000000000000000000000f6":"0x0","0x00000000000000000000000000000000000000f7":"0x0","0x00000000000000000000000000000000000000f8":"0x0","0x00000000000000000000000000000000000000f9":"0x0","0x00000000000000000000000000000000000000fa":"0x0","0x00000000000000000000000000000000000000fb":"0x0","0x00000000000000000000000000000000000000fc":"0x0","0x00000000000000000000000000000000000000fd":"0x0","0x00000000000000000000000000000000000000fe":"0x0","0x00000000000000000000000000000000000000ff":"0x0","0x874b54a8bd152966d63f706bae1ffeb0411921e5":"0xc9f2c9cd04674edea40000000"},require$$8$1={"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x1","0x000000000000000000000000000000000000000b":"0x1","0x000000000000000000000000000000000000000c":"0x1","0x000000000000000000000000000000000000000d":"0x1","0x000000000000000000000000000000000000000e":"0x1","0x000000000000000000000000000000000000000f":"0x1","0x0000000000000000000000000000000000000010":"0x1","0x0000000000000000000000000000000000000011":"0x1","0x0000000000000000000000000000000000000012":"0x1","0x0000000000000000000000000000000000000013":"0x1","0x0000000000000000000000000000000000000014":"0x1","0x0000000000000000000000000000000000000015":"0x1","0x0000000000000000000000000000000000000016":"0x1","0x0000000000000000000000000000000000000017":"0x1","0x0000000000000000000000000000000000000018":"0x1","0x0000000000000000000000000000000000000019":"0x1","0x000000000000000000000000000000000000001a":"0x1","0x000000000000000000000000000000000000001b":"0x1","0x000000000000000000000000000000000000001c":"0x1","0x000000000000000000000000000000000000001d":"0x1","0x000000000000000000000000000000000000001e":"0x1","0x000000000000000000000000000000000000001f":"0x1","0x0000000000000000000000000000000000000020":"0x1","0x0000000000000000000000000000000000000021":"0x1","0x0000000000000000000000000000000000000022":"0x1","0x0000000000000000000000000000000000000023":"0x1","0x0000000000000000000000000000000000000024":"0x1","0x0000000000000000000000000000000000000025":"0x1","0x0000000000000000000000000000000000000026":"0x1","0x0000000000000000000000000000000000000027":"0x1","0x0000000000000000000000000000000000000028":"0x1","0x0000000000000000000000000000000000000029":"0x1","0x000000000000000000000000000000000000002a":"0x1","0x000000000000000000000000000000000000002b":"0x1","0x000000000000000000000000000000000000002c":"0x1","0x000000000000000000000000000000000000002d":"0x1","0x000000000000000000000000000000000000002e":"0x1","0x000000000000000000000000000000000000002f":"0x1","0x0000000000000000000000000000000000000030":"0x1","0x0000000000000000000000000000000000000031":"0x1","0x0000000000000000000000000000000000000032":"0x1","0x0000000000000000000000000000000000000033":"0x1","0x0000000000000000000000000000000000000034":"0x1","0x0000000000000000000000000000000000000035":"0x1","0x0000000000000000000000000000000000000036":"0x1","0x0000000000000000000000000000000000000037":"0x1","0x0000000000000000000000000000000000000038":"0x1","0x0000000000000000000000000000000000000039":"0x1","0x000000000000000000000000000000000000003a":"0x1","0x000000000000000000000000000000000000003b":"0x1","0x000000000000000000000000000000000000003c":"0x1","0x000000000000000000000000000000000000003d":"0x1","0x000000000000000000000000000000000000003e":"0x1","0x000000000000000000000000000000000000003f":"0x1","0x0000000000000000000000000000000000000040":"0x1","0x0000000000000000000000000000000000000041":"0x1","0x0000000000000000000000000000000000000042":"0x1","0x0000000000000000000000000000000000000043":"0x1","0x0000000000000000000000000000000000000044":"0x1","0x0000000000000000000000000000000000000045":"0x1","0x0000000000000000000000000000000000000046":"0x1","0x0000000000000000000000000000000000000047":"0x1","0x0000000000000000000000000000000000000048":"0x1","0x0000000000000000000000000000000000000049":"0x1","0x000000000000000000000000000000000000004a":"0x1","0x000000000000000000000000000000000000004b":"0x1","0x000000000000000000000000000000000000004c":"0x1","0x000000000000000000000000000000000000004d":"0x1","0x000000000000000000000000000000000000004e":"0x1","0x000000000000000000000000000000000000004f":"0x1","0x0000000000000000000000000000000000000050":"0x1","0x0000000000000000000000000000000000000051":"0x1","0x0000000000000000000000000000000000000052":"0x1","0x0000000000000000000000000000000000000053":"0x1","0x0000000000000000000000000000000000000054":"0x1","0x0000000000000000000000000000000000000055":"0x1","0x0000000000000000000000000000000000000056":"0x1","0x0000000000000000000000000000000000000057":"0x1","0x0000000000000000000000000000000000000058":"0x1","0x0000000000000000000000000000000000000059":"0x1","0x000000000000000000000000000000000000005a":"0x1","0x000000000000000000000000000000000000005b":"0x1","0x000000000000000000000000000000000000005c":"0x1","0x000000000000000000000000000000000000005d":"0x1","0x000000000000000000000000000000000000005e":"0x1","0x000000000000000000000000000000000000005f":"0x1","0x0000000000000000000000000000000000000060":"0x1","0x0000000000000000000000000000000000000061":"0x1","0x0000000000000000000000000000000000000062":"0x1","0x0000000000000000000000000000000000000063":"0x1","0x0000000000000000000000000000000000000064":"0x1","0x0000000000000000000000000000000000000065":"0x1","0x0000000000000000000000000000000000000066":"0x1","0x0000000000000000000000000000000000000067":"0x1","0x0000000000000000000000000000000000000068":"0x1","0x0000000000000000000000000000000000000069":"0x1","0x000000000000000000000000000000000000006a":"0x1","0x000000000000000000000000000000000000006b":"0x1","0x000000000000000000000000000000000000006c":"0x1","0x000000000000000000000000000000000000006d":"0x1","0x000000000000000000000000000000000000006e":"0x1","0x000000000000000000000000000000000000006f":"0x1","0x0000000000000000000000000000000000000070":"0x1","0x0000000000000000000000000000000000000071":"0x1","0x0000000000000000000000000000000000000072":"0x1","0x0000000000000000000000000000000000000073":"0x1","0x0000000000000000000000000000000000000074":"0x1","0x0000000000000000000000000000000000000075":"0x1","0x0000000000000000000000000000000000000076":"0x1","0x0000000000000000000000000000000000000077":"0x1","0x0000000000000000000000000000000000000078":"0x1","0x0000000000000000000000000000000000000079":"0x1","0x000000000000000000000000000000000000007a":"0x1","0x000000000000000000000000000000000000007b":"0x1","0x000000000000000000000000000000000000007c":"0x1","0x000000000000000000000000000000000000007d":"0x1","0x000000000000000000000000000000000000007e":"0x1","0x000000000000000000000000000000000000007f":"0x1","0x0000000000000000000000000000000000000080":"0x1","0x0000000000000000000000000000000000000081":"0x1","0x0000000000000000000000000000000000000082":"0x1","0x0000000000000000000000000000000000000083":"0x1","0x0000000000000000000000000000000000000084":"0x1","0x0000000000000000000000000000000000000085":"0x1","0x0000000000000000000000000000000000000086":"0x1","0x0000000000000000000000000000000000000087":"0x1","0x0000000000000000000000000000000000000088":"0x1","0x0000000000000000000000000000000000000089":"0x1","0x000000000000000000000000000000000000008a":"0x1","0x000000000000000000000000000000000000008b":"0x1","0x000000000000000000000000000000000000008c":"0x1","0x000000000000000000000000000000000000008d":"0x1","0x000000000000000000000000000000000000008e":"0x1","0x000000000000000000000000000000000000008f":"0x1","0x0000000000000000000000000000000000000090":"0x1","0x0000000000000000000000000000000000000091":"0x1","0x0000000000000000000000000000000000000092":"0x1","0x0000000000000000000000000000000000000093":"0x1","0x0000000000000000000000000000000000000094":"0x1","0x0000000000000000000000000000000000000095":"0x1","0x0000000000000000000000000000000000000096":"0x1","0x0000000000000000000000000000000000000097":"0x1","0x0000000000000000000000000000000000000098":"0x1","0x0000000000000000000000000000000000000099":"0x1","0x000000000000000000000000000000000000009a":"0x1","0x000000000000000000000000000000000000009b":"0x1","0x000000000000000000000000000000000000009c":"0x1","0x000000000000000000000000000000000000009d":"0x1","0x000000000000000000000000000000000000009e":"0x1","0x000000000000000000000000000000000000009f":"0x1","0x00000000000000000000000000000000000000a0":"0x1","0x00000000000000000000000000000000000000a1":"0x1","0x00000000000000000000000000000000000000a2":"0x1","0x00000000000000000000000000000000000000a3":"0x1","0x00000000000000000000000000000000000000a4":"0x1","0x00000000000000000000000000000000000000a5":"0x1","0x00000000000000000000000000000000000000a6":"0x1","0x00000000000000000000000000000000000000a7":"0x1","0x00000000000000000000000000000000000000a8":"0x1","0x00000000000000000000000000000000000000a9":"0x1","0x00000000000000000000000000000000000000aa":"0x1","0x00000000000000000000000000000000000000ab":"0x1","0x00000000000000000000000000000000000000ac":"0x1","0x00000000000000000000000000000000000000ad":"0x1","0x00000000000000000000000000000000000000ae":"0x1","0x00000000000000000000000000000000000000af":"0x1","0x00000000000000000000000000000000000000b0":"0x1","0x00000000000000000000000000000000000000b1":"0x1","0x00000000000000000000000000000000000000b2":"0x1","0x00000000000000000000000000000000000000b3":"0x1","0x00000000000000000000000000000000000000b4":"0x1","0x00000000000000000000000000000000000000b5":"0x1","0x00000000000000000000000000000000000000b6":"0x1","0x00000000000000000000000000000000000000b7":"0x1","0x00000000000000000000000000000000000000b8":"0x1","0x00000000000000000000000000000000000000b9":"0x1","0x00000000000000000000000000000000000000ba":"0x1","0x00000000000000000000000000000000000000bb":"0x1","0x00000000000000000000000000000000000000bc":"0x1","0x00000000000000000000000000000000000000bd":"0x1","0x00000000000000000000000000000000000000be":"0x1","0x00000000000000000000000000000000000000bf":"0x1","0x00000000000000000000000000000000000000c0":"0x1","0x00000000000000000000000000000000000000c1":"0x1","0x00000000000000000000000000000000000000c2":"0x1","0x00000000000000000000000000000000000000c3":"0x1","0x00000000000000000000000000000000000000c4":"0x1","0x00000000000000000000000000000000000000c5":"0x1","0x00000000000000000000000000000000000000c6":"0x1","0x00000000000000000000000000000000000000c7":"0x1","0x00000000000000000000000000000000000000c8":"0x1","0x00000000000000000000000000000000000000c9":"0x1","0x00000000000000000000000000000000000000ca":"0x1","0x00000000000000000000000000000000000000cb":"0x1","0x00000000000000000000000000000000000000cc":"0x1","0x00000000000000000000000000000000000000cd":"0x1","0x00000000000000000000000000000000000000ce":"0x1","0x00000000000000000000000000000000000000cf":"0x1","0x00000000000000000000000000000000000000d0":"0x1","0x00000000000000000000000000000000000000d1":"0x1","0x00000000000000000000000000000000000000d2":"0x1","0x00000000000000000000000000000000000000d3":"0x1","0x00000000000000000000000000000000000000d4":"0x1","0x00000000000000000000000000000000000000d5":"0x1","0x00000000000000000000000000000000000000d6":"0x1","0x00000000000000000000000000000000000000d7":"0x1","0x00000000000000000000000000000000000000d8":"0x1","0x00000000000000000000000000000000000000d9":"0x1","0x00000000000000000000000000000000000000da":"0x1","0x00000000000000000000000000000000000000db":"0x1","0x00000000000000000000000000000000000000dc":"0x1","0x00000000000000000000000000000000000000dd":"0x1","0x00000000000000000000000000000000000000de":"0x1","0x00000000000000000000000000000000000000df":"0x1","0x00000000000000000000000000000000000000e0":"0x1","0x00000000000000000000000000000000000000e1":"0x1","0x00000000000000000000000000000000000000e2":"0x1","0x00000000000000000000000000000000000000e3":"0x1","0x00000000000000000000000000000000000000e4":"0x1","0x00000000000000000000000000000000000000e5":"0x1","0x00000000000000000000000000000000000000e6":"0x1","0x00000000000000000000000000000000000000e7":"0x1","0x00000000000000000000000000000000000000e8":"0x1","0x00000000000000000000000000000000000000e9":"0x1","0x00000000000000000000000000000000000000ea":"0x1","0x00000000000000000000000000000000000000eb":"0x1","0x00000000000000000000000000000000000000ec":"0x1","0x00000000000000000000000000000000000000ed":"0x1","0x00000000000000000000000000000000000000ee":"0x1","0x00000000000000000000000000000000000000ef":"0x1","0x00000000000000000000000000000000000000f0":"0x1","0x00000000000000000000000000000000000000f1":"0x1","0x00000000000000000000000000000000000000f2":"0x1","0x00000000000000000000000000000000000000f3":"0x1","0x00000000000000000000000000000000000000f4":"0x1","0x00000000000000000000000000000000000000f5":"0x1","0x00000000000000000000000000000000000000f6":"0x1","0x00000000000000000000000000000000000000f7":"0x1","0x00000000000000000000000000000000000000f8":"0x1","0x00000000000000000000000000000000000000f9":"0x1","0x00000000000000000000000000000000000000fa":"0x1","0x00000000000000000000000000000000000000fb":"0x1","0x00000000000000000000000000000000000000fc":"0x1","0x00000000000000000000000000000000000000fd":"0x1","0x00000000000000000000000000000000000000fe":"0x1","0x00000000000000000000000000000000000000ff":"0x1","0x31b98d14007bdee637298086988a0bbd31184523":"0x200000000000000000000000000000000000000000000000000000000000000"},require$$9$1={"0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x00521965e7bd230323c423d96c657db5b79d099f":"0x100000000000000000000000000000000000000000000000000"},require$$10={"0x0000000000000000000000000000000000000000":"0x1","0x0000000000000000000000000000000000000001":"0x1","0x0000000000000000000000000000000000000002":"0x1","0x0000000000000000000000000000000000000003":"0x1","0x0000000000000000000000000000000000000004":"0x1","0x0000000000000000000000000000000000000005":"0x1","0x0000000000000000000000000000000000000006":"0x1","0x0000000000000000000000000000000000000007":"0x1","0x0000000000000000000000000000000000000008":"0x1","0x0000000000000000000000000000000000000009":"0x1","0x000000000000000000000000000000000000000a":"0x1","0x000000000000000000000000000000000000000b":"0x1","0x000000000000000000000000000000000000000c":"0x1","0x000000000000000000000000000000000000000d":"0x1","0x000000000000000000000000000000000000000e":"0x1","0x000000000000000000000000000000000000000f":"0x1","0x0000000000000000000000000000000000000010":"0x1","0x0000000000000000000000000000000000000011":"0x1","0x0000000000000000000000000000000000000012":"0x1","0x0000000000000000000000000000000000000013":"0x1","0x0000000000000000000000000000000000000014":"0x1","0x0000000000000000000000000000000000000015":"0x1","0x0000000000000000000000000000000000000016":"0x1","0x0000000000000000000000000000000000000017":"0x1","0x0000000000000000000000000000000000000018":"0x1","0x0000000000000000000000000000000000000019":"0x1","0x000000000000000000000000000000000000001a":"0x1","0x000000000000000000000000000000000000001b":"0x1","0x000000000000000000000000000000000000001c":"0x1","0x000000000000000000000000000000000000001d":"0x1","0x000000000000000000000000000000000000001e":"0x1","0x000000000000000000000000000000000000001f":"0x1","0x0000000000000000000000000000000000000020":"0x1","0x0000000000000000000000000000000000000021":"0x1","0x0000000000000000000000000000000000000022":"0x1","0x0000000000000000000000000000000000000023":"0x1","0x0000000000000000000000000000000000000024":"0x1","0x0000000000000000000000000000000000000025":"0x1","0x0000000000000000000000000000000000000026":"0x1","0x0000000000000000000000000000000000000027":"0x1","0x0000000000000000000000000000000000000028":"0x1","0x0000000000000000000000000000000000000029":"0x1","0x000000000000000000000000000000000000002a":"0x1","0x000000000000000000000000000000000000002b":"0x1","0x000000000000000000000000000000000000002c":"0x1","0x000000000000000000000000000000000000002d":"0x1","0x000000000000000000000000000000000000002e":"0x1","0x000000000000000000000000000000000000002f":"0x1","0x0000000000000000000000000000000000000030":"0x1","0x0000000000000000000000000000000000000031":"0x1","0x0000000000000000000000000000000000000032":"0x1","0x0000000000000000000000000000000000000033":"0x1","0x0000000000000000000000000000000000000034":"0x1","0x0000000000000000000000000000000000000035":"0x1","0x0000000000000000000000000000000000000036":"0x1","0x0000000000000000000000000000000000000037":"0x1","0x0000000000000000000000000000000000000038":"0x1","0x0000000000000000000000000000000000000039":"0x1","0x000000000000000000000000000000000000003a":"0x1","0x000000000000000000000000000000000000003b":"0x1","0x000000000000000000000000000000000000003c":"0x1","0x000000000000000000000000000000000000003d":"0x1","0x000000000000000000000000000000000000003e":"0x1","0x000000000000000000000000000000000000003f":"0x1","0x0000000000000000000000000000000000000040":"0x1","0x0000000000000000000000000000000000000041":"0x1","0x0000000000000000000000000000000000000042":"0x1","0x0000000000000000000000000000000000000043":"0x1","0x0000000000000000000000000000000000000044":"0x1","0x0000000000000000000000000000000000000045":"0x1","0x0000000000000000000000000000000000000046":"0x1","0x0000000000000000000000000000000000000047":"0x1","0x0000000000000000000000000000000000000048":"0x1","0x0000000000000000000000000000000000000049":"0x1","0x000000000000000000000000000000000000004a":"0x1","0x000000000000000000000000000000000000004b":"0x1","0x000000000000000000000000000000000000004c":"0x1","0x000000000000000000000000000000000000004d":"0x1","0x000000000000000000000000000000000000004e":"0x1","0x000000000000000000000000000000000000004f":"0x1","0x0000000000000000000000000000000000000050":"0x1","0x0000000000000000000000000000000000000051":"0x1","0x0000000000000000000000000000000000000052":"0x1","0x0000000000000000000000000000000000000053":"0x1","0x0000000000000000000000000000000000000054":"0x1","0x0000000000000000000000000000000000000055":"0x1","0x0000000000000000000000000000000000000056":"0x1","0x0000000000000000000000000000000000000057":"0x1","0x0000000000000000000000000000000000000058":"0x1","0x0000000000000000000000000000000000000059":"0x1","0x000000000000000000000000000000000000005a":"0x1","0x000000000000000000000000000000000000005b":"0x1","0x000000000000000000000000000000000000005c":"0x1","0x000000000000000000000000000000000000005d":"0x1","0x000000000000000000000000000000000000005e":"0x1","0x000000000000000000000000000000000000005f":"0x1","0x0000000000000000000000000000000000000060":"0x1","0x0000000000000000000000000000000000000061":"0x1","0x0000000000000000000000000000000000000062":"0x1","0x0000000000000000000000000000000000000063":"0x1","0x0000000000000000000000000000000000000064":"0x1","0x0000000000000000000000000000000000000065":"0x1","0x0000000000000000000000000000000000000066":"0x1","0x0000000000000000000000000000000000000067":"0x1","0x0000000000000000000000000000000000000068":"0x1","0x0000000000000000000000000000000000000069":"0x1","0x000000000000000000000000000000000000006a":"0x1","0x000000000000000000000000000000000000006b":"0x1","0x000000000000000000000000000000000000006c":"0x1","0x000000000000000000000000000000000000006d":"0x1","0x000000000000000000000000000000000000006e":"0x1","0x000000000000000000000000000000000000006f":"0x1","0x0000000000000000000000000000000000000070":"0x1","0x0000000000000000000000000000000000000071":"0x1","0x0000000000000000000000000000000000000072":"0x1","0x0000000000000000000000000000000000000073":"0x1","0x0000000000000000000000000000000000000074":"0x1","0x0000000000000000000000000000000000000075":"0x1","0x0000000000000000000000000000000000000076":"0x1","0x0000000000000000000000000000000000000077":"0x1","0x0000000000000000000000000000000000000078":"0x1","0x0000000000000000000000000000000000000079":"0x1","0x000000000000000000000000000000000000007a":"0x1","0x000000000000000000000000000000000000007b":"0x1","0x000000000000000000000000000000000000007c":"0x1","0x000000000000000000000000000000000000007d":"0x1","0x000000000000000000000000000000000000007e":"0x1","0x000000000000000000000000000000000000007f":"0x1","0x0000000000000000000000000000000000000080":"0x1","0x0000000000000000000000000000000000000081":"0x1","0x0000000000000000000000000000000000000082":"0x1","0x0000000000000000000000000000000000000083":"0x1","0x0000000000000000000000000000000000000084":"0x1","0x0000000000000000000000000000000000000085":"0x1","0x0000000000000000000000000000000000000086":"0x1","0x0000000000000000000000000000000000000087":"0x1","0x0000000000000000000000000000000000000088":"0x1","0x0000000000000000000000000000000000000089":"0x1","0x000000000000000000000000000000000000008a":"0x1","0x000000000000000000000000000000000000008b":"0x1","0x000000000000000000000000000000000000008c":"0x1","0x000000000000000000000000000000000000008d":"0x1","0x000000000000000000000000000000000000008e":"0x1","0x000000000000000000000000000000000000008f":"0x1","0x0000000000000000000000000000000000000090":"0x1","0x0000000000000000000000000000000000000091":"0x1","0x0000000000000000000000000000000000000092":"0x1","0x0000000000000000000000000000000000000093":"0x1","0x0000000000000000000000000000000000000094":"0x1","0x0000000000000000000000000000000000000095":"0x1","0x0000000000000000000000000000000000000096":"0x1","0x0000000000000000000000000000000000000097":"0x1","0x0000000000000000000000000000000000000098":"0x1","0x0000000000000000000000000000000000000099":"0x1","0x000000000000000000000000000000000000009a":"0x1","0x000000000000000000000000000000000000009b":"0x1","0x000000000000000000000000000000000000009c":"0x1","0x000000000000000000000000000000000000009d":"0x1","0x000000000000000000000000000000000000009e":"0x1","0x000000000000000000000000000000000000009f":"0x1","0x00000000000000000000000000000000000000a0":"0x1","0x00000000000000000000000000000000000000a1":"0x1","0x00000000000000000000000000000000000000a2":"0x1","0x00000000000000000000000000000000000000a3":"0x1","0x00000000000000000000000000000000000000a4":"0x1","0x00000000000000000000000000000000000000a5":"0x1","0x00000000000000000000000000000000000000a6":"0x1","0x00000000000000000000000000000000000000a7":"0x1","0x00000000000000000000000000000000000000a8":"0x1","0x00000000000000000000000000000000000000a9":"0x1","0x00000000000000000000000000000000000000aa":"0x1","0x00000000000000000000000000000000000000ab":"0x1","0x00000000000000000000000000000000000000ac":"0x1","0x00000000000000000000000000000000000000ad":"0x1","0x00000000000000000000000000000000000000ae":"0x1","0x00000000000000000000000000000000000000af":"0x1","0x00000000000000000000000000000000000000b0":"0x1","0x00000000000000000000000000000000000000b1":"0x1","0x00000000000000000000000000000000000000b2":"0x1","0x00000000000000000000000000000000000000b3":"0x1","0x00000000000000000000000000000000000000b4":"0x1","0x00000000000000000000000000000000000000b5":"0x1","0x00000000000000000000000000000000000000b6":"0x1","0x00000000000000000000000000000000000000b7":"0x1","0x00000000000000000000000000000000000000b8":"0x1","0x00000000000000000000000000000000000000b9":"0x1","0x00000000000000000000000000000000000000ba":"0x1","0x00000000000000000000000000000000000000bb":"0x1","0x00000000000000000000000000000000000000bc":"0x1","0x00000000000000000000000000000000000000bd":"0x1","0x00000000000000000000000000000000000000be":"0x1","0x00000000000000000000000000000000000000bf":"0x1","0x00000000000000000000000000000000000000c0":"0x1","0x00000000000000000000000000000000000000c1":"0x1","0x00000000000000000000000000000000000000c2":"0x1","0x00000000000000000000000000000000000000c3":"0x1","0x00000000000000000000000000000000000000c4":"0x1","0x00000000000000000000000000000000000000c5":"0x1","0x00000000000000000000000000000000000000c6":"0x1","0x00000000000000000000000000000000000000c7":"0x1","0x00000000000000000000000000000000000000c8":"0x1","0x00000000000000000000000000000000000000c9":"0x1","0x00000000000000000000000000000000000000ca":"0x1","0x00000000000000000000000000000000000000cb":"0x1","0x00000000000000000000000000000000000000cc":"0x1","0x00000000000000000000000000000000000000cd":"0x1","0x00000000000000000000000000000000000000ce":"0x1","0x00000000000000000000000000000000000000cf":"0x1","0x00000000000000000000000000000000000000d0":"0x1","0x00000000000000000000000000000000000000d1":"0x1","0x00000000000000000000000000000000000000d2":"0x1","0x00000000000000000000000000000000000000d3":"0x1","0x00000000000000000000000000000000000000d4":"0x1","0x00000000000000000000000000000000000000d5":"0x1","0x00000000000000000000000000000000000000d6":"0x1","0x00000000000000000000000000000000000000d7":"0x1","0x00000000000000000000000000000000000000d8":"0x1","0x00000000000000000000000000000000000000d9":"0x1","0x00000000000000000000000000000000000000da":"0x1","0x00000000000000000000000000000000000000db":"0x1","0x00000000000000000000000000000000000000dc":"0x1","0x00000000000000000000000000000000000000dd":"0x1","0x00000000000000000000000000000000000000de":"0x1","0x00000000000000000000000000000000000000df":"0x1","0x00000000000000000000000000000000000000e0":"0x1","0x00000000000000000000000000000000000000e1":"0x1","0x00000000000000000000000000000000000000e2":"0x1","0x00000000000000000000000000000000000000e3":"0x1","0x00000000000000000000000000000000000000e4":"0x1","0x00000000000000000000000000000000000000e5":"0x1","0x00000000000000000000000000000000000000e6":"0x1","0x00000000000000000000000000000000000000e7":"0x1","0x00000000000000000000000000000000000000e8":"0x1","0x00000000000000000000000000000000000000e9":"0x1","0x00000000000000000000000000000000000000ea":"0x1","0x00000000000000000000000000000000000000eb":"0x1","0x00000000000000000000000000000000000000ec":"0x1","0x00000000000000000000000000000000000000ed":"0x1","0x00000000000000000000000000000000000000ee":"0x1","0x00000000000000000000000000000000000000ef":"0x1","0x00000000000000000000000000000000000000f0":"0x1","0x00000000000000000000000000000000000000f1":"0x1","0x00000000000000000000000000000000000000f2":"0x1","0x00000000000000000000000000000000000000f3":"0x1","0x00000000000000000000000000000000000000f4":"0x1","0x00000000000000000000000000000000000000f5":"0x1","0x00000000000000000000000000000000000000f6":"0x1","0x00000000000000000000000000000000000000f7":"0x1","0x00000000000000000000000000000000000000f8":"0x1","0x00000000000000000000000000000000000000f9":"0x1","0x00000000000000000000000000000000000000fa":"0x1","0x00000000000000000000000000000000000000fb":"0x1","0x00000000000000000000000000000000000000fc":"0x1","0x00000000000000000000000000000000000000fd":"0x1","0x00000000000000000000000000000000000000fe":"0x1","0x00000000000000000000000000000000000000ff":"0x1","0x4c2ae482593505f0163cdefc073e81c63cda4107":"0x152d02c7e14af6800000","0xa8e8f14732658e4b51e8711931053a8a69baf2b1":"0x152d02c7e14af6800000","0xd9a5179f091d85051d3c982785efd1455cec8699":"0x84595161401484a000000","0xe0a2bd4258d2768837baa26a28fe71dc079f84c7":"0x4a47e3c12448f4ad000000"},require$$11={"0xa2A6d93439144FFE4D27c9E088dCD8b783946263":"0xD3C21BCECCEDA1000000","0xBc11295936Aa79d594139de1B2e12629414F3BDB":"0xD3C21BCECCEDA1000000","0x7cF5b79bfe291A67AB02b393E456cCc4c266F753":"0xD3C21BCECCEDA1000000","0xaaec86394441f915bce3e6ab399977e9906f3b69":"0xD3C21BCECCEDA1000000","0xF47CaE1CF79ca6758Bfc787dbD21E6bdBe7112B8":"0xD3C21BCECCEDA1000000","0xd7eDDB78ED295B3C9629240E8924fb8D8874ddD8":"0xD3C21BCECCEDA1000000","0x8b7F0977Bb4f0fBE7076FA22bC24acA043583F5e":"0xD3C21BCECCEDA1000000","0xe2e2659028143784d557bcec6ff3a0721048880a":"0xD3C21BCECCEDA1000000","0xd9a5179f091d85051d3c982785efd1455cec8699":"0xD3C21BCECCEDA1000000","0xbeef32ca5b9a198d27B4e02F4c70439fE60356Cf":"0xD3C21BCECCEDA1000000","0x0000006916a87b82333f4245046623b23794c65c":"0x84595161401484A000000","0xb21c33de1fab3fa15499c62b59fe0cc3250020d1":"0x52B7D2DCC80CD2E4000000","0x10F5d45854e038071485AC9e402308cF80D2d2fE":"0x52B7D2DCC80CD2E4000000","0xd7d76c58b3a519e9fA6Cc4D22dC017259BC49F1E":"0x52B7D2DCC80CD2E4000000","0x799D329e5f583419167cD722962485926E338F4a":"0xDE0B6B3A7640000"};(function(e){var a=commonjsGlobal&&commonjsGlobal.__extends||function(){var S=function(T,I){return S=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(A,C){A.__proto__=C}||function(A,C){for(var O in C)Object.prototype.hasOwnProperty.call(C,O)&&(A[O]=C[O])},S(T,I)};return function(T,I){if(typeof I!="function"&&I!==null)throw new TypeError("Class extends value "+String(I)+" is not a constructor or null");S(T,I);function A(){this.constructor=T}T.prototype=I===null?Object.create(I):(A.prototype=I.prototype,new A)}}(),t=commonjsGlobal&&commonjsGlobal.__assign||function(){return t=Object.assign||function(S){for(var T,I=1,A=arguments.length;I<A;I++){T=arguments[I];for(var C in T)Object.prototype.hasOwnProperty.call(T,C)&&(S[C]=T[C])}return S},t.apply(this,arguments)},c=commonjsGlobal&&commonjsGlobal.__values||function(S){var T=typeof Symbol=="function"&&Symbol.iterator,I=T&&S[T],A=0;if(I)return I.call(S);if(S&&typeof S.length=="number")return{next:function(){return S&&A>=S.length&&(S=void 0),{value:S&&S[A++],done:!S}}};throw new TypeError(T?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(e,"__esModule",{value:!0}),e.ConsensusAlgorithm=e.ConsensusType=e.Hardfork=e.Chain=e.CustomChain=void 0;var i=eventsExports,o=crc32,b=dist_browser$3,u=chains,l=hardforks,x=eips,g;(function(S){S.PolygonMainnet="polygon-mainnet",S.PolygonMumbai="polygon-mumbai",S.ArbitrumRinkebyTestnet="arbitrum-rinkeby-testnet",S.xDaiChain="x-dai-chain",S.OptimisticKovan="optimistic-kovan",S.OptimisticEthereum="optimistic-ethereum"})(g=e.CustomChain||(e.CustomChain={})),function(S){S[S.Mainnet=1]="Mainnet",S[S.Ropsten=3]="Ropsten",S[S.Rinkeby=4]="Rinkeby",S[S.Kovan=42]="Kovan",S[S.Goerli=5]="Goerli",S[S.Sepolia=11155111]="Sepolia"}(e.Chain||(e.Chain={}));var v;(function(S){S.Chainstart="chainstart",S.Homestead="homestead",S.Dao="dao",S.TangerineWhistle="tangerineWhistle",S.SpuriousDragon="spuriousDragon",S.Byzantium="byzantium",S.Constantinople="constantinople",S.Petersburg="petersburg",S.Istanbul="istanbul",S.MuirGlacier="muirGlacier",S.Berlin="berlin",S.London="london",S.ArrowGlacier="arrowGlacier",S.GrayGlacier="grayGlacier",S.MergeForkIdTransition="mergeForkIdTransition",S.Merge="merge",S.Shanghai="shanghai"})(v=e.Hardfork||(e.Hardfork={})),function(S){S.ProofOfStake="pos",S.ProofOfWork="pow",S.ProofOfAuthority="poa"}(e.ConsensusType||(e.ConsensusType={})),function(S){S.Ethash="ethash",S.Clique="clique",S.Casper="casper"}(e.ConsensusAlgorithm||(e.ConsensusAlgorithm={}));var E=function(S){a(T,S);function T(I){var A,C,O=this,R,B;O=S.call(this)||this,O._supportedHardforks=[],O._eips=[],O._customChains=(R=I.customChains)!==null&&R!==void 0?R:[],O._chainParams=O.setChain(I.chain),O.DEFAULT_HARDFORK=(B=O._chainParams.defaultHardfork)!==null&&B!==void 0?B:v.Istanbul;try{for(var M=c(O._chainParams.hardforks),L=M.next();!L.done;L=M.next()){var ee=L.value;ee.forkHash||(ee.forkHash=O._calcForkHash(ee.name))}}catch(z){A={error:z}}finally{try{L&&!L.done&&(C=M.return)&&C.call(M)}finally{if(A)throw A.error}}return O._hardfork=O.DEFAULT_HARDFORK,I.supportedHardforks&&(O._supportedHardforks=I.supportedHardforks),I.hardfork&&O.setHardfork(I.hardfork),I.eips&&O.setEIPs(I.eips),O}return T.custom=function(I,A){var C;A===void 0&&(A={});var O=(C=A.baseChain)!==null&&C!==void 0?C:"mainnet",R=t({},T._getChainParams(O));if(R.name="custom-chain",typeof I!="string")return new T(t({chain:t(t({},R),I)},A));if(I===g.PolygonMainnet)return T.custom({name:g.PolygonMainnet,chainId:137,networkId:137},A);if(I===g.PolygonMumbai)return T.custom({name:g.PolygonMumbai,chainId:80001,networkId:80001},A);if(I===g.ArbitrumRinkebyTestnet)return T.custom({name:g.ArbitrumRinkebyTestnet,chainId:421611,networkId:421611},A);if(I===g.xDaiChain)return T.custom({name:g.xDaiChain,chainId:100,networkId:100},A);if(I===g.OptimisticKovan)return T.custom({name:g.OptimisticKovan,chainId:69,networkId:69},t({hardfork:v.Berlin},A));if(I===g.OptimisticEthereum)return T.custom({name:g.OptimisticEthereum,chainId:10,networkId:10},t({hardfork:v.Berlin},A));throw new Error("Custom chain ".concat(I," not supported"))},T.forCustomChain=function(I,A,C,O){var R=T._getChainParams(I);return new T({chain:t(t({},R),A),hardfork:C,supportedHardforks:O})},T.isSupportedChainId=function(I){var A=(0,u._getInitializedChains)();return!!A.names[I.toString()]},T._getChainParams=function(I,A){var C=(0,u._getInitializedChains)(A);if(typeof I=="number"||b.BN.isBN(I)){if(I=I.toString(),C.names[I]){var O=C.names[I];return C[O]}throw new Error("Chain with ID ".concat(I," not supported"))}if(C[I])return C[I];throw new Error("Chain with name ".concat(I," not supported"))},T.prototype.setChain=function(I){var A,C;if(typeof I=="number"||typeof I=="string"||b.BN.isBN(I)){var O=void 0;this._customChains&&this._customChains.length>0&&Array.isArray(this._customChains[0])?O=this._customChains.map(function(ee){return ee[0]}):O=this._customChains,this._chainParams=T._getChainParams(I,O)}else if(typeof I=="object"){if(this._customChains.length>0)throw new Error("Chain must be a string, number, or BN when initialized with customChains passed in");var R=["networkId","genesis","hardforks","bootstrapNodes"];try{for(var B=c(R),M=B.next();!M.done;M=B.next()){var L=M.value;if(I[L]===void 0)throw new Error("Missing required chain parameter: ".concat(L))}}catch(ee){A={error:ee}}finally{try{M&&!M.done&&(C=B.return)&&C.call(B)}finally{if(A)throw A.error}}this._chainParams=I}else throw new Error("Wrong input format");return this._chainParams},T.prototype.setHardfork=function(I){var A,C;if(!this._isSupportedHardfork(I))throw new Error("Hardfork ".concat(I," not set as supported in supportedHardforks"));var O=!1;try{for(var R=c(l.hardforks),B=R.next();!B.done;B=R.next()){var M=B.value;M[0]===I&&(this._hardfork!==I&&(this._hardfork=I,this.emit("hardforkChanged",I)),O=!0)}}catch(L){A={error:L}}finally{try{B&&!B.done&&(C=R.return)&&C.call(R)}finally{if(A)throw A.error}}if(!O)throw new Error("Hardfork with name ".concat(I," not supported"))},T.prototype.getHardforkByBlockNumber=function(I,A){var C,O;I=(0,b.toType)(I,b.TypeOutput.BN),A=(0,b.toType)(A,b.TypeOutput.BN);var R=v.Chainstart,B,M,L;try{for(var ee=c(this.hardforks()),z=ee.next();!z.done;z=ee.next()){var oe=z.value;if(oe.block===null){if(A!=null&&oe.td!==void 0&&oe.td!==null&&A.gte(new b.BN(oe.td)))return oe.name;continue}I.gte(new b.BN(oe.block))&&(R=oe.name),A&&oe.td&&(A.gte(new b.BN(oe.td))?B=oe.name:M=L),L=oe.name}}catch(D){C={error:D}}finally{try{z&&!z.done&&(O=ee.return)&&O.call(ee)}finally{if(C)throw C.error}}if(A){var W="block number: ".concat(I," (-> ").concat(R,"), ");if(B&&!this.hardforkGteHardfork(R,B)){var P="HF determined by block number is lower than the minimum total difficulty HF";throw W+="total difficulty: ".concat(A," (-> ").concat(B,")"),new Error("".concat(P,": ").concat(W))}if(M&&!this.hardforkGteHardfork(M,R)){var P="Maximum HF determined by total difficulty is lower than the block number HF";throw W+="total difficulty: ".concat(A," (-> ").concat(M,")"),new Error("".concat(P,": ").concat(W))}}return R},T.prototype.setHardforkByBlockNumber=function(I,A){var C=this.getHardforkByBlockNumber(I,A);return this.setHardfork(C),C},T.prototype._chooseHardfork=function(I,A){if(A===void 0&&(A=!0),!I)I=this._hardfork;else if(A&&!this._isSupportedHardfork(I))throw new Error("Hardfork ".concat(I," not set as supported in supportedHardforks"));return I},T.prototype._getHardfork=function(I){var A,C,O=this.hardforks();try{for(var R=c(O),B=R.next();!B.done;B=R.next()){var M=B.value;if(M.name===I)return M}}catch(L){A={error:L}}finally{try{B&&!B.done&&(C=R.return)&&C.call(R)}finally{if(A)throw A.error}}throw new Error("Hardfork ".concat(I," not defined for chain ").concat(this.chainName()))},T.prototype._isSupportedHardfork=function(I){var A,C;if(this._supportedHardforks.length>0)try{for(var O=c(this._supportedHardforks),R=O.next();!R.done;R=O.next()){var B=R.value;if(I===B)return!0}}catch(M){A={error:M}}finally{try{R&&!R.done&&(C=O.return)&&C.call(O)}finally{if(A)throw A.error}}else return!0;return!1},T.prototype.setEIPs=function(I){var A,C,O=this;I===void 0&&(I=[]);var R=function(z){if(!(z in x.EIPs))throw new Error("".concat(z," not supported"));var oe=B.gteHardfork(x.EIPs[z].minimumHardfork);if(!oe)throw new Error("".concat(z," cannot be activated on hardfork ").concat(B.hardfork(),", minimumHardfork: ").concat(oe));x.EIPs[z].requiredEIPs&&x.EIPs[z].requiredEIPs.forEach(function(W){if(!(I.includes(W)||O.isActivatedEIP(W)))throw new Error("".concat(z," requires EIP ").concat(W,", but is not included in the EIP list"))})},B=this;try{for(var M=c(I),L=M.next();!L.done;L=M.next()){var ee=L.value;R(ee)}}catch(z){A={error:z}}finally{try{L&&!L.done&&(C=M.return)&&C.call(M)}finally{if(A)throw A.error}}this._eips=I},T.prototype.param=function(I,A){var C,O,R=null;try{for(var B=c(this._eips),M=B.next();!M.done;M=B.next()){var L=M.value;if(R=this.paramByEIP(I,A,L),R!==null)return R}}catch(ee){C={error:ee}}finally{try{M&&!M.done&&(O=B.return)&&O.call(B)}finally{if(C)throw C.error}}return this.paramByHardfork(I,A,this._hardfork)},T.prototype.paramByHardfork=function(I,A,C){var O,R,B,M;C=this._chooseHardfork(C);var L=null;try{for(var ee=c(l.hardforks),z=ee.next();!z.done;z=ee.next()){var oe=z.value;if("eips"in oe[1]){var W=oe[1].eips;try{for(var P=(B=void 0,c(W)),D=P.next();!D.done;D=P.next()){var q=D.value,Y=this.paramByEIP(I,A,q);L=Y!==null?Y:L}}catch(U){B={error:U}}finally{try{D&&!D.done&&(M=P.return)&&M.call(P)}finally{if(B)throw B.error}}}else{if(!oe[1][I])throw new Error("Topic ".concat(I," not defined"));oe[1][I][A]!==void 0&&(L=oe[1][I][A].v)}if(oe[0]===C)break}}catch(U){O={error:U}}finally{try{z&&!z.done&&(R=ee.return)&&R.call(ee)}finally{if(O)throw O.error}}return L},T.prototype.paramByEIP=function(I,A,C){if(!(C in x.EIPs))throw new Error("".concat(C," not supported"));var O=x.EIPs[C];if(!(I in O))throw new Error("Topic ".concat(I," not defined"));if(O[I][A]===void 0)return null;var R=O[I][A].v;return R},T.prototype.paramByBlock=function(I,A,C){var O=this.activeHardforks(C),R=O[O.length-1].name;return this.paramByHardfork(I,A,R)},T.prototype.isActivatedEIP=function(I){var A,C;if(this.eips().includes(I))return!0;try{for(var O=c(l.hardforks),R=O.next();!R.done;R=O.next()){var B=R.value,M=B[1];if(this.gteHardfork(M.name)&&"eips"in M&&M.eips.includes(I))return!0}}catch(L){A={error:L}}finally{try{R&&!R.done&&(C=O.return)&&C.call(O)}finally{if(A)throw A.error}}return!1},T.prototype.hardforkIsActiveOnBlock=function(I,A,C){var O;C===void 0&&(C={}),A=(0,b.toType)(A,b.TypeOutput.BN);var R=(O=C.onlySupported)!==null&&O!==void 0?O:!1;I=this._chooseHardfork(I,R);var B=this.hardforkBlockBN(I);return!!(B&&A.gte(B))},T.prototype.activeOnBlock=function(I,A){return this.hardforkIsActiveOnBlock(null,I,A)},T.prototype.hardforkGteHardfork=function(I,A,C){var O,R;C===void 0&&(C={});var B=C.onlyActive===void 0?!1:C.onlyActive;I=this._chooseHardfork(I,C.onlySupported);var M;B?M=this.activeHardforks(null,C):M=this.hardforks();var L=-1,ee=-1,z=0;try{for(var oe=c(M),W=oe.next();!W.done;W=oe.next()){var P=W.value;P.name===I&&(L=z),P.name===A&&(ee=z),z+=1}}catch(D){O={error:D}}finally{try{W&&!W.done&&(R=oe.return)&&R.call(oe)}finally{if(O)throw O.error}}return L>=ee&&ee!==-1},T.prototype.gteHardfork=function(I,A){return this.hardforkGteHardfork(null,I,A)},T.prototype.hardforkIsActiveOnChain=function(I,A){var C,O,R;A===void 0&&(A={});var B=(R=A.onlySupported)!==null&&R!==void 0?R:!1;I=this._chooseHardfork(I,B);try{for(var M=c(this.hardforks()),L=M.next();!L.done;L=M.next()){var ee=L.value;if(ee.name===I&&ee.block!==null)return!0}}catch(z){C={error:z}}finally{try{L&&!L.done&&(O=M.return)&&O.call(M)}finally{if(C)throw C.error}}return!1},T.prototype.activeHardforks=function(I,A){var C,O;A===void 0&&(A={});var R=[],B=this.hardforks();try{for(var M=c(B),L=M.next();!L.done;L=M.next()){var ee=L.value;if(ee.block!==null){if(I!=null&&I<ee.block)break;A.onlySupported&&!this._isSupportedHardfork(ee.name)||R.push(ee)}}}catch(z){C={error:z}}finally{try{L&&!L.done&&(O=M.return)&&O.call(M)}finally{if(C)throw C.error}}return R},T.prototype.activeHardfork=function(I,A){A===void 0&&(A={});var C=this.activeHardforks(I,A);if(C.length>0)return C[C.length-1].name;throw new Error("No (supported) active hardfork found")},T.prototype.hardforkBlock=function(I){var A=this.hardforkBlockBN(I);return(0,b.toType)(A,b.TypeOutput.Number)},T.prototype.hardforkBlockBN=function(I){I=this._chooseHardfork(I,!1);var A=this._getHardfork(I).block;return A==null?null:new b.BN(A)},T.prototype.hardforkTD=function(I){I=this._chooseHardfork(I,!1);var A=this._getHardfork(I).td;return A==null?null:new b.BN(A)},T.prototype.isHardforkBlock=function(I,A){I=(0,b.toType)(I,b.TypeOutput.BN),A=this._chooseHardfork(A,!1);var C=this.hardforkBlockBN(A);return C?C.eq(I):!1},T.prototype.nextHardforkBlock=function(I){var A=this.nextHardforkBlockBN(I);return(0,b.toType)(A,b.TypeOutput.Number)},T.prototype.nextHardforkBlockBN=function(I){I=this._chooseHardfork(I,!1);var A=this.hardforkBlockBN(I);if(A===null)return null;var C=this.hardforks().reduce(function(O,R){var B=new b.BN(R.block);return B.gt(A)&&O===null?B:O},null);return C},T.prototype.isNextHardforkBlock=function(I,A){I=(0,b.toType)(I,b.TypeOutput.BN),A=this._chooseHardfork(A,!1);var C=this.nextHardforkBlockBN(A);return C===null?!1:C.eq(I)},T.prototype._calcForkHash=function(I){var A,C,O=buffer$2.Buffer.from(this.genesis().hash.substr(2),"hex"),R=buffer$2.Buffer.alloc(0),B=0;try{for(var M=c(this.hardforks()),L=M.next();!L.done;L=M.next()){var ee=L.value,z=ee.block;if(z!==0&&z!==null&&z!==B){var oe=buffer$2.Buffer.from(z.toString(16).padStart(16,"0"),"hex");R=buffer$2.Buffer.concat([R,oe])}if(ee.name===I)break;z!==null&&(B=z)}}catch(D){A={error:D}}finally{try{L&&!L.done&&(C=M.return)&&C.call(M)}finally{if(A)throw A.error}}var W=buffer$2.Buffer.concat([O,R]),P=(0,b.intToBuffer)((0,o.buf)(W)>>>0).toString("hex");return"0x".concat(P)},T.prototype.forkHash=function(I){I=this._chooseHardfork(I,!1);var A=this._getHardfork(I);if(A.block===null&&A.td===void 0){var C="No fork hash calculation possible for future hardfork";throw new Error(C)}return A.forkHash!==void 0?A.forkHash:this._calcForkHash(I)},T.prototype.hardforkForForkHash=function(I){var A=this.hardforks().filter(function(C){return C.forkHash===I});return A.length>=1?A[A.length-1]:null},T.prototype.genesis=function(){return this._chainParams.genesis},T.prototype.genesisState=function(){var I,A;switch(this.chainName()){case"mainnet":return require$$6$1;case"ropsten":return require$$7$1;case"rinkeby":return require$$8$1;case"kovan":return require$$9$1;case"goerli":return require$$10;case"sepolia":return require$$11}if(this._customChains&&this._customChains.length>0&&Array.isArray(this._customChains[0]))try{for(var C=c(this._customChains),O=C.next();!O.done;O=C.next()){var R=O.value;if(R[0].name===this.chainName())return R[1]}}catch(B){I={error:B}}finally{try{O&&!O.done&&(A=C.return)&&A.call(C)}finally{if(I)throw I.error}}return{}},T.prototype.hardforks=function(){return this._chainParams.hardforks},T.prototype.bootstrapNodes=function(){return this._chainParams.bootstrapNodes},T.prototype.dnsNetworks=function(){return this._chainParams.dnsNetworks},T.prototype.hardfork=function(){return this._hardfork},T.prototype.chainId=function(){return(0,b.toType)(this.chainIdBN(),b.TypeOutput.Number)},T.prototype.chainIdBN=function(){return new b.BN(this._chainParams.chainId)},T.prototype.chainName=function(){return this._chainParams.name},T.prototype.networkId=function(){return(0,b.toType)(this.networkIdBN(),b.TypeOutput.Number)},T.prototype.networkIdBN=function(){return new b.BN(this._chainParams.networkId)},T.prototype.eips=function(){return this._eips},T.prototype.consensusType=function(){var I,A,C=this.hardfork(),O;try{for(var R=c(l.hardforks),B=R.next();!B.done;B=R.next()){var M=B.value;if("consensus"in M[1]&&(O=M[1].consensus.type),M[0]===C)break}}catch(L){I={error:L}}finally{try{B&&!B.done&&(A=R.return)&&A.call(R)}finally{if(I)throw I.error}}return O||this._chainParams.consensus.type},T.prototype.consensusAlgorithm=function(){var I,A,C=this.hardfork(),O;try{for(var R=c(l.hardforks),B=R.next();!B.done;B=R.next()){var M=B.value;if("consensus"in M[1]&&(O=M[1].consensus.algorithm),M[0]===C)break}}catch(L){I={error:L}}finally{try{B&&!B.done&&(A=R.return)&&A.call(R)}finally{if(I)throw I.error}}return O||this._chainParams.consensus.algorithm},T.prototype.consensusConfig=function(){var I,A,C=this.hardfork(),O;try{for(var R=c(l.hardforks),B=R.next();!B.done;B=R.next()){var M=B.value;if("consensus"in M[1]&&(O=M[1].consensus[M[1].consensus.algorithm]),M[0]===C)break}}catch(ee){I={error:ee}}finally{try{B&&!B.done&&(A=R.return)&&A.call(R)}finally{if(I)throw I.error}}if(O)return O;var L=this.consensusAlgorithm();return this._chainParams.consensus[L]},T.prototype.copy=function(){var I=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return I.removeAllListeners(),I},T}(i.EventEmitter);e.default=E})(dist_browser$1);const Common=getDefaultExportFromCjs(dist_browser$1);var dist_browser={},legacyTransaction={},types={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.N_DIV_2=e.isAccessList=e.isAccessListBuffer=e.Capability=void 0;var a=dist_browser$3;(function(i){i[i.EIP155ReplayProtection=155]="EIP155ReplayProtection",i[i.EIP1559FeeMarket=1559]="EIP1559FeeMarket",i[i.EIP2718TypedTransaction=2718]="EIP2718TypedTransaction",i[i.EIP2930AccessLists=2930]="EIP2930AccessLists"})(e.Capability||(e.Capability={}));function t(i){if(i.length===0)return!0;var o=i[0];return!!Array.isArray(o)}e.isAccessListBuffer=t;function c(i){return!t(i)}e.isAccessList=c,e.N_DIV_2=new a.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16)})(types);var baseTransaction={},__createBinding=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(e,a,t,c){c===void 0&&(c=t);var i=Object.getOwnPropertyDescriptor(a,t);(!i||("get"in i?!a.__esModule:i.writable||i.configurable))&&(i={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,c,i)}:function(e,a,t,c){c===void 0&&(c=t),e[c]=a[t]}),__setModuleDefault=commonjsGlobal&&commonjsGlobal.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),__importStar=commonjsGlobal&&commonjsGlobal.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var t in e)t!=="default"&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(a,e,t);return __setModuleDefault(a,e),a},__values=commonjsGlobal&&commonjsGlobal.__values||function(e){var a=typeof Symbol=="function"&&Symbol.iterator,t=a&&e[a],c=0;if(t)return t.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&c>=e.length&&(e=void 0),{value:e&&e[c++],done:!e}}};throw new TypeError(a?"Object is not iterable.":"Symbol.iterator is not defined.")},__read$3=commonjsGlobal&&commonjsGlobal.__read||function(e,a){var t=typeof Symbol=="function"&&e[Symbol.iterator];if(!t)return e;var c=t.call(e),i,o=[],b;try{for(;(a===void 0||a-- >0)&&!(i=c.next()).done;)o.push(i.value)}catch(u){b={error:u}}finally{try{i&&!i.done&&(t=c.return)&&t.call(c)}finally{if(b)throw b.error}}return o};Object.defineProperty(baseTransaction,"__esModule",{value:!0});baseTransaction.BaseTransaction=void 0;var common_1=__importStar(dist_browser$1),ethereumjs_util_1$4=dist_browser$3,types_1$4=types,BaseTransaction=function(){function e(a,t){this.cache={hash:void 0,dataFee:void 0},this.activeCapabilities=[],this.DEFAULT_CHAIN=common_1.Chain.Mainnet,this.DEFAULT_HARDFORK=common_1.Hardfork.Istanbul;var c=a.nonce,i=a.gasLimit,o=a.to,b=a.value,u=a.data,l=a.v,x=a.r,g=a.s,v=a.type;this._type=new ethereumjs_util_1$4.BN((0,ethereumjs_util_1$4.toBuffer)(v)).toNumber(),this.txOptions=t;var E=(0,ethereumjs_util_1$4.toBuffer)(o===""?"0x":o),S=(0,ethereumjs_util_1$4.toBuffer)(l===""?"0x":l),T=(0,ethereumjs_util_1$4.toBuffer)(x===""?"0x":x),I=(0,ethereumjs_util_1$4.toBuffer)(g===""?"0x":g);this.nonce=new ethereumjs_util_1$4.BN((0,ethereumjs_util_1$4.toBuffer)(c===""?"0x":c)),this.gasLimit=new ethereumjs_util_1$4.BN((0,ethereumjs_util_1$4.toBuffer)(i===""?"0x":i)),this.to=E.length>0?new ethereumjs_util_1$4.Address(E):void 0,this.value=new ethereumjs_util_1$4.BN((0,ethereumjs_util_1$4.toBuffer)(b===""?"0x":b)),this.data=(0,ethereumjs_util_1$4.toBuffer)(u===""?"0x":u),this.v=S.length>0?new ethereumjs_util_1$4.BN(S):void 0,this.r=T.length>0?new ethereumjs_util_1$4.BN(T):void 0,this.s=I.length>0?new ethereumjs_util_1$4.BN(I):void 0,this._validateCannotExceedMaxInteger({value:this.value,r:this.r,s:this.s}),this._validateCannotExceedMaxInteger({gasLimit:this.gasLimit},64),this._validateCannotExceedMaxInteger({nonce:this.nonce},64,!0)}return Object.defineProperty(e.prototype,"transactionType",{get:function(){return this.type},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!1,configurable:!0}),e.prototype.supports=function(a){return this.activeCapabilities.includes(a)},e.prototype.validate=function(a){a===void 0&&(a=!1);var t=[];return this.getBaseFee().gt(this.gasLimit)&&t.push("gasLimit is too low. given ".concat(this.gasLimit,", need at least ").concat(this.getBaseFee())),this.isSigned()&&!this.verifySignature()&&t.push("Invalid Signature"),a?t:t.length===0},e.prototype.getBaseFee=function(){var a=this.getDataFee().addn(this.common.param("gasPrices","tx"));return this.common.gteHardfork("homestead")&&this.toCreationAddress()&&a.iaddn(this.common.param("gasPrices","txCreation")),a},e.prototype.getDataFee=function(){for(var a=this.common.param("gasPrices","txDataZero"),t=this.common.param("gasPrices","txDataNonZero"),c=0,i=0;i<this.data.length;i++)this.data[i]===0?c+=a:c+=t;if(c=new ethereumjs_util_1$4.BN(c),(this.to===void 0||this.to===null)&&this.common.isActivatedEIP(3860)){var o=Math.ceil(this.data.length/32),b=new ethereumjs_util_1$4.BN(this.common.param("gasPrices","initCodeWordCost")).imuln(o);c.iadd(b)}return c},e.prototype.toCreationAddress=function(){return this.to===void 0||this.to.buf.length===0},e.prototype.isSigned=function(){var a=this,t=a.v,c=a.r,i=a.s;return this.type===0?!(!t||!c||!i):!(t===void 0||!c||!i)},e.prototype.verifySignature=function(){try{var a=this.getSenderPublicKey();return(0,ethereumjs_util_1$4.unpadBuffer)(a).length!==0}catch{return!1}},e.prototype.getSenderAddress=function(){return new ethereumjs_util_1$4.Address((0,ethereumjs_util_1$4.publicToAddress)(this.getSenderPublicKey()))},e.prototype.sign=function(a){if(a.length!==32){var t=this._errorMsg("Private key must be 32 bytes in length.");throw new Error(t)}var c=!1;this.type===0&&this.common.gteHardfork("spuriousDragon")&&!this.supports(types_1$4.Capability.EIP155ReplayProtection)&&(this.activeCapabilities.push(types_1$4.Capability.EIP155ReplayProtection),c=!0);var i=this.getMessageToSign(!0),o=(0,ethereumjs_util_1$4.ecsign)(i,a),b=o.v,u=o.r,l=o.s,x=this._processSignature(b,u,l);if(c){var g=this.activeCapabilities.indexOf(types_1$4.Capability.EIP155ReplayProtection);g>-1&&this.activeCapabilities.splice(g,1)}return x},e.prototype._getCommon=function(a,t){var c;if(t){var i=new ethereumjs_util_1$4.BN((0,ethereumjs_util_1$4.toBuffer)(t));if(a){if(!a.chainIdBN().eq(i)){var o=this._errorMsg("The chain ID does not match the chain ID of Common");throw new Error(o)}return a.copy()}else return common_1.default.isSupportedChainId(i)?new common_1.default({chain:i,hardfork:this.DEFAULT_HARDFORK}):common_1.default.forCustomChain(this.DEFAULT_CHAIN,{name:"custom-chain",networkId:i,chainId:i},this.DEFAULT_HARDFORK)}else return(c=a?.copy())!==null&&c!==void 0?c:new common_1.default({chain:this.DEFAULT_CHAIN,hardfork:this.DEFAULT_HARDFORK})},e.prototype._validateCannotExceedMaxInteger=function(a,t,c){var i,o;t===void 0&&(t=256),c===void 0&&(c=!1);try{for(var b=__values(Object.entries(a)),u=b.next();!u.done;u=b.next()){var l=__read$3(u.value,2),x=l[0],g=l[1];switch(t){case 64:if(c){if(g?.gte(ethereumjs_util_1$4.MAX_UINT64)){var v=this._errorMsg("".concat(x," cannot equal or exceed MAX_UINT64 (2^64-1), given ").concat(g));throw new Error(v)}}else if(g?.gt(ethereumjs_util_1$4.MAX_UINT64)){var v=this._errorMsg("".concat(x," cannot exceed MAX_UINT64 (2^64-1), given ").concat(g));throw new Error(v)}break;case 256:if(c){if(g?.gte(ethereumjs_util_1$4.MAX_INTEGER)){var v=this._errorMsg("".concat(x," cannot equal or exceed MAX_INTEGER (2^256-1), given ").concat(g));throw new Error(v)}}else if(g?.gt(ethereumjs_util_1$4.MAX_INTEGER)){var v=this._errorMsg("".concat(x," cannot exceed MAX_INTEGER (2^256-1), given ").concat(g));throw new Error(v)}break;default:{var v=this._errorMsg("unimplemented bits value");throw new Error(v)}}}}catch(E){i={error:E}}finally{try{u&&!u.done&&(o=b.return)&&o.call(b)}finally{if(i)throw i.error}}},e.prototype._getSharedErrorPostfix=function(){var a="";try{a=this.isSigned()?(0,ethereumjs_util_1$4.bufferToHex)(this.hash()):"not available (unsigned)"}catch{a="error"}var t="";try{t=this.isSigned().toString()}catch{a="error"}var c="";try{c=this.common.hardfork()}catch{c="error"}var i="tx type=".concat(this.type," hash=").concat(a," nonce=").concat(this.nonce," value=").concat(this.value," ");return i+="signed=".concat(t," hf=").concat(c),i},e}();baseTransaction.BaseTransaction=BaseTransaction;var util={};Object.defineProperty(util,"__esModule",{value:!0});util.AccessLists=util.checkMaxInitCodeSize=void 0;var ethereumjs_util_1$3=dist_browser$3,types_1$3=types;function checkMaxInitCodeSize(e,a){if(a>e.param("vm","maxInitCodeSize"))throw new Error("the initcode size of this transaction is too large: it is ".concat(a," while the max is ").concat(e.param("vm","maxInitCodeSize")))}util.checkMaxInitCodeSize=checkMaxInitCodeSize;var AccessLists=function(){function e(){}return e.getAccessListData=function(a){var t,c;if(a&&(0,types_1$3.isAccessList)(a)){t=a;for(var i=[],o=0;o<a.length;o++){for(var b=a[o],u=(0,ethereumjs_util_1$3.toBuffer)(b.address),l=[],x=0;x<b.storageKeys.length;x++)l.push((0,ethereumjs_util_1$3.toBuffer)(b.storageKeys[x]));i.push([u,l])}c=i}else{c=a??[];for(var g=[],o=0;o<c.length;o++){for(var v=c[o],E=(0,ethereumjs_util_1$3.bufferToHex)(v[0]),S=[],b=0;b<v[1].length;b++)S.push((0,ethereumjs_util_1$3.bufferToHex)(v[1][b]));var T={address:E,storageKeys:S};g.push(T)}t=g}return{AccessListJSON:t,accessList:c}},e.verifyAccessList=function(a){for(var t=0;t<a.length;t++){var c=a[t],i=c[0],o=c[1];if(c[2]!==void 0)throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");if(i.length!=20)throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");for(var b=0;b<o.length;b++)if(o[b].length!=32)throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")}},e.getAccessListJSON=function(a){for(var t=[],c=0;c<a.length;c++){for(var i=a[c],o={address:"0x"+(0,ethereumjs_util_1$3.setLengthLeft)(i[0],20).toString("hex"),storageKeys:[]},b=i[1],u=0;u<b.length;u++){var l=b[u];o.storageKeys.push("0x"+(0,ethereumjs_util_1$3.setLengthLeft)(l,32).toString("hex"))}t.push(o)}return t},e.getDataFeeEIP2930=function(a,t){for(var c=t.param("gasPrices","accessListStorageKeyCost"),i=t.param("gasPrices","accessListAddressCost"),o=0,b=0;b<a.length;b++){var u=a[b],l=u[1];o+=l.length}var x=a.length;return x*i+o*c},e}();util.AccessLists=AccessLists;var __extends$2=commonjsGlobal&&commonjsGlobal.__extends||function(){var e=function(a,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(c,i){c.__proto__=i}||function(c,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(c[o]=i[o])},e(a,t)};return function(a,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");e(a,t);function c(){this.constructor=a}a.prototype=t===null?Object.create(t):(c.prototype=t.prototype,new c)}}(),__assign$2=commonjsGlobal&&commonjsGlobal.__assign||function(){return __assign$2=Object.assign||function(e){for(var a,t=1,c=arguments.length;t<c;t++){a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e},__assign$2.apply(this,arguments)},__read$2=commonjsGlobal&&commonjsGlobal.__read||function(e,a){var t=typeof Symbol=="function"&&e[Symbol.iterator];if(!t)return e;var c=t.call(e),i,o=[],b;try{for(;(a===void 0||a-- >0)&&!(i=c.next()).done;)o.push(i.value)}catch(u){b={error:u}}finally{try{i&&!i.done&&(t=c.return)&&t.call(c)}finally{if(b)throw b.error}}return o};Object.defineProperty(legacyTransaction,"__esModule",{value:!0});var ethereumjs_util_1$2=dist_browser$3,types_1$2=types,baseTransaction_1$2=baseTransaction,util_1$2=util,TRANSACTION_TYPE$2=0,Transaction=function(e){__extends$2(a,e);function a(t,c){c===void 0&&(c={});var i=this,o;if(i=e.call(this,__assign$2(__assign$2({},t),{type:TRANSACTION_TYPE$2}),c)||this,i.common=i._validateTxV(i.v,c.common),i.gasPrice=new ethereumjs_util_1$2.BN((0,ethereumjs_util_1$2.toBuffer)(t.gasPrice===""?"0x":t.gasPrice)),i.gasPrice.mul(i.gasLimit).gt(ethereumjs_util_1$2.MAX_INTEGER)){var b=i._errorMsg("gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)");throw new Error(b)}if(i._validateCannotExceedMaxInteger({gasPrice:i.gasPrice}),i.common.gteHardfork("spuriousDragon"))if(!i.isSigned())i.activeCapabilities.push(types_1$2.Capability.EIP155ReplayProtection);else{var u=i.v,l=i.common.chainIdBN().muln(2);(u.eq(l.addn(35))||u.eq(l.addn(36)))&&i.activeCapabilities.push(types_1$2.Capability.EIP155ReplayProtection)}i.common.isActivatedEIP(3860)&&(0,util_1$2.checkMaxInitCodeSize)(i.common,i.data.length);var x=(o=c?.freeze)!==null&&o!==void 0?o:!0;return x&&Object.freeze(i),i}return a.fromTxData=function(t,c){return c===void 0&&(c={}),new a(t,c)},a.fromSerializedTx=function(t,c){c===void 0&&(c={});var i=ethereumjs_util_1$2.rlp.decode(t);if(!Array.isArray(i))throw new Error("Invalid serialized tx input. Must be array");return this.fromValuesArray(i,c)},a.fromRlpSerializedTx=function(t,c){return c===void 0&&(c={}),a.fromSerializedTx(t,c)},a.fromValuesArray=function(t,c){if(c===void 0&&(c={}),t.length!==6&&t.length!==9)throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");var i=__read$2(t,9),o=i[0],b=i[1],u=i[2],l=i[3],x=i[4],g=i[5],v=i[6],E=i[7],S=i[8];return(0,ethereumjs_util_1$2.validateNoLeadingZeroes)({nonce:o,gasPrice:b,gasLimit:u,value:x,v,r:E,s:S}),new a({nonce:o,gasPrice:b,gasLimit:u,to:l,value:x,data:g,v,r:E,s:S},c)},a.prototype.raw=function(){return[(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.nonce),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.gasPrice),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.gasLimit),this.to!==void 0?this.to.buf:buffer$2.Buffer.from([]),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.value),this.data,this.v!==void 0?(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.v):buffer$2.Buffer.from([]),this.r!==void 0?(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.r):buffer$2.Buffer.from([]),this.s!==void 0?(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.s):buffer$2.Buffer.from([])]},a.prototype.serialize=function(){return ethereumjs_util_1$2.rlp.encode(this.raw())},a.prototype._getMessageToSign=function(){var t=[(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.nonce),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.gasPrice),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.gasLimit),this.to!==void 0?this.to.buf:buffer$2.Buffer.from([]),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(this.value),this.data];return this.supports(types_1$2.Capability.EIP155ReplayProtection)&&(t.push((0,ethereumjs_util_1$2.toBuffer)(this.common.chainIdBN())),t.push((0,ethereumjs_util_1$2.unpadBuffer)((0,ethereumjs_util_1$2.toBuffer)(0))),t.push((0,ethereumjs_util_1$2.unpadBuffer)((0,ethereumjs_util_1$2.toBuffer)(0)))),t},a.prototype.getMessageToSign=function(t){t===void 0&&(t=!0);var c=this._getMessageToSign();return t?(0,ethereumjs_util_1$2.rlphash)(c):c},a.prototype.getDataFee=function(){return this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork()?this.cache.dataFee.value:(Object.isFrozen(this)&&(this.cache.dataFee={value:e.prototype.getDataFee.call(this),hardfork:this.common.hardfork()}),e.prototype.getDataFee.call(this))},a.prototype.getUpfrontCost=function(){return this.gasLimit.mul(this.gasPrice).add(this.value)},a.prototype.hash=function(){return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=(0,ethereumjs_util_1$2.rlphash)(this.raw())),this.cache.hash):(0,ethereumjs_util_1$2.rlphash)(this.raw())},a.prototype.getMessageToVerifySignature=function(){if(!this.isSigned()){var t=this._errorMsg("This transaction is not signed");throw new Error(t)}var c=this._getMessageToSign();return(0,ethereumjs_util_1$2.rlphash)(c)},a.prototype.getSenderPublicKey=function(){var t,c=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(!((t=this.s)===null||t===void 0)&&t.gt(types_1$2.N_DIV_2))){var i=this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw new Error(i)}var o=this,b=o.v,u=o.r,l=o.s;try{return(0,ethereumjs_util_1$2.ecrecover)(c,b,(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(u),(0,ethereumjs_util_1$2.bnToUnpaddedBuffer)(l),this.supports(types_1$2.Capability.EIP155ReplayProtection)?this.common.chainIdBN():void 0)}catch{var i=this._errorMsg("Invalid Signature");throw new Error(i)}},a.prototype._processSignature=function(t,c,i){var o=new ethereumjs_util_1$2.BN(t);this.supports(types_1$2.Capability.EIP155ReplayProtection)&&o.iadd(this.common.chainIdBN().muln(2).addn(8));var b=__assign$2(__assign$2({},this.txOptions),{common:this.common});return a.fromTxData({nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,v:o,r:new ethereumjs_util_1$2.BN(c),s:new ethereumjs_util_1$2.BN(i)},b)},a.prototype.toJSON=function(){return{nonce:(0,ethereumjs_util_1$2.bnToHex)(this.nonce),gasPrice:(0,ethereumjs_util_1$2.bnToHex)(this.gasPrice),gasLimit:(0,ethereumjs_util_1$2.bnToHex)(this.gasLimit),to:this.to!==void 0?this.to.toString():void 0,value:(0,ethereumjs_util_1$2.bnToHex)(this.value),data:"0x"+this.data.toString("hex"),v:this.v!==void 0?(0,ethereumjs_util_1$2.bnToHex)(this.v):void 0,r:this.r!==void 0?(0,ethereumjs_util_1$2.bnToHex)(this.r):void 0,s:this.s!==void 0?(0,ethereumjs_util_1$2.bnToHex)(this.s):void 0}},a.prototype._validateTxV=function(t,c){if(t!==void 0&&t.ltn(37)&&!t.eqn(27)&&!t.eqn(28))throw new Error("Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ".concat(t));var i;if(t!==void 0&&(!c||c.gteHardfork("spuriousDragon"))&&!t.eqn(27)&&!t.eqn(28))if(c){var o=c.chainIdBN().muln(2),b=t.eq(o.addn(35))||t.eq(o.addn(36));if(!b)throw new Error("Incompatible EIP155-based V ".concat(t," and chain id ").concat(c.chainIdBN(),". See the Common parameter of the Transaction constructor to set the chain id."))}else{var u=void 0;t.subn(35).isEven()?u=35:u=36,i=t.subn(u).divn(2)}return this._getCommon(c,i)},a.prototype._unsignedTxImplementsEIP155=function(){return this.common.gteHardfork("spuriousDragon")},a.prototype._signedTxImplementsEIP155=function(){if(!this.isSigned()){var t=this._errorMsg("This transaction is not signed");throw new Error(t)}var c=this.common.gteHardfork("spuriousDragon"),i=this.v,o=this.common.chainIdBN().muln(2),b=i.eq(o.addn(35))||i.eq(o.addn(36));return b&&c},a.prototype.errorStr=function(){var t=this._getSharedErrorPostfix();return t+=" gasPrice=".concat(this.gasPrice),t},a.prototype._errorMsg=function(t){return"".concat(t," (").concat(this.errorStr(),")")},a}(baseTransaction_1$2.BaseTransaction);legacyTransaction.default=Transaction;var eip2930Transaction={},__extends$1=commonjsGlobal&&commonjsGlobal.__extends||function(){var e=function(a,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(c,i){c.__proto__=i}||function(c,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(c[o]=i[o])},e(a,t)};return function(a,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");e(a,t);function c(){this.constructor=a}a.prototype=t===null?Object.create(t):(c.prototype=t.prototype,new c)}}(),__assign$1=commonjsGlobal&&commonjsGlobal.__assign||function(){return __assign$1=Object.assign||function(e){for(var a,t=1,c=arguments.length;t<c;t++){a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e},__assign$1.apply(this,arguments)},__read$1=commonjsGlobal&&commonjsGlobal.__read||function(e,a){var t=typeof Symbol=="function"&&e[Symbol.iterator];if(!t)return e;var c=t.call(e),i,o=[],b;try{for(;(a===void 0||a-- >0)&&!(i=c.next()).done;)o.push(i.value)}catch(u){b={error:u}}finally{try{i&&!i.done&&(t=c.return)&&t.call(c)}finally{if(b)throw b.error}}return o};Object.defineProperty(eip2930Transaction,"__esModule",{value:!0});var ethereumjs_util_1$1=dist_browser$3,baseTransaction_1$1=baseTransaction,types_1$1=types,util_1$1=util,TRANSACTION_TYPE$1=1,TRANSACTION_TYPE_BUFFER$1=buffer$2.Buffer.from(TRANSACTION_TYPE$1.toString(16).padStart(2,"0"),"hex"),AccessListEIP2930Transaction=function(e){__extends$1(a,e);function a(t,c){c===void 0&&(c={});var i=this,o,b;i=e.call(this,__assign$1(__assign$1({},t),{type:TRANSACTION_TYPE$1}),c)||this,i.DEFAULT_HARDFORK="berlin";var u=t.chainId,l=t.accessList,x=t.gasPrice;if(i.common=i._getCommon(c.common,u),i.chainId=i.common.chainIdBN(),!i.common.isActivatedEIP(2930))throw new Error("EIP-2930 not enabled on Common");i.activeCapabilities=i.activeCapabilities.concat([2718,2930]);var g=util_1$1.AccessLists.getAccessListData(l??[]);if(i.accessList=g.accessList,i.AccessListJSON=g.AccessListJSON,util_1$1.AccessLists.verifyAccessList(i.accessList),i.gasPrice=new ethereumjs_util_1$1.BN((0,ethereumjs_util_1$1.toBuffer)(x===""?"0x":x)),i._validateCannotExceedMaxInteger({gasPrice:i.gasPrice}),i.gasPrice.mul(i.gasLimit).gt(ethereumjs_util_1$1.MAX_INTEGER)){var v=i._errorMsg("gasLimit * gasPrice cannot exceed MAX_INTEGER");throw new Error(v)}if(i.v&&!i.v.eqn(0)&&!i.v.eqn(1)){var v=i._errorMsg("The y-parity of the transaction should either be 0 or 1");throw new Error(v)}if(i.common.gteHardfork("homestead")&&(!((o=i.s)===null||o===void 0)&&o.gt(types_1$1.N_DIV_2))){var v=i._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw new Error(v)}i.common.isActivatedEIP(3860)&&(0,util_1$1.checkMaxInitCodeSize)(i.common,i.data.length);var E=(b=c?.freeze)!==null&&b!==void 0?b:!0;return E&&Object.freeze(i),i}return Object.defineProperty(a.prototype,"senderR",{get:function(){return this.r},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,"senderS",{get:function(){return this.s},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,"yParity",{get:function(){return this.v},enumerable:!1,configurable:!0}),a.fromTxData=function(t,c){return c===void 0&&(c={}),new a(t,c)},a.fromSerializedTx=function(t,c){if(c===void 0&&(c={}),!t.slice(0,1).equals(TRANSACTION_TYPE_BUFFER$1))throw new Error("Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ".concat(TRANSACTION_TYPE$1,", received: ").concat(t.slice(0,1).toString("hex")));var i=ethereumjs_util_1$1.rlp.decode(t.slice(1));if(!Array.isArray(i))throw new Error("Invalid serialized tx input: must be array");return a.fromValuesArray(i,c)},a.fromRlpSerializedTx=function(t,c){return c===void 0&&(c={}),a.fromSerializedTx(t,c)},a.fromValuesArray=function(t,c){if(c===void 0&&(c={}),t.length!==8&&t.length!==11)throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");var i=__read$1(t,11),o=i[0],b=i[1],u=i[2],l=i[3],x=i[4],g=i[5],v=i[6],E=i[7],S=i[8],T=i[9],I=i[10];(0,ethereumjs_util_1$1.validateNoLeadingZeroes)({nonce:b,gasPrice:u,gasLimit:l,value:g,v:S,r:T,s:I});var A=[];return new a({chainId:new ethereumjs_util_1$1.BN(o),nonce:b,gasPrice:u,gasLimit:l,to:x,value:g,data:v,accessList:E??A,v:S!==void 0?new ethereumjs_util_1$1.BN(S):void 0,r:T,s:I},c)},a.prototype.getDataFee=function(){if(this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork())return this.cache.dataFee.value;var t=e.prototype.getDataFee.call(this);return t.iaddn(util_1$1.AccessLists.getDataFeeEIP2930(this.accessList,this.common)),Object.isFrozen(this)&&(this.cache.dataFee={value:t,hardfork:this.common.hardfork()}),t},a.prototype.getUpfrontCost=function(){return this.gasLimit.mul(this.gasPrice).add(this.value)},a.prototype.raw=function(){return[(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.chainId),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.nonce),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.gasPrice),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.gasLimit),this.to!==void 0?this.to.buf:buffer$2.Buffer.from([]),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.value),this.data,this.accessList,this.v!==void 0?(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.v):buffer$2.Buffer.from([]),this.r!==void 0?(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.r):buffer$2.Buffer.from([]),this.s!==void 0?(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(this.s):buffer$2.Buffer.from([])]},a.prototype.serialize=function(){var t=this.raw();return buffer$2.Buffer.concat([TRANSACTION_TYPE_BUFFER$1,ethereumjs_util_1$1.rlp.encode(t)])},a.prototype.getMessageToSign=function(t){t===void 0&&(t=!0);var c=this.raw().slice(0,8),i=buffer$2.Buffer.concat([TRANSACTION_TYPE_BUFFER$1,ethereumjs_util_1$1.rlp.encode(c)]);return t?(0,ethereumjs_util_1$1.keccak256)(i):i},a.prototype.hash=function(){if(!this.isSigned()){var t=this._errorMsg("Cannot call hash method if transaction is not signed");throw new Error(t)}return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=(0,ethereumjs_util_1$1.keccak256)(this.serialize())),this.cache.hash):(0,ethereumjs_util_1$1.keccak256)(this.serialize())},a.prototype.getMessageToVerifySignature=function(){return this.getMessageToSign()},a.prototype.getSenderPublicKey=function(){var t;if(!this.isSigned()){var c=this._errorMsg("Cannot call this method if transaction is not signed");throw new Error(c)}var i=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(!((t=this.s)===null||t===void 0)&&t.gt(types_1$1.N_DIV_2))){var c=this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw new Error(c)}var o=this,b=o.yParity,u=o.r,l=o.s;try{return(0,ethereumjs_util_1$1.ecrecover)(i,b.addn(27),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(u),(0,ethereumjs_util_1$1.bnToUnpaddedBuffer)(l))}catch{var c=this._errorMsg("Invalid Signature");throw new Error(c)}},a.prototype._processSignature=function(t,c,i){var o=__assign$1(__assign$1({},this.txOptions),{common:this.common});return a.fromTxData({chainId:this.chainId,nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:new ethereumjs_util_1$1.BN(t-27),r:new ethereumjs_util_1$1.BN(c),s:new ethereumjs_util_1$1.BN(i)},o)},a.prototype.toJSON=function(){var t=util_1$1.AccessLists.getAccessListJSON(this.accessList);return{chainId:(0,ethereumjs_util_1$1.bnToHex)(this.chainId),nonce:(0,ethereumjs_util_1$1.bnToHex)(this.nonce),gasPrice:(0,ethereumjs_util_1$1.bnToHex)(this.gasPrice),gasLimit:(0,ethereumjs_util_1$1.bnToHex)(this.gasLimit),to:this.to!==void 0?this.to.toString():void 0,value:(0,ethereumjs_util_1$1.bnToHex)(this.value),data:"0x"+this.data.toString("hex"),accessList:t,v:this.v!==void 0?(0,ethereumjs_util_1$1.bnToHex)(this.v):void 0,r:this.r!==void 0?(0,ethereumjs_util_1$1.bnToHex)(this.r):void 0,s:this.s!==void 0?(0,ethereumjs_util_1$1.bnToHex)(this.s):void 0}},a.prototype.errorStr=function(){var t,c,i=this._getSharedErrorPostfix();return i+=" gasPrice=".concat(this.gasPrice," accessListCount=").concat((c=(t=this.accessList)===null||t===void 0?void 0:t.length)!==null&&c!==void 0?c:0),i},a.prototype._errorMsg=function(t){return"".concat(t," (").concat(this.errorStr(),")")},a}(baseTransaction_1$1.BaseTransaction);eip2930Transaction.default=AccessListEIP2930Transaction;var transactionFactory={},hasRequiredTransactionFactory;function requireTransactionFactory(){if(hasRequiredTransactionFactory)return transactionFactory;hasRequiredTransactionFactory=1,Object.defineProperty(transactionFactory,"__esModule",{value:!0});var e=dist_browser$3,a=requireDist_browser(),t=function(){function c(){}return c.fromTxData=function(i,o){if(o===void 0&&(o={}),!("type"in i)||i.type===void 0)return a.Transaction.fromTxData(i,o);var b=new e.BN((0,e.toBuffer)(i.type)).toNumber();if(b===0)return a.Transaction.fromTxData(i,o);if(b===1)return a.AccessListEIP2930Transaction.fromTxData(i,o);if(b===2)return a.FeeMarketEIP1559Transaction.fromTxData(i,o);throw new Error("Tx instantiation with type ".concat(b," not supported"))},c.fromSerializedData=function(i,o){if(o===void 0&&(o={}),i[0]<=127){var b=void 0;switch(i[0]){case 1:b=2930;break;case 2:b=1559;break;default:throw new Error("TypedTransaction with ID ".concat(i[0]," unknown"))}return b===1559?a.FeeMarketEIP1559Transaction.fromSerializedTx(i,o):a.AccessListEIP2930Transaction.fromSerializedTx(i,o)}else return a.Transaction.fromSerializedTx(i,o)},c.fromBlockBodyData=function(i,o){if(o===void 0&&(o={}),buffer$2.Buffer.isBuffer(i))return this.fromSerializedData(i,o);if(Array.isArray(i))return a.Transaction.fromValuesArray(i,o);throw new Error("Cannot decode transaction: unknown type input")},c.getTransactionClass=function(i,o){i===void 0&&(i=0);var b=i==0||i>=128&&i<=255;if(b)return a.Transaction;switch(i){case 1:return a.AccessListEIP2930Transaction;case 2:return a.FeeMarketEIP1559Transaction;default:throw new Error("TypedTransaction with ID ".concat(i," unknown"))}},c}();return transactionFactory.default=t,transactionFactory}var eip1559Transaction={},__extends=commonjsGlobal&&commonjsGlobal.__extends||function(){var e=function(a,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(c,i){c.__proto__=i}||function(c,i){for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(c[o]=i[o])},e(a,t)};return function(a,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");e(a,t);function c(){this.constructor=a}a.prototype=t===null?Object.create(t):(c.prototype=t.prototype,new c)}}(),__assign=commonjsGlobal&&commonjsGlobal.__assign||function(){return __assign=Object.assign||function(e){for(var a,t=1,c=arguments.length;t<c;t++){a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e},__assign.apply(this,arguments)},__read=commonjsGlobal&&commonjsGlobal.__read||function(e,a){var t=typeof Symbol=="function"&&e[Symbol.iterator];if(!t)return e;var c=t.call(e),i,o=[],b;try{for(;(a===void 0||a-- >0)&&!(i=c.next()).done;)o.push(i.value)}catch(u){b={error:u}}finally{try{i&&!i.done&&(t=c.return)&&t.call(c)}finally{if(b)throw b.error}}return o};Object.defineProperty(eip1559Transaction,"__esModule",{value:!0});var ethereumjs_util_1=dist_browser$3,baseTransaction_1=baseTransaction,types_1=types,util_1=util,TRANSACTION_TYPE=2,TRANSACTION_TYPE_BUFFER=buffer$2.Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2,"0"),"hex"),FeeMarketEIP1559Transaction=function(e){__extends(a,e);function a(t,c){c===void 0&&(c={});var i=this,o,b;i=e.call(this,__assign(__assign({},t),{type:TRANSACTION_TYPE}),c)||this,i.DEFAULT_HARDFORK="london";var u=t.chainId,l=t.accessList,x=t.maxFeePerGas,g=t.maxPriorityFeePerGas;if(i.common=i._getCommon(c.common,u),i.chainId=i.common.chainIdBN(),!i.common.isActivatedEIP(1559))throw new Error("EIP-1559 not enabled on Common");i.activeCapabilities=i.activeCapabilities.concat([1559,2718,2930]);var v=util_1.AccessLists.getAccessListData(l??[]);if(i.accessList=v.accessList,i.AccessListJSON=v.AccessListJSON,util_1.AccessLists.verifyAccessList(i.accessList),i.maxFeePerGas=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(x===""?"0x":x)),i.maxPriorityFeePerGas=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(g===""?"0x":g)),i._validateCannotExceedMaxInteger({maxFeePerGas:i.maxFeePerGas,maxPriorityFeePerGas:i.maxPriorityFeePerGas}),i.gasLimit.mul(i.maxFeePerGas).gt(ethereumjs_util_1.MAX_INTEGER)){var E=i._errorMsg("gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)");throw new Error(E)}if(i.maxFeePerGas.lt(i.maxPriorityFeePerGas)){var E=i._errorMsg("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");throw new Error(E)}if(i.v&&!i.v.eqn(0)&&!i.v.eqn(1)){var E=i._errorMsg("The y-parity of the transaction should either be 0 or 1");throw new Error(E)}if(i.common.gteHardfork("homestead")&&(!((o=i.s)===null||o===void 0)&&o.gt(types_1.N_DIV_2))){var E=i._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw new Error(E)}i.common.isActivatedEIP(3860)&&(0,util_1.checkMaxInitCodeSize)(i.common,i.data.length);var S=(b=c?.freeze)!==null&&b!==void 0?b:!0;return S&&Object.freeze(i),i}return Object.defineProperty(a.prototype,"senderR",{get:function(){return this.r},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,"senderS",{get:function(){return this.s},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,"yParity",{get:function(){return this.v},enumerable:!1,configurable:!0}),a.fromTxData=function(t,c){return c===void 0&&(c={}),new a(t,c)},a.fromSerializedTx=function(t,c){if(c===void 0&&(c={}),!t.slice(0,1).equals(TRANSACTION_TYPE_BUFFER))throw new Error("Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ".concat(TRANSACTION_TYPE,", received: ").concat(t.slice(0,1).toString("hex")));var i=ethereumjs_util_1.rlp.decode(t.slice(1));if(!Array.isArray(i))throw new Error("Invalid serialized tx input: must be array");return a.fromValuesArray(i,c)},a.fromRlpSerializedTx=function(t,c){return c===void 0&&(c={}),a.fromSerializedTx(t,c)},a.fromValuesArray=function(t,c){if(c===void 0&&(c={}),t.length!==9&&t.length!==12)throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");var i=__read(t,12),o=i[0],b=i[1],u=i[2],l=i[3],x=i[4],g=i[5],v=i[6],E=i[7],S=i[8],T=i[9],I=i[10],A=i[11];return(0,ethereumjs_util_1.validateNoLeadingZeroes)({nonce:b,maxPriorityFeePerGas:u,maxFeePerGas:l,gasLimit:x,value:v,v:T,r:I,s:A}),new a({chainId:new ethereumjs_util_1.BN(o),nonce:b,maxPriorityFeePerGas:u,maxFeePerGas:l,gasLimit:x,to:g,value:v,data:E,accessList:S??[],v:T!==void 0?new ethereumjs_util_1.BN(T):void 0,r:I,s:A},c)},a.prototype.getDataFee=function(){if(this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork())return this.cache.dataFee.value;var t=e.prototype.getDataFee.call(this);return t.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList,this.common)),Object.isFrozen(this)&&(this.cache.dataFee={value:t,hardfork:this.common.hardfork()}),t},a.prototype.getUpfrontCost=function(t){t===void 0&&(t=new ethereumjs_util_1.BN(0));var c=ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas,this.maxFeePerGas.sub(t)),i=c.add(t);return this.gasLimit.mul(i).add(this.value)},a.prototype.raw=function(){return[(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.chainId),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxPriorityFeePerGas),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.maxFeePerGas),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),this.to!==void 0?this.to.buf:buffer$2.Buffer.from([]),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),this.data,this.accessList,this.v!==void 0?(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.v):buffer$2.Buffer.from([]),this.r!==void 0?(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.r):buffer$2.Buffer.from([]),this.s!==void 0?(0,ethereumjs_util_1.bnToUnpaddedBuffer)(this.s):buffer$2.Buffer.from([])]},a.prototype.serialize=function(){var t=this.raw();return buffer$2.Buffer.concat([TRANSACTION_TYPE_BUFFER,ethereumjs_util_1.rlp.encode(t)])},a.prototype.getMessageToSign=function(t){t===void 0&&(t=!0);var c=this.raw().slice(0,9),i=buffer$2.Buffer.concat([TRANSACTION_TYPE_BUFFER,ethereumjs_util_1.rlp.encode(c)]);return t?(0,ethereumjs_util_1.keccak256)(i):i},a.prototype.hash=function(){if(!this.isSigned()){var t=this._errorMsg("Cannot call hash method if transaction is not signed");throw new Error(t)}return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=(0,ethereumjs_util_1.keccak256)(this.serialize())),this.cache.hash):(0,ethereumjs_util_1.keccak256)(this.serialize())},a.prototype.getMessageToVerifySignature=function(){return this.getMessageToSign()},a.prototype.getSenderPublicKey=function(){var t;if(!this.isSigned()){var c=this._errorMsg("Cannot call this method if transaction is not signed");throw new Error(c)}var i=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(!((t=this.s)===null||t===void 0)&&t.gt(types_1.N_DIV_2))){var c=this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw new Error(c)}var o=this,b=o.v,u=o.r,l=o.s;try{return(0,ethereumjs_util_1.ecrecover)(i,b.addn(27),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(u),(0,ethereumjs_util_1.bnToUnpaddedBuffer)(l))}catch{var c=this._errorMsg("Invalid Signature");throw new Error(c)}},a.prototype._processSignature=function(t,c,i){var o=__assign(__assign({},this.txOptions),{common:this.common});return a.fromTxData({chainId:this.chainId,nonce:this.nonce,maxPriorityFeePerGas:this.maxPriorityFeePerGas,maxFeePerGas:this.maxFeePerGas,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:new ethereumjs_util_1.BN(t-27),r:new ethereumjs_util_1.BN(c),s:new ethereumjs_util_1.BN(i)},o)},a.prototype.toJSON=function(){var t=util_1.AccessLists.getAccessListJSON(this.accessList);return{chainId:(0,ethereumjs_util_1.bnToHex)(this.chainId),nonce:(0,ethereumjs_util_1.bnToHex)(this.nonce),maxPriorityFeePerGas:(0,ethereumjs_util_1.bnToHex)(this.maxPriorityFeePerGas),maxFeePerGas:(0,ethereumjs_util_1.bnToHex)(this.maxFeePerGas),gasLimit:(0,ethereumjs_util_1.bnToHex)(this.gasLimit),to:this.to!==void 0?this.to.toString():void 0,value:(0,ethereumjs_util_1.bnToHex)(this.value),data:"0x"+this.data.toString("hex"),accessList:t,v:this.v!==void 0?(0,ethereumjs_util_1.bnToHex)(this.v):void 0,r:this.r!==void 0?(0,ethereumjs_util_1.bnToHex)(this.r):void 0,s:this.s!==void 0?(0,ethereumjs_util_1.bnToHex)(this.s):void 0}},a.prototype.errorStr=function(){var t=this._getSharedErrorPostfix();return t+=" maxFeePerGas=".concat(this.maxFeePerGas," maxPriorityFeePerGas=").concat(this.maxPriorityFeePerGas),t},a.prototype._errorMsg=function(t){return"".concat(t," (").concat(this.errorStr(),")")},a}(baseTransaction_1.BaseTransaction);eip1559Transaction.default=FeeMarketEIP1559Transaction;var hasRequiredDist_browser;function requireDist_browser(){return hasRequiredDist_browser||(hasRequiredDist_browser=1,function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(l,x,g,v){v===void 0&&(v=g);var E=Object.getOwnPropertyDescriptor(x,g);(!E||("get"in E?!x.__esModule:E.writable||E.configurable))&&(E={enumerable:!0,get:function(){return x[g]}}),Object.defineProperty(l,v,E)}:function(l,x,g,v){v===void 0&&(v=g),l[v]=x[g]}),t=commonjsGlobal&&commonjsGlobal.__exportStar||function(l,x){for(var g in l)g!=="default"&&!Object.prototype.hasOwnProperty.call(x,g)&&a(x,l,g)},c=commonjsGlobal&&commonjsGlobal.__importDefault||function(l){return l&&l.__esModule?l:{default:l}};Object.defineProperty(e,"__esModule",{value:!0}),e.FeeMarketEIP1559Transaction=e.TransactionFactory=e.AccessListEIP2930Transaction=e.Transaction=void 0;var i=legacyTransaction;Object.defineProperty(e,"Transaction",{enumerable:!0,get:function(){return c(i).default}});var o=eip2930Transaction;Object.defineProperty(e,"AccessListEIP2930Transaction",{enumerable:!0,get:function(){return c(o).default}});var b=requireTransactionFactory();Object.defineProperty(e,"TransactionFactory",{enumerable:!0,get:function(){return c(b).default}});var u=eip1559Transaction;Object.defineProperty(e,"FeeMarketEIP1559Transaction",{enumerable:!0,get:function(){return c(u).default}}),t(types,e)}(dist_browser)),dist_browser}var dist_browserExports=requireDist_browser(),dist$1={},secp256k1v3Adapter={},secp256k1v3Lib={};Object.defineProperty(secp256k1v3Lib,"__esModule",{value:!0});var BN$1=bnExports$3,EC=requireElliptic().ec,ec=new EC("secp256k1"),ecparams=ec.curve;secp256k1v3Lib.privateKeyExport=function(e,a){a===void 0&&(a=!0);var t=new BN$1(e);if(t.ucmp(ecparams.n)>=0)throw new Error("couldn't export to DER format");var c=ec.g.mul(t);return toPublicKey(c.getX(),c.getY(),a)};secp256k1v3Lib.privateKeyModInverse=function(e){var a=new BN$1(e);if(a.ucmp(ecparams.n)>=0||a.isZero())throw new Error("private key range is invalid");return a.invm(ecparams.n).toArrayLike(buffer$2.Buffer,"be",32)};secp256k1v3Lib.signatureImport=function(e){var a=new BN$1(e.r);a.ucmp(ecparams.n)>=0&&(a=new BN$1(0));var t=new BN$1(e.s);return t.ucmp(ecparams.n)>=0&&(t=new BN$1(0)),buffer$2.Buffer.concat([a.toArrayLike(buffer$2.Buffer,"be",32),t.toArrayLike(buffer$2.Buffer,"be",32)])};secp256k1v3Lib.ecdhUnsafe=function(e,a,t){t===void 0&&(t=!0);var c=ec.keyFromPublic(e),i=new BN$1(a);if(i.ucmp(ecparams.n)>=0||i.isZero())throw new Error("scalar was invalid (zero or overflow)");var o=c.pub.mul(i);return toPublicKey(o.getX(),o.getY(),t)};var toPublicKey=function(e,a,t){var c;return t?(c=buffer$2.Buffer.alloc(33),c[0]=a.isOdd()?3:2,e.toArrayLike(buffer$2.Buffer,"be",32).copy(c,1)):(c=buffer$2.Buffer.alloc(65),c[0]=4,e.toArrayLike(buffer$2.Buffer,"be",32).copy(c,1),a.toArrayLike(buffer$2.Buffer,"be",32).copy(c,33)),c},der={};Object.defineProperty(der,"__esModule",{value:!0});var EC_PRIVKEY_EXPORT_DER_COMPRESSED=buffer$2.Buffer.from([48,129,211,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,133,48,129,130,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,33,2,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,36,3,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED=buffer$2.Buffer.from([48,130,1,19,2,1,1,4,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,129,165,48,129,162,2,1,1,48,44,6,7,42,134,72,206,61,1,1,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,255,255,252,47,48,6,4,1,0,4,1,7,4,65,4,121,190,102,126,249,220,187,172,85,160,98,149,206,135,11,7,2,155,252,219,45,206,40,217,89,242,129,91,22,248,23,152,72,58,218,119,38,163,196,101,93,164,251,252,14,17,8,168,253,23,180,72,166,133,84,25,156,71,208,143,251,16,212,184,2,33,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,254,186,174,220,230,175,72,160,59,191,210,94,140,208,54,65,65,2,1,1,161,68,3,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);der.privateKeyExport=function(e,a,t){t===void 0&&(t=!0);var c=buffer$2.Buffer.from(t?EC_PRIVKEY_EXPORT_DER_COMPRESSED:EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);return e.copy(c,t?8:9),a.copy(c,t?181:214),c};der.privateKeyImport=function(e){var a=e.length,t=0;if(a<t+1||e[t]!==48||(t+=1,a<t+1||!(e[t]&128)))return null;var c=e[t]&127;if(t+=1,c<1||c>2||a<t+c)return null;var i=e[t+c-1]|(c>1?e[t+c-2]<<8:0);return t+=c,a<t+i||a<t+3||e[t]!==2||e[t+1]!==1||e[t+2]!==1||(t+=3,a<t+2||e[t]!==4||e[t+1]>32||a<t+2+e[t+1])?null:e.slice(t+2,t+2+e[t+1])};der.signatureImportLax=function(e){var a=buffer$2.Buffer.alloc(32,0),t=buffer$2.Buffer.alloc(32,0),c=e.length,i=0;if(e[i++]!==48)return null;var o=e[i++];if(o&128&&(i+=o-128,i>c)||e[i++]!==2)return null;var b=e[i++];if(b&128){if(o=b-128,i+o>c)return null;for(;o>0&&e[i]===0;i+=1,o-=1);for(b=0;o>0;i+=1,o-=1)b=(b<<8)+e[i]}if(b>c-i)return null;var u=i;if(i+=b,e[i++]!==2)return null;var l=e[i++];if(l&128){if(o=l-128,i+o>c)return null;for(;o>0&&e[i]===0;i+=1,o-=1);for(l=0;o>0;i+=1,o-=1)l=(l<<8)+e[i]}if(l>c-i)return null;var x=i;for(i+=l;b>0&&e[u]===0;b-=1,u+=1);if(b>32)return null;var g=e.slice(u,u+b);for(g.copy(a,32-g.length);l>0&&e[x]===0;l-=1,x+=1);if(l>32)return null;var v=e.slice(x,x+l);return v.copy(t,32-v.length),{r:a,s:t}};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ecdhUnsafe=e.ecdh=e.recover=e.verify=e.sign=e.signatureImportLax=e.signatureImport=e.signatureExport=e.signatureNormalize=e.publicKeyCombine=e.publicKeyTweakMul=e.publicKeyTweakAdd=e.publicKeyVerify=e.publicKeyConvert=e.publicKeyCreate=e.privateKeyTweakMul=e.privateKeyTweakAdd=e.privateKeyModInverse=e.privateKeyNegate=e.privateKeyImport=e.privateKeyExport=e.privateKeyVerify=void 0;var a=secp256k1$2,t=secp256k1v3Lib,c=der;e.privateKeyVerify=function(i){return i.length!==32?!1:a.privateKeyVerify(Uint8Array.from(i))},e.privateKeyExport=function(i,o){if(i.length!==32)throw new RangeError("private key length is invalid");var b=t.privateKeyExport(i,o);return c.privateKeyExport(i,b,o)},e.privateKeyImport=function(i){if(i=c.privateKeyImport(i),i!==null&&i.length===32&&e.privateKeyVerify(i))return i;throw new Error("couldn't import from DER format")},e.privateKeyNegate=function(i){return buffer$2.Buffer.from(a.privateKeyNegate(Uint8Array.from(i)))},e.privateKeyModInverse=function(i){if(i.length!==32)throw new Error("private key length is invalid");return buffer$2.Buffer.from(t.privateKeyModInverse(Uint8Array.from(i)))},e.privateKeyTweakAdd=function(i,o){return buffer$2.Buffer.from(a.privateKeyTweakAdd(Uint8Array.from(i),o))},e.privateKeyTweakMul=function(i,o){return buffer$2.Buffer.from(a.privateKeyTweakMul(Uint8Array.from(i),Uint8Array.from(o)))},e.publicKeyCreate=function(i,o){return buffer$2.Buffer.from(a.publicKeyCreate(Uint8Array.from(i),o))},e.publicKeyConvert=function(i,o){return buffer$2.Buffer.from(a.publicKeyConvert(Uint8Array.from(i),o))},e.publicKeyVerify=function(i){return i.length!==33&&i.length!==65?!1:a.publicKeyVerify(Uint8Array.from(i))},e.publicKeyTweakAdd=function(i,o,b){return buffer$2.Buffer.from(a.publicKeyTweakAdd(Uint8Array.from(i),Uint8Array.from(o),b))},e.publicKeyTweakMul=function(i,o,b){return buffer$2.Buffer.from(a.publicKeyTweakMul(Uint8Array.from(i),Uint8Array.from(o),b))},e.publicKeyCombine=function(i,o){var b=[];return i.forEach(function(u){b.push(Uint8Array.from(u))}),buffer$2.Buffer.from(a.publicKeyCombine(b,o))},e.signatureNormalize=function(i){return buffer$2.Buffer.from(a.signatureNormalize(Uint8Array.from(i)))},e.signatureExport=function(i){return buffer$2.Buffer.from(a.signatureExport(Uint8Array.from(i)))},e.signatureImport=function(i){return buffer$2.Buffer.from(a.signatureImport(Uint8Array.from(i)))},e.signatureImportLax=function(i){if(i.length===0)throw new RangeError("signature length is invalid");var o=c.signatureImportLax(i);if(o===null)throw new Error("couldn't parse DER signature");return t.signatureImport(o)},e.sign=function(i,o,b){if(b===null)throw new TypeError("options should be an Object");var u=void 0;if(b){if(u={},b.data===null)throw new TypeError("options.data should be a Buffer");if(b.data){if(b.data.length!=32)throw new RangeError("options.data length is invalid");u.data=new Uint8Array(b.data)}if(b.noncefn===null)throw new TypeError("options.noncefn should be a Function");b.noncefn&&(u.noncefn=function(x,g,v,E,S){var T=v!=null?buffer$2.Buffer.from(v):null,I=E!=null?buffer$2.Buffer.from(E):null,A=buffer$2.Buffer.from("");return b.noncefn&&(A=b.noncefn(buffer$2.Buffer.from(x),buffer$2.Buffer.from(g),T,I,S)),new Uint8Array(A)})}var l=a.ecdsaSign(Uint8Array.from(i),Uint8Array.from(o),u);return{signature:buffer$2.Buffer.from(l.signature),recovery:l.recid}},e.verify=function(i,o,b){return a.ecdsaVerify(Uint8Array.from(o),Uint8Array.from(i),b)},e.recover=function(i,o,b,u){return buffer$2.Buffer.from(a.ecdsaRecover(Uint8Array.from(o),b,Uint8Array.from(i),u))},e.ecdh=function(i,o){return buffer$2.Buffer.from(a.ecdh(Uint8Array.from(i),Uint8Array.from(o),{}))},e.ecdhUnsafe=function(i,o,b){if(i.length!==33&&i.length!==65)throw new RangeError("public key length is invalid");if(o.length!==32)throw new RangeError("private key length is invalid");return buffer$2.Buffer.from(t.ecdhUnsafe(Uint8Array.from(i),Uint8Array.from(o),b))}})(secp256k1v3Adapter);var isHexPrefixed=src$7,stripHexPrefix=src$6;function padToEven(e){var a=e;if(typeof a!="string")throw new Error("[ethjs-util] while padding to even, value must be string, is currently "+typeof a+", while padToEven.");return a.length%2&&(a="0"+a),a}function intToHex(e){var a=e.toString(16);return"0x"+a}function intToBuffer(e){var a=intToHex(e);return new buffer$2.Buffer(padToEven(a.slice(2)),"hex")}function getBinarySize(e){if(typeof e!="string")throw new Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '"+typeof e+"'.");return buffer$2.Buffer.byteLength(e,"utf8")}function arrayContainsArray(e,a,t){if(Array.isArray(e)!==!0)throw new Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '"+typeof e+"'");if(Array.isArray(a)!==!0)throw new Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '"+typeof a+"'");return a[!!t&&"some"||"every"](function(c){return e.indexOf(c)>=0})}function toUtf8(e){var a=new buffer$2.Buffer(padToEven(stripHexPrefix(e).replace(/^0+|0+$/g,"")),"hex");return a.toString("utf8")}function toAscii(e){var a="",t=0,c=e.length;for(e.substring(0,2)==="0x"&&(t=2);t<c;t+=2){var i=parseInt(e.substr(t,2),16);a+=String.fromCharCode(i)}return a}function fromUtf8(e){var a=new buffer$2.Buffer(e,"utf8");return"0x"+padToEven(a.toString("hex")).replace(/^0+|0+$/g,"")}function fromAscii(e){for(var a="",t=0;t<e.length;t++){var c=e.charCodeAt(t),i=c.toString(16);a+=i.length<2?"0"+i:i}return"0x"+a}function getKeys(e,a,t){if(!Array.isArray(e))throw new Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '"+typeof e+"'");if(typeof a!="string")throw new Error("[ethjs-util] method getKeys expecting type String for input 'key' got '"+typeof a+"'.");for(var c=[],i=0;i<e.length;i++){var o=e[i][a];if(t&&!o)o="";else if(typeof o!="string")throw new Error("invalid abi");c.push(o)}return c}function isHexString(e,a){return!(typeof e!="string"||!e.match(/^0x[0-9A-Fa-f]*$/)||a&&e.length!==2+2*a)}var lib={arrayContainsArray,intToBuffer,getBinarySize,isHexPrefixed,stripHexPrefix,padToEven,intToHex,fromAscii,fromUtf8,toAscii,toUtf8,getKeys,isHexString},constants={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.KECCAK256_RLP=e.KECCAK256_RLP_S=e.KECCAK256_RLP_ARRAY=e.KECCAK256_RLP_ARRAY_S=e.KECCAK256_NULL=e.KECCAK256_NULL_S=e.TWO_POW256=e.MAX_INTEGER=void 0;var a=bnExports$3;e.MAX_INTEGER=new a("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",16),e.TWO_POW256=new a("10000000000000000000000000000000000000000000000000000000000000000",16),e.KECCAK256_NULL_S="c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",e.KECCAK256_NULL=buffer$2.Buffer.from(e.KECCAK256_NULL_S,"hex"),e.KECCAK256_RLP_ARRAY_S="1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",e.KECCAK256_RLP_ARRAY=buffer$2.Buffer.from(e.KECCAK256_RLP_ARRAY_S,"hex"),e.KECCAK256_RLP_S="56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",e.KECCAK256_RLP=buffer$2.Buffer.from(e.KECCAK256_RLP_S,"hex")})(constants);var account={},bytes={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.baToJSON=e.addHexPrefix=e.toUnsigned=e.fromSigned=e.bufferToHex=e.bufferToInt=e.toBuffer=e.stripZeros=e.unpad=e.setLengthRight=e.setLength=e.setLengthLeft=e.zeros=void 0;var a=lib,t=bnExports$3;e.zeros=function(c){return buffer$2.Buffer.allocUnsafe(c).fill(0)},e.setLengthLeft=function(c,i,o){o===void 0&&(o=!1);var b=e.zeros(i);return c=e.toBuffer(c),o?c.length<i?(c.copy(b),b):c.slice(0,i):c.length<i?(c.copy(b,i-c.length),b):c.slice(-i)},e.setLength=e.setLengthLeft,e.setLengthRight=function(c,i){return e.setLength(c,i,!0)},e.unpad=function(c){c=a.stripHexPrefix(c);for(var i=c[0];c.length>0&&i.toString()==="0";)c=c.slice(1),i=c[0];return c},e.stripZeros=e.unpad,e.toBuffer=function(c){if(!buffer$2.Buffer.isBuffer(c))if(Array.isArray(c))c=buffer$2.Buffer.from(c);else if(typeof c=="string")if(a.isHexString(c))c=buffer$2.Buffer.from(a.padToEven(a.stripHexPrefix(c)),"hex");else throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: "+c);else if(typeof c=="number")c=a.intToBuffer(c);else if(c==null)c=buffer$2.Buffer.allocUnsafe(0);else if(t.isBN(c))c=c.toArrayLike(buffer$2.Buffer);else if(c.toArray)c=buffer$2.Buffer.from(c.toArray());else throw new Error("invalid type");return c},e.bufferToInt=function(c){return new t(e.toBuffer(c)).toNumber()},e.bufferToHex=function(c){return c=e.toBuffer(c),"0x"+c.toString("hex")},e.fromSigned=function(c){return new t(c).fromTwos(256)},e.toUnsigned=function(c){return buffer$2.Buffer.from(c.toTwos(256).toArray())},e.addHexPrefix=function(c){return typeof c!="string"||a.isHexPrefixed(c)?c:"0x"+c},e.baToJSON=function(c){if(buffer$2.Buffer.isBuffer(c))return"0x"+c.toString("hex");if(c instanceof Array){for(var i=[],o=0;o<c.length;o++)i.push(e.baToJSON(c[o]));return i}}})(bytes);var hash={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.rlphash=e.ripemd160=e.sha256=e.keccak256=e.keccak=void 0;var a=keccak$2,t=a.keccak224,c=a.keccak384,i=a.keccak256,o=a.keccak512,b=browser$3,u=lib,l=dist_browser$2,x=bytes;e.keccak=function(g,v){switch(v===void 0&&(v=256),typeof g=="string"&&!u.isHexString(g)?g=buffer$2.Buffer.from(g,"utf8"):g=x.toBuffer(g),v||(v=256),v){case 224:return t(g);case 256:return i(g);case 384:return c(g);case 512:return o(g);default:throw new Error("Invald algorithm: keccak"+v)}},e.keccak256=function(g){return e.keccak(g)},e.sha256=function(g){return g=x.toBuffer(g),b("sha256").update(g).digest()},e.ripemd160=function(g,v){g=x.toBuffer(g);var E=b("rmd160").update(g).digest();return v===!0?x.setLength(E,32):E},e.rlphash=function(g){return e.keccak(l.encode(g))}})(hash);(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.importPublic=e.privateToPublic=e.privateToAddress=e.publicToAddress=e.pubToAddress=e.isValidPublic=e.isValidPrivate=e.isPrecompiled=e.generateAddress2=e.generateAddress=e.isValidChecksumAddress=e.toChecksumAddress=e.isZeroAddress=e.isValidAddress=e.zeroAddress=void 0;var a=requireAssert(),t=lib,c=secp256k1v3Adapter,i=bnExports$3,o=bytes,b=hash;e.zeroAddress=function(){var u=20,l=o.zeros(u);return o.bufferToHex(l)},e.isValidAddress=function(u){return/^0x[0-9a-fA-F]{40}$/.test(u)},e.isZeroAddress=function(u){var l=e.zeroAddress();return l===o.addHexPrefix(u)},e.toChecksumAddress=function(u,l){u=t.stripHexPrefix(u).toLowerCase();for(var x=l!==void 0?l.toString()+"0x":"",g=b.keccak(x+u).toString("hex"),v="0x",E=0;E<u.length;E++)parseInt(g[E],16)>=8?v+=u[E].toUpperCase():v+=u[E];return v},e.isValidChecksumAddress=function(u,l){return e.isValidAddress(u)&&e.toChecksumAddress(u,l)===u},e.generateAddress=function(u,l){u=o.toBuffer(u);var x=new i(l);return x.isZero()?b.rlphash([u,null]).slice(-20):b.rlphash([u,buffer$2.Buffer.from(x.toArray())]).slice(-20)},e.generateAddress2=function(u,l,x){var g=o.toBuffer(u),v=o.toBuffer(l),E=o.toBuffer(x);a(g.length===20),a(v.length===32);var S=b.keccak256(buffer$2.Buffer.concat([buffer$2.Buffer.from("ff","hex"),g,v,b.keccak256(E)]));return S.slice(-20)},e.isPrecompiled=function(u){var l=o.unpad(u);return l.length===1&&l[0]>=1&&l[0]<=8},e.isValidPrivate=function(u){return c.privateKeyVerify(u)},e.isValidPublic=function(u,l){return l===void 0&&(l=!1),u.length===64?c.publicKeyVerify(buffer$2.Buffer.concat([buffer$2.Buffer.from([4]),u])):l?c.publicKeyVerify(u):!1},e.pubToAddress=function(u,l){return l===void 0&&(l=!1),u=o.toBuffer(u),l&&u.length!==64&&(u=c.publicKeyConvert(u,!1).slice(1)),a(u.length===64),b.keccak(u).slice(-20)},e.publicToAddress=e.pubToAddress,e.privateToAddress=function(u){return e.publicToAddress(e.privateToPublic(u))},e.privateToPublic=function(u){return u=o.toBuffer(u),c.publicKeyCreate(u,!1).slice(1)},e.importPublic=function(u){return u=o.toBuffer(u),u.length!==64&&(u=c.publicKeyConvert(u,!1).slice(1)),u}})(account);var signature={};Object.defineProperty(signature,"__esModule",{value:!0});signature.hashPersonalMessage=signature.isValidSignature=signature.fromRpcSig=signature.toRpcSig=signature.ecrecover=signature.ecsign=void 0;var secp256k1=secp256k1v3Adapter,BN=bnExports$3,bytes_1$1=bytes,hash_1=hash;signature.ecsign=function(e,a,t){var c=secp256k1.sign(e,a),i=c.recovery,o={r:c.signature.slice(0,32),s:c.signature.slice(32,64),v:t?i+(t*2+35):i+27};return o};signature.ecrecover=function(e,a,t,c,i){var o=buffer$2.Buffer.concat([bytes_1$1.setLength(t,32),bytes_1$1.setLength(c,32)],64),b=calculateSigRecovery(a,i);if(!isValidSigRecovery(b))throw new Error("Invalid signature v value");var u=secp256k1.recover(e,o,b);return secp256k1.publicKeyConvert(u,!1).slice(1)};signature.toRpcSig=function(e,a,t,c){var i=calculateSigRecovery(e,c);if(!isValidSigRecovery(i))throw new Error("Invalid signature v value");return bytes_1$1.bufferToHex(buffer$2.Buffer.concat([bytes_1$1.setLengthLeft(a,32),bytes_1$1.setLengthLeft(t,32),bytes_1$1.toBuffer(e)]))};signature.fromRpcSig=function(e){var a=bytes_1$1.toBuffer(e);if(a.length!==65)throw new Error("Invalid signature length");var t=a[64];return t<27&&(t+=27),{v:t,r:a.slice(0,32),s:a.slice(32,64)}};signature.isValidSignature=function(e,a,t,c,i){c===void 0&&(c=!0);var o=new BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),b=new BN("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141",16);if(a.length!==32||t.length!==32||!isValidSigRecovery(calculateSigRecovery(e,i)))return!1;var u=new BN(a),l=new BN(t);return!(u.isZero()||u.gt(b)||l.isZero()||l.gt(b)||c&&l.cmp(o)===1)};signature.hashPersonalMessage=function(e){var a=buffer$2.Buffer.from(`Ethereum Signed Message:
`+e.length.toString(),"utf-8");return hash_1.keccak(buffer$2.Buffer.concat([a,e]))};function calculateSigRecovery(e,a){return a?e-(2*a+35):e-27}function isValidSigRecovery(e){return e===0||e===1}var object={};Object.defineProperty(object,"__esModule",{value:!0});object.defineProperties=void 0;var assert=requireAssert(),ethjsUtil=lib,rlp=dist_browser$2,bytes_1=bytes;object.defineProperties=function(e,a,t){if(e.raw=[],e._fields=[],e.toJSON=function(i){if(i===void 0&&(i=!1),i){var o={};return e._fields.forEach(function(b){o[b]="0x"+e[b].toString("hex")}),o}return bytes_1.baToJSON(e.raw)},e.serialize=function(){return rlp.encode(e.raw)},a.forEach(function(i,o){e._fields.push(i.name);function b(){return e.raw[o]}function u(l){l=bytes_1.toBuffer(l),l.toString("hex")==="00"&&!i.allowZero&&(l=buffer$2.Buffer.allocUnsafe(0)),i.allowLess&&i.length?(l=bytes_1.stripZeros(l),assert(i.length>=l.length,"The field "+i.name+" must not have more "+i.length+" bytes")):!(i.allowZero&&l.length===0)&&i.length&&assert(i.length===l.length,"The field "+i.name+" must have byte length of "+i.length),e.raw[o]=l}Object.defineProperty(e,i.name,{enumerable:!0,configurable:!0,get:b,set:u}),i.default&&(e[i.name]=i.default),i.alias&&Object.defineProperty(e,i.alias,{enumerable:!1,configurable:!0,set:u,get:b})}),t)if(typeof t=="string"&&(t=buffer$2.Buffer.from(ethjsUtil.stripHexPrefix(t),"hex")),buffer$2.Buffer.isBuffer(t)&&(t=rlp.decode(t)),Array.isArray(t)){if(t.length>e._fields.length)throw new Error("wrong number of fields in data");t.forEach(function(i,o){e[e._fields[o]]=bytes_1.toBuffer(i)})}else if(typeof t=="object"){var c=Object.keys(t);a.forEach(function(i){c.indexOf(i.name)!==-1&&(e[i.name]=t[i.name]),c.indexOf(i.alias)!==-1&&(e[i.alias]=t[i.alias])})}else throw new Error("invalid data")};(function(e){var a=commonjsGlobal&&commonjsGlobal.__createBinding||(Object.create?function(u,l,x,g){g===void 0&&(g=x),Object.defineProperty(u,g,{enumerable:!0,get:function(){return l[x]}})}:function(u,l,x,g){g===void 0&&(g=x),u[g]=l[x]}),t=commonjsGlobal&&commonjsGlobal.__exportStar||function(u,l){for(var x in u)x!=="default"&&!l.hasOwnProperty(x)&&a(l,u,x)};Object.defineProperty(e,"__esModule",{value:!0}),e.secp256k1=e.rlp=e.BN=void 0;var c=secp256k1v3Adapter;e.secp256k1=c;var i=lib,o=bnExports$3;e.BN=o;var b=dist_browser$2;e.rlp=b,Object.assign(e,i),t(constants,e),t(account,e),t(hash,e),t(signature,e),t(bytes,e),t(object,e)})(dist$1);class PopupRequestModelDB extends $n{popupRequests;constructor(){super("popup-request-model"),this.version(1).stores({popupRequests:"&id, createTime"})}}const PopupRequestModel=new PopupRequestModelDB;class TransactionModelDB extends $n{transactions;ethTransferEventLogs;aptosTransactions;constructor(){super("transaction-model"),this.version(2).stores({transactions:"++id, &hash, walletId, currencyId, chainId, chainType, status, accountIndex, createTime",ethTransferEventLogs:"&[txHash+logIndex+chainId], txHash, chainId, contractAddress, *addressTag, from, to, createTime, updateTime"}),this.version(3).stores({transactions:"++id, &[hash+walletId], hash, walletId, currencyId, chainId, chainType, status, accountIndex, createTime",ethTransferEventLogs:"&[txHash+logIndex+chainId], txHash, chainId, contractAddress, *addressTag, from, to, createTime, updateTime",aptosTransactions:"&[txHash+walletId], txHash, walletId, sender, function, *transferResourceTypes, version, timestamp"})}}const TransactionModel=new TransactionModelDB;function parseEthTransactionData(e){try{return new utils$1.Interface([...EthereumABIs.ERC20,...EthereumABIs.SWAP]).parseTransaction({data:e})}catch{}}function parseEthRawTx(e){const a=parseEthTransactionData(e.data),t=[],c=a?.name;return e.currency&&t.push(e.currency.contractAddress.toLowerCase()),a?.name==="approve"&&t.push(e.to),{contractAddress:t,txnName:e.txnName||c,txnDesc:a}}const addHexPrefix=e=>e.match(/^-?0x/u)?e:e.match(/^-?0X/u)?e.replace("0X","0x"):e.startsWith("-")?e.replace("-","-0x"):`0x${e}`,compareStrIgnoreCase=(e,a)=>e&&a?e.toLocaleLowerCase()===a.toLocaleLowerCase():!1;class SignatureModelDB extends $n{signatures;constructor(){super("signature-model"),this.version(1).stores({signatures:"++id, &hexSignature, textSignature, methodName, bytesSignature, createdAt"})}}const SignatureModel=new SignatureModelDB,SignatureService={async getSignature(e){const t=addHexPrefix(e).slice(0,10),c=await SignatureModel.signatures.get({hexSignature:t});if(c)return c;const i=`https://www.4byte.directory/api/v1/signatures/?hex_signature=${t}`,b=(await request$5(i)).data.results,u=b[b.length-1];return u&&(u.methodName=u.textSignature.split("(")[0],await SignatureModel.signatures.put(u)),u}},AptosTransactionService={async getAptosTransaction(e,a){const t=await Promise.all(e.map(async c=>{const i=await TransactionModel.aptosTransactions.where({txHash:c.hash}).first();return c.aptos=i,c}));if(isNativeContractAddress(a))return t;{const c=await TransactionModel.aptosTransactions.where("transferResourceTypes").equals(`0x1::coin::CoinStore<${a}>`).toArray();return t.filter(i=>c.find(o=>o.txHash===i.hash))}},async refreshAptosTransactionStatus(e){const{rpcUrl:a,transaction:t}=e,c=new AptosClient(a);try{const i=await c.getTransactionByHash(t.hash);i.success?t.status="success":i.success===!1?t.status="failed":t.status="pending",await TransactionModel.transactions.where("hash").equalsIgnoreCase(t.hash).modify({status:t.status,updateTime:Date.now(),aptos:serializeObject(i)}),await TransactionModel.aptosTransactions.put(parseAptosTransaction(t,i))}catch{}}},BtcBalanceService={async fetchTokenBalance(e){const{address:a,walletId:t,chainId:c,chainType:i,accountIndex:o}=e,b=BtcNetworkTypeUtils.toNetworkType(c),u=(await this.getBalance()).cardinalBalance,l=await getBrc20Api(b).getAddressBrc20TokenBalances({address:a}),x=amountBtcToSatoshi(u),g=await NetworkService.getNetWorkUnsafe(c,i),v=await CurrencyService.cacheCurrencyRequest(g)??[],E=v.find(O=>O.symbol==="BTC");(await CurrencyService.getAddedCurrencyList(c,i,t)).map(O=>O.symbol).concat(BRC_20_FORCE_DISPLAY_TOKENS).forEach(O=>{l.find(R=>R.ticker.toLocaleLowerCase()===O.toLocaleLowerCase())||l.push({ticker:O,overallBalance:bignumber(0),transferableBalance:bignumber(0),availableBalance:bignumber(0)})});const I=[{walletId:t,accountIndex:o,chainId:c,chainType:i,currencyId:E?.id??"",balance:x.toString(),address:a,updateTime:Date.now()}];let A=v.filter(O=>O.symbol!=="BTC");if(BtcNetworkTypeUtils.toNetworkType(g.chainId)===NetworkType.TESTNET){const O=l.filter(R=>!A.find(M=>M.name.toLocaleLowerCase()===R.ticker.toLocaleLowerCase())).map(R=>({id:`mock-brc20-${R.ticker}-${c}:${i}`,name:R.ticker,symbol:R.ticker.toUpperCase(),tokenDecimal:18,chainId:c,chainType:i,contractAddress:"",protocol:"",type:"default"}));A=A.concat(O)}const C=l.map(O=>{const R=A.find(B=>B.name.toLocaleLowerCase()===O.ticker.toLocaleLowerCase());if(R)return{walletId:t,accountIndex:o,chainId:c,chainType:i,currencyId:R.id,balance:multiply(O.overallBalance,10**R.tokenDecimal).toString(),brc20:{availableBalance:multiply(O.availableBalance,10**R.tokenDecimal).toString(),transferableBalance:multiply(O.transferableBalance,10**R.tokenDecimal).toString()},address:a,updateTime:Date.now()}}).filter(O=>O!==void 0);await CurrencyModel.currencies.bulkPut(A),await TokenBalanceModel.tokenBalances.where({chainId:c,chainType:i}).delete(),await TokenBalanceModel.tokenBalances.bulkPut(I),await TokenBalanceModel.tokenBalances.bulkPut(C),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"})},async getUtxos(){const{networkType:e,address:a}=await BtcService.getWalletInfo(),t=await getBtcApi(e).getAddressUtxos({address:a}),c=await await getBrc20Api(e).getAddressInscriptionUtxos({address:a}),i=t.filter(o=>!c.map(b=>`${b.txId}:${b.outputIndex}`).includes(`${o.txId}:${o.outputIndex}`));return{utxos:t,ordinalUtxos:c,cardinalUtxos:i}},async getBalance(){const{networkType:e,address:a}=await BtcService.getWalletInfo(),t=await getBtcApi(e).getAddressBalance({address:a}),{ordinalUtxos:c,cardinalUtxos:i}=await this.getUtxos(),o=amountSatoshiToBtc(c.reduce((u,l)=>u+l.value,0)),b=amountSatoshiToBtc(i.reduce((u,l)=>u+l.value,0));return{balance:t,ordinalBalance:o,cardinalBalance:b}},async getBrc20TransferableInscriptions({ticker:e}){const{networkType:a,address:t}=await BtcService.getWalletInfo();return getBrc20Api(a).getAddressBrc20TokenTransferableInscriptions({address:t,ticker:e})}},BtcTransactionService={async refreshTransactionStatus(e){const{transaction:a}=e,t=BtcNetworkTypeUtils.toNetworkType(a.chainId);try{const c=await getBtcApi(t).fetchTxStatus(a.hash);await TransactionModel.transactions.where("hash").equalsIgnoreCase(a.hash).modify({status:c,updateTime:Date.now()})}catch{}},async getBrc20Transaction(e,a){return a?e.filter(t=>t.btc?.summary.brc20?.ticker.toLocaleLowerCase()===a.toLocaleLowerCase()):e},async buildSendBtcTx({toAddress:e,amount:a,feeRate:t}){assert$d(a>=COIN_DUST,`amount must be greater than dust limit (${COIN_DUST})`);const{network:c,keypair:i,address:o,addressType:b}=await BtcService.getWalletInfo(),u=(await BtcBalanceService.getUtxos()).cardinalUtxos.sort((C,O)=>O.value-C.value),l=amountBtcToSatoshi((await BtcBalanceService.getBalance()).cardinalBalance),x=async({fee:C})=>{const O=clamp(a,0,l-C),{gatheredUtxos:R,sumAmount:B}=await gatherUtxosByAmount({utxos:u,amount:O+C}),M=B-O-C;let L=new src$4.Psbt({network:c});L=await addInputsToPsbt({network:c,addressType:b,keypair:i,inputUtxos:R,psbt:L}),L.addOutput({address:e,value:O}),M>=COIN_DUST&&L.addOutput({address:o,value:M});const ee=await signPsbt({network:c,addressType:b,keypair:i,psbt:L}),z=ee.extractTransaction().toHex(),oe=ee.extractTransaction().virtualSize();return{actualSendAmount:O,singedPsbt:ee,rawTx:z,vSize:oe}},g=async()=>{let[O,R,B]=[0,0,1e3];for(;B!==R&&O<5;){O++,R=B;const{actualSendAmount:M,singedPsbt:L,rawTx:ee,vSize:z}=await x({fee:B});if(B=z*t,B===R||O>=5)return{actualSendAmount:M,singedPsbt:L,rawTx:ee,vSize:z,fee:B}}throw new Error("Iteration out of bound!")},{actualSendAmount:v,singedPsbt:E,rawTx:S,vSize:T,fee:I}=await g(),A={inputs:E.txInputs.map(C=>{const O=u.find(R=>{R.txId==C.hash.toString()&&R.outputIndex==C.index});return{...C,...O}}),outputs:E.txOutputs.map(C=>({...C,script:C.script.toString("base64")})),summary:{type:"send",satoshis:v,fromAddress:o,toAddress:e,feeSatoshis:I,vSize:T,feeRate:t}};return{actualSendAmount:v,singedPsbt:E,rawTx:S,vSize:T,txPayload:A}},async buildSendInscriptionsTx({toAddress:e,inscriptionIds:a,feeRate:t}){const{network:c,networkType:i,keypair:o,address:b,addressType:u}=await BtcService.getWalletInfo(),l=await Promise.all(a.map(async O=>await getBrc20Api(i).getInscriptionUtxo({inscriptionId:O}))),x=l.map(O=>O.value).reduce((O,R)=>O+R),g=(await BtcBalanceService.getUtxos()).cardinalUtxos.sort((O,R)=>R.value-O.value),v=async({fee:O})=>{const{gatheredUtxos:R,sumAmount:B}=await gatherUtxosByAmount({utxos:g,amount:O}),M=B-O,L=l.concat(R);let ee=new src$4.Psbt({network:c});ee=await addInputsToPsbt({network:c,addressType:u,keypair:o,inputUtxos:L,psbt:ee}),l.forEach(P=>{ee.addOutput({address:e,value:P.value})}),M>=COIN_DUST&&ee.addOutput({address:b,value:M});const z=await signPsbt({network:c,addressType:u,keypair:o,psbt:ee}),oe=z.extractTransaction().toHex(),W=z.extractTransaction().virtualSize();return{singedPsbt:z,rawTx:oe,vSize:W}},E=async()=>{let[R,B,M]=[0,0,1e3];for(;M!==B&&R<5;){R++,B=M;const{singedPsbt:L,rawTx:ee,vSize:z}=await v({fee:M});if(M=z*t,M===B||R>=5)return{singedPsbt:L,rawTx:ee,vSize:z,fee:M}}throw new Error("Iteration out of bound!")},{singedPsbt:S,rawTx:T,vSize:I,fee:A}=await E(),C={inputs:S.txInputs.map(O=>{const R=g.find(B=>{B.txId==O.hash.toString()&&B.outputIndex==O.index});return{...O,...R}}),outputs:S.txOutputs.map(O=>({...O,script:O.script.toString("base64")})),summary:{type:"send",satoshis:x,fromAddress:b,toAddress:e,feeSatoshis:A,vSize:I,feeRate:t}};return{singedPsbt:S,rawTx:T,vSize:I,txPayload:C}}},CosmosTransactionService={async refreshCosmosTransactionStatus(e){const{rpcUrl:a,transaction:t,notifyEnable:c=!1}=e,i=CosmosHttpClient.create(a),o=await build$5.Tendermint34Client.connect(i);try{const b=await o.tx({hash:build.fromHex(t.hash)});b.result.code===0?(t.status="success",c&&browser.notifications.create(t.hash,{title:"Transaction success",message:`transaction hash: ${t.hash}`,iconUrl:"icon-32.png",type:"basic"})):b.result.code===11?t.status="sendFailed":t.status="pending"}catch(b){safeJsonParse(b.message).code===-32603&&Date.now()-t.createTime>180*1e3&&(t.status="sendFailed")}await TransactionService.updateStatus(t)}},TransactionService={async fetchSpeedLevel(e){const a="/extension/ncw-api/api/sdk/get_fees";return e?request$5(a,{params:{currency:e}}):null},async refreshTransactionStatus(e){const a=e.transaction.chainType;if(a==="eth")return EthTransactionService.refreshEthTransactionStatus(e);if(a==="cosmos")return CosmosTransactionService.refreshCosmosTransactionStatus(e);if(a==="aptos")return AptosTransactionService.refreshAptosTransactionStatus(e);if(a==="btc")return BtcTransactionService.refreshTransactionStatus(e)},async getTransaction(e){const{chainId:a,chainType:t,walletId:c,contractAddress:i,brc20Ticker:o}=e,b=await TransactionModel.transactions.where({chainId:a,chainType:t,walletId:c}).reverse().sortBy("createTime");return t==="btc"?BtcTransactionService.getBrc20Transaction(b,o):t==="aptos"?AptosTransactionService.getAptosTransaction(b,i):t==="eth"?EthTransactionService.getEthTransaction(b,e):b},async refreshTxnByHash(e,a){let t=await TransactionModel.transactions.where({hash:e,walletId:a}).first();t||(t=await EthTransactionService.getTxnByHashFromRpc(e)),assert$d(t,"can not found tnx by hash");const c=await NetworkService.getNetWorkUnsafe(t.chainId,t.chainType);if((t.status==="pending"||t.status==="sent")&&await TransactionService.refreshTransactionStatus({rpcUrl:c?.rpcUrl,transaction:t,notifyEnable:!1}),c?.explorer){const{txnPath:i,txnPathV2:o}=c.explorer,{domain:b}=getNetworkExplorer(c.explorer.domain),u=t.chainType==="cosmos"?e.toUpperCase():e;t.exploreUrl=b+i+u,o&&(t.exploreUrl=b+o?.replace("{hash}",u))}if(t.eth){const i=await TransactionModel.ethTransferEventLogs.where({txHash:t.hash}).toArray();t.eth.logs=i}if(t.chainType==="aptos"){const i=await TransactionModel.aptosTransactions.where({txHash:t.hash}).first();t.aptos=i}return t},async updateStatus(e){await TransactionModel.transactions.where("hash").equals(e.hash).modify({status:e.status,updateTime:Date.now()})},async save(e){return e.chainType==="eth"&&EthTransactionService.mockTransactionLogs(e),await TransactionModel.transactions.put(e),BalanceService.refreshBalanceIfNeed(),e},async getAccountNextNonce(e){let a=0;if(e.chainType==="aptos"){const i=await AptosService.getAccount({address:e.address,rpcUrl:e.rpcUrl});a=Number(i.sequence_number)}else a=await new Web3(new HttpProvider(e.rpcUrl)).eth.getTransactionCount(e.address,"pending");const t=await TransactionModel.transactions.where({status:"sent",from:e.address,chainId:e.chainId,chainType:e.chainType}).toArray();if(!t.length)return a;const c=t.map(i=>i.chainType==="eth"?i?.eth?.nonce??0:i.chainType==="aptos"?Number.parseInt(i?.aptos?.sequence_number??"0"):0).sort((i,o)=>o-i);return Math.max(a,c[0]+1)}},EthTransactionService={async getEthTransaction(e,a){return isNativeContractAddress(a.contractAddress)?this.getEthNativeTransactions(e):this.getEthTransactionsByLogs(a)},async getEthNativeTransactions(e){const a=e.map(async t=>{if(t?.eth){const c=await TransactionModel.ethTransferEventLogs.where({txHash:t.hash}).toArray();t.eth.logs=c}return t});return Promise.all(a)},async getEthTransactionsByLogs(e){const{walletId:a,address:t="",contractAddress:c}=e,i=await TransactionModel.ethTransferEventLogs.where("addressTag").equalsIgnoreCase(t).and(l=>compareStrIgnoreCase(l.contractAddress,c)).reverse().sortBy("createTime"),o=lodashExports.groupBy(i,"txHash"),b=Object.keys(o).map(async l=>{const x=await TransactionModel.transactions.where({hash:l,walletId:a}).first();return x?.eth&&(x.eth.logs=o[l]),x}),u=await Promise.all(b);return lodashExports.orderBy(u,"createTime","desc").filter(l=>l)},async refreshEthTransactionStatus(e){const{rpcUrl:a,transaction:t,notifyEnable:c=!1}=e,i=new Web3(new HttpProvider(a));await this.checkPendingTxnAndUpdateStatus(i,t),await this.checkTxnReceiptAndUpdateStatus(i,t,c),await TransactionModel.transactions.where("hash").equals(t.hash).modify({status:t.status,eth:t.eth,rawData:t.rawData,updateTime:Date.now()})},async checkPendingTxnAndUpdateStatus(e,a){await e.eth.getTransaction(a.hash)?a.status="pending":Date.now()-a.createTime>30*60*1e3&&(a.status="sendFailed")},async checkTxnReceiptAndUpdateStatus(e,a,t){const c=await e.eth.getTransactionReceipt(a.hash);c&&(await this.saveTransactionEventLog(c),a.rawData=c,a.eth&&(a.eth.gasUsed=c.gasUsed),a.status=c.status?"success":"failed",t&&browser.notifications.create(a.hash,{title:`Transaction ${a.status}`,message:`transaction hash: ${a.hash}`,iconUrl:"icon-32.png",type:"basic"}))},async saveTransactionEventLog(e){if(!e.logs)return;const a=await WalletService.getWalletSession(),{chainId:t="",address:c}=a,i=e.logs.map((o,b)=>{const u=o.topics[0];let l="",x="";const g=o.topics[1]?.replace("0x000000000000000000000000","0x"),v=o.topics[2]?.replace("0x000000000000000000000000","0x"),{transfer:E,withdraw:S,nameRegistered:T}=ETH_EVENT_LOG_SIGNATURE;if(compareStrIgnoreCase(u,E))l=g,x=v;else if(e.logs.length===b+1&&compareStrIgnoreCase(u,S))l=g,x=e.from;else if(compareStrIgnoreCase(u,T)&&compareStrIgnoreCase(c,v)){const I=Qa();PopupRequestModel.popupRequests.put({id:I,message:{from:"",to:"",payload:{id:I,jsonrpc:"2.0",method:"notification_cronosidRegistered",params:[{address:c}]}},createTime:Date.now()}).then(()=>{SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH})})}return{eventSignature:u,txHash:o.transactionHash,logIndex:o.logIndex,chainId:t,contractAddress:o.address,addressTag:[l,x],from:l,to:x,data:o.data,topics:o.topics,createTime:Date.now(),updateTime:Date.now()}});await TransactionModel.ethTransferEventLogs.where({txHash:e.transactionHash}).delete(),await TransactionModel.ethTransferEventLogs.bulkPut(i)},async getTxnByHashFromRpc(e){const{chainId:a,chainType:t,walletId:c,accountIndex:i,address:o}=await WalletService.getWalletSession();assert$d(a,"chainId can not be null"),assert$d(t,"chainType can not be null"),assert$d(c,"walletId can not be null"),assert$d(i,"accountIndex can not be null"),assert$d(o,"address can not be null"),assert$d(t==="eth","fetch transaction only support evm chain");const b=await NetworkService.getNetWorkUnsafe(a,t);assert$d(b,"Invalid network");const l=await new Web3(new HttpProvider(b.rpcUrl)).eth.getTransaction(e);assert$d.ok([l.from.toLocaleLowerCase(),l.to?.toLocaleLowerCase()].includes(o.toLocaleLowerCase()),"can not found transaction for your wallet address");let x="Send";if(l.input){x="Smart Contract Call";try{x=(await SignatureService.getSignature(l.input)).methodName}catch{}}const{contractAddress:g,txnDesc:v}=parseEthRawTx({...l,data:l.input}),E={walletId:c,accountIndex:i,hash:l.hash,status:"pending",chainId:a,chainType:"eth",speed:"Standard",from:l.from,createTime:Date.now(),updateTime:Date.now(),to:l.to??"",txnName:x,rawData:l,eth:{contractAddress:g,txnDesc:v,data:l.input,nonce:l.nonce,value:l.value,gasLimit:l.gas.toString(),gasUsed:l.gas,gasPrice:l.gasPrice}};return await TransactionService.save(E),E},async mockTransactionLogs(e){if(e.status==="sent"&&e.eth?.txnDesc?.sighash===ETH_METHOD_SIGNATURE.transfer){const{args:t}=e.eth?.txnDesc??{},c=t[1],i={eventSignature:ETH_EVENT_LOG_SIGNATURE.transfer,txHash:e.hash,logIndex:1,chainId:e.chainId,contractAddress:e.to,addressTag:[e.from,t[0]],from:e.from,to:t[0],data:c.toHexString(),createTime:Date.now(),updateTime:Date.now()};await TransactionModel.ethTransferEventLogs.where({txHash:e.hash}).delete(),await TransactionModel.ethTransferEventLogs.add(i)}},async saveTransactionReceipt(e,a){const t=e.transactionHash;let c=await TransactionModel.transactions.where({hash:t}).first();c||(c=await this.getTxnByHashFromRpc(t)),await this.saveTransactionEventLog(e),c.rawData=e,c.eth&&(c.eth.gasUsed=e.gasUsed),c.status=e.status?"success":"failed",a&&browser.notifications.create(c.hash,{title:`Transaction ${c.status}`,message:`transaction hash: ${c.hash}`,iconUrl:"icon-32.png",type:"basic"}),await TransactionModel.transactions.where("hash").equals(t).modify({status:c.status,eth:c.eth,rawData:c.rawData,updateTime:Date.now()});const i=await NetworkService.getNetWorkUnsafe(c.chainId,c.chainType);await SegmentService.track({event:"DeFi Extension Transaction Status Trigger",properties:{type:"standalone",network:`${c.chainType},${c.chainId}`,name:`${i.name}`,status:c.status,txnHash:c.hash,txnName:c.txnName}}),BalanceService.refreshBalanceIfNeed(!0)}},historicalBlocks=20,rewardPercentiles=[1,35,90],EthereumService={async verifyAddress(e){const{address:a}=e;return Web3.utils.isAddress(a)},getBalance({rpcUrl:e,address:a}){const t=new HttpProvider(e);return new Web3(t).eth.getBalance(a)},getBlock(e){const a=new HttpProvider(e);return new Web3(a).eth.getBlock("pending")},getMaxPriorityFeePerGas(e){const a=new HttpProvider(e);return new Web3(a).eth.getFeeHistory(historicalBlocks,"pending",rewardPercentiles)},getGasPrice(e){const a=new HttpProvider(e);return new Web3(a).eth.getGasPrice()},async fetchEvmChainGasFees(e){return request$5("/evm-chain-api/v2/gas/fees",{data:e,method:"POST"})},getGasLimit(e,a){const t=new HttpProvider(e);return new Web3(t).eth.estimateGas(a)},async buildEthSendTxn(e){const{rpcUrl:a,myAddress:t,contractAddress:c,toAddress:i,value:o}=e,b=new Web3(new HttpProvider(a)),u=c?new b.eth.Contract(EthereumABIs.ERC20,c,{from:t}):null,l=b.utils.toHex(o);return{to:u?c:i,value:u?"0x0":l,data:u?u.methods.transfer(i,l).encodeABI():""}},async sign(e){const{dataToSign:a,privatekey:t}=e;return new Wallet(t).signMessage(a)},async signRaw(e){let a=e.dataToSign;typeof a=="string"&&(a=utils$1.toUtf8Bytes(a));const t=hexlify(e.privatekey,{allowMissingPrefix:!0}),c=utils$1.keccak256(a),i=dist$1.ecsign(dist$1.toBuffer(c),dist$1.toBuffer(t));return joinSignature({...i,r:dist$1.bufferToHex(i.r),s:dist$1.bufferToHex(i.s)})},async signTypedData(e){const{typedData:a,privatekey:t}=e,c=new Error("Expect argument to be non-empty array");if(typeof a!="object"||!a.hasOwnProperty("length")||!a.length)throw c;const i=a.map(({value:g})=>g),o=a.map(({type:g})=>g),b=a.map(g=>{if(!g.name)throw c;return`${g.type} ${g.name}`}),u=function(g,v){return keccak256$1(pack(g,v))},l=u(["bytes32","bytes32"],[u(new Array(a.length).fill("string"),b),u(o,i)]),x=dist$1.ecsign(dist$1.toBuffer(l),t);return joinSignature({...x,r:dist$1.bufferToHex(x.r),s:dist$1.bufferToHex(x.s)})},async signTypedDataV4(e){const{domain:a,types:t,message:c}=e.message;assert$d(a,"domain cannot be empty"),assert$d(t,"types cannot be empty"),assert$d(c,"message cannot be empty");const i=new Wallet(e.privatekey,new StaticJsonRpcProvider(e.rpcUrl)),{EIP712Domain:o,Group:b,...u}=t;return i._signTypedData(a,u,c)},async getChainIdByRpcUrl(e){return new Web3(new HttpProvider(e)).eth.getChainId()},async signTransaction(e){const{rawTx:a,name:t,chainId:c,privatekey:i}=e,o=Common.custom({name:t,networkId:c,chainId:c}),b=dist_browserExports.Transaction.fromTxData(a,{common:o});if(i)return b.sign(i).serialize().toString("hex");if(a.r&&a.s)return b.serialize().toString("hex");const u=b.getMessageToSign(!1);return dist$1.rlp.encode(u).toString("hex")},async signTransactionByEip1559(e){const{rawTx:a,chainId:t,privatekey:c}=e;a.chainId=t;const i=dist_browserExports.FeeMarketEIP1559Transaction.fromTxData(a);return c?i.sign(c).serialize().toString("hex"):a.r&&a.s?i.serialize().toString("hex"):i.getMessageToSign(!1).toString("hex")},async sendRawTransaction(e){const{rpcUrl:a,signedTransactionData:t}=e,c=new Web3(new HttpProvider(a)),i="0x"+t;return new Promise((o,b)=>{c.eth.sendSignedTransaction(i).once("transactionHash",u=>{o(u)}).once("error",u=>{b(u)}).once("receipt",u=>{BalanceService.refreshBalanceIfNeed(!0).catch(),EthTransactionService.saveTransactionReceipt(u).catch()})})},async verifyPrivateKey(e){const a=new Wallet(e),t=await a.getAddress(),c=buffer$2.Buffer.from(fromHexStringToUnit8Array(a.publicKey)).toString("base64");return{address:t,publicKey:c,algo:"secp256k1"}},async verifyMnemonic({mnemonic:e,accountIndex:a}){const t=HDNode.fromMnemonic(e).derivePath(`m/44'/60'/0'/0/${a}`);return{addressType:"eth",address:t.address,algo:"secp256k1",pubkey:buffer$2.Buffer.from(fromHexStringToUnit8Array(t.publicKey)).toString("base64"),privkey:t.privateKey,privkeyBuffer:buffer$2.Buffer.from(fromHexStringToUnit8Array(t.privateKey)),pubkeyBuffer:buffer$2.Buffer.from(fromHexStringToUnit8Array(t.publicKey))}}};let secretKeys={mnemonicString:"",privatekeyString:""};const DefiCoreService={supportedECOSystemNetworkList(){const e=[{addressType:"cosmos",chianIndex:"4",isTestnet:!1},{addressType:"eth",chianIndex:"72",isTestnet:!1},{addressType:"cro",chianIndex:"41",isTestnet:!1},{addressType:"tcro",chianIndex:"42",isTestnet:!1},{addressType:"aptos",chianIndex:"209",isTestnet:!1}];return e.push(...Object.values(BtcAddressType).map(a=>({addressType:a,chianIndex:"0",isTestnet:!1}))),e.push(...Object.values(BtcTestnetAddressType).map(a=>({addressType:a,chianIndex:"0",isTestnet:!0}))),e},async getAccounts({accountIndex:e=0,walletType:a="mnemonic",addressType:t,isTestnet:c=!1}){if(a==="privateKey")return this.getAccountsFromPrivateKey(t);{const i=await this.getAccountsFromMnemonic({accountIndex:e,addressType:t,isTestnet:c});return assert$d.ok(i,"account is not found from mnemonic"),i}},async getAccountsFromMnemonic({accountIndex:e=0,addressType:a,isTestnet:t=!1}){assert$d.ok(a,"addressType is not found");const c=secretKeys.mnemonicString;if(a==="eth")return await EthereumService.verifyMnemonic({mnemonic:c,addressType:a,accountIndex:e});if(a==="cosmos")return await CosmosService.verifyMnemonic({mnemonic:c,addressType:a,accountIndex:e});if(a==="cro"||a==="tcro")return CosmosService.verifyMnemonic({mnemonic:c,addressType:a,accountIndex:e});if(a==="aptos")return await AptosService.verifyMnemonic({mnemonic:c,addressType:a,accountIndex:e});if(a.startsWith("BTC_"))return await BtcService.verifyMnemonic({networkType:NetworkType.MAINNET,mnemonic:c,addressType:a,accountIndex:e});if(BtcAddressTypeUtils.isTestnetType(a))return await BtcService.verifyMnemonic({networkType:NetworkType.TESTNET,mnemonic:c,addressType:BtcAddressTypeUtils.toAddressType(a),accountIndex:e})},async getAccountsFromPrivateKey(e){const a=await WalletService.getCurrentWallet(),t=secretKeys.privatekeyString,[c="eth"]=Object.keys(a?.addresses??{});assert$d.ok(c===e,"addressType is not match with targetAddressType");const i=await WalletService.generateAddressesByPrivateKey(t,c);return{addressType:c,address:i?.[c]?.address??"",algo:"secp256k1",pubkey:i?.[c]?.pubkey??"",privkey:t,privkeyBuffer:buffer$2.Buffer.from(fromHexStringToUnit8Array(t)),pubkeyBuffer:buffer$2.Buffer.from(build.fromBase64(i?.[c]?.pubkey??""))}},async setPhrase(e){secretKeys.mnemonicString=e},async setPrivateKey(e){secretKeys.privatekeyString=e},async reset(){secretKeys={mnemonicString:"",privatekeyString:""}},getLanguage(){return"english"}};class DeviceModelDB extends $n{devices;constructor(){super("device-model"),this.version(1).stores({devices:"++id, &uuid"})}}const DeviceModel=new DeviceModelDB,DeviceService={async generateDeviceUUID(){return Xa()},async setDeviceUUID(e){return DeviceModel.devices.put({id:1,uuid:e})},async getDeviceUUID(){let{uuid:e}=await DeviceModel.devices.get({id:1})||{};return e||(e=await this.generateDeviceUUID(),await this.setDeviceUUID(e),await SegmentService.identify(!0)),e}},SEGMENT_IDENTITY_CREATED_KEY="segment-identity-created",SEGMENT_IDENTITY_LAST_UPDATED_KEY="segment-identity-last-updated";let analytics=null;const SegmentService={initAnalyticsIf(){if(!analytics){const e={axiosConfig:{adapter:fetchAdapter}};analytics=new analyticsNode("2XTzCG6eEL02olczWanmJEqlBzYdus40",e)}},getDeviceInfo(){const{userAgentData:e,language:a}=globalThis.navigator||{};return{operatingSystem:e?.platform??"",platform:"extension",locale:a,extensionVersion:SERVER_GLOBAL_ENV.config.appVersionName}},getBrowserInfo(){const e=detect();return{browser:e?.name??"",browserVersion:e?.version??""}},async identify(e){const a=await this.readLocalStorage(SEGMENT_IDENTITY_LAST_UPDATED_KEY),t=new Date;if(e||a!==void 0&&Math.floor((t.getTime()-new Date(a).getTime())/(1e3*3600*24))>=1){this.initAnalyticsIf();const{currentWalletModelType:i}=await WalletService.getWalletConfig(),o=await DeviceService.getDeviceUUID(),b=this.getDeviceInfo(),u=this.getBrowserInfo(),l=await WalletService.getWalletCounts(),x=Object.assign({created:await this.getIdentityCreatedTime(),lastUpdated:t.toISOString(),mode:i},b,u,l);return chrome.storage.local.set({[SEGMENT_IDENTITY_LAST_UPDATED_KEY]:t.toISOString()}),analytics.identify({userId:o,traits:x})}},async prepareParams(e){const{currentWalletModelType:a,chainId:t,chainType:c}=await WalletService.getWalletConfig(),i=this.getBrowserInfo();return Object.assign({model:a,chainId:t,chainType:c,date:new Date().toISOString()},e,i)},async track({event:e,properties:a},t){this.initAnalyticsIf();const c=await this.prepareParams(a),i=await DeviceService.getDeviceUUID(),o={event:e,properties:c,userId:i};return t?.isReportToBackend&&await this.reportTrackToBackend(o),await this.identify(!1),analytics.track(o)},async screen({name:e,properties:a}){this.initAnalyticsIf();const t=await this.prepareParams(a),c=await DeviceService.getDeviceUUID(),i={name:e,properties:t,userId:c};return analytics.screen(i)},async reportTrackToBackend(e){return request$5("/extension/ncw-api/api/data/ext",{method:"POST",data:{...e,type:"track",timestamp:new Date().toISOString(),messageId:`node-${md5Exports(JSON.stringify(e))}-${Xa()}`}})},async reportDeviceInfo(){try{const e=await DeviceService.getDeviceUUID(),{wallet:a,accountIndex:t,walletType:c}=await WalletService.getWalletSession();if(c==="mobile")return;const b=(await NetworkService.cacheNetworkRequest()).flatMap(E=>E.subNetworks??[]).map(E=>{const S=a?.addresses[E.addressType]?.address,T=E.cdcNetworkId;return{address:S,network_id:T}}).filter(E=>E.network_id),u=JSON.stringify(b),l=utils$1.toUtf8Bytes(u),g=(await DefiCoreService.getAccounts({accountIndex:t,walletType:c,addressType:"eth",isTestnet:!1})).privkey,v=await EthereumService.signRaw({dataToSign:u,privatekey:g});return request$5("/extension/ncw-api/api/v4/device",{method:"POST",data:{device_uuid:e,sign:v,wallet:{uuid:a?.walletId,name:a?.name,addresses:Array.from(l.values())}}})}catch{}},async getIdentityCreatedTime(){return await this.readLocalStorage(SEGMENT_IDENTITY_CREATED_KEY,(e,a)=>{const t=new Date().toISOString();chrome.storage.local.set({[SEGMENT_IDENTITY_CREATED_KEY]:t}),e(t)})},async readLocalStorage(e,a){return new Promise((t,c)=>{chrome.storage.local.get([e],function(i){i[e]===void 0?a?a(t,c):t(void 0):t(i[e])})})}},BridgeWalletService={async generateBridgeSession(e,a){const t=await generateKey(),c=Ua(t,!0),i=Xa(),o=Xa();return{origin:e,key:c,clientId:i,clientMeta:a,peerId:o,peerMeta:void 0,handshakeId:Qa(),handshakeTopic:o}},async requestQRCode(e){const a={description:"Crypto.com Wallet Extension",url:"",icons:["https://d3s6mxy6xjz1wo.cloudfront.net/images/broswer-extension-logo.png"],name:"Crypto.com Wallet Extension"},t=await BridgeWalletService.generateBridgeSession(e.req.sess.origin,a),c={protocol:DEFI_CONNECT_PROTOCOL,handshakeTopic:t.handshakeTopic,version:DEFI_CONNECT_VERSION,bridge:"https://wallet-connect.crypto.com/api/v2/ncwconnect/relay/ws",key:t.key},i={id:t.handshakeId,jsonrpc:"2.0",method:"dc_sessionRequest",params:[{peerId:t.clientId,peerMeta:a,chainId:"25",chainType:"eth",accountTypes:["eth","cro","tcro","cosmos"]}]};await ConnectSessionModel.bridgeSessions.put(t);const o=SessionManager.getSessionsByRole("mobile")[0];if(o){const b={from:e.from,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:i};BridgeConnectManager.once(`response-${b.payload.id}`,async({message:u,mobileDeviceId:l})=>{let x=!1;if(uo(u.payload)){const g=u.payload.result;x=g.approved,await ConnectSessionModel.bridgeSessions.where("origin").equals(location.origin).modify({peerId:g.peerId,mobileDeviceId:l}),await BridgeWalletService.updateBridgeWalletSession(g)}SegmentService.track({event:"extension_receive_connect_response_from_mobile",properties:{peerId:u?.payload?.result?.peerId,mobile_device_id:l,"Response Type":x?"Success":"Error"}})}),e.responses.push(b),await o.sendRaw({type:"sub",topic:t.clientId,payload:"",silent:!0})}return`${c.protocol}:${c.handshakeTopic}@${c.version}?bridge=${c.bridge}&key=${c.key}`},async disconnectMobileConnection(e){const a={approved:!1,chainId:null,chainType:null,accounts:null,selectedWalletId:null,rpcUrl:"",wallets:[]},t={id:Qa(),jsonrpc:"2.0",method:"dc_sessionUpdate",params:[a]},c=SessionManager.getSessionsByOrigin(KOA_MESSAGE_MOBILE_ORIGIN),i={from:e.req.sess.origin,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:t};for(const o of c)await o.sendMsg(i);await BridgeWalletService.updateBridgeWalletSession(a)},async updateBridgeWalletSession(e){let a=await WalletService.getWalletConfig();if(assert$d.notEqual(a.currentWalletModelType,"standalone","should not be standalone model"),e.approved){const t=e.wallets.map((c,i)=>({walletId:c.id,name:c.name,icon:c.icon,accountIndex:"0",addresses:c.addresses,walletType:"mobile",createTime:new Date().getTime()+i}));a.walletId&&!t.find(({walletId:c})=>c===a.walletId)&&(a.walletId=t[0]?.walletId),a.currentWalletModelType="bridge",a={...a,walletId:(a.walletId||e.selectedWalletId)??void 0,accountIndex:"0",chainId:(a.chainId||e.chainId?.toString())??void 0,chainType:(a.chainType||e.chainType)??void 0},await WalletService.clearWallets(),await Promise.all(t.map(c=>WalletService.saveWalletAndWalletAccounts(c))),await WalletService.saveWalletConfig(a)}else await WalletService.deleteAllWallet();await WalletService.updateSubscription(),SegmentService.identify(!0)},async getBridgeSession(){return ConnectSessionModel.bridgeSessions.where({origin:location.origin}).first()}},ConnectSessionService={async resetDappConnection(e,a){const t=await WalletService.getWalletConfig(),c={approved:!1,chainId:t.chainId??null,chainType:t.chainType??null,accounts:null,rpcUrl:"",selectedWalletId:null,wallets:[]},i={id:Qa(),jsonrpc:"2.0",method:"dc_sessionUpdate",params:[c]};if(e.responses.push({from:e.req.sess.origin,to:a,payload:i}),t.currentWalletModelType==="bridge"){const u=SessionManager.getSessionsByOrigin(KOA_MESSAGE_MOBILE_ORIGIN),l={from:a,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:i},x=u.map(g=>g.sendMsg(l));await Promise.all(x).catch()}const{walletId:o,accountIndex:b}=t;assert$d(o,"walletId is required"),assert$d(b,"accountIndex is required"),await ConnectSessionService.disconnectConnection(o,b,a)},async updateAllDappSession(e){const a=await WalletService.getWalletSession(),{chainType:t,chainId:c,walletId:i,address:o,accountIndex:b}=a;assert$d(c,"chainId cannot be empty"),assert$d(t,"chainType cannot be empty"),assert$d(o,"address cannot be empty"),assert$d(i,"walletId cannot be empty"),assert$d(o,"address cannot be empty"),assert$d(b,"accountIndex cannot be empty");const u=await WalletService.getCurrentDCWallet();assert$d(u,"wallet cannot be empty");const l=await NetworkService.getNetWorkUnsafe(c,t),x={approved:!0,chainId:c,chainType:t,accounts:[o??""],selectedWalletId:i,rpcUrl:"",wallets:[u],network:l},g={id:Qa(),jsonrpc:"2.0",method:"dc_sessionUpdate",params:[x]},v={approved:!1,chainId:c,chainType:t,accounts:[],selectedWalletId:"",rpcUrl:"",wallets:[]},E={id:Qa(),jsonrpc:"2.0",method:"dc_sessionUpdate",params:[v]};await ConnectSessionModel.connectSessions.where({walletId:i,accountIndex:b,role:"dapp"}).modify({chainId:c,chainType:t,accounts:[o??""]});const S=SessionManager.getSessionsByRole("dapp");await Promise.all(S.map(async T=>{await ConnectSessionModel.connectSessions.where({origin:T.origin,walletId:i,accountIndex:b}).first()?e.responses.push({from:e.req.sess.origin,to:T.origin,payload:g}):e.responses.push({from:e.req.sess.origin,to:T.origin,payload:E})}))},async disconnectConnection(e,a,t){await ConnectSessionModel.connectSessions.where({origin:t,walletId:e,accountIndex:a}).delete(),await ConnectSessionModel.bridgeSessions.where({origin:t}).delete(),await ConnectSessionService.updateSubscription()},async resetAllConnection(e){const t=(await ConnectSessionModel.connectSessions.where({role:"dapp"}).toArray()).map(c=>this.resetDappConnection(e,c.origin));await Promise.all(t).catch()},async notifyMobileConnectDappSuccess(e,a){const t=await BridgeWalletService.generateBridgeSession(a.origin,a.clientMeta),[c]=SessionManager.getSessionsByOrigin(KOA_MESSAGE_MOBILE_ORIGIN);await c.sendRaw({type:"sub",topic:t.clientId,payload:"",silent:!0}),await ConnectSessionModel.bridgeSessions.put(t);const i=await this.generateApprovedMessage(t,a);e.responses.push(i)},async generateApprovedMessage(e,a){const t={id:Qa(),jsonrpc:"2.0",method:"dapp_approved",params:[{session:{topic:e.clientId,version:"2.0",bridge:"https://wallet-connect.crypto.com/api/v2/ncwconnect/relay/ws",key:e.key},dappInfo:a.clientMeta,walletClientID:e.peerId,approvedInfo:{walletId:a.walletId,accounts:a.accounts,chainId:a.chainId}},{break_topic:e.peerId}]};return{from:location.origin,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:t}},async generateApprovedMessageByOrigin(e){const a=await ConnectSessionModel.bridgeSessions.where("origin").equals(e).first(),t=await ConnectSessionModel.connectSessions.where("origin").equals(e).first();if(a&&t)return ConnectSessionService.generateApprovedMessage(a,t)},async approveDappConnectRequest(e){const{originReq:a}=e.rpcReq?.params[0]??{};assert$d(isKoaReqMessage(a),"originReq is not a KoaReqMessage");const{peerMeta:t}=a.payload.params[0],c=await WalletService.getWalletSession(),{chainId:i,chainType:o,address:b,walletId:u,accountIndex:l}=c;assert$d(i,"chainId is undefined"),assert$d(o,"chainType is undefined"),assert$d(b,"address is undefined"),assert$d(u,"walletId is undefined"),assert$d(l,"accountIndex is undefined");const x=await WalletService.getCurrentDCWallet();assert$d(x,"dcWallet is undefined"),SegmentService.track({event:"extension_dapp_connect_approved",properties:{name:t?.name,url:a.from,chainId:i,chainType:o}}),SegmentService.track({event:"[Ext] Dapp Successfully Connected",properties:{name:t?.name,url:a.from,chainId:i,chainType:o,"Manually Approved":!0,"EIP-6963":a.payload.params[0].eip6963}});const g=await NetworkService.getNetWorkUnsafe(i,o),E={origin:a.from,chainId:i,chainType:o,accounts:[b],clientMeta:t,walletId:u,accountIndex:l,role:"dapp"},S={approved:!0,chainId:i,chainType:o,accounts:[b],selectedWalletId:u,rpcUrl:g?.rpcUrl??"",wallets:[x],network:g};await ConnectSessionModel.connectSessions.put(E),await PopupRequestService$1.removeRequestById(a.payload.id),e.responses.push(koaResponseForRequest({reqMsg:a,result:S})),c.currentWalletModelType==="bridge"&&await this.notifyMobileConnectDappSuccess(e,E)},async getApprovedBridgeSessionInfo(e){const a=await WalletService.getCurrentDCWallet(),{walletId:t,accountIndex:c}=await WalletService.getWalletConfig(),i=await ConnectSessionModel.connectSessions.where({origin:e??"",walletId:t??"",accountIndex:c??""}).first();if(i&&a){const o=await NetworkService.getNetWorkUnsafe(i.chainId,i.chainType);return{...i,approved:!0,chainId:i.chainId,chainType:i.chainType,accounts:i.accounts,selectedWalletId:i.walletId,rpcUrl:i.rpcUrl,wallets:[a],network:o}}},async getDappInfo(e){return ConnectSessionModel.connectSessions.where({origin:e}).first()},async getDappClientMeta(e){const a=await this.getDappInfo(e);if(a)return a.clientMeta;const t=SessionManager.getSessionsByOrigin(e)[0];if(t)return t.sendRequest({method:"dc_requestDappClientMeta",params:[]})},async getApprovedDappInfo(e){const{walletId:a,accountIndex:t}=await WalletService.getWalletConfig();return ConnectSessionModel.connectSessions.where({origin:e,walletId:a,accountIndex:t}).first()},async getDappSessionList(e,a){return ConnectSessionModel.connectSessions.where({walletId:e,accountIndex:a}).toArray()},async updateSubscription(){await SubscriptionManager.pushSubscriptionUpdate({path:"popup.connectDappSession"})}};class BridgeConnectManagerCore extends SafeEventEmitter{socketTransport;constructor(){super(),WalletModel.walletConfig.hook("updating",a=>{const t=a;t.currentWalletModelType&&t.currentWalletModelType!=="bridge"&&this.stop()})}id=Xa();async stop(){this.socketTransport?.close(),this.socketTransport=void 0}async start(){if(this.socketTransport)return;const a=await DeviceService.getDeviceUUID();this.socketTransport=new WebSocketClient(a),this.socketTransport.on("message",i=>this.handleJSONRequestEvent(i)),this.socketTransport.open();const t=await ConnectSessionModel.bridgeSessions.where({origin:location.origin}).first();t&&this.socketTransport.subscribe(t.clientId);const c=await ConnectSessionModel.bridgeSessions.filter(i=>roleOfOriginUrl(i.origin)==="dapp").toArray();for(const i of c)this.socketTransport.subscribe(i.clientId)}async send(a){await this.start();const t=await ConnectSessionModel.bridgeSessions.where("origin").anyOf([a.from,a.to]).first(),c=await ConnectSessionModel.bridgeSessions.where("origin").equals(location.origin).first();if(!t)return;const i=await ConnectSessionService.getApprovedBridgeSessionInfo(t.origin),o=za(t.key),b={...a.payload};io(b)&&i&&(b.session={chainId:i.chainId??"",chainType:i.chainType??"",account:i.accounts?.[0]??""});const u=await encrypt$2(b,o),x=(io(a.payload)?a.payload:void 0)?.method??"",g=!allSigningMethods.includes(x),v=roleOfOriginUrl(t.origin)==="dapp"?"dapp":"extension",E={type:"pub",payload:JSON.stringify(u),rpc_id:a.payload.id,rpc_method:x,silent:g,name:t.clientMeta?.name,from:v,topic:t.peerId,push_topic:c?.peerId};if(io(b)){const S=b.params[1];S?.break_topic&&(E.break_topic=S.break_topic)}this.socketTransport?.send(E),g||SegmentService.track({event:"extension_send_transaction_to_mobile",properties:{topic:t.peerId,walletAddress:i?.accounts?.[0],method:x,mobile_device_id:c?.mobileDeviceId}})}async sendRaw(a){await this.start(),this.socketTransport?.send(a)}async handleJSONRequestEvent(a){if(!isWSMessage(a))return;const t=await decodeJSONRequest(a);if(!t)return;const c=await getBridgeSession(a.topic);if(!c)return;const i={from:KOA_MESSAGE_MOBILE_ORIGIN,to:c.origin,payload:t};this.emit("message",i),io(t)?this.emit(t.method,{message:i,payload:t}):(uo(t)||ao(t))&&this.emit(`response-${t.id}`,{message:i,payload:t,topic:a.topic,mobileDeviceId:a.client_uuid})}}const BridgeConnectManager=new BridgeConnectManagerCore;class KeyringModelDB extends $n{keyrings;privateKeys;hardwares;genericData;constructor(){super("keyring-model"),this.version(1).stores({keyrings:"++id"}),this.version(2).stores({keyrings:"++id",privateKeys:"++id, type"}),this.version(3).stores({keyrings:"++id",privateKeys:"++id, type",hardwares:"++id, type"}),this.version(4).stores({keyrings:"++id",privateKeys:"++id, type",hardwares:"++id, type",genericData:"++id, key, type"})}}class KeyringModel{static db=new KeyringModelDB;static get keyrings(){return KeyringModel.db.keyrings}static get privateKeys(){return KeyringModel.db.privateKeys}static get hardwares(){return KeyringModel.db.hardwares}static get genericData(){return KeyringModel.db.genericData}static async reset(){await $n.delete("keyring-model"),KeyringModel.db=new KeyringModelDB}}var dist={};Object.defineProperty(dist,"__esModule",{value:!0});dist.generateSalt=dist.serializeBufferForStorage=dist.serializeBufferFromStorage=dist.keyFromPassword=dist.exportKey=dist.importKey=dist.decryptWithKey=dist.decryptWithDetail=decrypt_1=dist.decrypt=dist.encryptWithKey=dist.encryptWithDetail=encrypt_1=dist.encrypt=void 0;const EXPORT_FORMAT="jwk",DERIVED_KEY_FORMAT="AES-GCM",STRING_ENCODING="utf-8";async function encrypt$1(e,a,t,c=generateSalt()){const i=t||await keyFromPassword(e,c),o=await encryptWithKey(i,a);return o.salt=c,JSON.stringify(o)}var encrypt_1=dist.encrypt=encrypt$1;async function encryptWithDetail(e,a,t=generateSalt()){const c=await keyFromPassword(e,t,!0),i=await exportKey(c);return{vault:await encrypt$1(e,a,c,t),exportedKeyString:i}}dist.encryptWithDetail=encryptWithDetail;async function encryptWithKey(e,a){const t=JSON.stringify(a),c=buffer$2.Buffer.from(t,STRING_ENCODING),i=commonjsGlobal.crypto.getRandomValues(new Uint8Array(16)),o=await commonjsGlobal.crypto.subtle.encrypt({name:DERIVED_KEY_FORMAT,iv:i},e,c),b=new Uint8Array(o),u=buffer$2.Buffer.from(i).toString("base64");return{data:buffer$2.Buffer.from(b).toString("base64"),iv:u}}dist.encryptWithKey=encryptWithKey;async function decrypt$1(e,a,t){const c=JSON.parse(a),{salt:i}=c,o=t||await keyFromPassword(e,i);return await decryptWithKey(o,c)}var decrypt_1=dist.decrypt=decrypt$1;async function decryptWithDetail(e,a){const t=JSON.parse(a),{salt:c}=t,i=await keyFromPassword(e,c,!0),o=await exportKey(i),b=await decrypt$1(e,a,i);return{exportedKeyString:o,vault:b,salt:c}}dist.decryptWithDetail=decryptWithDetail;async function decryptWithKey(e,a){const t=buffer$2.Buffer.from(a.data,"base64"),c=buffer$2.Buffer.from(a.iv,"base64");let i;try{const o=await crypto.subtle.decrypt({name:DERIVED_KEY_FORMAT,iv:c},e,t),b=new Uint8Array(o),u=buffer$2.Buffer.from(b).toString(STRING_ENCODING);i=JSON.parse(u)}catch{throw new Error("Incorrect password")}return i}dist.decryptWithKey=decryptWithKey;async function importKey(e){return await window.crypto.subtle.importKey(EXPORT_FORMAT,JSON.parse(e),DERIVED_KEY_FORMAT,!0,["encrypt","decrypt"])}dist.importKey=importKey;async function exportKey(e){const a=await window.crypto.subtle.exportKey(EXPORT_FORMAT,e);return JSON.stringify(a)}dist.exportKey=exportKey;async function keyFromPassword(e,a,t=!1){const c=buffer$2.Buffer.from(e,STRING_ENCODING),i=buffer$2.Buffer.from(a,"base64"),o=await commonjsGlobal.crypto.subtle.importKey("raw",c,{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return await commonjsGlobal.crypto.subtle.deriveKey({name:"PBKDF2",salt:i,iterations:1e4,hash:"SHA-256"},o,{name:DERIVED_KEY_FORMAT,length:256},t,["encrypt","decrypt"])}dist.keyFromPassword=keyFromPassword;function serializeBufferFromStorage(e){const a=e.slice(0,2)==="0x"?e.slice(2):e,t=new Uint8Array(a.length/2);for(let c=0;c<a.length;c+=2){const i=a.substr(c,2);t[c/2]=parseInt(i,16)}return t}dist.serializeBufferFromStorage=serializeBufferFromStorage;function serializeBufferForStorage(e){let a="0x";return e.forEach(t=>{a+=unprefixedHex(t)}),a}dist.serializeBufferForStorage=serializeBufferForStorage;function unprefixedHex(e){let a=e.toString(16);for(;a.length<2;)a=`0${a}`;return a}function generateSalt(e=32){const a=new Uint8Array(e);return commonjsGlobal.crypto.getRandomValues(a),btoa(String.fromCharCode.apply(null,a))}dist.generateSalt=generateSalt;async function encrypt(e,a){return encrypt_1(e,a)}async function decrypt(e,a){return await decrypt_1(e,a)}function convertCurrentStandaloneWalletToDC(e){return{id:e.walletId,name:e.name??"",icon:e.icon??"",addresses:e?.addresses}}const KeyringService={async createMnemonic(e,a){const t=await encrypt(e,a),c=buffer$2.Buffer.from(t);return KeyringModel.keyrings.add({buffer:c})},async getMnemonic(e,a=1){const t=await KeyringModel.keyrings.get({id:a});assert$d(t,`Not found this keyring by id: ${a}`);const c=new TextDecoder().decode(t.buffer);return decrypt(e,c)},async queryKeyringForMnemonic(e){const a=await KeyringModel.keyrings.toArray();return(await Promise.all(a.map(async i=>{const o=await KeyringService.getMnemonic(e.password,i.id);return{keyring:i,mnemonic:o}}))).find(i=>i.mnemonic===e.mnemonic)?.keyring},async deleteMnemonic(e=1){return KeyringModel.keyrings.delete(e)},async removeEmptyKeyring(){const e=await KeyringModel.keyrings.toArray();await Promise.all(e.map(async a=>{await WalletModel.wallets.where({walletType:"mnemonic",keyringId:a.id??""}).count()===0&&await this.deleteMnemonic(a.id)}))},async removeEmptyPrivateKey(){const e=await KeyringModel.privateKeys.toArray();await Promise.all(e.map(async a=>{await WalletModel.wallets.where({walletType:"privateKey",keyringId:a.id??""}).count()===0&&await this.deletePrivateKey(a.id)}))},async createPrivateKey(e){const{password:a,privateKey:t,type:c}=e,i=await encrypt(a,t),o=buffer$2.Buffer.from(i);return KeyringModel.privateKeys.add({buffer:o,type:c})},async createHardware(e){const{password:a,address:t,type:c,addressType:i,hdPathName:o,productId:b,productName:u,vendorId:l,hdPath:x,accountIndex:g,scrambleKey:v}=e,E=await encrypt(a,t),S=buffer$2.Buffer.from(E);return KeyringModel.hardwares.add({buffer:S,type:c,addressType:i,hdPathName:o,productId:b,productName:u,vendorId:l,hdPath:x,accountIndex:(g??0).toString(),scrambleKey:v})},async getPrivateKey(e,a=1){const t=await KeyringModel.privateKeys.get({id:a});assert$d(t,`Not found this Private Key by id: ${a}`);const c=new TextDecoder().decode(t.buffer);return decrypt(e,c)},async deletePrivateKey(e=1){return KeyringModel.privateKeys.delete(e)},async getConfigOfHardware({password:e,id:a=1}){const t=await KeyringModel.hardwares.get({id:a});assert$d(t,`Not found this hardware config by id: ${a}`);const c={...t,address:""};if(e){const i=new TextDecoder().decode(t.buffer),o=await decrypt(e,i);c.address=o}return c},async createGenericData(e){const{password:a,data:t,...c}=e,i=await encrypt(a,t),o=new Uint8Array(buffer$2.Buffer.from(i));return await KeyringModel.genericData.add({...c,value:o})},async updateGenericData(e){const{password:a,data:t,id:c,...i}=e,o=await encrypt(a,t),b=new Uint8Array(buffer$2.Buffer.from(o));return await KeyringModel.genericData.update(c,{...i,value:b})},async deleteGenericData(e){return KeyringModel.genericData.delete(e)},async getGenericDataById(e){const{password:a,id:t}=e,c=await KeyringModel.genericData.get({id:t});assert$d(c,`GenericData not found for id: ${t}`);const i=new TextDecoder().decode(new Uint8Array(c.value));return await decrypt(a,i)},async getGenericDataByKey(e){const{password:a,key:t}=e,i=(await KeyringModel.genericData.where({key:t}).toArray()).map(o=>{const b=new TextDecoder().decode(o.value);return decrypt(a,b)});return Promise.all(i)},async getGenericDataByType(e){const{password:a,type:t}=e,i=(await KeyringModel.genericData.where({type:t}).toArray()).map(o=>{const b=new TextDecoder().decode(o.value);return decrypt(a,b)});return Promise.all(i)}};var src={},_wordlists={};const require$$0=["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"],require$$1=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"],require$$2=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"],require$$3=["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"],require$$4=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"],require$$5=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"],require$$6=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"],require$$7=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"],require$$8=["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"],require$$9=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];Object.defineProperty(_wordlists,"__esModule",{value:!0});const wordlists$1={};_wordlists.wordlists=wordlists$1;let _default;var _default_1=_wordlists._default=_default;try{_default_1=_wordlists._default=_default=require$$0,wordlists$1.czech=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$1,wordlists$1.chinese_simplified=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$2,wordlists$1.chinese_traditional=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$3,wordlists$1.korean=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$4,wordlists$1.french=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$5,wordlists$1.italian=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$6,wordlists$1.spanish=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$7,wordlists$1.japanese=_default,wordlists$1.JA=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$8,wordlists$1.portuguese=_default}catch(e){}try{_default_1=_wordlists._default=_default=require$$9,wordlists$1.english=_default,wordlists$1.EN=_default}catch(e){}Object.defineProperty(src,"__esModule",{value:!0});const sha256_1=sha256$6,sha512_1=sha512$4,pbkdf2_1=pbkdf2$7,utils_1=utils$p,_wordlists_1=_wordlists;let DEFAULT_WORDLIST=_wordlists_1._default;const INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum",WORDLIST_REQUIRED=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function normalize(e){return(e||"").normalize("NFKD")}function lpad(e,a,t){for(;e.length<t;)e=a+e;return e}function binaryToByte(e){return parseInt(e,2)}function bytesToBinary(e){return e.map(a=>lpad(a.toString(2),"0",8)).join("")}function deriveChecksumBits(e){const t=e.length*8/32,c=sha256_1.sha256(Uint8Array.from(e));return bytesToBinary(Array.from(c)).slice(0,t)}function salt(e){return"mnemonic"+(e||"")}function mnemonicToSeedSync(e,a){const t=Uint8Array.from(buffer$2.Buffer.from(normalize(e),"utf8")),c=Uint8Array.from(buffer$2.Buffer.from(salt(normalize(a)),"utf8")),i=pbkdf2_1.pbkdf2(sha512_1.sha512,t,c,{c:2048,dkLen:64});return buffer$2.Buffer.from(i)}src.mnemonicToSeedSync=mnemonicToSeedSync;function mnemonicToSeed(e,a){const t=Uint8Array.from(buffer$2.Buffer.from(normalize(e),"utf8")),c=Uint8Array.from(buffer$2.Buffer.from(salt(normalize(a)),"utf8"));return pbkdf2_1.pbkdf2Async(sha512_1.sha512,t,c,{c:2048,dkLen:64}).then(i=>buffer$2.Buffer.from(i))}src.mnemonicToSeed=mnemonicToSeed;function mnemonicToEntropy(e,a){if(a=a||DEFAULT_WORDLIST,!a)throw new Error(WORDLIST_REQUIRED);const t=normalize(e).split(" ");if(t.length%3!==0)throw new Error(INVALID_MNEMONIC);const c=t.map(g=>{const v=a.indexOf(g);if(v===-1)throw new Error(INVALID_MNEMONIC);return lpad(v.toString(2),"0",11)}).join(""),i=Math.floor(c.length/33)*32,o=c.slice(0,i),b=c.slice(i),u=o.match(/(.{1,8})/g).map(binaryToByte);if(u.length<16)throw new Error(INVALID_ENTROPY);if(u.length>32)throw new Error(INVALID_ENTROPY);if(u.length%4!==0)throw new Error(INVALID_ENTROPY);const l=buffer$2.Buffer.from(u);if(deriveChecksumBits(l)!==b)throw new Error(INVALID_CHECKSUM);return l.toString("hex")}src.mnemonicToEntropy=mnemonicToEntropy;function entropyToMnemonic(e,a){if(buffer$2.Buffer.isBuffer(e)||(e=buffer$2.Buffer.from(e,"hex")),a=a||DEFAULT_WORDLIST,!a)throw new Error(WORDLIST_REQUIRED);if(e.length<16)throw new TypeError(INVALID_ENTROPY);if(e.length>32)throw new TypeError(INVALID_ENTROPY);if(e.length%4!==0)throw new TypeError(INVALID_ENTROPY);const t=bytesToBinary(Array.from(e)),c=deriveChecksumBits(e),b=(t+c).match(/(.{1,11})/g).map(u=>{const l=binaryToByte(u);return a[l]});return a[0]==="あいこくしん"?b.join("　"):b.join(" ")}src.entropyToMnemonic=entropyToMnemonic;function generateMnemonic(e,a,t){if(e=e||128,e%32!==0)throw new TypeError(INVALID_ENTROPY);return a=a||(c=>buffer$2.Buffer.from(utils_1.randomBytes(c))),entropyToMnemonic(a(e/8),t)}var generateMnemonic_1=src.generateMnemonic=generateMnemonic;function validateMnemonic(e,a){try{mnemonicToEntropy(e,a)}catch{return!1}return!0}var validateMnemonic_1=src.validateMnemonic=validateMnemonic;function setDefaultWordlist(e){const a=_wordlists_1.wordlists[e];if(a)DEFAULT_WORDLIST=a;else throw new Error('Could not find wordlist for language "'+e+'"')}src.setDefaultWordlist=setDefaultWordlist;function getDefaultWordlist(){if(!DEFAULT_WORDLIST)throw new Error("No Default Wordlist set");return Object.keys(_wordlists_1.wordlists).filter(e=>e==="JA"||e==="EN"?!1:_wordlists_1.wordlists[e].every((a,t)=>a===DEFAULT_WORDLIST[t]))[0]}src.getDefaultWordlist=getDefaultWordlist;var _wordlists_2=_wordlists,wordlists=src.wordlists=_wordlists_2.wordlists;const MnemonicService={async verifyMnemonicWords(e){return validateMnemonic_1(e)},async createMnemonicWords(e=12){const a=e/3*32;return generateMnemonic_1(a)},async generateAddresses(e){const{mnemonic:a,accountIndex:t,networkTypeIncludes:c}=e;let i=DefiCoreService.supportedECOSystemNetworkList();c?.length&&(i=i.filter(b=>c.includes(b.addressType)));const o={};await DefiCoreService.setPhrase(a);for(const b of i){const{addressType:u,isTestnet:l}=b,x=await DefiCoreService.getAccountsFromMnemonic({accountIndex:t,addressType:u,isTestnet:l});x&&(o[u]={address:x.address,algo:"secp256k1",pubkey:x.pubkey})}return o},async getMnemonicWordlist(){const e=DefiCoreService.getLanguage();return wordlists[e]||[]}},GLOBAL_USER_PASSWORD_KEY_IN_SESSION="passwordInSession",session=chrome&&chrome.storage.session,PasswordService={async getPasswordData(){if(session){const{[GLOBAL_USER_PASSWORD_KEY_IN_SESSION]:e}=await session.get(GLOBAL_USER_PASSWORD_KEY_IN_SESSION);return e}},async setPasswordData(e,a){session&&session.set({[GLOBAL_USER_PASSWORD_KEY_IN_SESSION]:{password:e,timestamp:a}})},async resetPasswordData(){session&&session.remove(GLOBAL_USER_PASSWORD_KEY_IN_SESSION)},async checkWalletIsNeedPassword(){const e=await PasswordService.getPasswordData(),{password:a,timestamp:t}=e??{},c=1e3*60*120;return!a||Date.now()-t>=c},async getSecretKeyOfStoragePassword(e){const a=await DeviceService.getDeviceUUID();return cryptoJsExports.SHA256(`${a}::${e}`).toString()},async getPasswordOfSession(){const e=await PasswordService.getPasswordData(),{password:a,timestamp:t}=e??{};if(a&&t){const c=await PasswordService.getSecretKeyOfStoragePassword(t);return await decrypt(c,a)}else throw new Error("no password in session")}},WalletService={async initialWalletSession(){const e=await WalletService.getWalletConfig(),a=await WalletService.checkWalletIsNeedToLock();e.currentWalletModelType==="bridge"&&await BridgeConnectManager.start(),a&&(e.isLock=!0,WalletService.saveWalletConfig(e)),await WalletService.updateSubscription()},async setCurrentWalletModelType(e){return WalletService.updateWalletConfig({currentWalletModelType:e})},async updateWalletConfigLockState(e){await WalletService.updateWalletConfig({isLock:e}),await WalletService.updateSubscription()},async queryMnemonicWalletExist(e){const a=await KeyringService.queryKeyringForMnemonic({password:e.password,mnemonic:e.mnemonic});if(!a?.id)return{keyringId:void 0,walletId:void 0};const t=await WalletService.getWalletByAccountIndexAndKeyringId(e.accountIndex,a.id);return t?{keyringId:a.id,walletId:t.walletId}:{keyringId:a.id,walletId:void 0}},generateKeyringIdByMnemonic(e){return KeyringService.createMnemonic(e.password,e.mnemonic)},async importWalletByMnemonic(e){const a=await MnemonicService.generateAddresses({mnemonic:e.mnemonic,accountIndex:e.accountIndex}),t=Xa(),c={walletId:t,name:e.name??"Wallet "+e.keyringId,icon:"",keyringId:e.keyringId,walletType:"mnemonic",accountIndex:(e.accountIndex??0).toString(),addresses:a,createTime:new Date().getTime()},o={...await WalletService.getWalletConfig(),primaryKey:"WalletConfigs",isLock:!1,currentWalletModelType:"standalone",walletId:t,accountIndex:(e.accountIndex??0).toString(),chainId:"25",chainType:"eth"};await WalletService.saveWalletAndWalletAccounts(c),await WalletService.saveWalletConfig(o),await WalletService.unlockCurrentWalletByPassword(e.password)},async saveWalletAndWalletAccounts(e){await WalletModel.wallets.put(e)},async getWalletConfig(){const e=await WalletModel.walletConfig.where("primaryKey").equals("WalletConfigs").first()??{primaryKey:"WalletConfigs",isLock:!1,currentWalletModelType:"initialize",chainId:"25",chainType:"eth",walletBtcAddressType:{}};return e.walletBtcAddressType==null&&(e.walletBtcAddressType={}),e},async getWalletSession(){const e=await WalletService.getWalletConfig(),a=(await WalletModel.wallets.toArray()).sort((i,o)=>i.createTime-o.createTime),t=a.find(i=>i.walletId===e.walletId)??a[0],c={...e,isLock:e.isLock,lastTime:e.lastTime,currentWalletModelType:e.currentWalletModelType,wallets:a,wallet:t,walletType:t?.walletType};if(t?.walletId&&(c.btcAddressTypeInfo=e.walletBtcAddressType[t.walletId??""]),a.length){let{chainType:i,chainId:o}=e,b=await NetworkService.getNetWork(o?.toString(),i);b||(o="25",i="eth",b=await NetworkService.getNetWork(o?.toString(),i),c.chainId=o,c.chainType=i,await WalletService.updateWalletConfig({chainId:o,chainType:i}));const u=t?.addresses[b?.addressType??""];c.address=u?.address}return c},async saveWalletConfig(e){await WalletModel.walletConfig.put(e),await WalletService.unlockCurrentWalletByPasswordOfSession(),await WalletService.updateSubscription(),BalanceService.refreshBalanceIfNeed()},async updateWalletConfigLastTime(e){return WalletService.updateWalletConfig({lastTime:e})},async updateSubscription(){await SubscriptionManager.pushSubscriptionUpdate({path:"popup.walletSession"}),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"})},async generateAddressesByPrivateKey(e,a){const t={},c=await WalletService.verifyPrivateKeyAndGenerateAccount({privateKey:e,addressType:a});if(c)return t[a]={address:c.address,pubkey:c.publicKey,algo:c.algo},t},async getMnemonicWords(e){return KeyringService.getMnemonic(e.password,e.keyringId)},async getPrivateKey(e){return KeyringService.getPrivateKey(e.password,e.keyringId)},async getCurrentWallet(){const e=await WalletService.getWalletConfig();return WalletService.getWalletById(e?.walletId??"")},async getCurrentDCWallet(){const e=await WalletModel.walletConfig.get({primaryKey:"WalletConfigs"});if(!e)return;const a=await WalletService.getWalletById(e.walletId??"");if(a)return convertCurrentStandaloneWalletToDC(a)},async clearCurrentWalletData(){const a=(await WalletService.getWalletConfig()).walletId;assert$d(a,"walletId can not be null"),await WalletModel.wallets.where({walletId:a}).delete()},async resetWalletModel(e){await WalletService.resetWallet(e),await WalletService.updateSubscription()},async checkWalletIsNeedToLock(){const e=await WalletService.getWalletConfig(),a=e.lastTime??0,t=1e3*60*120;return e.currentWalletModelType==="standalone"&&Date.now()-a>=t},async resetWalletLockTime(){const e=await WalletService.getWalletConfig();e.isLock||Date.now()-(e.lastTime??0)<1e3||await WalletService.updateWalletConfigLastTime(Date.now())},async deleteAllWallet(){await WalletModel.wallets.clear(),await WalletModel.walletConfig.clear(),await KeyringModel.reset(),await ConnectSessionModel.bridgeSessions.clear(),await ConnectSessionModel.connectSessions.clear(),await TokenBalanceModel.tokenBalances.clear(),await TransactionModel.transactions.clear(),await NetworkModel.networkItems.where("isCustom").equals(1).delete(),await NetworkModel.popularNetworkItems.clear(),await WalletService.resetWalletModel("initialize")},async updateWalletConfig(e){return WalletModel.walletConfig.where({primaryKey:"WalletConfigs"}).modify(e)},async getWalletById(e){return WalletModel.wallets.get(e)},queryWalletByName(e){return WalletModel.wallets.where({name:e}).first()},async modifyWalletById(e,a){return await WalletModel.wallets.where({walletId:e}).modify(a),await WalletService.updateSubscription(),!0},async removeWalletById(e){return await WalletModel.wallets.where({walletId:e}).delete(),await KeyringService.removeEmptyKeyring(),await KeyringService.removeEmptyPrivateKey(),await WalletService.updateSubscription(),!0},queryWalletByKeyringId(e){return WalletModel.wallets.where({keyringId:e}).first()},async querySameKeyringWalletMaxAccountIndex(e){const[a]=await WalletModel.wallets.where({keyringId:e}).reverse().sortBy("accountIndex");return a?.accountIndex??"-1"},async resetWallet(e="initialize"){await WalletModel.wallets.clear();const a={primaryKey:"WalletConfigs",isLock:!1,lastTime:Date.now(),currentWalletModelType:e,walletBtcAddressType:{}};await WalletModel.walletConfig.bulkPut([a])},clearWallets(){return WalletModel.wallets.clear()},async getWalletByAccountIndexAndKeyringId(e,a){return WalletModel.wallets.where({accountIndex:e,keyringId:a??""}).first()},async upgradeWalletAddressesInfo(e,a){const t=await WalletModel.wallets.where({walletType:a??"mnemonic"}).toArray(),c=DefiCoreService.supportedECOSystemNetworkList().map(b=>b.addressType),i=pLimit(1),o=t.map(b=>i(async()=>{const u=c.filter(l=>!b.addresses[l]);if(u.length){const l=await WalletService.getMnemonicWords({password:e,keyringId:b.keyringId});if(l){const x=await MnemonicService.generateAddresses({mnemonic:l,accountIndex:b.accountIndex,networkTypeIncludes:u});b.addresses=Object.assign({},b.addresses,x),await this.saveWalletAndWalletAccounts(b)}}}));await Promise.all(o)},async unlockCurrentWalletByPassword(e){const a=await WalletService.getWalletConfig(),t=await WalletService.getWalletById(a.walletId??"");let c=!0;return t?.walletType==="mnemonic"?c=await WalletService.unlockMnemonicWallet(e,t):t?.walletType==="privateKey"?c=await WalletService.unlockPrivateKeyWallet(e,t):t?.walletType==="hardware"&&(c=await WalletService.unlockHardwareWallet(e,t)),WalletService.updateWalletConfigLockState(c)},async unlockMnemonicWallet(e,a){const t=await WalletService.getMnemonicWords({password:e,keyringId:a?.keyringId});if(t){const c=Date.now(),i=await PasswordService.getSecretKeyOfStoragePassword(c),o=await encrypt(i,e);await PasswordService.setPasswordData(o,c),await WalletService.upgradeWalletAddressesInfo(e),await DefiCoreService.setPhrase(t)}return!t},async unlockPrivateKeyWallet(e,a){const t=await KeyringService.getPrivateKey(e,a?.keyringId??0);if(t){const c=Date.now(),i=await PasswordService.getSecretKeyOfStoragePassword(c),o=await encrypt(i,e);await PasswordService.setPasswordData(o,c),await DefiCoreService.setPrivateKey(t)}return!t},async unlockHardwareWallet(e,a){const{address:t,addressType:c}=await KeyringService.getConfigOfHardware({password:e,id:a?.keyringId??0}),i=t===a?.addresses[c].address;if(i){const o=Date.now(),b=await PasswordService.getSecretKeyOfStoragePassword(o),u=await encrypt(b,e);await PasswordService.setPasswordData(u,o)}return!i},async unlockCurrentWalletByPasswordOfSession(){const e=await PasswordService.getPasswordData(),{password:a,timestamp:t}=e??{};if(a&&t){const c=await PasswordService.getSecretKeyOfStoragePassword(t),i=await decrypt(c,a);return WalletService.unlockCurrentWalletByPassword(i)}else return DefiCoreService.reset()},async queryPrivateKeyExist(e){const{password:a,privateKey:t,type:c}=e,i=await KeyringModel.privateKeys.where({type:c??""}).toArray();return(await Promise.all(i.map(b=>KeyringService.getPrivateKey(a,b.id)))).includes(t)},async importWalletByPrivateKey(e){const{addressType:a,privateKey:t,name:c,keyringId:i,accountIndex:o}=e,b=await WalletService.generateAddressesByPrivateKey(t,a);assert$d(b,"import private key failed");const u=Xa(),l={walletId:u,name:c??"Wallet "+i,icon:"",keyringId:i,walletType:"privateKey",accountIndex:(o??0).toString(),addresses:b,createTime:new Date().getTime()},{chainId:x,chainType:g}=NetworkService.getDefaultNetworkForImportPrivateKey(a),E={...await WalletService.getWalletConfig(),primaryKey:"WalletConfigs",isLock:!1,currentWalletModelType:"standalone",walletId:u,accountIndex:(e.accountIndex??0).toString(),chainId:x,chainType:g};await WalletService.saveWalletAndWalletAccounts(l),await WalletService.saveWalletConfig(E),await WalletService.unlockCurrentWalletByPassword(e.password)},async verifyPrivateKeyAndGenerateAccount(e){const{privateKey:a,addressType:t}=e;if(t==="eth")return await EthereumService.verifyPrivateKey(a);if(t==="cosmos")return await CosmosService.verifyPrivateKey(a,t);if(t==="cro")return await CosmosService.verifyPrivateKey(a,t);if(t==="aptos")return await AptosService.verifyPrivateKey(a)},async queryWalletByAddress(e){return(await WalletModel.wallets.toArray()).find(({addresses:c})=>c[e.addressType]?.address===e.address)},async importWalletByHardware(e){const{addressType:a,name:t,account:c,keyringId:i,accountIndex:o}=e,b={[a]:c},u=Xa(),l={walletId:u,name:t??"Wallet "+i,icon:"",keyringId:i,walletType:"hardware",accountIndex:(o??0).toString(),addresses:b,createTime:new Date().getTime()},{chainId:x,chainType:g}=NetworkService.getDefaultNetworkForImportPrivateKey(a),E={...await WalletService.getWalletConfig(),primaryKey:"WalletConfigs",isLock:!1,currentWalletModelType:"standalone",walletId:u,accountIndex:(e.accountIndex??0).toString(),chainId:x,chainType:g};return await WalletService.saveWalletAndWalletAccounts(l),await WalletService.saveWalletConfig(E),await DefiCoreService.reset(),await WalletService.unlockCurrentWalletByPassword(e.password),{walletId:u,accountIndex:(o??0).toString()}},async generateWalletName(){let e=(await WalletModel.wallets.toArray()).length,a,t,c=0;do if(e+=1,a=`Wallet ${e}`,t=await WalletService.queryWalletByName(a),c+=1,c>5e3)throw new Error("generate wallet name failed");while(t);return a},async getWalletCounts(){const{wallets:e}=await this.getWalletSession();return{recoveryPhraseCount:e.filter(a=>a.walletType=="mnemonic").length,privateKeyCount:e.filter(a=>a.walletType=="privateKey").length,ledgerCount:e.filter(a=>a.walletType=="hardware").length}}},NetworkService={async cacheNetworkRequest(){const e=await WalletService.getWalletConfig(),{timestamp:a=0}=await NetworkModel.networkVersion.toCollection().first()||{};if(!await NetworkModel.networkItems.count())return NetworkService.fetchNetworkListAndSaveToDatabase(e);const c=30*60*1e3;new Date().getTime()-a>c&&NetworkService.fetchNetworkListAndSaveToDatabase(e);const o=await NetworkModel.networkGroups.toArray();for(const b of o)if(e.currentWalletModelType==="standalone"){const{groupId:u}=b,l=await NetworkModel.networkItems.where({groupId:u,isPopular:0,isCustom:0}).sortBy("position"),x=l.map(S=>`${S.chainType},${S.chainId}`),g=(await NetworkModel.networkItems.where({groupId:u,isCustom:1}).toArray()).filter(S=>!x.includes(`${S.chainType},${S.chainId}`)),v=(await NetworkModel.popularNetworkItems.where({groupId:u,isAdded:1}).toArray()).filter(S=>!x.includes(`${S.chainType},${S.chainId}`)),E=[...g,...v].sort((S,T)=>(S.addedTime??0)-(T.addedTime??0));b.subNetworks=[...l,...E]}else b.subNetworks=await NetworkModel.networkItems.where({groupId:b.groupId,isPopular:0,isCustom:0}).sortBy("position");return o},async fetchNetworkListAndSaveToDatabase(e){const{data:{networks:a}}=await NetworkService.fetchNetworkList();return await NetworkService.saveNetworkDataToDatabase(a),await NetworkService.getNetWorkUnsafe(e.chainId,e.chainType).catch(()=>null)||(await WalletService.updateWalletConfig({chainId:"25",chainType:"eth"}),await WalletService.updateSubscription()),a},async fetchChains(){return request$5("https://chainid.network/chains.json",{useCache:!0})},async fetchNetworkList(){return request$5("/extension/ncw-api/api/v2/public/networks")},async saveNetworkDataToDatabase(e){let a=[];const t=e.map(c=>{const{subNetworks:i=[],...o}=c;return a=[...a,...i],o});a.forEach(c=>{c.isPopular=0,c.isCustom=0}),await NetworkModel.networkGroups.bulkPut(t),await NetworkModel.networkItems.where("isCustom").equals(0).delete(),await NetworkModel.networkItems.bulkPut(a),await NetworkModel.networkVersion.put({id:1,timestamp:new Date().getTime()})},async getAddedNetWork(e,a){const t={chainId:e,chainType:a};let c=await NetworkModel.networkItems.where(t).first();return c||(c=await NetworkModel.popularNetworkItems.where({...t,isAdded:1}).first()),c},async getNetWork(e,a){const t={chainId:e,chainType:a};if(!e||!a){const i=await WalletService.getWalletSession();Object.assign(t,{chainId:i.chainId,chainType:i.chainType})}let c=await NetworkModel.networkItems.where(t).first();return c||(c=await NetworkModel.popularNetworkItems.where(t).first()),c},async getNetWorkUnsafe(e,a){const t=await NetworkService.getNetWork(e,a);return assert$d(t,"network can not be empty"),t},async cacheRequestEvmNetworkConfigs(){const e=await NetworkModel.evmNetworkConfigs.toArray(),a=multiCallContractJson,{updateTime:t=0}=e[0]||{},c=60*60*24*1e3;return new Date().getTime()-t>c&&request$5("/extension/ncw-api/api/chains/attrs").then(o=>{const b=o.data.chainAttrs.map(u=>({...u,updateTime:Date.now()}));NetworkModel.evmNetworkConfigs.clear(),NetworkModel.evmNetworkConfigs.bulkPut(b)}).catch(),[...e,...a]},async getMultiCallContract(e){return(await this.cacheRequestEvmNetworkConfigs()).find(t=>String(t.chainId)===String(e))?.multiContract},async fetchPopularNetworkList(){return request$5("/extension/ncw-api/api/v1/public/networks_popular")},async fetchPopularNetworkListAndSaveToDatabase(){const{data:{networks:e}}=await NetworkService.fetchPopularNetworkList();let a=[];const t=await NetworkModel.popularNetworkItems.where("isAdded").equals(1).toArray(),c=new Map(t.map(i=>[`${i.chainType},${i.chainId}`,i]));return e.forEach(i=>{const{subNetworks:o=[],...b}=i;return a=[...a,...o],b}),a.forEach(i=>{if(i.explorer){const{domain:b,accountPath:u,txnPath:l}=i.explorer;i.explorer=getNetworkExplorer(b,u,l)}i.isAdded=0;const o=c.get(`${i.chainType},${i.chainId}`);o&&(i.isAdded=1,i.addedTime=o.addedTime),i.isPopular=1,i.isCustom=0}),await NetworkModel.popularNetworkItems.clear(),await NetworkModel.popularNetworkItems.bulkPut(a),a},async cachePopularNetworkRequest(){return await NetworkService.fetchPopularNetworkListAndSaveToDatabase(),NetworkModel.popularNetworkItems.toArray()},async getLastCustomNetworkPosition(){return(await NetworkModel.networkItems.where("isCustom").equals(1).reverse().sortBy("position"))[0]?.position??1e3},async getChainCodeBy({chainId:e,chainType:a}){return(await NetworkModel.swapNetworkConfigs.where({chainId:e,chainType:a}).first())?.item.chainCode},async addNetworkFromUserCustom(e){const a=await this.getLastCustomNetworkPosition();return NetworkModel.networkItems.put({...e,position:a+1,id:a+1,isCustom:1,isPopular:0,addedTime:Date.now()})},async addNetworkFromPopularNetwork(e,a){const t=await NetworkModel.popularNetworkItems.where({chainId:e??"",chainType:a??""}).first();if(t){const c=await this.getLastCustomNetworkPosition();t.position=c+1,t.isPopular=1,t.isAdded=1,t.addedTime=Date.now(),await NetworkModel.popularNetworkItems.where({chainId:e??"",chainType:a??""}).modify({...t})}return t},async updateNetworkItem(e,a){return NetworkModel.networkItems.where({id:e}).modify(a)},async removeNetworkItem(e,a){return NetworkModel.networkItems.where({chainId:e??"",chainType:a??"",isCustom:1}).delete(),NetworkModel.popularNetworkItems.where({chainId:e??"",chainType:a??""}).modify({isAdded:0})},async checkNetworkIsExist(e,a){return!!await NetworkModel.networkItems.where({chainId:e??"",chainType:a??""}).first()},async getMyNetworkList(){return NetworkModel.networkItems.where({isCustom:1}).sortBy("position")},async queryNetworkById(e){const a=await NetworkModel.networkItems.where("id").equals(e).first();return a||NetworkModel.popularNetworkItems.where("id").equals(e).first()},async getNetworkItemsWithCustomAndPopular(){const e=await NetworkModel.networkGroups.toArray();for(const a of e){const{groupId:t}=a,c=(await NetworkModel.networkItems.where({groupId:t,isPopular:0,isCustom:0}).sortBy("position")).filter(x=>x.chainType!="btc"||BtcAddressTypeUtils.isCurrentDisplayBtcAddressType(x)).map(x=>BtcAddressTypeUtils.toBtcItemForDisplay(x)),i=c.map(x=>`${x.chainType},${x.chainId}`),o=(await NetworkModel.networkItems.where({groupId:t,isCustom:1}).toArray()).filter(x=>!i.includes(`${x.chainType},${x.chainId}`)),b=(await NetworkModel.popularNetworkItems.where({groupId:t,isAdded:1}).toArray()).filter(x=>!i.includes(`${x.chainType},${x.chainId}`)),u=[...o,...b].sort((x,g)=>(x.addedTime??1/0)-(g.addedTime??1/0)),l=(await NetworkModel.popularNetworkItems.where({groupId:t,isAdded:0}).sortBy("display")).filter(x=>!i.includes(`${x.chainType},${x.chainId}`));a.subNetworks=[...c,...u,...l]}return e},getDefaultNetworkForImportPrivateKey(e){const a={chainId:"25",chainType:"eth"};return e==="cosmos"?(a.chainId="cosmoshub-4",a.chainType="cosmos"):e==="cro"?(a.chainId="crypto-org-chain-mainnet-1",a.chainType="cosmos"):e==="aptos"&&(a.chainId="1",a.chainType="aptos"),a}},CurrencyService={async cacheCurrencyRequest(e){const a=await CurrencyModel.currencyVersion.where({chainId:e.chainId,chainType:e.chainType}).first(),{timestamp:t=0}=a||{};let c=await CurrencyModel.currencies.where({chainId:e.chainId,chainType:e.chainType}).toArray();const i=c.find(u=>isNativeCurrency(u));if(c.length<=0||!i){const{data:u}=await CurrencyService.fetchCurrencyList(e);return c=u.currencies??[],await this.saveCurrencyDataToDatabase(u.currencies,e),c}const o=30*60*1e3;return new Date().getTime()-t>o&&CurrencyService.fetchCurrencyList(e).then(async u=>{const{data:l}=u;await this.saveCurrencyDataToDatabase(l.currencies,e)}),c},async fetchCurrencyList(e){const a="/extension/ncw-api/api/v3/public/currencies",t=chainsWithMultiToken.find(({chainId:o})=>o===e.chainId);if(!e.chainCode&&t&&(e.chainCode=t.chainCode),!e.chainCode||!e.code)return{data:{currencies:[]}};const c={code:e.code,chainCode:e.chainCode,page_size:1e4},i=await request$5(a,{params:c});return i.data.currencies=i.data.currencies?.map(o=>{let b=o.id;return e.chainType==="btc"&&(b=`${o.id}_${e.chainId}`),{...o,id:b,chainType:e.chainType,chainId:e.chainId,type:"default",protocol:PROTOCOL[e.chainType]?.default}}),i},async saveCurrencyDataToDatabase(e,a,t="default"){e&&(await CurrencyModel.currencies.where({chainId:a.chainId,chainType:a.chainType,type:t}).delete(),await CurrencyModel.currencies.bulkPut(e),await CurrencyModel.currencyVersion.put({chainId:a.chainId,chainType:a.chainType,timestamp:new Date().getTime()}))},async saveNativeCustomCurrency(e,a){const t={id:Qa(),name:e.name,symbol:e.symbol,tokenDecimal:e.decimals,chainId:a.chainId,chainType:a.chainType,contractAddress:"",type:"custom",protocol:PROTOCOL[a.chainType]?.default};(await CurrencyService.cacheCurrencyRequest(a)).find(isNativeCurrency)||await CurrencyModel.currencies.put(t)},addCurrencyFromCurrencies(e){return CurrencyModel.addedCurrencies.put({...e})},async saveCustomCurrency(e,a,t){const c=await this.getCurrencyByAddressIgnoreCase(e.contractAddress,a.chainId,a.chainType),i={id:c?.id||Qa(),name:e.name,symbol:e.symbol,tokenDecimal:e.decimals,chainId:a.chainId,chainType:a.chainType,contractAddress:e.contractAddress,colorfulImageUrl:e.iconUrl,type:c?.type||"custom",protocol:PROTOCOL[a.chainType]?.default};return(c?.type==="custom"||!c)&&await CurrencyModel.currencies.put(i),CurrencyModel.addedCurrencies.put({id:i.id,chainId:i.chainId,chainType:i.chainType,contractAddress:i.contractAddress,walletId:t})},removeNativeCustomCurrency(e,a){return CurrencyModel.currencies.where({chainId:e,chainType:a}).delete()},removeAddedCurrency(e,a){return CurrencyModel.addedCurrencies.where({chainId:e,chainType:a}).delete()},removeCurrencyVersionItem(e,a){return CurrencyModel.currencyVersion.where({chainId:e,chainType:a}).delete()},async removeSingleAddedCurrency(e,a,t,c){const i=await CurrencyModel.addedCurrencies.where({id:e,chainId:a,chainType:t,walletId:c}).delete();return await TokenBalanceModel.tokenBalances.where({walletId:c,chainId:a,chainType:t,currencyId:e}).delete(),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"}),i},async getCurrencyFromLocal(e){if(e.id)return CurrencyModel.currencies.where("id").equals(e.id).first();if(e.contractAddress)return this.getCurrencyByAddressIgnoreCase(e.contractAddress);if(e.ticker)return this.getBrc20CurrencyByTicker(e.ticker)},async getBrc20CurrencyByTicker(e,a){const t=await WalletService.getWalletSession();return a&&Object.assign(t,{chainId:a}),CurrencyModel.currencies.where("name").equalsIgnoreCase(e).filter(c=>c.chainId===t.chainId&&c.chainType==="btc").first()},async getCurrencyByAddressIgnoreCase(e,a,t){const c=await WalletService.getWalletSession();return a&&t&&Object.assign(c,{chainId:a,chainType:t}),CurrencyModel.currencies.where("contractAddress").equalsIgnoreCase(e).filter(i=>i.chainId===c.chainId&&i.chainType===c.chainType).first()},async getCurrencyByContractAddress(e){const{addresses:a,chainId:t,chainType:c,rpcUrl:i}=e,o=await CurrencyModel.currencies.where("contractAddress").anyOf(a).toArray(),b=new Map(o.map(l=>[l.contractAddress,l])),u=a.map(async l=>{let x=b.get(l);return x||(x=await CurrencyService.getCurrencyFromOnline(t,c,l,i)),x});return Promise.all(u)},async getAddCurrencyByContractAddress(e,a,t,c){return CurrencyModel.addedCurrencies.where("contractAddress").equalsIgnoreCase(e).filter(i=>i.chainId===t&&i.chainType===c&&i.walletId===a).first()},async getCurrencyFromOnline(e,a,t,c){let i;a==="aptos"?i=await this.getOnlineAptosCurrencyInfoByAddress(c,t):i=await this.getOnlineCurrencyInfoByContractAddress(c,t);const o={id:Qa(),name:i.name,chainId:e,chainType:a,symbol:i.symbol,tokenDecimal:i.tokenDecimal,contractAddress:t,type:"custom",protocol:i.protocol||PROTOCOL[a]?.default},b=await this.getCurrencyByAddressIgnoreCase(t,e,a);return b&&(o.id=b.id),await CurrencyModel.currencies.put(o),o},async getOnlineAptosCurrencyInfoByAddress(e,a){const t=new AptosClient(e),[c]=a.split("::"),o=(await t.getAccountResource(c,`0x1::coin::CoinInfo<${a}>`)).data;return{name:o.name,symbol:o.symbol,tokenDecimal:o.decimals,contractAddress:a,protocol:PROTOCOL.aptos.default}},async getOnlineCurrencyInfoByContractAddress(e,a){const t=new Web3(new HttpProvider(e)),c=EthereumABIs.ERC20,i=new t.eth.Contract(c,a);let o="",b=1,u="",l=PROTOCOL.eth.default;try{b=await i.methods.decimals().call(),o=await i.methods.symbol().call(),u=await i.methods.name().call()}catch{l=PROTOCOL.eth.unknown}return{name:u,symbol:o,tokenDecimal:b,contractAddress:a,protocol:l}},async getNativeCurrency(e,a){return CurrencyModel.currencies.where({chainId:e,chainType:a}).filter(isNativeCurrency).first()},updateNativeCurrencyById(e,a){return CurrencyModel.currencies.where({id:e}).modify(a)},async getNativeWrapCurrency(e,a){const t=wrappedCurrencyJson.find(c=>c.chainId===e&&c.chainType===a);if(t){const c=t.contractAddress;let i=await CurrencyService.getCurrencyFromLocal({contractAddress:c});if(!i){const o=await NetworkService.getNetWorkUnsafe(e,a);i=await CurrencyService.getCurrencyFromOnline(t.chainId,t.chainType,c,o.rpcUrl)}return i}},async searchCurrenciesByKeyword(e,a,t,c,i){const o=CurrencyModel.currencies.where({chainId:e,chainType:a}).filter(l=>`${l.name}(${l.symbol})`.toLocaleLowerCase().includes(t.toLocaleLowerCase())),b=await o.count(),u=await o.offset(c).limit(i).toArray();return{total:b,currencies:u}},async getAddedCurrencyIds(e,a,t){return(await CurrencyModel.addedCurrencies.where({chainId:e,chainType:a,walletId:t}).toArray()).map(i=>i.id)},async getAddedCurrencyList(e,a,t){const c=await this.getAddedCurrencyIds(e,a,t);return CurrencyModel.currencies.where(":id").anyOf(c).toArray()}},AptosBalanceService={async fetchAptosTokenBalance(){const{address:e="",walletId:a="",accountIndex:t="",chainId:c="",chainType:i=""}=await WalletService.getWalletSession(),{rpcUrl:o}=await NetworkService.getNetWorkUnsafe(c,i),b=new AptosClient(o);let u=[];try{u=await b.getAccountResources(e)}catch(g){safeJsonParse(g.message)?.error_code==="account_not_found"&&u.push({type:"0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>",data:{coin:{value:"0"}}})}const l=u.filter(g=>g.type.startsWith("0x1::coin::CoinStore")),x=await Promise.all(l.map(async g=>{const v=g.type.match(/^0x1::coin::CoinStore<(.*)>$/)[1];let E=await CurrencyService.getCurrencyByAddressIgnoreCase(v);return E||(E=await CurrencyService.getCurrencyFromOnline(c,i,v,o)),{balance:g.data?.coin?.value||"0",currencyId:E.id}}));TokenBalanceModel.tokenBalances.bulkPut(x.map(g=>({walletId:a,accountIndex:t,chainId:c,chainType:i,currencyId:g.currencyId,balance:g.balance,address:e,updateTime:Date.now()}))),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"})}},CosmosBalanceService={async fetchTokenBalance(e){const{address:a="",chainId:t="",chainType:c="",walletId:i,accountIndex:o}=e,b=await NetworkService.getNetWorkUnsafe(t,c),u=CosmosHttpClient.create(b.rpcUrl),l=await build$1.StargateClient.connect(u),x=await CurrencyService.cacheCurrencyRequest(b),g=await Promise.all(x.map(async v=>{try{const E=await l.getBalance(a,v.denom||"");return{currency:v,balance:E.amount}}catch(E){return{currency:v,error:{message:E?.message}}}}));TokenBalanceModel.tokenBalances.bulkPut(g.map(v=>({walletId:i,accountIndex:o,chainId:t,chainType:c,currencyId:v.currency.id,balance:v.balance??"",address:a,updateTime:Date.now()}))),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"})}},isEvmContractCurrency=e=>e.chainType==="eth"&&!!e.contractAddress&&e.contractAddress.trim().length>0,addRequestToBatch=(e,a,t)=>new Promise((c,i)=>{e.add(a.request(...t,(o,b)=>{o?i(o):c(b)}))}),addEvmBalanceReqToBatch=(e,a,t,c)=>{let i;if(isEvmContractCurrency(c)){const o=new a.eth.Contract(EthereumABIs.ERC20,c.contractAddress);i=addRequestToBatch(e,o.methods.balanceOf(t).call,[{from:t}])}else i=addRequestToBatch(e,a.eth.getBalance,[t,"latest"]);return i.then(o=>({currency:c,balance:o})).catch(o=>({currency:c,error:o}))},fetchContractBalance=(e,a,t)=>{if(isEvmContractCurrency(t)){const c=new a.eth.Contract(EthereumABIs.ERC20,t.contractAddress);return new Promise(i=>{c.methods.balanceOf(e).call({from:e},(o,b)=>{i(o?{currency:t,error:o}:{currency:t,balance:b})})})}else return a.eth.getBalance(e).then(c=>({currency:t,balance:c}))},EthBalanceService={async scanAllTokenBalance(e){const{walletId:a="",chainId:t="",chainType:c="",address:i="",accountIndex:o}=e,b=await NetworkService.getNetWorkUnsafe(t,c),u=await CurrencyService.cacheCurrencyRequest(b);return EthBalanceService.fetchSpecialTokenBalance({walletAddress:i,currencies:u,network:b,walletId:a,isFullRefresh:!0,accountIndex:o})},async fetchSpecialTokenBalance(e){const{walletAddress:a,network:t,walletId:c,isFullRefresh:i,accountIndex:o}=e,{chainId:b,chainType:u,rpcUrl:l}=t;let x=[];const g=await NetworkService.getMultiCallContract(b),v=e.currencies.filter(E=>E.chainType==="eth"&&!isNativeCurrency(E)?isERC20Currency(E)&&Web3.utils.isAddress(E.contractAddress):!0);if(t.chainType==="eth"&&g){const E=new Web3(new HttpProvider(l));x=await this.fetchEvmBalanceViaMultiCallContract(a,g,v,E)}else x=await this.fetchAllBalanceViaRpcGeneral(a,t,v);return i&&await TokenBalanceModel.tokenBalances.where({chainId:b,chainType:u,walletId:c}).delete(),await TokenBalanceModel.tokenBalances.bulkPut(x.map(E=>{const S={walletId:c,currencyId:E.currency.id,accountIndex:o,chainId:b,chainType:u,balance:E.balance||"0",address:a,updateTime:Date.now()};return E.error&&(S.error={message:E.error.message}),S})),await SubscriptionManager.pushSubscriptionUpdate({path:"popup.tokenBalance"}),x},async fetchAllBalanceViaRpcGeneral(e,a,t){async function c(o){let b=[];const u=new Web3(new HttpProvider(a.rpcUrl));try{b=await EthBalanceService.fetchAllBalanceViaWeb3BatchRequest(e,o,u)}catch{b=await EthBalanceService.fetchAllBalanceViaWeb3Normal(e,o,u)}return b}return(await chunkRequest({list:t,chunkSize:100,request:async o=>c(o)})).reduce((o,b)=>o.concat(b),[])},async fetchAllBalanceViaWeb3BatchRequest(e,a,t){const c=new t.BatchRequest,i=a.map(async u=>{try{return await addEvmBalanceReqToBatch(c,t,e,u)}catch{return{currency:u,balance:"0"}}});c.execute();const o=Promise.all(i),b=(await o).filter(u=>!u.error).length===0;if(a.length>0&&b)throw new ProviderRpcError(-32005,"this RPC end point not support BatchRequest");return o},async fetchAllBalanceViaWeb3Normal(e,a,t){const c=a.map(i=>fetchContractBalance(e,t,i));return Promise.all(c)},async fetchEvmBalanceViaMultiCallContract(e,a,t,c){async function i(b){const u=new Interface(["function balanceOf(address owner) view returns (uint)","function getEthBalance(address owner) view returns (uint)"]),l=b.map(v=>isNativeCurrency(v)?{target:a,callData:u.encodeFunctionData("getEthBalance",[e])}:{target:v.contractAddress,callData:u.encodeFunctionData("balanceOf",[e])}),g=await new c.eth.Contract(EthereumABIs.MUTILCALL,a).methods.aggregate(l).call();return g.returnData&&g.returnData.length===b.length?b.map((E,S)=>{const T=isNativeCurrency(E)?"getEthBalance":"balanceOf";let I="0";try{I=u.decodeFunctionResult(T,g.returnData[S])[0].toString()}catch{}return{currency:E,balance:I}}):[]}return(await chunkRequest({list:t,chunkSize:1e3,request:async b=>i(b)})).reduce((b,u)=>b.concat(u),[])}},BalanceService={async fetchLiveRatesTiers(e){return request$5("/extension/ncw-api/api/v2/live_rates/tiers",{params:{fromCurrency:e}})},async getTokenBalance(e){const{walletId:a="",chainId:t,chainType:c}=e,i=await TokenBalanceModel.tokenBalances.where({walletId:a,chainId:t,chainType:c}).toArray(),o=await CurrencyService.getAddedCurrencyIds(t,c,a),b=new Map(i.map(g=>[g.currencyId,g])),u=new Map(o.map(g=>[g,g])),l=new Set([...Array.from(b.keys()),...o]);return(await CurrencyModel.currencies.where(":id").anyOf([...Array.from(l)]).toArray()).map(g=>{const v=b.get(g.id);return{balance:v?.balance??"0",brc20:v?.brc20,currency:g,error:v?.error}}).filter(g=>!!(isNativeCurrency(g.currency)||u.get(g.currency.id)||(g.balance||"0")!=="0"&&g.currency.type==="default"||g.currency.chainType==="aptos"||g.currency.chainType==="btc"))},async refreshBalanceIfNeed(e=!1){const a=await WalletService.getWalletSession();if(a.currentWalletModelType==="initialize")return;const{walletId:t="",chainId:c="",chainType:i="",address:o="",accountIndex:b=""}=a,l=(await TokenBalanceModel.tokenBalances.where({walletId:t,chainId:c,chainType:i}).sortBy("updateTime"))[0],{updateTime:x}=l||{},g=25*1e3,v=new Date().getTime()-x>g;(e||!l||v)&&(i==="aptos"?await AptosBalanceService.fetchAptosTokenBalance():i==="btc"?await BtcBalanceService.fetchTokenBalance({walletId:t,chainId:c,chainType:i,address:o,accountIndex:b}):i==="cosmos"?await CosmosBalanceService.fetchTokenBalance({walletId:t,chainId:c,chainType:i,address:o,accountIndex:b}):await EthBalanceService.scanAllTokenBalance({walletId:t,chainId:c,chainType:i,address:o,accountIndex:b}))},removeBalanceByChain(e,a){return TokenBalanceModel.tokenBalances.where({chainId:e,chainType:a}).delete()}},Subscriptions={"popup.walletSession":{data:async function(){return WalletService.getWalletSession()}},"popup.uiRequestQueue":{data:async function(){return PopupRequestService$1.getAllPendingRequests()}},"popup.connectDappSession":{data:async function(){const{walletId:e="",accountIndex:a=""}=await WalletService.getWalletConfig();return ConnectSessionService.getDappSessionList(e,a)}},"popup.tokenBalance":{data:async function(){const{walletId:e="",chainId:a="",chainType:t=""}=await WalletService.getWalletConfig();return await BalanceService.getTokenBalance({walletId:e,chainId:a,chainType:t})},onRegister:async function(){BalanceService.refreshBalanceIfNeed(!0).catch(e=>{})}}};class SubscriptionManagerCore{subscriptions=new Map;async register(a){const{path:t}=a.params[0]??{},c=this.getSubscription({path:t});assert$d.ok(c,`not support subscription "${t}"`);const i=a.req.sess,o=this.subscriptions.get(t)??new Map;if(o.set(i.id,i),this.subscriptions.set(t,o),c.onRegister)try{await c.onRegister()}catch{}const b=await c.data();await i.sendRequestRPC({method:"subscribe_update",params:[{path:t,data:b??{}}]}),i.on("disconnect",()=>{this.removeAllSub({session:i})})}getSubscription(a){return Subscriptions[a.path]}async pushSubscriptionUpdate(a){const t=a.path,i=await this.getSubscription({path:t})?.data(),o=this.subscriptions.get(t);try{o?.forEach(b=>{b.sendRequestRPC({method:"subscribe_update",params:[{path:t,data:i??{}}]})})}catch{}}removeSub(a){const{path:t,session:c}=a;(this.subscriptions.get(t)??new Map).delete(c.id)}removeAllSub(a){const{session:t}=a;this.subscriptions.forEach(c=>{c.delete(t.id)})}}const SubscriptionManager=new SubscriptionManagerCore,POPUP_REQUEST_QUEUE_PATH="popup.uiRequestQueue",PopupRequestService={async addRequestToQueue(e,a){const t=a??e.req.msg;isKoaReqMessage(t)&&(await PopupRequestModel.popupRequests.put({id:t.payload.id,message:t,createTime:Date.now()}),await SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH}),e.req.sess.on("disconnect",()=>{this.removeRequestById(e.req.id)}))},async getAllPendingRequests(){return(await PopupRequestModel.popupRequests.orderBy("createTime").toArray()).map(a=>a.message)},async removeAllPendingRequest(){await PopupRequestModel.popupRequests.clear(),await SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH})},async removeLastRequest(){const e=await PopupRequestModel.popupRequests.orderBy("createTime").reverse().limit(1).first();if(e)return await PopupRequestModel.popupRequests.where({id:e.id}).delete(),await SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH}),e.message},async getRequestById(e){const a=await PopupRequestModel.popupRequests.where({id:e}).first();if(a)return a.message},async removeRequestById(e){const a=await PopupRequestModel.popupRequests.where({id:e}).first();if(a)return await PopupRequestModel.popupRequests.where({id:a.id}).delete(),await SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH}),a.message},async removeRequest(e){const a=e.rpcReq;a&&await this.removeRequestById(a.id)},async tryAddResponseToDapp(e,a){try{assert$d.equal(e.req.sess.role,"popup");const{originReqId:t,...c}=a,i=await PopupRequestService.removeRequestById(t??e.id);assert$d.ok(i),assert$d.ok(a),e.responses.push({from:e.from,to:i.from,payload:constructJsonRpcResponse({...c,id:i.payload.id})})}catch{}},async rejectAllPendingRequest(e,a){const{excludeReqId:t}=a??{};(await this.getAllPendingRequests()).forEach(i=>{String(i.payload.id)!==String(t)&&e.responses.push({from:e.from,to:i.from,payload:constructJsonRpcResponse({id:i.payload.id,error:{code:4001,message:"rejected"}})})}),await PopupRequestModel.popupRequests.where("id").notEqual(t??0).delete(),await SubscriptionManager.pushSubscriptionUpdate({path:POPUP_REQUEST_QUEUE_PATH})}},PopupRequestService$1=PopupRequestService;class GeneralConfigModelDB extends $n{configs;constructor(){super("general-config-model"),this.version(1).stores({configs:"&key"})}}const GeneralConfigModel=new GeneralConfigModelDB,APP_SIZE={width:360,height:580,statusBarHeight:40};class PopupManager{async getPopupID(){return(await GeneralConfigModel.configs.get("PopupManager_popupID"))?.value}async setPopupID(a){a?await GeneralConfigModel.configs.put({key:"PopupManager_popupID",value:a}):GeneralConfigModel.configs.delete("PopupManager_popupID")}constructor(){browser.windows.onRemoved.addListener(async a=>{const t=await this.getPopupID();a===t&&this.setPopupID(void 0)})}async getPopupWindow(){try{const a=await this.getPopupID()??0,t=await ChromeExtension.getWindow(a);return t.type!=="popup"?void 0:t}catch{return}}showPopup=async a=>{let t=0,c=0;try{const o=await ChromeExtension.getLastFocusedWindow();c=o.top,t=o.left+o.width-APP_SIZE.width}catch{const{screenX:b,screenY:u,outerWidth:l}=window;c=Math.max(u,0),t=Math.max(b+(l-APP_SIZE.width),0)}let i=await this.getPopupWindow();return i&&i.id?await ChromeExtension.focusWindow(i.id).catch():(i=await ChromeExtension.openWindow({url:a,type:"popup",width:APP_SIZE.width,height:APP_SIZE.height+APP_SIZE.statusBarHeight,left:t,top:c}),this.setPopupID(i.id)),i.left!==t&&i.state!=="fullscreen"&&await ChromeExtension.updateWindowPosition(i.id,t,c),i};closeAllPopup=async()=>{const a=await this.getPopupID();browser.windows.remove(a),this.setPopupID(void 0)}}const DefaultPopupManager=new PopupManager;class BackgroundServer extends SafeEventEmitter{requestListener;beforeStart;afterStart;constructor(a){super();const{requestListener:t,beforeStart:c,afterStart:i,onInstalled:o}=a;browser.runtime.onInstalled.addListener(o),this.requestListener=t,this.beforeStart=c,this.start().then(()=>i?.())}getSession(a){const t=new Session(a);return SessionManager.addSession(t),SessionManager.getSessionById(t.id)??t}async start(){await this.beforeStart?.(),browser.runtime.onConnect.addListener(this.handleConnectEvent.bind(this)),BridgeConnectManager.on("message",a=>{if(!isKoaMessage(a))return;const t=this.getSession({wsClient:BridgeConnectManager}),c=new KoaRequest(t,{...a,from:t.origin});this.requestListener&&this.requestListener(c)}),SessionManager.addSession(new Session({wsClient:BridgeConnectManager}))}handleConnectEvent(a){const t=new Session({port:a});SessionManager.addSession(t),a.onMessage.addListener(c=>{isKoaMessage(c)&&this.onPortStreamMessage(c,a)}),a.onDisconnect.addListener(async c=>{if(new URL(c.sender?.url??"").origin===location.origin){const o=await WalletService.getWalletSession(),b=await DefaultPopupManager.getPopupID();if(c.sender?.tab?.windowId===b){const u=await PopupRequestService$1.getAllPendingRequests();await PopupRequestService$1.removeAllPendingRequest();const l=u.map(x=>SessionManager.getSessionsByOrigin(x.from).map(async v=>v.sendMsg({from:x.to,to:x.from,payload:constructJsonRpcResponse({id:x.payload.id,error:{code:4001,message:"rejected"}})}))).flatMap(x=>x);if(await Promise.all(l),o.currentWalletModelType==="bridge"){const x=SessionManager.getSessionsByRole("mobile")[0];u.forEach(async g=>x.sendMsg({from:location.origin,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:{id:Qa(),jsonrpc:"2.0",method:"transaction_cancelled",params:[{jsonrpcID:g.payload.id}]}}))}}o.address&&SegmentService.track({event:"extension_homepage_page_close"})}})}onPortStreamMessage(a,t){const c=a.payload,i=this.getSession({port:t}),o={to:a.to,payload:c,from:i.origin},b=new KoaRequest(i,{...o});this.requestListener&&this.requestListener(b)}}const createServer=e=>new BackgroundServer(e),LockWalletJob={name:"lock-wallet-job",alarmInfo:{periodInMinutes:1},callback:async()=>{await WalletService.checkWalletIsNeedToLock()&&await WalletService.updateWalletConfigLockState(!0)}},TransactionNotificationJob={name:"transaction-notification-job",alarmInfo:{periodInMinutes:1},async callback(){const{currentWalletModelType:e}=await WalletService.getWalletSession();if(e==="initialize")return;const a=await TransactionModel.transactions.where("status").anyOf(["sent","pending"]).toArray(),t=a.map(async c=>{const i=await NetworkService.getNetWorkUnsafe(c.chainId,c.chainType);await TransactionService.refreshTransactionStatus({rpcUrl:i.rpcUrl,transaction:c,notifyEnable:!0})});await Promise.all(t),await Promise.all(a.map(async c=>{if(c.status==="success"&&await BalanceService.refreshBalanceIfNeed(!0),c.status!=="pending"){const i=await NetworkService.getNetWorkUnsafe(c.chainId,c.chainType);await SegmentService.track({event:"DeFi Extension Transaction Status Trigger",properties:{type:e,network:`${c.chainType},${c.chainId}`,name:`${i.name}`,status:c.status,txnHash:c.hash,txnName:c.txnName}})}}))}},jobs=[LockWalletJob,TransactionNotificationJob],Job={async startAllJobs(){jobs.forEach(e=>browser.alarms.create(e.name,e.alarmInfo)),browser.alarms.onAlarm.addListener(e=>{jobs.find(t=>t.name===e.name)?.callback(e).then().catch(t=>{})})}},AuthMiddleware=async(e,a)=>{(await WalletService.getWalletConfig()).currentWalletModelType==="standalone"&&await WalletService.resetWalletLockTime(),await a()};/**
 * @license
 * Copyright 2009 The Closure Library Authors
 * Copyright 2020 Daniel Wirtz / The long.js Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */var wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Long(e,a,t){this.low=e|0,this.high=a|0,this.unsigned=!!t}Long.prototype.__isLong__;Object.defineProperty(Long.prototype,"__isLong__",{value:!0});function isLong(e){return(e&&e.__isLong__)===!0}function ctz32(e){var a=Math.clz32(e&-e);return e?31-a:a}Long.isLong=isLong;var INT_CACHE={},UINT_CACHE={};function fromInt(e,a){var t,c,i;return a?(e>>>=0,(i=0<=e&&e<256)&&(c=UINT_CACHE[e],c)?c:(t=fromBits(e,0,!0),i&&(UINT_CACHE[e]=t),t)):(e|=0,(i=-128<=e&&e<128)&&(c=INT_CACHE[e],c)?c:(t=fromBits(e,e<0?-1:0,!1),i&&(INT_CACHE[e]=t),t))}Long.fromInt=fromInt;function fromNumber(e,a){if(isNaN(e))return a?UZERO:ZERO;if(a){if(e<0)return UZERO;if(e>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(e<=-TWO_PWR_63_DBL)return MIN_VALUE;if(e+1>=TWO_PWR_63_DBL)return MAX_VALUE}return e<0?fromNumber(-e,a).neg():fromBits(e%TWO_PWR_32_DBL|0,e/TWO_PWR_32_DBL|0,a)}Long.fromNumber=fromNumber;function fromBits(e,a,t){return new Long(e,a,t)}Long.fromBits=fromBits;var pow_dbl=Math.pow;function fromString(e,a,t){if(e.length===0)throw Error("empty string");if(typeof a=="number"?(t=a,a=!1):a=!!a,e==="NaN"||e==="Infinity"||e==="+Infinity"||e==="-Infinity")return a?UZERO:ZERO;if(t=t||10,t<2||36<t)throw RangeError("radix");var c;if((c=e.indexOf("-"))>0)throw Error("interior hyphen");if(c===0)return fromString(e.substring(1),a,t).neg();for(var i=fromNumber(pow_dbl(t,8)),o=ZERO,b=0;b<e.length;b+=8){var u=Math.min(8,e.length-b),l=parseInt(e.substring(b,b+u),t);if(u<8){var x=fromNumber(pow_dbl(t,u));o=o.mul(x).add(fromNumber(l))}else o=o.mul(i),o=o.add(fromNumber(l))}return o.unsigned=a,o}Long.fromString=fromString;function fromValue(e,a){return typeof e=="number"?fromNumber(e,a):typeof e=="string"?fromString(e,a):fromBits(e.low,e.high,typeof a=="boolean"?a:e.unsigned)}Long.fromValue=fromValue;var TWO_PWR_16_DBL=1<<16,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL),ZERO=fromInt(0);Long.ZERO=ZERO;var UZERO=fromInt(0,!0);Long.UZERO=UZERO;var ONE=fromInt(1);Long.ONE=ONE;var UONE=fromInt(1,!0);Long.UONE=UONE;var NEG_ONE=fromInt(-1);Long.NEG_ONE=NEG_ONE;var MAX_VALUE=fromBits(-1,2147483647,!1);Long.MAX_VALUE=MAX_VALUE;var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);Long.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE;var MIN_VALUE=fromBits(0,-2147483648,!1);Long.MIN_VALUE=MIN_VALUE;var LongPrototype=Long.prototype;LongPrototype.toInt=function e(){return this.unsigned?this.low>>>0:this.low};LongPrototype.toNumber=function e(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL+(this.low>>>0):this.high*TWO_PWR_32_DBL+(this.low>>>0)};LongPrototype.toString=function e(a){if(a=a||10,a<2||36<a)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(MIN_VALUE)){var t=fromNumber(a),c=this.div(t),i=c.mul(t).sub(this);return c.toString(a)+i.toInt().toString(a)}else return"-"+this.neg().toString(a);for(var o=fromNumber(pow_dbl(a,6),this.unsigned),b=this,u="";;){var l=b.div(o),x=b.sub(l.mul(o)).toInt()>>>0,g=x.toString(a);if(b=l,b.isZero())return g+u;for(;g.length<6;)g="0"+g;u=""+g+u}};LongPrototype.getHighBits=function e(){return this.high};LongPrototype.getHighBitsUnsigned=function e(){return this.high>>>0};LongPrototype.getLowBits=function e(){return this.low};LongPrototype.getLowBitsUnsigned=function e(){return this.low>>>0};LongPrototype.getNumBitsAbs=function e(){if(this.isNegative())return this.eq(MIN_VALUE)?64:this.neg().getNumBitsAbs();for(var a=this.high!=0?this.high:this.low,t=31;t>0&&!(a&1<<t);t--);return this.high!=0?t+33:t+1};LongPrototype.isZero=function e(){return this.high===0&&this.low===0};LongPrototype.eqz=LongPrototype.isZero;LongPrototype.isNegative=function e(){return!this.unsigned&&this.high<0};LongPrototype.isPositive=function e(){return this.unsigned||this.high>=0};LongPrototype.isOdd=function e(){return(this.low&1)===1};LongPrototype.isEven=function e(){return(this.low&1)===0};LongPrototype.equals=function e(a){return isLong(a)||(a=fromValue(a)),this.unsigned!==a.unsigned&&this.high>>>31===1&&a.high>>>31===1?!1:this.high===a.high&&this.low===a.low};LongPrototype.eq=LongPrototype.equals;LongPrototype.notEquals=function e(a){return!this.eq(a)};LongPrototype.neq=LongPrototype.notEquals;LongPrototype.ne=LongPrototype.notEquals;LongPrototype.lessThan=function e(a){return this.comp(a)<0};LongPrototype.lt=LongPrototype.lessThan;LongPrototype.lessThanOrEqual=function e(a){return this.comp(a)<=0};LongPrototype.lte=LongPrototype.lessThanOrEqual;LongPrototype.le=LongPrototype.lessThanOrEqual;LongPrototype.greaterThan=function e(a){return this.comp(a)>0};LongPrototype.gt=LongPrototype.greaterThan;LongPrototype.greaterThanOrEqual=function e(a){return this.comp(a)>=0};LongPrototype.gte=LongPrototype.greaterThanOrEqual;LongPrototype.ge=LongPrototype.greaterThanOrEqual;LongPrototype.compare=function e(a){if(isLong(a)||(a=fromValue(a)),this.eq(a))return 0;var t=this.isNegative(),c=a.isNegative();return t&&!c?-1:!t&&c?1:this.unsigned?a.high>>>0>this.high>>>0||a.high===this.high&&a.low>>>0>this.low>>>0?-1:1:this.sub(a).isNegative()?-1:1};LongPrototype.comp=LongPrototype.compare;LongPrototype.negate=function e(){return!this.unsigned&&this.eq(MIN_VALUE)?MIN_VALUE:this.not().add(ONE)};LongPrototype.neg=LongPrototype.negate;LongPrototype.add=function e(a){isLong(a)||(a=fromValue(a));var t=this.high>>>16,c=this.high&65535,i=this.low>>>16,o=this.low&65535,b=a.high>>>16,u=a.high&65535,l=a.low>>>16,x=a.low&65535,g=0,v=0,E=0,S=0;return S+=o+x,E+=S>>>16,S&=65535,E+=i+l,v+=E>>>16,E&=65535,v+=c+u,g+=v>>>16,v&=65535,g+=t+b,g&=65535,fromBits(E<<16|S,g<<16|v,this.unsigned)};LongPrototype.subtract=function e(a){return isLong(a)||(a=fromValue(a)),this.add(a.neg())};LongPrototype.sub=LongPrototype.subtract;LongPrototype.multiply=function e(a){if(this.isZero())return this;if(isLong(a)||(a=fromValue(a)),wasm){var t=wasm.mul(this.low,this.high,a.low,a.high);return fromBits(t,wasm.get_high(),this.unsigned)}if(a.isZero())return this.unsigned?UZERO:ZERO;if(this.eq(MIN_VALUE))return a.isOdd()?MIN_VALUE:ZERO;if(a.eq(MIN_VALUE))return this.isOdd()?MIN_VALUE:ZERO;if(this.isNegative())return a.isNegative()?this.neg().mul(a.neg()):this.neg().mul(a).neg();if(a.isNegative())return this.mul(a.neg()).neg();if(this.lt(TWO_PWR_24)&&a.lt(TWO_PWR_24))return fromNumber(this.toNumber()*a.toNumber(),this.unsigned);var c=this.high>>>16,i=this.high&65535,o=this.low>>>16,b=this.low&65535,u=a.high>>>16,l=a.high&65535,x=a.low>>>16,g=a.low&65535,v=0,E=0,S=0,T=0;return T+=b*g,S+=T>>>16,T&=65535,S+=o*g,E+=S>>>16,S&=65535,S+=b*x,E+=S>>>16,S&=65535,E+=i*g,v+=E>>>16,E&=65535,E+=o*x,v+=E>>>16,E&=65535,E+=b*l,v+=E>>>16,E&=65535,v+=c*g+i*x+o*l+b*u,v&=65535,fromBits(S<<16|T,v<<16|E,this.unsigned)};LongPrototype.mul=LongPrototype.multiply;LongPrototype.divide=function e(a){if(isLong(a)||(a=fromValue(a)),a.isZero())throw Error("division by zero");if(wasm){if(!this.unsigned&&this.high===-2147483648&&a.low===-1&&a.high===-1)return this;var t=(this.unsigned?wasm.div_u:wasm.div_s)(this.low,this.high,a.low,a.high);return fromBits(t,wasm.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?UZERO:ZERO;var c,i,o;if(this.unsigned){if(a.unsigned||(a=a.toUnsigned()),a.gt(this))return UZERO;if(a.gt(this.shru(1)))return UONE;o=UZERO}else{if(this.eq(MIN_VALUE)){if(a.eq(ONE)||a.eq(NEG_ONE))return MIN_VALUE;if(a.eq(MIN_VALUE))return ONE;var b=this.shr(1);return c=b.div(a).shl(1),c.eq(ZERO)?a.isNegative()?ONE:NEG_ONE:(i=this.sub(a.mul(c)),o=c.add(i.div(a)),o)}else if(a.eq(MIN_VALUE))return this.unsigned?UZERO:ZERO;if(this.isNegative())return a.isNegative()?this.neg().div(a.neg()):this.neg().div(a).neg();if(a.isNegative())return this.div(a.neg()).neg();o=ZERO}for(i=this;i.gte(a);){c=Math.max(1,Math.floor(i.toNumber()/a.toNumber()));for(var u=Math.ceil(Math.log(c)/Math.LN2),l=u<=48?1:pow_dbl(2,u-48),x=fromNumber(c),g=x.mul(a);g.isNegative()||g.gt(i);)c-=l,x=fromNumber(c,this.unsigned),g=x.mul(a);x.isZero()&&(x=ONE),o=o.add(x),i=i.sub(g)}return o};LongPrototype.div=LongPrototype.divide;LongPrototype.modulo=function e(a){if(isLong(a)||(a=fromValue(a)),wasm){var t=(this.unsigned?wasm.rem_u:wasm.rem_s)(this.low,this.high,a.low,a.high);return fromBits(t,wasm.get_high(),this.unsigned)}return this.sub(this.div(a).mul(a))};LongPrototype.mod=LongPrototype.modulo;LongPrototype.rem=LongPrototype.modulo;LongPrototype.not=function e(){return fromBits(~this.low,~this.high,this.unsigned)};LongPrototype.countLeadingZeros=function e(){return this.high?Math.clz32(this.high):Math.clz32(this.low)+32};LongPrototype.clz=LongPrototype.countLeadingZeros;LongPrototype.countTrailingZeros=function e(){return this.low?ctz32(this.low):ctz32(this.high)+32};LongPrototype.ctz=LongPrototype.countTrailingZeros;LongPrototype.and=function e(a){return isLong(a)||(a=fromValue(a)),fromBits(this.low&a.low,this.high&a.high,this.unsigned)};LongPrototype.or=function e(a){return isLong(a)||(a=fromValue(a)),fromBits(this.low|a.low,this.high|a.high,this.unsigned)};LongPrototype.xor=function e(a){return isLong(a)||(a=fromValue(a)),fromBits(this.low^a.low,this.high^a.high,this.unsigned)};LongPrototype.shiftLeft=function e(a){return isLong(a)&&(a=a.toInt()),(a&=63)===0?this:a<32?fromBits(this.low<<a,this.high<<a|this.low>>>32-a,this.unsigned):fromBits(0,this.low<<a-32,this.unsigned)};LongPrototype.shl=LongPrototype.shiftLeft;LongPrototype.shiftRight=function e(a){return isLong(a)&&(a=a.toInt()),(a&=63)===0?this:a<32?fromBits(this.low>>>a|this.high<<32-a,this.high>>a,this.unsigned):fromBits(this.high>>a-32,this.high>=0?0:-1,this.unsigned)};LongPrototype.shr=LongPrototype.shiftRight;LongPrototype.shiftRightUnsigned=function e(a){return isLong(a)&&(a=a.toInt()),(a&=63)===0?this:a<32?fromBits(this.low>>>a|this.high<<32-a,this.high>>>a,this.unsigned):a===32?fromBits(this.high,0,this.unsigned):fromBits(this.high>>>a-32,0,this.unsigned)};LongPrototype.shru=LongPrototype.shiftRightUnsigned;LongPrototype.shr_u=LongPrototype.shiftRightUnsigned;LongPrototype.rotateLeft=function e(a){var t;return isLong(a)&&(a=a.toInt()),(a&=63)===0?this:a===32?fromBits(this.high,this.low,this.unsigned):a<32?(t=32-a,fromBits(this.low<<a|this.high>>>t,this.high<<a|this.low>>>t,this.unsigned)):(a-=32,t=32-a,fromBits(this.high<<a|this.low>>>t,this.low<<a|this.high>>>t,this.unsigned))};LongPrototype.rotl=LongPrototype.rotateLeft;LongPrototype.rotateRight=function e(a){var t;return isLong(a)&&(a=a.toInt()),(a&=63)===0?this:a===32?fromBits(this.high,this.low,this.unsigned):a<32?(t=32-a,fromBits(this.high<<t|this.low>>>a,this.low<<t|this.high>>>a,this.unsigned)):(a-=32,t=32-a,fromBits(this.low<<t|this.high>>>a,this.high<<t|this.low>>>a,this.unsigned))};LongPrototype.rotr=LongPrototype.rotateRight;LongPrototype.toSigned=function e(){return this.unsigned?fromBits(this.low,this.high,!1):this};LongPrototype.toUnsigned=function e(){return this.unsigned?this:fromBits(this.low,this.high,!0)};LongPrototype.toBytes=function e(a){return a?this.toBytesLE():this.toBytesBE()};LongPrototype.toBytesLE=function e(){var a=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,a&255,a>>>8&255,a>>>16&255,a>>>24]};LongPrototype.toBytesBE=function e(){var a=this.high,t=this.low;return[a>>>24,a>>>16&255,a>>>8&255,a&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Long.fromBytes=function e(a,t,c){return c?Long.fromBytesLE(a,t):Long.fromBytesBE(a,t)};Long.fromBytesLE=function e(a,t){return new Long(a[0]|a[1]<<8|a[2]<<16|a[3]<<24,a[4]|a[5]<<8|a[6]<<16|a[7]<<24,t)};Long.fromBytesBE=function e(a,t){return new Long(a[4]<<24|a[5]<<16|a[6]<<8|a[7],a[0]<<24|a[1]<<16|a[2]<<8|a[3],t)};function queryPrototypeFromUrl(e){const a=build$1.defaultRegistryTypes.find(t=>t[0]===e)?.[1];if(a&&build$4.isTsProtoGeneratedType(a))return a;throw new Error(`can not find ProtoGeneratedType for typeUrl:${e}`)}const transformProtoToJSON=e=>{const a={};if(e instanceof Array)return e.map(t=>transformProtoToJSON(t));if(e&&typeof e.typeUrl=="string"&&typeof e.value=="string")try{const t=queryPrototypeFromUrl(e.typeUrl);return{typeUrl:e.typeUrl,value:transformProtoToJSON(t.toJSON(t.decode(build.fromBase64(e.value))))}}catch{return e}for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const c=e[t];if(typeof c=="object"){a[t]=transformProtoToJSON(c);continue}a[t]=c}return a},decodeToSignRequestJSON=(e,a)=>{const t=tx.TxBody.decode(a.bodyBytes),c=tx.AuthInfo.decode(a.authInfoBytes);return{signerAddress:e,signDoc:{chainId:a.chainId,accountNumber:a.accountNumber.toString(),body:transformProtoToJSON(tx.TxBody.toJSON(t)),authInfo:transformProtoToJSON(tx.AuthInfo.toJSON(c))}}},CosmosRequestMiddleware=async(e,a)=>{const t=e.rpcReq;if(t&&t.method==="cosmos_signDirect"){const{signerAddress:c,signDoc:i}=t.params[0],o=tx.SignDoc.fromJSON(i),b=decodeToSignRequestJSON(c,o);e.req=new KoaRequest(e.req.sess,{from:e.from,to:e.to,payload:{id:t.id,jsonrpc:"2.0",method:"cosmos_sendTransaction",params:[b]}})}await a()},relayToMobileMethods=[...allSigningMethods],checkNeedRelayRequestsToMobile=async e=>{try{const a=e.rpcReq?.method??"",{currentWalletModelType:t}=await WalletService.getWalletConfig();if(assert$d.equal(t,"bridge"),assert$d.ok(relayToMobileMethods.includes(a)),allSigningMethods.includes(a)){const c=await ConnectSessionService.generateApprovedMessageByOrigin(e.req.from);c&&e.responses.push(c)}e.responses.push({...e.req.msg,to:KOA_MESSAGE_MOBILE_ORIGIN})}catch{return!1}return!0},checkNeedPopupUIForRequests=async e=>{const t=e.rpcReq?.method??"";return dappAutoPopupMethods.includes(t)&&e.req.sess.role==="dapp"?(await PopupRequestService$1.addRequestToQueue(e),await DefaultPopupManager.showPopup(browser.runtime.getURL("index.html#")),!0):!1},checkAccessForDappRequests=async e=>{const a=e.rpcReq?.method??"";return e.req.sess.role!=="dapp"?!0:dappAllowMethods.includes(a)?!await ConnectSessionService.getApprovedDappInfo(e.req.from)&&dappProtectAllowMethods.includes(a)?(e.pushResponse(null,{code:4100,message:"Unauthorized"}),!1):!0:(e.pushResponse(null,{code:4200,message:"Unsupported Method"}),!1)},DappRequestMiddleware=async(e,a)=>{if(!await checkAccessForDappRequests(e))return;await checkNeedRelayRequestsToMobile(e),await checkNeedPopupUIForRequests(e)||await a()},ErrorHandleMiddleware=async(e,a)=>{try{if(e.rpcReq?.method==="dc_ping")return a();await a(),e.responses.forEach(t=>{})}catch(t){e.req.sess.sendMsg(koaResponseForRequest({reqMsg:e.req.msg,result:null,error:{code:500,message:t.message||t.response?.error?.error_message||t.response?.message||"background error"}}))}},RespondMiddleware=async(e,a)=>{await a(),await Promise.all(e.responses.map(async t=>SessionManager.getSessionsByOrigin(t.to).map(i=>i.sendMsg(t).catch())))},DataTrackingService={async trackingBroadcastTransaction(e,a,t){let c="extension_native",i={txnDapp:"Crypto Wallet Extension",dappHost:e.from};const o=await PopupRequestService$1.getRequestById(e.id);o&&(c="extension_dapp",i={txnDapp:(await ConnectSessionService.getDappInfo(o.from))?.clientMeta.name??"",dappHost:o.from}),SegmentService.track({event:"extension_send_transaction",properties:{chainId:a.chainId,chainType:a.chainType,chainCode:t.chainCode,network:t.code,transactionId:a.hash,source:"standalone_extension",app:c,details:i}},{isReportToBackend:!0})}},AptosController={async aptos_fetchAPTAirdrop(e){const{chainId:a,chainType:t,address:c}=await WalletService.getWalletSession();assert$d(t==="aptos","Only support aptos testnet/devnet chain.");const i=await NetworkService.getNetWorkUnsafe(a,t);assert$d(i.explorer?.domain,"Node url is empty, cannot get airdrop"),assert$d(i.extend?.faucetUrl,"Faucet url is empty, cannot get airdrop"),assert$d(c,"Address url is empty, cannot get airdrop");const o=await AptosService.fetchAPTAirdrop({address:c,nodeUrl:i.explorer?.domain,faucetUrl:i.extend.faucetUrl,amount:i.extend.faucetAmount});return setTimeout(()=>BalanceService.refreshBalanceIfNeed(!0),1e3),e.pushResponse({txHash:o,amount:i.extend.faucetAmount??5e4,decimal:8})},async aptos_verifyAddress(e){const{address:a}=e.params[0],t=AptosService.verifyAddress(a);return e.pushResponse(t)},async aptos_getAccountResource(e){const{address:a,coinType:t}=e.params[0];assert$d(a,"address cannot be empty"),assert$d(t,"coinType cannot be empty");const{chainId:c,chainType:i}=await WalletService.getWalletSession(),b=(await NetworkService.getNetWorkUnsafe(c,i))?.rpcUrl;assert$d(b,"RPC url cannot be empty");const u=await AptosService.getAccountResource({address:a,rpcUrl:b,coinType:t});return e.pushResponse(u)},async aptos_getGasPriceOfCurrentNetwork(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession(),i=(await NetworkService.getNetWorkUnsafe(a,t))?.rpcUrl;assert$d(i,"RPC url cannot be empty");const o=await AptosService.getGasPrice(i);return e.pushResponse([{name:"Average",eta:"",fee:o}])},async aptos_simulateTransaction(e){const[{transaction:a,options:t}]=e.params;assert$d(a,"payload cannot be empty");const{chainId:c,chainType:i,address:o="",accountIndex:b,walletType:u="mnemonic"}=await WalletService.getWalletSession(),l=await NetworkService.getNetWorkUnsafe(c,i),{rpcUrl:x,addressType:g,isTestnet:v}=l;assert$d(x,"RPC url cannot be empty");const{privkeyBuffer:E}=await DefiCoreService.getAccounts({accountIndex:b,walletType:u,addressType:g,isTestnet:v}).catch(()=>({privkeyBuffer:void 0})),S=await AptosService.simulateTransaction({rpcUrl:x,address:o,payload:a,privatekey:E,options:t});return e.pushResponse(S)},async aptos_buildSendTransaction(e){const{address:a,value:t,functionName:c,type_arguments:i=[]}=e.params[0];return assert$d(a,"address cannot be empty"),assert$d(t,"amount cannot be empty"),assert$d(c,"functionName cannot be empty"),e.pushResponse({transaction:{type:"entry_function_payload",function:c,type_arguments:i,arguments:[a,t]}})},async aptos_buildRegisterCoin(e){const{contractAddress:a}=e.params[0];return assert$d(a,"contractAddress cannot be empty"),e.pushResponse({transaction:{function:"0x1::managed_coin::register",type_arguments:[a],arguments:[]}})},async aptos_signAndSubmitTransaction(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[{transaction:a,options:t={}},c]=e.params;assert$d(a,"payload cannot be empty");const{gasLimit:i,gasPrice:o,speed:b}=c;assert$d(o,"gasPrice cannot be empty"),assert$d(i,"gasLimit cannot be empty");const{chainId:u,address:l,chainType:x,walletId:g,accountIndex:v,walletType:E="mnemonic"}=await WalletService.getWalletSession();assert$d(u,"chainId cannot be empty"),assert$d(x,"chainType cannot be empty"),assert$d(l,"address cannot be empty"),assert$d(g,"walletId cannot be empty"),assert$d(v,"accountIndex cannot be empty");const S=await NetworkService.getNetWorkUnsafe(u,x);assert$d(S,"network cannot be empty");const{rpcUrl:T,addressType:I,isTestnet:A}=S,O=(await DefiCoreService.getAccounts({accountIndex:v,walletType:E,addressType:I,isTestnet:A})).privkeyBuffer,R=await TransactionService.getAccountNextNonce({rpcUrl:T,address:l,chainId:u,chainType:x}),B=await AptosService.sendRawTransaction({payload:a,rpcUrl:T,address:l,privatekey:O,options:{sequence_number:R.toString(),...t,max_gas_amount:i,gas_unit_price:o}}),M={walletId:g,accountIndex:v,hash:B.hash||"",status:"sent",chainId:u,chainType:"aptos",speed:b,from:l,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(a),aptos:serializeObject(B),txnName:APTOS_TYPE[a.function]||"Smart Contract Call",rawData:a};return await TransactionService.save(M),await PopupRequestService$1.tryAddResponseToDapp(e,{result:B}),DataTrackingService.trackingBroadcastTransaction(e,M,S),e.pushResponse(B.hash)},async aptos_fetchAccountTransactions(e){const{address:a="",chainId:t="",chainType:c=""}=await WalletService.getWalletSession(),i=await NetworkService.getNetWorkUnsafe(t,c),o=await AptosService.fetchAccountTransactions(a,i.rpcUrl);return e.pushResponse(o)},async aptos_signTransaction(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[{transaction:a,options:t={}},c]=e.params;assert$d(a,"payload cannot be empty");const{gasLimit:i,gasPrice:o}=c;assert$d(o,"gasPrice cannot be empty"),assert$d(i,"gasLimit cannot be empty");const{chainId:b,address:u,chainType:l,walletId:x,accountIndex:g,walletType:v="mnemonic"}=await WalletService.getWalletSession();assert$d(b,"chainId cannot be empty"),assert$d(l,"chainType cannot be empty"),assert$d(u,"address cannot be empty"),assert$d(x,"walletId cannot be empty"),assert$d(g,"accountIndex cannot be empty");const E=await NetworkService.getNetWorkUnsafe(b,l);assert$d(E,"network cannot be empty");const{rpcUrl:S,addressType:T,isTestnet:I}=E,C=(await DefiCoreService.getAccounts({accountIndex:g,walletType:v,addressType:T,isTestnet:I})).privkeyBuffer,O=await TransactionService.getAccountNextNonce({rpcUrl:S,address:u,chainId:b,chainType:l}),R=await AptosService.signTransaction({payload:a,rpcUrl:S,address:u,privatekey:C,options:{sequence_number:O.toString(),...t,max_gas_amount:i,gas_unit_price:o}});return await PopupRequestService$1.tryAddResponseToDapp(e,{result:R}),e.pushResponse(R)},async aptos_signMessage(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[{transaction:a}]=e.params;assert$d(a,"payload cannot be empty");const{chainId:t,address:c,chainType:i,walletId:o,accountIndex:b,walletType:u="mnemonic"}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(c,"address cannot be empty"),assert$d(o,"walletId cannot be empty"),assert$d(b,"accountIndex cannot be empty");const l=await NetworkService.getNetWorkUnsafe(t,i);assert$d(l,"network cannot be empty");const{addressType:x,isTestnet:g}=l,E=(await DefiCoreService.getAccounts({accountIndex:b,walletType:u,addressType:x,isTestnet:g})).privkeyBuffer,S=await PopupRequestService$1.getRequestById(e.id),T={privatekey:E,address:c,chainId:t,application:S?.from},I=AptosService.signMessage(T,a);return await PopupRequestService$1.tryAddResponseToDapp(e,{result:I}),e.pushResponse(I)},async aptos_generateTransaction(e){const[{payload:a,sender:t,options:c}]=e.params;assert$d(t,"sender cannot be empty"),assert$d(a,"payload cannot be empty");const{chainId:i,chainType:o}=await WalletService.getWalletSession();assert$d(i,"chainId cannot be empty"),assert$d(o,"chainType cannot be empty");const b=await NetworkService.getNetWorkUnsafe(i,o);assert$d(b,"network cannot be empty");const u=await AptosService.generateTransaction({sender:t,payload:a,options:c,rpcUrl:b.rpcUrl});return e.pushResponse(u)},async aptos_signTransactionMartian(e){const[{transaction:a}]=e.params;assert$d(a,"transaction cannot be empty");const{chainId:t,address:c,chainType:i,walletId:o,accountIndex:b,walletType:u="mnemonic"}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(c,"address cannot be empty"),assert$d(o,"walletId cannot be empty"),assert$d(b,"accountIndex cannot be empty");const l=await NetworkService.getNetWorkUnsafe(t,i);assert$d(l,"network cannot be empty");const{rpcUrl:x,addressType:g,isTestnet:v}=l,S=(await DefiCoreService.getAccounts({accountIndex:b,walletType:u,addressType:g,isTestnet:v})).privkeyBuffer,T=await AptosService.signTransactionMartian({transaction:a,privatekey:S,rpcUrl:x});return await PopupRequestService$1.tryAddResponseToDapp(e,{result:T}),e.pushResponse(T)},async aptos_submitTransactionMartian(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[{transaction:a}]=e.params;assert$d(a,"transaction cannot be empty");const{address:t,chainId:c,chainType:i,walletId:o,accountIndex:b}=await WalletService.getWalletSession();assert$d(c,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(o,"walletId cannot be empty"),assert$d(b,"accountIndex cannot be empty"),assert$d(t,"address cannot be empty");const u=await NetworkService.getNetWorkUnsafe(c,i);assert$d(u,"network cannot be empty");const l=await AptosService.submitTransactionMartian({transaction:a,rpcUrl:u.rpcUrl});return l.sender===t&&await TransactionService.save({walletId:o,accountIndex:b,hash:l.hash||"",status:"sent",chainId:c,chainType:"aptos",speed:"Standard",from:l.sender,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(l.payload),aptos:serializeObject(l),txnName:APTOS_TYPE[l.payload.function]||"Smart Contract Call",rawData:l.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:l}),e.pushResponse(l.hash)},async aptos_signAndSubmitTransactionMartian(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[{transaction:a}]=e.params;assert$d(a,"transaction cannot be empty");const{chainId:t,address:c,chainType:i,walletId:o,accountIndex:b,walletType:u="mnemonic"}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(c,"address cannot be empty"),assert$d(o,"walletId cannot be empty"),assert$d(b,"accountIndex cannot be empty");const l=await NetworkService.getNetWorkUnsafe(t,i);assert$d(l,"network cannot be empty");const{rpcUrl:x,addressType:g,isTestnet:v}=l,S=(await DefiCoreService.getAccounts({accountIndex:b,walletType:u,addressType:g,isTestnet:v})).privkeyBuffer,T=await AptosService.signTransactionMartian({transaction:a,privatekey:S,rpcUrl:x}),I=await AptosService.submitTransactionMartian({transaction:T,rpcUrl:x});return await TransactionService.save({walletId:o,accountIndex:b,hash:I.hash||"",status:"sent",chainId:t,chainType:"aptos",speed:"Standard",from:c,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(I.payload),aptos:serializeObject(I),txnName:APTOS_TYPE[I.payload.function]||"Smart Contract Call",rawData:I.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:I.hash}),e.pushResponse(I.hash)},async aptos_generateSignAndSubmitTransaction(e){const[{payload:a,sender:t,options:c},i]=e.params;assert$d(t,"sender cannot be empty"),assert$d(a,"payload cannot be empty");const{gasLimit:o,gasPrice:b,speed:u}=i;assert$d(b,"gasPrice cannot be empty"),assert$d(o,"gasLimit cannot be empty");const{chainId:l,chainType:x,accountIndex:g,walletId:v,address:E,walletType:S="mnemonic"}=await WalletService.getWalletSession();assert$d(l,"chainId cannot be empty"),assert$d(x,"chainType cannot be empty"),assert$d(E,"address cannot be empty"),assert$d(v,"walletId cannot be empty"),assert$d(g,"accountIndex cannot be empty");const T=await NetworkService.getNetWorkUnsafe(l,x);assert$d(T,"network cannot be empty");const{rpcUrl:I,addressType:A,isTestnet:C}=T,R=(await DefiCoreService.getAccounts({accountIndex:g,walletType:S,addressType:A,isTestnet:C})).privkeyBuffer,B=await TransactionService.getAccountNextNonce({rpcUrl:I,address:E,chainId:l,chainType:x}),M=await AptosService.generateTransaction({sender:t,payload:a,options:{sequence_number:B.toString(),...c,max_gas_amount:o,gas_unit_price:b},rpcUrl:I}),L=await AptosService.signTransactionMartian({transaction:M,privatekey:R,rpcUrl:I}),ee=await AptosService.submitTransactionMartian({transaction:L,rpcUrl:I});return await TransactionService.save({walletId:v,accountIndex:g,hash:ee.hash||"",status:"sent",chainId:l,chainType:"aptos",speed:u,from:E,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(ee.payload),aptos:serializeObject(ee),txnName:APTOS_TYPE[ee.payload.function]||"Smart Contract Call",rawData:ee.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:ee.hash}),e.pushResponse(ee.hash)},async aptos_signGenericTransaction(e){const[{payload:a,options:t={}},c]=e.params;assert$d(a,"payload cannot be empty");const{gasLimit:i,gasPrice:o,speed:b}=c;assert$d(o,"gasPrice cannot be empty"),assert$d(i,"gasLimit cannot be empty");const{chainId:u,chainType:l,accountIndex:x,walletId:g,address:v,walletType:E="mnemonic"}=await WalletService.getWalletSession();assert$d(u,"chainId cannot be empty"),assert$d(l,"chainType cannot be empty"),assert$d(v,"address cannot be empty"),assert$d(g,"walletId cannot be empty"),assert$d(x,"accountIndex cannot be empty");const S=await NetworkService.getNetWorkUnsafe(u,l);assert$d(S,"network cannot be empty");const{rpcUrl:T,addressType:I,isTestnet:A}=S,O=(await DefiCoreService.getAccounts({accountIndex:x,walletType:E,addressType:I,isTestnet:A})).privkeyBuffer,R=await TransactionService.getAccountNextNonce({rpcUrl:T,address:v,chainId:u,chainType:l}),B=await AptosService.generateTransaction({sender:v,payload:{type:"entry_function_payload",function:a.func,arguments:a.args,type_arguments:a.type_args},options:{sequence_number:R.toString(),...t,max_gas_amount:i,gas_unit_price:o},rpcUrl:T}),M=await AptosService.signTransactionMartian({transaction:B,privatekey:O,rpcUrl:T}),L=await AptosService.submitTransactionMartian({transaction:M,rpcUrl:T});return await TransactionService.save({walletId:g,accountIndex:x,hash:L.hash||"",status:"sent",chainId:u,chainType:"aptos",speed:b,from:v,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(L.payload),aptos:serializeObject(L),txnName:APTOS_TYPE[L.payload.function]||"Smart Contract Call",rawData:L.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:{success:L.success,txnHash:L.hash,vm_status:L.vm_status}}),e.pushResponse(L.hash)},async aptos_getAccount(e){const[{address:a}]=e.params;assert$d(a,"address cannot be empty");const{chainId:t,chainType:c}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(c,"chainType cannot be empty");const i=await NetworkService.getNetWorkUnsafe(t,c);assert$d(i,"network cannot be empty");const o=await AptosService.getAccount({address:a,rpcUrl:i.rpcUrl});return e.pushResponse(o)},async aptos_getChainId(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession();assert$d(a,"chainId cannot be empty"),assert$d(t,"chainType cannot be empty");const c=await NetworkService.getNetWorkUnsafe(a,t);assert$d(c,"network cannot be empty");const i=await AptosService.getChainId({rpcUrl:c.rpcUrl});return e.pushResponse({chainId:i})},async aptos_getLedgerInfo(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession();assert$d(a,"chainId cannot be empty"),assert$d(t,"chainType cannot be empty");const c=await NetworkService.getNetWorkUnsafe(a,t);assert$d(c,"network cannot be empty");const i=await AptosService.getLedgerInfo({rpcUrl:c.rpcUrl});return e.pushResponse(i)},async aptos_getTransactions(e){const[{query:a}]=e.params,{chainId:t,chainType:c}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(c,"chainType cannot be empty");const i=await NetworkService.getNetWorkUnsafe(t,c);assert$d(i,"network cannot be empty");const o=await AptosService.getTransactions({query:a,rpcUrl:i.rpcUrl});return e.pushResponse(o)},async aptos_getTransactionByHash(e){const[{txnHash:a}]=e.params;assert$d(a,"txnHash cannot be empty");const{chainId:t,chainType:c}=await WalletService.getWalletSession();assert$d(t,"chainId cannot be empty"),assert$d(c,"chainType cannot be empty");const i=await NetworkService.getNetWorkUnsafe(t,c);assert$d(i,"network cannot be empty");const o=await AptosService.getTransactionByHash({txnHash:a,rpcUrl:i.rpcUrl});return e.pushResponse(o)},async aptos_getAccountTransactions(e){const[{address:a,query:t}]=e.params;assert$d(a,"address cannot be empty");const{chainId:c,chainType:i}=await WalletService.getWalletSession();assert$d(c,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty");const o=await NetworkService.getNetWorkUnsafe(c,i);assert$d(o,"network cannot be empty");const b=await AptosService.getTransactions({query:t,rpcUrl:o.rpcUrl});return e.pushResponse(b)},async aptos_getAccountResources(e){const[{address:a,query:t}]=e.params;assert$d(a,"address cannot be empty");const{chainId:c,chainType:i}=await WalletService.getWalletSession();assert$d(c,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty");const o=await NetworkService.getNetWorkUnsafe(c,i);assert$d(o,"network cannot be empty");const b=await AptosService.getAccountResources({address:a,query:t,rpcUrl:o.rpcUrl});return e.pushResponse(b)},async aptos_createCollection(e){const[{name:a,description:t,url:c,...i},o]=e.params;assert$d(a,"name cannot be empty"),assert$d(t,"description cannot be empty"),assert$d(c,"url cannot be empty");const{gasLimit:b,gasPrice:u,speed:l}=o;assert$d(u,"gasPrice cannot be empty"),assert$d(b,"gasLimit cannot be empty");const{chainId:x,chainType:g,accountIndex:v,walletId:E,address:S,walletType:T="mnemonic"}=await WalletService.getWalletSession();assert$d(x,"chainId cannot be empty"),assert$d(g,"chainType cannot be empty"),assert$d(E,"walletId cannot be empty"),assert$d(S,"address cannot be empty"),assert$d(v,"accountIndex cannot be empty");const I=await NetworkService.getNetWorkUnsafe(x,g);assert$d(I,"network cannot be empty");const{rpcUrl:A,addressType:C,isTestnet:O}=I,B=(await DefiCoreService.getAccounts({accountIndex:v,walletType:T,addressType:C,isTestnet:O})).privkeyBuffer,{txnHash:M,txn:L}=await AptosService.createCollection({name:a,description:t,url:c,rpcUrl:A,privatekey:B,...i,extraArgs:{...i.extraArgs,gasUnitPrice:u,maxGasAmount:b}});return await TransactionService.save({walletId:E,accountIndex:v,hash:M||"",status:"sent",chainId:x,chainType:"aptos",speed:l,from:S,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(L.payload),aptos:serializeObject(L),txnName:APTOS_TYPE[L.payload.function]||"Smart Contract Call",rawData:L.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:M}),e.pushResponse(M)},async aptos_createToken(e){const[{collectionName:a,name:t,description:c,supply:i,url:o,...b},u]=e.params;assert$d(a,"collectionName cannot be empty"),assert$d(i,"supply cannot be empty"),assert$d(t,"name cannot be empty"),assert$d(c,"description cannot be empty"),assert$d(o,"url cannot be empty");const{gasLimit:l,gasPrice:x,speed:g}=u;assert$d(x,"gasPrice cannot be empty"),assert$d(l,"gasLimit cannot be empty");const{chainId:v,chainType:E,accountIndex:S,walletId:T,address:I,walletType:A="mnemonic"}=await WalletService.getWalletSession();assert$d(v,"chainId cannot be empty"),assert$d(E,"chainType cannot be empty"),assert$d(T,"walletId cannot be empty"),assert$d(I,"address cannot be empty"),assert$d(S,"accountIndex cannot be empty");const C=await NetworkService.getNetWorkUnsafe(v,E);assert$d(C,"network cannot be empty");const{rpcUrl:O,addressType:R,isTestnet:B}=C,L=(await DefiCoreService.getAccounts({accountIndex:S,walletType:A,addressType:R,isTestnet:B})).privkeyBuffer,{txnHash:ee,txn:z}=await AptosService.createToken({collectionName:a,name:t,description:c,supply:i,url:o,rpcUrl:O,privatekey:L,...b,extraArgs:{...b.extraArgs,gasUnitPrice:x,maxGasAmount:l}});return await TransactionService.save({walletId:T,accountIndex:S,hash:ee||"",status:"sent",chainId:v,chainType:"aptos",speed:g,from:I,createTime:Date.now(),updateTime:Date.now(),to:AptosService.getTargetAddress(z.payload),aptos:serializeObject(z),txnName:APTOS_TYPE[z.payload.function]||"Smart Contract Call",rawData:z.payload}),await PopupRequestService$1.tryAddResponseToDapp(e,{result:ee}),e.pushResponse(ee)}},BalanceController={async balance_currencies(e){const a=e.params[0]||await NetworkService.getNetWorkUnsafe(),t=await CurrencyService.cacheCurrencyRequest(a);return e.pushResponse(t)},async balance_liveRatesTiers(e){const a=e.params[0],t=await BalanceService.fetchLiveRatesTiers(a);return e.pushResponse(t)},async balance_refreshTokenBalance(e){const{currencyId:a}=e.params[0],t=await CurrencyService.getCurrencyFromLocal({id:a});if(!t)return;const{walletId:c,chainId:i,chainType:o,address:b,accountIndex:u=""}=await WalletService.getWalletSession();assert$d.ok(c,"balance_refreshCurrency: walletId can not be null"),assert$d.ok(i,"balance_refreshCurrency: chainId can not be null"),assert$d.ok(o,"balance_refreshCurrency: chainType can not be null"),assert$d.ok(b,"balance_refreshCurrency: address can not be null");const l=await NetworkService.getNetWorkUnsafe(i,o);if(l.chainType=="eth")EthBalanceService.fetchSpecialTokenBalance({walletAddress:b,currencies:[t],network:l,walletId:c,isFullRefresh:!1,accountIndex:u});else if(l.chainType=="btc")BtcBalanceService.fetchTokenBalance({walletId:c,chainId:i,chainType:o,address:b,accountIndex:u});else return;return e.pushResponse("success")}},BridgeController={async bridge_getSession(e){const a=await BridgeWalletService.getBridgeSession();return e.pushResponse(a)}},BtcController={async btc_verifyAddress(e){const a=await BtcService.verifyAddress(e.params[0]);return e.pushResponse(a)},async btc_buildSendTransaction(e){const{toAddress:a,amount:t,feeRate:c}=e.params[0],i=await BtcTransactionService.buildSendBtcTx({toAddress:a,amount:amountBtcToSatoshi(t),feeRate:c});return e.pushResponse({...i,reqParams:{toAddress:a,amount:t,feeRate:c}})},async btc_buildSendBrc20Transaction(e){const{toAddress:a,inscriptionIds:t,feeRate:c,amount:i,currency:o}=e.params[0],b=await BtcTransactionService.buildSendInscriptionsTx({toAddress:a,inscriptionIds:t,feeRate:c});return b.txPayload.summary.brc20={op:"transfer",ticker:o.name,amount:i,decimal:o.tokenDecimal},e.pushResponse({...b,reqParams:{toAddress:a,inscriptionIds:t,feeRate:c,amount:i,currency:o}})},async btc_sendTransaction(e){const[{rawTx:a,txPayload:t},c]=e.params,{speed:i}=c,{chainId:o,walletId:b,accountIndex:u,chainType:l}=await WalletService.getWalletSession(),x=await NetworkService.getNetWorkUnsafe(o,l);assert$d(b,"walletId can not be null"),assert$d(u,"accountIndex can not be null"),assert$d(l,"chainType can not be null"),assert$d(o,"chainId can not be null"),await BtcService.broadcast(a);const v=src$4.Transaction.fromHex(a).getId(),E={btc:t,hash:v,walletId:b,accountIndex:u,status:"sent",chainType:"btc",chainId:o,speed:i,from:t.summary.fromAddress??"",to:t.summary.toAddress??"",txnName:"Send",createTime:Date.now(),updateTime:Date.now(),rawData:a};return await TransactionService.save(E),DataTrackingService.trackingBroadcastTransaction(e,E,x),e.pushResponse(v)},async btc_getFeeRate(e){const a=await BtcService.getFeeRate();return e.pushResponse(a)},async btc_getBrc20TransferableInscriptions(e){const{ticker:a}=e.params[0],t=await BtcBalanceService.getBrc20TransferableInscriptions({ticker:a});return e.pushResponse(t)},async btc_getBrc20TokenInfo(e){const a=await BtcService.getBrc20TokenInfo(e.params[0]);return e.pushResponse(a)}},{hasOwnProperty}=Object.prototype,encode=(e,a={})=>{typeof a=="string"&&(a={section:a}),a.align=a.align===!0,a.newline=a.newline===!0,a.sort=a.sort===!0,a.whitespace=a.whitespace===!0||a.align===!0,a.platform=a.platform||typeof browserExports<"u"&&browserExports.platform,a.bracketedArray=a.bracketedArray!==!1;const t=a.platform==="win32"?`\r
`:`
`,c=a.whitespace?" = ":"=",i=[],o=a.sort?Object.keys(e).sort():Object.keys(e);let b=0;a.align&&(b=safe(o.filter(x=>e[x]===null||Array.isArray(e[x])||typeof e[x]!="object").map(x=>Array.isArray(e[x])?`${x}[]`:x).concat([""]).reduce((x,g)=>safe(x).length>=safe(g).length?x:g)).length);let u="";const l=a.bracketedArray?"[]":"";for(const x of o){const g=e[x];if(g&&Array.isArray(g))for(const v of g)u+=safe(`${x}${l}`).padEnd(b," ")+c+safe(v)+t;else g&&typeof g=="object"?i.push(x):u+=safe(x).padEnd(b," ")+c+safe(g)+t}a.section&&u.length&&(u="["+safe(a.section)+"]"+(a.newline?t+t:t)+u);for(const x of i){const g=splitSections(x,".").join("\\."),v=(a.section?a.section+".":"")+g,E=encode(e[x],{...a,section:v});u.length&&E.length&&(u+=t),u+=E}return u};function splitSections(e,a){var t=0,c=0,i=0,o=[];do if(i=e.indexOf(a,t),i!==-1){if(t=i+a.length,i>0&&e[i-1]==="\\")continue;o.push(e.slice(c,i)),c=i+a.length}while(i!==-1);return o.push(e.slice(c)),o}const decode=(e,a={})=>{a.bracketedArray=a.bracketedArray!==!1;const t=Object.create(null);let c=t,i=null;const o=/^\[([^\]]*)\]\s*$|^([^=]+)(=(.*))?$/i,b=e.split(/[\r\n]+/g),u={};for(const x of b){if(!x||x.match(/^\s*[;#]/)||x.match(/^\s*$/))continue;const g=x.match(o);if(!g)continue;if(g[1]!==void 0){if(i=unsafe(g[1]),i==="__proto__"){c=Object.create(null);continue}c=t[i]=t[i]||Object.create(null);continue}const v=unsafe(g[2]);let E;a.bracketedArray?E=v.length>2&&v.slice(-2)==="[]":(u[v]=(u?.[v]||0)+1,E=u[v]>1);const S=E?v.slice(0,-2):v;if(S==="__proto__")continue;const T=g[3]?unsafe(g[4]):!0,I=T==="true"||T==="false"||T==="null"?JSON.parse(T):T;E&&(hasOwnProperty.call(c,S)?Array.isArray(c[S])||(c[S]=[c[S]]):c[S]=[]),Array.isArray(c[S])?c[S].push(I):c[S]=I}const l=[];for(const x of Object.keys(t)){if(!hasOwnProperty.call(t,x)||typeof t[x]!="object"||Array.isArray(t[x]))continue;const g=splitSections(x,".");c=t;const v=g.pop(),E=v.replace(/\\\./g,".");for(const S of g)S!=="__proto__"&&((!hasOwnProperty.call(c,S)||typeof c[S]!="object")&&(c[S]=Object.create(null)),c=c[S]);c===t&&E===v||(c[E]=t[x],l.push(x))}for(const x of l)delete t[x];return t},isQuoted=e=>e.startsWith('"')&&e.endsWith('"')||e.startsWith("'")&&e.endsWith("'"),safe=e=>typeof e!="string"||e.match(/[=\r\n]/)||e.match(/^\[/)||e.length>1&&isQuoted(e)||e!==e.trim()?JSON.stringify(e):e.split(";").join("\\;").split("#").join("\\#"),unsafe=(e,a)=>{if(e=(e||"").trim(),isQuoted(e)){e.charAt(0)==="'"&&(e=e.slice(1,-1));try{e=JSON.parse(e)}catch{}}else{let t=!1,c="";for(let i=0,o=e.length;i<o;i++){const b=e.charAt(i);if(t)"\\;#".indexOf(b)!==-1?c+=b:c+="\\"+b,t=!1;else{if(";#".indexOf(b)!==-1)break;b==="\\"?t=!0:c+=b}}return t&&(c+="\\"),c.trim()}return e};var ini={parse:decode,decode,stringify:encode,encode,safe,unsafe};const CDCQRApi={async _trace(){const e=await fetch("https://crypto.com/cdn-cgi/trace").then(a=>a.text());return ini.parse(e)},async createQRSession(e){const{ethAddress:a}=e,t=await CDCQRApi._trace();return(await request$5("/extension/ncw-api/api/cdc/authnz/v1/qr-sessions",{method:"POST",data:{ott:crypto$5.randomBytes(32).toString("hex"),origin_ip:t.ip,origin_ip_region:t.loc,user_agent:`Crypto.com Wallet Extension ${SERVER_GLOBAL_ENV.config.appVersionName}`,metadata:{eth_addr:a}}})).data},async getQRStatus(e){const{sign:a,data:t}=e;return(await request$5("/extension/ncw-api/api/cdc/authnz/v1/public/qr-sessions",{method:"POST",data:{sign:a,data:t}})).data},async getCDCAppAccessToken(e){const{sign:a,data:t}=e,i=await request$5("/extension/ncw-api/api/cdc/authnz/v1/oauth2/token",{method:"POST",data:{sign:a,data:t}});if(!i.data.ok)throw new Error(i.data.error);return i.data}},request$1=extend$1({});request$1.interceptors.request.use((e,a)=>({url:e,options:{...a,headers:{...a.headers,"CDC-User-Agent":`Crypto.com Wallet Extension (${SERVER_GLOBAL_ENV.config.appVersionName.replace(/\D/g,"")})`}}}));const CDCConnectApi={async getAccessTokenStatus(e){const{accessToken:a}=e;return(await request$1("/extension/ncw-api/api/cdc/oauth/token/info",{headers:{"CDC-Authorization":`Bearer ${a}`}})).data},async connect(e){const{accessToken:a,ncwAccessToken:t}=e;return(await request$1("/extension/ncw-api/api/cdc/external_application_account/create",{headers:{"CDC-Authorization":`Bearer ${a}`},method:"POST",data:{access_token:t}})).data},async disconnect(e){const{accessToken:a}=e;return(await request$1("/extension/ncw-api/api/cdc/external_application_account/disconnect",{headers:{"CDC-Authorization":`Bearer ${a}`},method:"POST",data:{application_type_id:"ncw"}})).data}},CDCNCWApi={async getAccessToken(e){const{walletId:a}=e;return(await request$5("/extension/ncw-api/api/access_token",{params:{device_uuid:a}})).data}},request=extend$1({});request.interceptors.request.use((e,a)=>({url:e,options:{...a,headers:{...a.headers,"CDC-User-Agent":`Crypto.com Wallet Extension (${SERVER_GLOBAL_ENV.config.appVersionName.replace(/\D/g,"")})`}}}));const CDCPurchaseApi={async getCreditCards(e){const{accessToken:a}=e;return(await request("/extension/ncw-api/cdc/api/credit_cards",{headers:{"CDC-Authorization":`Bearer ${a}`}})).data},async createOrder(e){const{accessToken:a,creditCardId:t,networkId:c,currency:i,amount:o,address:b,ethAddress:u,deviceUuid:l}=e;return(await request("/extension/ncw-api/cdc/api/defi_purchase/orders/create",{headers:{"CDC-Authorization":`Bearer ${a}`},method:"POST",data:{to_currency:i,from_currency:"USD",payment_card_id:t,to_amount:o.toString(),ncw_source:"ncw_extension",input_type:"crypto",transfer_address:b,max_amount_clicked:"false",network_id:c,ncw_eth_address:u,device_uuid:l}})).data},async createPurchase(e){const{accessToken:a,orderId:t,passcode:c}=e;return(await request("/extension/ncw-api/api/cdc/defi_purchases/create",{headers:{"CDC-Authorization":`Bearer ${a}`},method:"POST",data:{orderId:t,passcode:encryptPasscode({passcode:c})}})).data},async getLiveRates(e){const{accessToken:a,currency:t}=e;return(await request("/extension/ncw-api/cdc/api/live_rates/tiers",{headers:{"CDC-Authorization":`Bearer ${a}`},params:{to:t,from:"USD",transaction_type:"defi_purchase"}})).data},async getLimits(e){const{accessToken:a,currency:t,networkId:c}=e;return(await request("/extension/ncw-api/cdc/api/defi_purchase/limits",{headers:{"CDC-Authorization":`Bearer ${a}`},params:{currency:t,native_currency:"USD",network_id:c}})).data},async getThresholds(e){const{accessToken:a,currency:t,networkId:c}=e;return(await request("/extension/ncw-api/cdc/api/defi_purchase/thresholds",{headers:{"CDC-Authorization":`Bearer ${a}`},params:{currency:t,native_currency:"USD",network_id:c}})).data}};class AuthTokenModelDB extends $n{cdcAppAuthTokens;cdcAppPasscodeLock;constructor(){super("auth-token-model"),this.version(1).stores({cdcAppAuthTokens:"++id, walletId, tokenGenericDataId"}),this.version(2).stores({cdcAppAuthTokens:"++id, walletId, tokenGenericDataId",cdcAppPasscodeLock:"++id, walletId"})}}const AuthTokenModel=new AuthTokenModelDB,CDCService={async saveTokenData(e){const{walletId:a,cdcToken:t,ncwToken:c}=e,i=await PasswordService.getPasswordOfSession(),o=await AuthTokenModel.cdcAppAuthTokens.where({walletId:a}).first(),b=await KeyringModel.genericData.where({id:o?.tokenGenericDataId||-1}).first();if(b)return await KeyringService.updateGenericData({id:b.id,data:{cdcToken:t,ncwToken:c},password:i});const u=await KeyringService.createGenericData({id:o?.tokenGenericDataId,key:a,type:"cdcAppAuthToken",data:{cdcToken:t,ncwToken:c},password:i});return o||await AuthTokenModel.cdcAppAuthTokens.put({walletId:a,tokenGenericDataId:u,createTime:Date.now()}),u},async removeTokenData(e){const{walletId:a}=e,t=await AuthTokenModel.cdcAppAuthTokens.where({walletId:a}).first();return t?(await KeyringService.deleteGenericData(t.tokenGenericDataId),await AuthTokenModel.cdcAppAuthTokens.where({walletId:a}).delete(),!0):!1},async getTokenData(e){const{walletId:a}=e,t=await PasswordService.getPasswordOfSession(),c=await AuthTokenModel.cdcAppAuthTokens.where({walletId:a}).first();if(!c)return null;try{return await KeyringService.getGenericDataById({id:c.tokenGenericDataId,password:t})}catch{return await AuthTokenModel.cdcAppAuthTokens.where({walletId:a}).delete(),null}},async getPasscodeLock(e){const{walletId:a}=e;return await AuthTokenModel.cdcAppPasscodeLock.where({walletId:a}).first()},async savePasscodeLock(e){const{walletId:a,expireTime:t,maximumNumberOfVerificationAttempts:c}=e,i=await CDCService.getPasscodeLock({walletId:a});return await AuthTokenModel.cdcAppPasscodeLock.put({id:i?.id,walletId:a,expireTime:t,maximumNumberOfVerificationAttempts:c})},async createQRSession(e){const{walletId:a}=e,{wallets:t}=await WalletService.getWalletSession(),i=t.find(o=>o.walletId===a)?.addresses.eth?.address||"";return await CDCQRApi.createQRSession({ethAddress:i})},async _signData(e){const{data:a,privatekey:t}=e,c=await EthereumService.signRaw({dataToSign:JSON.stringify(a),privatekey:t}),i=buffer$2.Buffer.from(JSON.stringify(a)).toString("base64");return{sign:c,data:i}},async getQRStatus(e){const{walletId:a,sessionId:t}=e,{wallets:c}=await WalletService.getWalletSession(),i=c.find(l=>l.walletId===a),b=(await DefiCoreService.getAccounts({accountIndex:i?.accountIndex,walletType:i?.walletType,addressType:"eth",isTestnet:!1})).privkey,u={eth_addr:i?.addresses.eth?.address,session_id:t};return await CDCQRApi.getQRStatus(await this._signData({data:u,privatekey:b}))},async getCDCTokenFromQR(e){const{walletId:a,sessionId:t}=e,{wallets:c}=await WalletService.getWalletSession(),i=c.find(l=>l.walletId===a),b=(await DefiCoreService.getAccounts({accountIndex:i?.accountIndex,walletType:i?.walletType,addressType:"eth",isTestnet:!1})).privkey,u={eth_addr:i?.addresses.eth?.address,session_id:t};return await CDCQRApi.getCDCAppAccessToken(await this._signData({data:u,privatekey:b}))},async getNCWToken(e){const{walletId:a}=e;return await CDCNCWApi.getAccessToken({walletId:a})},async getCDCTokenStatus(e){const{walletId:a}=e,t=await CDCService.getTokenData({walletId:a});if(!t)return null;const{cdcToken:c}=t;try{if(await CDCConnectApi.getAccessTokenStatus({accessToken:c}))return"connected"}catch(i){if(i.code==40003)return"invalid";throw i}return null},async connectCDCApp(e){const{walletId:a}=e,t=await CDCService.getTokenData({walletId:a});assert$d(t,`Token data not found for wallet '${a}'`);const{cdcToken:c,ncwToken:i}=t;return await CDCConnectApi.connect({accessToken:c,ncwAccessToken:i})},async disconnectCDCApp(e){const{walletId:a}=e,t=await CDCService.getTokenData({walletId:a});assert$d(t,`Token data not found for wallet '${a}'`);const{cdcToken:c}=t;return await CDCConnectApi.disconnect({accessToken:c})},async getTokensAndConnectCDCApp(e){const{walletId:a,sessionId:t}=e,c=(await CDCService.getCDCTokenFromQR({walletId:a,sessionId:t})).accessToken;assert$d(c,`Failed to get CDC token for wallet '${a}'`);const i=(await CDCService.getNCWToken({walletId:a})).accessToken;return assert$d(i,`Failed to get NCW token for wallet '${a}'`),await CDCService.saveTokenData({walletId:a,cdcToken:c,ncwToken:i}),await CDCService.connectCDCApp({walletId:a})}},CDCController={async cdc_saveTokenData(e){const a=await CDCService.saveTokenData(e.params[0]);return e.pushResponse(a)},async cdc_removeTokenData(e){const a=await CDCService.removeTokenData(e.params[0]);return e.pushResponse(a)},async cdc_getTokenData(e){const a=await CDCService.getTokenData(e.params[0]);return e.pushResponse(a)},async cdc_getPasscodeLock(e){const a=await CDCService.getPasscodeLock(e.params[0]);return e.pushResponse(a)},async cdc_savePasscodeLock(e){const a=await CDCService.savePasscodeLock(e.params[0]);return e.pushResponse(a)},async cdc_createQRSession(e){const a=await CDCService.createQRSession(e.params[0]);return e.pushResponse(a)},async cdc_getQRStatus(e){const a=await CDCService.getQRStatus(e.params[0]);return e.pushResponse(a)},async cdc_getCDCTokenFromQR(e){const a=await CDCService.getCDCTokenFromQR(e.params[0]);return e.pushResponse(a)},async cdc_getNCWToken(e){const a=await CDCService.getNCWToken(e.params[0]);return e.pushResponse(a)},async cdc_getCDCTokenStatus(e){const a=await CDCService.getCDCTokenStatus(e.params[0]);return e.pushResponse(a)},async cdc_connectCDCApp(e){const a=await CDCService.connectCDCApp(e.params[0]);return e.pushResponse(a)},async cdc_disconnectCDCApp(e){const a=await CDCService.disconnectCDCApp(e.params[0]);return e.pushResponse(a)},async cdc_getTokensAndConnectCDCApp(e){const a=await CDCService.getTokensAndConnectCDCApp(e.params[0]);return e.pushResponse(a)}},appConfigApi={async getFeatureFlags(){return(await request$5("/extension/ncw-api/api/v1/public/app/config")).data}},ConfigController={async config_getFeatureFlags(e){const a=await appConfigApi.getFeatureFlags();return e.pushResponse(a)}};function parseCosmosRawMessage(e){const a=e[0],t={amount:"0",txnName:""};return t.txnName=a.typeUrl.split(".").pop()||"Send",a.typeUrl==="/cosmos.bank.v1beta1.MsgSend"&&(t.amount=a.value.amount[0].amount),t}const CosmosController={async cosmos_verifyAddress(e){assert$d(e.rpcReq,"Params cannot be empty");const{address:a}=e.params[0],{address:t=""}=await WalletService.getWalletSession(),c={address:a,walletAddress:t},i=await CosmosService.verifyAddress(c);return e.pushResponse(i)},async cosmos_buildSendTransaction(e){assert$d(e.rpcReq,"Params cannot be empty");const{address:a,amount:t,memo:c}=e.params[0];assert$d(a,"address cannot be empty"),assert$d(t,"amount cannot be empty");const{address:i=""}=await WalletService.getWalletSession(),b={to:a,signDoc:{body:{memo:c||"",messages:[{typeUrl:"/cosmos.bank.v1beta1.MsgSend",value:{fromAddress:i,toAddress:a,amount:t}}]}}};return e.pushResponse(b)},async cosmos_buildSignMessageOfLedger(e){assert$d(e.rpcReq?.params,"Params cannot be empty");const[a,t]=e.params;assert$d(a,"tx cannot be empty"),assert$d(t,"gasInfo cannot be empty");const{signDoc:{body:{memo:c,messages:i}}}=a,{address:o,chainId:b,chainType:u,accountIndex:l}=await WalletService.getWalletSession();assert$d(o,"address cannot be empty"),assert$d(b,"chainId cannot be empty"),assert$d(u,"chainType cannot be empty"),assert$d(l,"accountIndex cannot be empty");const x=await NetworkService.getNetWorkUnsafe(b,u);assert$d(x,"network cannot be empty");const g=await WalletService.getCurrentWallet();assert$d(g,"wallet cannot be empty");const{pubkey:v}=g.addresses[x.addressType],E=await CosmosService.generateSinDocMsgFromLedger({address:o,rpcUrl:x.rpcUrl,messages:i,memo:c,sendFee:JSON.parse(t.gasPrice??""),publicKey:v});return e.pushResponse(E)},async cosmos_sendTransaction(e){assert$d(e.rpcReq?.params,"Params cannot be empty");const[a,t,c]=e.params;assert$d(a,"tx cannot be empty"),assert$d(t,"gasInfo cannot be empty");const{signDoc:{body:{memo:i,messages:o}}}=a,{chainId:b,address:u,walletId:l="",accountIndex:x="0",chainType:g,walletType:v="mnemonic"}=await WalletService.getWalletSession();assert$d(u,"from address cannot be empty"),assert$d(b,"chainId cannot be empty"),assert$d(g,"chainType cannot be empty"),assert$d(x,"accountIndex cannot be empty");const E=await NetworkService.getNetWorkUnsafe(b,g);assert$d(E,"network cannot be empty");const{addressType:S,rpcUrl:T,isTestnet:I}=E,A=await CosmosService.getNetworkIndex({addressType:S});assert$d(A,"networkIndex cannot be empty");const C={privatekey:"",addressType:S,rpcUrl:T,chainId:b,from:u,messages:o,memo:i,sendFee:JSON.parse(t.gasPrice??"")},O=async()=>{if(v==="hardware"){const P=await WalletService.getCurrentWallet();assert$d(P,"wallet cannot be empty");const{pubkey:D}=P.addresses[S];return CosmosService.generateBroadcastDataFromLedger({address:u,rpcUrl:T,signature:c,publicKey:D,messages:o,sendFee:C.sendFee,memo:i})}const oe=await DefiCoreService.getAccounts({accountIndex:x,walletType:v,addressType:S,isTestnet:I});assert$d(oe,"account cannot be empty");const W=oe.privkeyBuffer.toString("hex");return C.privatekey=W,CosmosService.signTransaction(C)},{txId:R,txRawOfBase64:B,txRaw:M}=await O();a.signerAddress||await CosmosService.broadcast({rpcUrl:T,txRaw:M,txId:R});const{txnName:L,amount:ee}=parseCosmosRawMessage(o),z={hash:R,walletId:l,accountIndex:x,from:u,speed:t.speed,to:a.to,txnName:L,chainId:b,status:"sent",rawData:M,chainType:"cosmos",createTime:Date.now(),updateTime:Date.now(),cosmos:{amount:ee,...a,sendFee:C.sendFee}};return await TransactionService.save(z),DataTrackingService.trackingBroadcastTransaction(e,z,E),await PopupRequestService$1.tryAddResponseToDapp(e,{result:B}),e.pushResponse(R)},async cosmos_getAccounts(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession();assert$d(a,"chainId cannot be empty"),assert$d(t,"chainType cannot be empty");const c=await WalletService.getCurrentWallet();assert$d(c,"wallet cannot be empty");const i=await NetworkService.getNetWorkUnsafe(a?.toString(),t),o=c.addresses[i?.addressType??""],b=await WalletService.getWalletSession();return e.pushResponse({...b,...o})},async cosmos_signDirect(e){assert$d(e.rpcReq,"Params cannot be empty");const{fee:a,gasLimit:t,chainId:c,accountNumber:i,sequence:o,bodyBytes:b}=e.params[0],{accountIndex:u="0",walletType:l="mnemonic",chainType:x}=await WalletService.getWalletSession();assert$d(u,"accountIndex cannot be empty");const g=await NetworkService.getNetWork(c,x);assert$d(g,"network cannot be empty");const{addressType:v,isTestnet:E}=g,T=(await DefiCoreService.getAccounts({accountIndex:u,walletType:l,addressType:v,isTestnet:E})).privkeyBuffer.toString("hex"),I={accountNumber:i,sequence:o,bodyBytes:b,privatekey:T,fee:a,gasLimit:t,chainId:c},A=await CosmosService.signDirect(I);return e.pushResponse(A)},async cosmos_signAmino(e){assert$d(e.rpcReq,"Params cannot be empty");const{signDoc:a,address:t}=e.params[0],{accountIndex:c="0",walletType:i="mnemonic",chainId:o,chainType:b}=await WalletService.getWalletSession();assert$d(c,"accountIndex cannot be empty");const u=await NetworkService.getNetWork(o,b);assert$d(u,"network cannot be empty");const{addressType:l,isTestnet:x}=u,v=(await DefiCoreService.getAccounts({accountIndex:c,walletType:i,addressType:l,isTestnet:x})).privkeyBuffer.toString("hex"),E={address:t,privatekey:v,signDoc:a},S=await CosmosService.signAmino(E);return e.pushResponse(S)},async cosmos_simulateTransaction(e){const{transactionConfig:a}=e.params[0];assert$d(a,"transactionConfig cannot be empty");const{signDoc:{body:{memo:t,messages:[c]}}}=a;assert$d(c,"sendMsg cannot be empty");const{chainId:i,chainType:o,address:b}=await WalletService.getWalletSession();assert$d(b,"address cannot be empty");const{rpcUrl:u,addressType:l}=await NetworkService.getNetWorkUnsafe(i,o);assert$d(u,"rpcUrl cannot be empty");const x=await WalletService.getCurrentWallet();assert$d(x,"wallet cannot be empty");const{pubkey:g}=x.addresses[l],v=await CosmosService.simulateTransaction({pubkey:g,rpcUrl:u,address:b,sendMsg:c,memo:t});return e.pushResponse(v)},async cosmos_getBalance(e){assert$d(e.rpcReq,"Params cannot be empty");const{rpcUrl:a,address:t,denom:c}=e.params[0];assert$d(a,"RPC url cannot be empty"),assert$d(t,"address cannot be empty");const i=await CosmosService.getBalance({rpcUrl:a,address:t,denom:c});return e.pushResponse(i)}},CurrencyController={async currency_getByParams(e){const a=e.rpcReq?.params[0],t=await CurrencyService.getCurrencyFromLocal(a);if(!t&&a.contractAddress){const{chainId:c,chainType:i}=await WalletService.getWalletSession();assert$d.ok(c,"chainId can not be empty"),assert$d.ok(i,"chainType can not be empty");const o=await NetworkService.getNetWorkUnsafe(c,i);assert$d.ok(o,"network can not be empty");const b=await CurrencyService.getCurrencyFromOnline(c,i,a.contractAddress,o.rpcUrl);return e.pushResponse(b)}return e.pushResponse(t)},async currency_getByContractAddress(e){const a=e.params[0],{chainId:t,chainType:c}=await WalletService.getWalletSession();assert$d.ok(t,"chainId can not be empty"),assert$d.ok(c,"chainType can not be empty");const i=await NetworkService.getNetWorkUnsafe(t,c);assert$d.ok(i,"network can not be empty");const o=a.map(async u=>{const l=await CurrencyService.getCurrencyFromLocal({contractAddress:u});return!l&&u?CurrencyService.getCurrencyFromOnline(t,c,u,i.rpcUrl):l}),b=await Promise.all(o);return e.pushResponse(b)},async currency_searchCurrenciesByKeyword(e){const{keyword:a="",pageIndex:t=0,pageSize:c=10}=e.params[0]??{},{chainId:i,chainType:o,walletId:b}=await WalletService.getWalletConfig();assert$d.ok(i,"chainId can not be empty"),assert$d.ok(o,"chainType can not be empty"),assert$d.ok(b,"walletId can not be empty");const u=await CurrencyService.getAddedCurrencyIds(i,o,b),{currencies:l,total:x}=await CurrencyService.searchCurrenciesByKeyword(i,o,a,t*c,c),g=l.map(v=>({...v,isAdded:u.includes(v.id)}));return e.pushResponse({currencies:g,total:x})},async currency_getNativeCurrency(e){const{chainId:a,chainType:t}=await WalletService.getWalletConfig();assert$d.ok(a,"chainId can not be empty"),assert$d.ok(t,"chainType can not be empty");const c=await CurrencyService.getNativeCurrency(a,t),i=await CurrencyService.getNativeWrapCurrency(a,t);return e.pushResponse({nativeCurrency:c,wrappedCurrency:i})},async currency_addCurrencyByCustom(e){const a=e.params[0],{chainId:t,chainType:c,walletId:i}=await WalletService.getWalletConfig();assert$d.ok(t,"chainId can not be empty"),assert$d.ok(c,"chainType can not be empty"),assert$d.ok(i,"walletId can not be empty");const o=await CurrencyService.saveCustomCurrency(a,{chainId:t,chainType:c},i);return assert$d(o,"add currency by custom error"),await BalanceService.refreshBalanceIfNeed(!0),e.pushResponse(o)},async currency_addCurrencyFromCurrencies(e){const{id:a}=e.params[0];assert$d.ok(a,"id can not be empty");const t=await CurrencyService.getCurrencyFromLocal({id:a}),{walletId:c}=await WalletService.getWalletConfig();assert$d.ok(c,"walletId can not be empty"),assert$d.ok(t,"currency can not be empty");const i=await CurrencyService.addCurrencyFromCurrencies({id:a,contractAddress:t.contractAddress,chainId:t.chainId,chainType:t.chainType,walletId:c});return assert$d(i,"add currency by custom error"),await BalanceService.refreshBalanceIfNeed(!0),e.pushResponse(i)},async currency_getCurrencyInfoByContractAddress(e){const a=e.params[0],{chainId:t,chainType:c,walletId:i}=await WalletService.getWalletSession(),o=await CurrencyService.getAddCurrencyByContractAddress(a,i,t,c);if(o)return e.pushResponse({currency:o,from:"added"});const b=await CurrencyService.getCurrencyFromLocal({contractAddress:a});if(b&&b.symbol)return e.pushResponse({currency:b,from:"exist"});const u=await NetworkService.getNetWorkUnsafe();assert$d.ok(t,"chainId can not be empty"),assert$d.ok(c,"chainType can not be empty");const l=await CurrencyService.getCurrencyFromOnline(t,c,a,u.rpcUrl);return e.pushResponse({currency:l,from:"online"})},async currency_getAddedCurrencyList(e){const{chainId:a,chainType:t,walletId:c}=await WalletService.getWalletConfig();assert$d.ok(a,"chainId can not be empty"),assert$d.ok(t,"chainType can not be empty"),assert$d.ok(c,"walletId can not be empty");const i=await CurrencyService.getAddedCurrencyList(a,t,c);return e.pushResponse(i)},async currency_removeSingleAddedCurrency(e){const{chainId:a,chainType:t,walletId:c}=await WalletService.getWalletConfig();assert$d.ok(a,"chainId can not be empty"),assert$d.ok(t,"chainType can not be empty"),assert$d.ok(c,"walletId can not be empty");const i=e.params[0];return await CurrencyService.removeSingleAddedCurrency(i,a,t,c),e.pushResponse("success")}};class DappModelDB extends $n{dappItems;dappMeta;dappConfigVersion;dappFilters;constructor(){super("dapp-model"),this.version(1).stores({dappItems:"++id, name, url, chainId, *categories, *networks, *types, tvl, listType",dappMeta:"&name, url, chainId, riskWarned, saved, savedTime",dappConfigVersion:"&listType, updatetime",dappFilters:"&[listType+name], name, listType"})}}const DappModel=new DappModelDB,DappRankingService={async getDiscoverApps(){return(await request$5("/extension/ncw-api/api/dapp/explorers")).data},async queryDapps(e){return this.cacheFetchDappList(e)},async cacheFetchDappList({listType:e,networks:a,categories:t}){const c=await DappModel.dappConfigVersion.where({listType:e}).first(),{updateTime:i=0}=c||{},o=30*60*1e3;if(new Date().getTime()-i>o){const l=await request$5("/extension/ncw-api/api/v3/dapp/recommendation",{params:{listType:e}}),{data:x=[],filter:g=[]}=l;g.forEach(T=>{T.listType=e}),await DappModel.dappFilters.bulkPut(g);const v=new Map;(await DappModel.dappFilters.where({name:"networks"}).toArray()||[]).reduce((T,I)=>[...T,...I.options],[]).forEach(T=>v.set(T.value,T)),x.forEach(T=>{T.chainName=v.get(T.chainId)?.name;const I=T.networks?.map(A=>v.get(A)?.icon||"");T.networksIcon=I,T.listType=e}),await DappModel.dappItems.where({listType:e}).delete(),await DappModel.dappItems.bulkAdd(x).catch($n.BulkError,function(T){}).finally(async()=>{await DappModel.dappConfigVersion.put({updateTime:new Date().getTime(),listType:e})})}let u=DappModel.dappItems.where({listType:e});return a&&(u=u.and(l=>a.filter(x=>l.networks?.includes(x)).length>0)),t&&(u=u.and(l=>t.filter(x=>l.categories?.includes(x)).length>0)),u.sortBy("id")},async getDappFilters({listType:e}){return DappModel.dappFilters.where({listType:e}).toArray()},async getDappMeta(){return DappModel.dappMeta.toArray()},async checkDappWarned({name:e}){return DappModel.dappMeta.where({name:e,riskWarned:1}).first()},async setDappWarned({url:e,chainId:a,name:t}){return await DappModel.dappMeta.where({name:t}).first()?DappModel.dappMeta.where({name:t}).modify({riskWarned:1}):DappModel.dappMeta.put({url:e,chainId:a,riskWarned:1,saved:0,name:t,savedTime:0})},async getSavedDapp(){const e=await DappModel.dappMeta.where("saved").equals(1).reverse().sortBy("savedTime"),{listType:a}=await DappModel.dappConfigVersion.orderBy("updatetime").first()||{},t=e.map(i=>i.name);return Promise.all(t.map(async i=>{const o=await DappModel.dappItems.where({name:i}).toArray();return o.find(b=>b.listType===a)||o[0]}))},async putSavedDapp({url:e,chainId:a,saved:t,name:c}){return await DappModel.dappMeta.where({name:c}).first()?DappModel.dappMeta.where({name:c}).modify({saved:t,savedTime:new Date().getTime()}):DappModel.dappMeta.put({url:e,chainId:a,saved:t,riskWarned:0,name:c,savedTime:new Date().getTime()})}},DappController={async dapp_ping(e){return e.pushResponse("pong")},async dapp_getSessionList(e){const{walletId:a,accountIndex:t}=await WalletService.getWalletConfig();assert$d(a,"walletId is required"),assert$d(t,"accountIndex is required");const c=await ConnectSessionService.getDappSessionList(a,t);return e.pushResponse(c)},async dapp_DropSessionByOrigin(e){const[a]=e.params;return assert$d(a,"dappOrigin cannot be empty"),await ConnectSessionService.resetDappConnection(e,a),e.pushResponse("success")},async dapp_DropSessionAll(e){return await ConnectSessionService.resetAllConnection(e),e.pushResponse("success")},async dapp_discoverApps(e){const a=await DappRankingService.getDiscoverApps();return e.pushResponse(a)},async dapp_queryDapps(e){const a=e.params[0];assert$d(a?.listType,"listType cannot be empty");const t=await DappRankingService.queryDapps(a);return e.pushResponse(t)},async dapp_getDappFilters(e){const a=e.params[0];assert$d(a?.listType,"listType cannot be empty");const t=await DappRankingService.getDappFilters(a);return e.pushResponse(t)},async dapp_getSavedDapp(e){const a=await DappRankingService.getSavedDapp();return e.pushResponse(a)},async dapp_checkDappWarned(e){const{name:a}=e.params[0];assert$d(a,"name cannot be empty");const t=await DappRankingService.checkDappWarned({name:a});return e.pushResponse(!!t)},async dapp_setDappWarned(e){const{chainId:a,url:t,name:c}=e.params[0];assert$d(t,"url cannot be empty"),assert$d(c,"name cannot be empty");const i=await DappRankingService.setDappWarned({chainId:a,url:t,name:c});return e.pushResponse(!!i)},async dapp_putSavedDapp(e){const{chainId:a,url:t,saved:c,name:i}=e.params[0];assert$d(t,"url cannot be empty"),assert$d(i,"name cannot be empty");const o=await DappRankingService.putSavedDapp({chainId:a,url:t,saved:c,name:i});return e.pushResponse(o)}},DCController={async dc_ping(e){return e.pushResponse("dc_pong")},async dc_requestQRCode(e){if(await BridgeConnectManager.start(),(await WalletService.getWalletConfig()).currentWalletModelType==="bridge")return e.pushResponse(null,{code:500,message:"Already logged, please disconnect or remove cache"});const t=await BridgeWalletService.requestQRCode(e);return BridgeConnectManager.socketTransport?.readyState!==1?e.pushResponse(null,{code:500,message:"Websocket connection failed"}):e.pushResponse(t)},async dc_connectBridgeWS(e){return await BridgeConnectManager.start(),e.pushResponse("success")},async dc_checkBridgeWSState(e){return BridgeConnectManager.socketTransport?.readyState!==1?e.pushResponse(null,{code:500,message:"Websocket connection failed"}):e.pushResponse("success")},async dc_sessionRequest(e){const a=e.req.from,[{eip6963:t}]=e.params,c=await ConnectSessionService.getApprovedBridgeSessionInfo(a);if(c)return SegmentService.track({event:"[Ext] Dapp Successfully Connected",properties:{name:c.peerMeta?.name,url:a,"Manually Approved":!1,chainId:c.chainId,chainType:c.chainType,"EIP-6963":t}}),e.pushResponse(c);const[{chainId:i,chainType:o,peerMeta:b}]=e.params;SegmentService.track({event:"extension_dapp_connect_request",properties:{name:b?.name,url:a,chainId:i,chainType:o}}),await PopupRequestService.addRequestToQueue(e),await DefaultPopupManager.showPopup(browser.runtime.getURL("index.html#"))},async dc_sessionUpdate(e){const a=e.rpcReq?.params[0]||{},{approved:t}=a,{to:c}=e,{walletId:i,accountIndex:o}=await WalletService.getWalletConfig();if(assert$d(i,"walletId is required"),assert$d(o,"accountIndex is required"),t){e.req.sess.role==="mobile"&&await BridgeWalletService.updateBridgeWalletSession(a);return}e.req.sess.role==="mobile"&&(roleOfOriginUrl(e.to)==="popup"?(await ConnectSessionService.resetAllConnection(e).catch(),await WalletService.deleteAllWallet()):await ConnectSessionService.resetDappConnection(e,c).catch())},async dc_approveDappConnectRequest(e){return await ConnectSessionService.approveDappConnectRequest(e),e.pushResponse("success")},async dc_rejectDappRequest(e){const{originReq:a}=e.rpcReq?.params[0]??{};assert$d(isKoaReqMessage(a),"originReq is not a KoaReqMessage"),await PopupRequestService.removeRequestById(a.payload.id);const t=await WalletService.getWalletConfig();return e.responses.push({from:e.from,to:a.from,payload:constructJsonRpcResponse({id:a.payload.id,error:{code:4001,message:"rejected"}})}),t.currentWalletModelType==="bridge"&&e.responses.push({from:e.from,to:KOA_MESSAGE_MOBILE_ORIGIN,payload:{id:Qa(),jsonrpc:"2.0",method:"transaction_cancelled",params:[{jsonrpcID:a.payload.id}]}}),e.pushResponse("success")},async dc_disconnectMobileConnection(e){return await ConnectSessionService.resetAllConnection(e).catch(),await BridgeWalletService.disconnectMobileConnection(e),await WalletService.deleteAllWallet(),e.pushResponse("success")},async dc_resetDappConnection(e){const{dappOrigin:a}=e.rpcReq?.params[0]||{};await ConnectSessionService.resetDappConnection(e,a)},async dc_sessionInit(e){const a=await ConnectSessionService.getApprovedBridgeSessionInfo(e.from);if(a)return e.pushResponse(a);{const{chainId:t,chainType:c}=await WalletService.getWalletSession(),i=await NetworkService.getNetWorkUnsafe(t,c),o={approved:!1,chainId:t??"1",chainType:c??"eth",accounts:[],selectedWalletId:"",wallets:[],network:i};return e.pushResponse(o)}},async dc_getDappInfoByOrigin(e){const a=e.rpcReq?.params[0],t=await ConnectSessionService.getDappInfo(a);return e.pushResponse(t)},async dc_getDappClientMetaByOrigin(e){const a=e.params[0],t=await ConnectSessionService.getDappClientMeta(a);return t?e.pushResponse(t):e.pushResponse(null,{code:500,message:"do not find dapp client meta"})},async dc_setViewingRequest(e){const a=e.params[0];return e.req.sess.viewingRequestId=a,e.pushResponse("success")}},DeviceController={async device_getDeviceUUID(e){const a=await DeviceService.getDeviceUUID();return e.pushResponse(a)}},EthereumController={async eth_verifyAddress(e){assert$d(e.rpcReq,"Params cannot be empty");const{address:a}=e.params[0],t=await EthereumService.verifyAddress({address:a});return e.pushResponse(t)},async eth_buildSendTransaction(e){assert$d(e.rpcReq,"Parameter cannot be empty");const{address:a,value:t,contractAddress:c}=e.params[0],{address:i="",chainId:o,chainType:b}=await WalletService.getWalletSession(),u=await NetworkService.getNetWorkUnsafe(o,b);assert$d(u,"network cannot be empty");const l=await EthereumService.buildEthSendTxn({myAddress:i,rpcUrl:u.rpcUrl,contractAddress:c,toAddress:a,value:t});return e.pushResponse(l)},async eth_sign(e){const a=e.rpcReq;assert$d(a,"Parameter cannot be empty");const[t,c]=a.params,{chainId:i,address:o,chainType:b,accountIndex:u,walletType:l="mnemonic"}=await WalletService.getWalletSession(),x=a.params[a.params.length-1];if(l==="hardware"&&x?.signedData)return await PopupRequestService$1.tryAddResponseToDapp(e,{result:x.signedData}),e.pushResponse(x.signedData);assert$d(i,"chainId cannot be empty"),assert$d(b,"chainType cannot be empty"),assert$d(o,"address cannot be empty"),assert$d(u,"accountIndex cannot be empty"),assert$d(o.toLowerCase()===t.toLowerCase(),"address not accessible");const g=await NetworkService.getNetWorkUnsafe(i,b);assert$d(g,"network cannot be empty");const{addressType:v,isTestnet:E}=g,T=(await DefiCoreService.getAccounts({accountIndex:u,walletType:l,addressType:v,isTestnet:E})).privkey,I=await EthereumService.sign({dataToSign:c,privatekey:T});await PopupRequestService$1.tryAddResponseToDapp(e,{result:I}),e.pushResponse(I)},async personal_sign(e){const a=e.rpcReq;assert$d(a,"Parameter cannot be empty");const{chainId:t,address:c,chainType:i,accountIndex:o,walletType:b="mnemonic"}=await WalletService.getWalletSession(),u=a.params[a.params.length-1];if(b==="hardware"&&u?.signedData)return await PopupRequestService$1.tryAddResponseToDapp(e,{result:u.signedData}),e.pushResponse(u.signedData);const[l,x]=a.params,g=l?.toLowerCase?.()===c?.toLowerCase?.(),v=(g?x:l)??"",E=(g?l:x)??"";assert$d(t,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(c,"address cannot be empty"),assert$d(o,"accountIndex cannot be empty"),assert$d(c.toLowerCase()===E.toLowerCase(),"address not accessible");const S=await NetworkService.getNetWorkUnsafe(t,i);assert$d(S,"network cannot be empty");const{addressType:T,isTestnet:I}=S,C=(await DefiCoreService.getAccounts({accountIndex:o,walletType:b,addressType:T,isTestnet:I})).privkey;let O=v;try{isHexString$2(v)&&(O=toUtf8String(v))}catch{O=arrayify(v)}const R=await EthereumService.sign({dataToSign:O,privatekey:C});await PopupRequestService$1.tryAddResponseToDapp(e,{result:R}),e.pushResponse(R)},async eth_signTypedData(e){const a=e.rpcReq;assert$d(a,"Parameter cannot be empty");const{chainId:t,address:c,chainType:i,accountIndex:o,walletType:b="mnemonic"}=await WalletService.getWalletSession(),u=a.params[a.params.length-1];if(b==="hardware"&&u?.signedData)return await PopupRequestService$1.tryAddResponseToDapp(e,{result:u.signedData}),e.pushResponse(u.signedData);assert$d(t,"chainId cannot be empty"),assert$d(i,"chainType cannot be empty"),assert$d(c,"address cannot be empty"),assert$d(o,"accountIndex cannot be empty");const l=await NetworkService.getNetWorkUnsafe(t,i);assert$d(l,"network cannot be empty");const{addressType:x,isTestnet:g}=l,v=await DefiCoreService.getAccounts({accountIndex:o,walletType:b,addressType:x,isTestnet:g}),E=a.params[0],T=await(async()=>{if(typeof E=="object"){const[O,R]=a.params;return assert$d(c.toLowerCase()===R.toLowerCase(),"address not accessible"),EthereumService.signTypedData({typedData:O,privatekey:v.privkeyBuffer})}const[I,A]=a.params,C=safeJsonParse(A);return assert$d(c.toLowerCase()===I.toLowerCase(),"address not accessible"),EthereumService.signTypedDataV4({address:c,message:C,privatekey:v.privkey,rpcUrl:l.rpcUrl})})();await PopupRequestService$1.tryAddResponseToDapp(e,{result:T}),e.pushResponse(T)},async eth_signTypedData_v3(e){const a=e.rpcReq;assert$d(a,"Parameter cannot be empty");const[t,c]=e.params,i=safeJsonParse(c),{chainId:o,address:b,chainType:u,accountIndex:l,walletType:x="mnemonic"}=await WalletService.getWalletSession(),g=e.params[e.params.length-1];if(x==="hardware"&&g?.signedData)return await PopupRequestService$1.tryAddResponseToDapp(e,{result:g.signedData}),e.pushResponse(g.signedData);assert$d(o,"chainId cannot be empty"),assert$d(u,"chainType cannot be empty"),assert$d(b,"address cannot be empty"),assert$d(l,"accountIndex cannot be empty"),assert$d(b.toLowerCase()===t.toLowerCase(),"address not accessible");const v=await NetworkService.getNetWorkUnsafe(o,u);assert$d(v,"network cannot be empty");const{addressType:E,isTestnet:S}=v,T=await DefiCoreService.getAccounts({accountIndex:l,walletType:x,addressType:E,isTestnet:S});assert$d(b,"account cannot be empty");const I=T.privkey,A=await EthereumService.signTypedDataV4({address:b,message:i,privatekey:I,rpcUrl:v.rpcUrl});await PopupRequestService$1.tryAddResponseToDapp(e,{result:A}),e.pushResponse(A)},async eth_signTypedData_v4(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[a,t]=e.params,c=safeJsonParse(t),{chainId:i,address:o,chainType:b,accountIndex:u,walletType:l="mnemonic"}=await WalletService.getWalletSession(),x=c?.domain?.chainId.toString();assert$d(i===x,"chainId should be same as current chainId");const g=e.params[e.params.length-1];if(l==="hardware"&&g?.signedData)return await PopupRequestService$1.tryAddResponseToDapp(e,{result:g.signedData}),e.pushResponse(g.signedData);assert$d(i,"chainId cannot be empty"),assert$d(b,"chainType cannot be empty"),assert$d(o,"address cannot be empty"),assert$d(u,"accountIndex cannot be empty"),assert$d(o.toLowerCase()===a.toLowerCase(),"address not accessible");const v=await NetworkService.getNetWorkUnsafe(i,b);assert$d(v,"network cannot be empty");const{addressType:E,isTestnet:S}=v,I=(await DefiCoreService.getAccounts({accountIndex:u,walletType:l,addressType:E,isTestnet:S})).privkey,A=await EthereumService.signTypedDataV4({address:o,message:c,privatekey:I,rpcUrl:v.rpcUrl});await PopupRequestService$1.tryAddResponseToDapp(e,{result:A}),e.pushResponse(A)},async eth_getRawTxToSignData(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[a,t]=e.params,{gasLimit:c,gasPrice:i,maxPriorityFeePerGas:o,maxFeePerGas:b}=t;assert$d(i,"gasPrice cannot be empty"),assert$d(c,"gasLimit cannot be empty"),a.gasLimit=c,a.gasPrice=i;const u=!!(b&&o);u&&(a.maxPriorityFeePerGas=o,a.maxFeePerGas=b);const{chainId:l,chainType:x,address:g}=await WalletService.getWalletSession(),v=await NetworkService.getNetWorkUnsafe(l,x);assert$d(l,"chainId cannot be empty"),assert$d(x,"chainType cannot be empty"),assert$d(g,"address cannot be empty"),a.nonce||(a.nonce=await TransactionService.getAccountNextNonce({rpcUrl:v.rpcUrl,address:g,chainId:l,chainType:x}));const E={rawTx:a,chainId:Number(l),name:v.display};let S="";return u?S=await EthereumService.signTransactionByEip1559(E):S=await EthereumService.signTransaction(E),e.pushResponse(S)},async eth_sendTransaction(e){assert$d(e.rpcReq,"Parameter cannot be empty");const[a,t,c]=e.params,{gasLimit:i,gasPrice:o,speed:b,maxPriorityFeePerGas:u,maxFeePerGas:l}=t;assert$d(o,"gasPrice cannot be empty"),assert$d(i,"gasLimit cannot be empty"),a.gasLimit=i,a.gasPrice=o;const x=!!(l&&u);x&&(a.maxPriorityFeePerGas=u,a.maxFeePerGas=l);const{chainId:g,address:v,chainType:E,walletId:S,accountIndex:T,walletType:I="mnemonic"}=await WalletService.getWalletSession();assert$d(g,"chainId cannot be empty"),assert$d(E,"chainType cannot be empty"),assert$d(v,"address cannot be empty"),assert$d(S,"walletId cannot be empty"),assert$d(T,"accountIndex cannot be empty");const A=await NetworkService.getNetWorkUnsafe(g,E);assert$d(A,"network cannot be empty");const{rpcUrl:C,addressType:O,isTestnet:R}=A;a.nonce||(a.nonce=await TransactionService.getAccountNextNonce({rpcUrl:C,address:v,chainId:g,chainType:E}));let B="";if(I==="hardware")B=c;else{const D={privatekey:(await DefiCoreService.getAccounts({accountIndex:T,walletType:I,addressType:O,isTestnet:R})).privkeyBuffer,rawTx:a,chainId:Number(g),name:A.display};x?B=await EthereumService.signTransactionByEip1559(D):B=await EthereumService.signTransaction(D)}const M=await EthereumService.sendRawTransaction({signedTransactionData:B,rpcUrl:C});let L="Send";if(a.data){L="Smart Contract Call";try{L=(await SignatureService.getSignature(a.data)).methodName}catch{}}const{contractAddress:ee,txnDesc:z}=parseEthRawTx(a),oe={walletId:S,accountIndex:T,hash:M||"",status:"sent",chainId:g,chainType:"eth",speed:b,from:v,createTime:Date.now(),updateTime:Date.now(),to:a.to,txnName:L,rawData:a,eth:{contractAddress:ee,...a,txnDesc:z}};return await TransactionService.save(oe),DataTrackingService.trackingBroadcastTransaction(e,oe,A),await PopupRequestService$1.tryAddResponseToDapp(e,{result:M}),e.pushResponse(M)},async eth_getChainIdByRpcUrl(e){assert$d(e.rpcReq,"Params cannot be empty");const{rpcUrl:a}=e.params[0];assert$d(a,"RPC url cannot be empty");const t=await EthereumService.getChainIdByRpcUrl(a);return e.pushResponse(t)},async eth_proxyJsonRpcRequest(e){assert$d(e.rpcReq,"Parameter cannot be empty");const a=e.params[0],{chainId:t,chainType:c}=await WalletService.getWalletSession(),o=(await NetworkService.getNetWorkUnsafe(t,c))?.rpcUrl;assert$d(o,"RPC url cannot be empty");const b=JSON.stringify({id:Qa(),jsonrpc:"2.0",...a});try{const{data:u={}}=await request$5(o,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:b});return e.pushResponse(u.result,u.error)}catch(u){return e.pushResponse(null,u)}},async _fetchEvmChainGasFees({transactionConfig:e={},type:a="send"}){const{chainId:t}=await WalletService.getWalletSession(),{chain:c=hasRollupGasPricesOfChains[t??""]??"",data:i="",from:o="0x",to:b="0x",value:u=""}=e,{data:{fees:l=[]}}=await EthereumService.fetchEvmChainGasFees({type:a,chain:c,data:i,from:o,to:b,value:u});return l},async eth_getGasPriceOfCurrentNetwork(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession(),i=(await NetworkService.getNetWorkUnsafe(a,t))?.rpcUrl;assert$d(i,"RPC url cannot be empty");const o=await EthereumService.getGasPrice(i),b=[];return hasRollupGasPricesOfChainIds.includes(a??"")?((await EthereumController._fetchEvmChainGasFees({})).forEach(l=>{b.push({name:capitalCase(l.name),eta:l.estimateTime,fee:l.gasItems[0].gasPriceGwei,l1GasPrice:Number(Web3.utils.toWei(l.gasItems[1].gasPriceGwei,"Gwei"))})}),b.reverse()):b.push({name:"Average",eta:"",fee:Web3.utils.fromWei(o,"Gwei")}),e.pushResponse(b)},async eth_getL1GasLimitOfCurrentNetwork(e){const{transactionConfig:a,type:t="send"}=e.params[0];assert$d(a,"transactionConfig cannot be empty");const c=await EthereumController._fetchEvmChainGasFees({transactionConfig:a,type:t});return e.pushResponse(c?.[0]?.gasItems?.[1]?.gasLimitWei)},async eth_getGasLimitOfCurrentNetwork(e){const{transactionConfig:a}=e.params[0];assert$d(a,"transactionConfig cannot be empty");const{chainId:t,chainType:c,address:i}=await WalletService.getWalletSession(),b=(await NetworkService.getNetWorkUnsafe(t,c))?.rpcUrl;assert$d(b,"RPC url cannot be empty"),a.data===""&&(a.data=void 0),a.from||(a.from=i);const{data:u,from:l,to:x,value:g}=a;let v=await EthereumService.getGasLimit(b,{data:u,from:l,to:x,value:g});if(hasRollupGasPricesOfChainIds.includes(t??"")){const E=await EthereumController._fetchEvmChainGasFees({});v=Number(E?.[0]?.gasItems?.[0]?.gasLimitWei)??v}return e.pushResponse(v)},async eth_getBalance(e){assert$d(e.rpcReq,"Params cannot be empty");const{rpcUrl:a,address:t}=e.params[0];assert$d(a,"RPC url cannot be empty"),assert$d(t,"address cannot be empty");const c=await EthereumService.getBalance({rpcUrl:a,address:t});return e.pushResponse(c)}},NetworkConfigService={async cacheSwapNetworkConfigRequest(){const{updateTime:e=0}=await NetworkModel.swapNetworkConfigs.toCollection().first()||{};if(!await NetworkModel.networkItems.count())return NetworkConfigService.fetchSwapNetworkConfigAndSaveToDatabase();const t=30*60*1e3*1;return new Date().getTime()-e>t&&await NetworkConfigService.fetchSwapNetworkConfigAndSaveToDatabase(),await NetworkModel.swapNetworkConfigs.toArray()},async fetchSwapNetworkConfigAndSaveToDatabase(){const{data:{networks:e}}=await NetworkConfigService.fetchSwapNetworkConfigList();return NetworkConfigService.saveNetworkDataToDatabase(e)},async saveNetworkDataToDatabase(e){let a=[];e.forEach(i=>{const{subNetworks:o=[],...b}=i;return a=[...a,...o],b}),a.forEach(i=>{i.isPopular=0,i.isCustom=0});const t=Date.now(),c=a.map(i=>{const o=i.apiTypes??[];return{id:i.id??0,item:i,chainId:i.chainId,chainType:i.chainType,updateTime:t,isSupportSwap:o.includes("swap_network")}});return await NetworkModel.swapNetworkConfigs.clear(),await NetworkModel.swapNetworkConfigs.bulkPut(c),c},async fetchSwapNetworkConfigList(){return request$5("/extension/ncw-api/api/v2/public/networks",{params:{api_type:"velodrome_optimism"}})}},NetworkController={async network_queryAllNetworkList(e){const a=await NetworkService.cacheNetworkRequest();return e.pushResponse(a)},async network_fetchSwapNetworkConfig(e){const a=await NetworkConfigService.cacheSwapNetworkConfigRequest();return e.pushResponse(a)},async network_addEthereumChainByDapp(e){const a=e.params[0],t={addressType:"eth",chainCode:"",chainId:String(Number(a.chainId)),chainType:"eth",code:"mainnet",display:a.chainName,groupId:1,iconLink:"",isTestnet:!1,name:a.chainName,remark:"",rpcUrl:a.rpcUrls[0],symbol:a.nativeCurrency.symbol},c=a.blockExplorerUrls?.[0];c&&(t.explorer=getNetworkExplorer(c));const i=await NetworkService.getChainCodeBy({chainId:t.chainId,chainType:t.chainType});t.chainCode=i??"";const o=await NetworkService.addNetworkFromUserCustom(t);t.chainCode||await CurrencyService.saveNativeCustomCurrency(a.nativeCurrency,t);const b=await NetworkService.cacheNetworkRequest();return e.responses.push({from:"",to:e.from,payload:{method:"update_networks",id:Qa(),jsonrpc:"2.0",params:[{networks:b}]}}),e.pushResponse(o)},async network_queryAllChainList(e){const a=await NetworkService.fetchChains();return e.pushResponse(a)},async network_fetchPopularNetworkList(e){const a=await NetworkService.cachePopularNetworkRequest();return e.pushResponse(a)},async network_addNetworkFromPopularNetwork(e){const{chainId:a,chainType:t}=e.params[0],c=await NetworkService.checkNetworkIsExist(a,t);assert$d(!c,"Network is Exist!");const i=await NetworkService.addNetworkFromPopularNetwork(a,t);return e.pushResponse(i)},async network_getMyNetworkList(e){const a=await NetworkService.getMyNetworkList();return e.pushResponse(a)},async network_addEthereumChainByPopup(e){const{chainId:a,networkName:t,rpcUrl:c,symbol:i,decimals:o,explorer:b}=e.params[0],u="eth";if(await NetworkService.checkNetworkIsExist(a,u))return e.pushResponse(null,{code:502,message:"Network is Exist"});const x={addressType:"eth",chainCode:"",chainId:a,chainType:u,code:"mainnet",display:t,groupId:1,iconLink:"",isTestnet:!1,name:t,remark:"",rpcUrl:c,symbol:i};b&&(x.explorer=getNetworkExplorer(b));const g=await NetworkService.getChainCodeBy({chainId:x.chainId,chainType:x.chainType});x.chainCode=g??"";const v=await NetworkService.addNetworkFromUserCustom(x);return x.chainCode||await CurrencyService.saveNativeCustomCurrency({name:t,decimals:Number(o),symbol:i},x),e.pushResponse(v)},async network_updateEthereumChainByPopup(e){const{networkId:a,chainId:t,networkName:c,rpcUrl:i,symbol:o,decimals:b,explorer:u}=e.params[0],l="eth",x=await NetworkService.getNetWorkUnsafe(t,l);if(x&&x.id!==Number(a))return e.pushResponse(null,{code:502,message:"Network is Exist"});const g={addressType:"eth",chainCode:"",chainId:t,chainType:l,code:"mainnet",display:c,groupId:1,iconLink:"",isTestnet:!1,name:c,remark:"",rpcUrl:i,symbol:o};g.explorer=getNetworkExplorer(u);const v=await CurrencyService.getNativeCurrency(g.chainId,g.chainType);if(v)v.tokenDecimal=Number(b),v.symbol=o,await CurrencyService.updateNativeCurrencyById(v.id,v);else{const S=await NetworkService.queryNetworkById(Number(a));S?.chainId&&await CurrencyService.removeNativeCustomCurrency(S.chainId,S.chainType),await CurrencyService.saveNativeCustomCurrency({name:c,decimals:Number(b),symbol:o},g)}const E=await NetworkService.updateNetworkItem(Number(a),g);return e.pushResponse(E)},async network_queryNetworkAndCurrencyById(e){const{id:a}=e.params[0],t=await NetworkService.queryNetworkById(Number(a));if(t)try{await CurrencyService.cacheCurrencyRequest(t)}catch{}assert$d(t,"can not find network");const c=await CurrencyService.getNativeCurrency(t.chainId,t.chainType);return e.pushResponse({network:t,nativeCurrency:c})},async network_removeNetworkItem(e){const{chainId:a,chainType:t}=e.params[0];await CurrencyService.removeNativeCustomCurrency(a,t),await CurrencyService.removeAddedCurrency(a,t);const c=await NetworkService.removeNetworkItem(a,t);return await BalanceService.removeBalanceByChain(a,t),await CurrencyService.removeCurrencyVersionItem(a,t),e.pushResponse(c)},async network_getNetworkItemsWithCustomAndPopular(e){const a=await NetworkService.getNetworkItemsWithCustomAndPopular();return e.pushResponse(a)}};class NotificationModelDB extends $n{newFeatures;constructor(){super("notification-model"),this.version(1).stores({newFeatures:"&id, version, isRead, walletModel"})}}const NotificationModel=new NotificationModelDB,NotificationService={async getNewFeatureNotification(e){await this.cacheNotificationToLocal();const a=SERVER_GLOBAL_ENV.config.appVersion;return NotificationModel.newFeatures.where("version").anyOf(a,"").and(t=>t.isRead===0).and(t=>!!t.platforms?.includes(e)).first()},async readNewFeatureNotification(e){return NotificationModel.newFeatures.where({id:e}).modify({isRead:1})},async cacheNotificationToLocal(){const e=(await NotificationModel.newFeatures.toArray()).map(c=>c.id),t=(await this.fetchNotification()??[]).filter(c=>!e.includes(c.id)).map(c=>({id:c.id,title:c.title,content:c.content,linkTitle:c.linkTitle,linkUrl:c.linkUrl,version:c.version,platforms:c.platforms??["standalone","bridge"],extraConfig:c.extraConfig,isRead:0}));await NotificationModel.newFeatures.bulkPut(t)},async fetchNotification(){return(await request$5("/extension/ncw-api/api/public/notice_cards",{params:{version:SERVER_GLOBAL_ENV.config.appVersion}})).data}},NotificationController={async notification_checkNewFeature(e){const a=await WalletService.getWalletConfig(),t=await NotificationService.getNewFeatureNotification(a.currentWalletModelType);return e.pushResponse(t)},async notification_readCurrentFeature(e){const[a]=e.params;return await NotificationService.readNewFeatureNotification(a),e.pushResponse({})}},currentVendorVersion=3,PurchaseService$1={async fetchVendorsConfig(e){return this.cacheFetchVendorsConfig(e)},async cacheFetchVendorsConfig(e){const a=await PurchaseModel.networkVendorConfigs.toArray(),{updateTime:t=0,vendorVersion:c}=a[0]||{},i=100*60*1e3;if(new Date().getTime()-t>i||c!==currentVendorVersion){const u=(await request$5("/extension/ncw-api/api/v2/purchase/vendors",{params:{vendorVersion:currentVendorVersion,address:e.address}})).data.vendors;await PurchaseModel.vendorItems.clear(),await PurchaseModel.vendorItems.bulkAdd(u);const l=u.reduce((v,E)=>({...v,[E.vendorId]:E.vendorTag??0}),{}),x=new Map;(await PurchaseService$1.fetchSupportedCurrencies({vendor:supportedVendors})).forEach(v=>{v.vendors.forEach(E=>{E.networks.forEach(S=>{const{chainId:T,chainType:I,networkId:A}=S,C=`${T}+${I}`,O=x.get(C)||{chainId:T,chainType:I,networkId:A,vendors:{}},{vendorId:R}=E,B=l[R];R&&!O.vendors[R]&&(O.vendors[`${R}`]={vendorId:R,vendorTag:B}),x.set(C,{...O,updateTime:new Date().getTime(),vendorVersion:currentVendorVersion})})})}),await PurchaseModel.networkVendorConfigs.clear(),await PurchaseModel.networkVendorConfigs.bulkAdd(Array.from(x.values()))}return await PurchaseModel.networkVendorConfigs.toArray()},async queryNetworkVendorConfigByNetwork(e){const{chainId:a,chainType:t}=e;return await PurchaseModel.networkVendorConfigs.get({chainId:a,chainType:t})},async queryVendorItemByIds(e){return(await PurchaseModel.vendorItems.toArray()).filter(({vendorId:t})=>e.includes(t))},async fetchSupportedCurrencies(e){return this.cacheSupportedCurrencies(e)},async cacheSupportedCurrencies(e){const a=await PurchaseModel.supportedCurrencies.toArray(),{updateTime:t=0,vendorVersion:c}=a[0]||{},i=10*60*1e3;if(new Date().getTime()-t>i||c!==currentVendorVersion){const b=Array.isArray(e.vendor)?e.vendor.join(","):e.vendor.toString(),u=await request$5("/extension/ncw-api/api/v2/purchase/currencies",{params:{vendor:b,vendorVersion:currentVendorVersion}}),{data:{currencies:l}}=u;l.sort((x,g)=>x.serialNumber-g.serialNumber),l.forEach(x=>{x.updateTime=new Date().getTime(),x.vendorVersion=currentVendorVersion}),await PurchaseModel.supportedCurrencies.clear(),await PurchaseModel.supportedCurrencies.bulkAdd(l)}return await PurchaseModel.supportedCurrencies.toArray()},async queryPurchaseRates(e){return request$5("/extension/ncw-api/api/v1/purchase/rates",{params:e})},async requestCDCPay(e){const{walletId:a,addressType:t,networkId:c,orderCurrency:i,orderAmount:o,returnUrl:b,cancelUrl:u}=e,{wallets:l}=await WalletService.getWalletSession(),g=l.find(E=>E.walletId===a)?.addresses[t]?.address||"",v=await DeviceService.getDeviceUUID();return request$5.post("/extension/ncw-api/api/v1/purchase/crypto_pay/forward",{data:{network:c,orderAmount:o,orderCurrency:i,currency:"USD",walletAddress:g,returnUrl:b??"https://help.crypto.com/en/collections/1797283-crypto-com-pay-app-faq",cancelUrl:u??"https://help.crypto.com/en/collections/1797283-crypto-com-pay-app-faq",refUserId:g,deviceId:v,sessionId:v}})},async getCDCAppCreditCards(e){const{walletId:a}=e,t=await CDCService.getTokenData({walletId:a});assert$d(t,`Token data not found for wallet '${a}'`);const{cdcToken:c}=t;return await CDCPurchaseApi.getCreditCards({accessToken:c})},async requestCDCAppCreateOrder(e){const{walletId:a,addressType:t,creditCardId:c,networkId:i,currency:o,amount:b}=e,u=await CDCService.getTokenData({walletId:a});assert$d(u,`Token data not found for wallet '${a}'`);const{cdcToken:l}=u,{wallets:x}=await WalletService.getWalletSession(),g=x.find(T=>T.walletId===a),v=g?.addresses[t]?.address||"",E=g?.addresses.eth?.address||"",S=await DeviceService.getDeviceUUID();return await CDCPurchaseApi.createOrder({accessToken:l,creditCardId:c,networkId:i,currency:o,amount:b,address:v,ethAddress:E,deviceUuid:S})},async requestCDCAppCreatePurchase(e){const{walletId:a,orderId:t,passcode:c}=e,i=await CDCService.getTokenData({walletId:a});assert$d(i,`Token data not found for wallet '${a}'`);const{cdcToken:o}=i;return await CDCPurchaseApi.createPurchase({accessToken:o,orderId:t,passcode:c})},async getCDCAppLiveRates(e){const{walletId:a,currency:t}=e,c=await CDCService.getTokenData({walletId:a});assert$d(c,`Token data not found for wallet '${a}'`);const{cdcToken:i}=c;return await CDCPurchaseApi.getLiveRates({accessToken:i,currency:t})},async getCDCAppLimits(e){const{walletId:a,currency:t,networkId:c}=e,i=await CDCService.getTokenData({walletId:a});assert$d(i,`Token data not found for wallet '${a}'`);const{cdcToken:o}=i;return await CDCPurchaseApi.getLimits({accessToken:o,currency:t,networkId:c})},async getCDCAppThresholds(e){const{walletId:a,currency:t,networkId:c}=e,i=await CDCService.getTokenData({walletId:a});assert$d(i,`Token data not found for wallet '${a}'`);const{cdcToken:o}=i;return await CDCPurchaseApi.getThresholds({accessToken:o,currency:t,networkId:c})}},PurchaseController={async purchase_fetchVendorsConfig(e){const{address:a}=await WalletService.getWalletSession();assert$d(a,"address cannot be empty");const t=await PurchaseService$1.fetchVendorsConfig({address:a});return e.pushResponse(t)},async purchase_queryNetworkVendorConfigByNetwork(e){const a=e.params[0];assert$d(a,"params cannot be empty");const t=await PurchaseService$1.queryNetworkVendorConfigByNetwork(a);return e.pushResponse(t)},async purchase_queryVendorItemByIds(e){const{ids:a}=e.params[0];assert$d(a,"ids cannot be empty");const t=await PurchaseService$1.queryVendorItemByIds(a);return e.pushResponse(t)},async purchase_fetchSupportedCurrencies(e){const a=e.params[0];assert$d(a,"params cannot be empty");const t=await PurchaseService$1.fetchSupportedCurrencies({...a});return e.pushResponse(t)},async purchase_queryPurchaseRates(e){const a=e.params[0];assert$d(a,"params cannot be empty");const t=await PurchaseService$1.queryPurchaseRates(a);return e.pushResponse(t)},async purchase_requestCDCPay(e){const a=await PurchaseService$1.requestCDCPay(e.params[0]);return e.pushResponse(a.data)},async purchase_requestRampPay(e){const a=e.params[0];assert$d(a,"params cannot be empty");const{hostApiKey:t,defaultAsset:c,swapAmount:i}=a,{address:o}=await WalletService.getWalletSession();return assert$d(o,"address cannot be empty"),e.pushResponse(`https://buy.ramp.network/?hostApiKey=${t}&swapAmount=${i}&defaultAsset=${c}&swapAsset=*`)},async purchase_getCDCAppCreditCards(e){const a=await PurchaseService$1.getCDCAppCreditCards(e.params[0]);return e.pushResponse(a)},async purchase_requestCDCAppCreateOrder(e){const a=await PurchaseService$1.requestCDCAppCreateOrder(e.params[0]);return e.pushResponse(a)},async purchase_requestCDCAppCreatePurchase(e){const a=await PurchaseService$1.requestCDCAppCreatePurchase(e.params[0]);return e.pushResponse(a)},async purchase_getCDCAppLiveRates(e){const a=await PurchaseService$1.getCDCAppLiveRates(e.params[0]);return e.pushResponse(a)},async purchase_getCDCAppLimits(e){const a=await PurchaseService$1.getCDCAppLimits(e.params[0]);return e.pushResponse(a)},async purchase_getCDCAppThresholds(e){const a=await PurchaseService$1.getCDCAppThresholds(e.params[0]);return e.pushResponse(a)}},SegmentController={async segment_track(e){if(e.req.sess.role!=="popup")return;const a=e.rpcReq?.params[0];return assert$d.ok(a,"Parameter cannot be empty"),SegmentService.track(a),e.pushResponse("success")},async segment_screen(e){if(e.req.sess.role!=="popup")return;const a=e.rpcReq?.params[0];return assert$d.ok(a,"Parameter cannot be empty"),SegmentService.screen(a),e.pushResponse("success")},async segment_identify(e){if(e.req.sess.role==="popup")return SegmentService.identify(!0),e.pushResponse("success")}},SubscribeController={async subscribe_register(e){return assert$d.equal(e.req.sess.role,"popup","Not as expected role"),await SubscriptionManager.register(e),e.pushResponse("success")},async subscribe_remove(e){assert$d.equal(e.req.sess.role,"popup","Not as expected role");const{path:a}=e.req.rpcReq?.params[0]??{},t=e.req.sess;return SubscriptionManager.removeSub({path:a,session:t}),e.pushResponse("success")}};class SwapModelDB extends $n{tokenConfigs;tokenItems;constructor(){super("swap-model"),this.version(1).stores({tokenConfigs:"++id, &id, type",tokenItems:"++id, &id, typeName, symbol"}),this.version(2).stores({tokenConfigs:"++id, &type",tokenItems:"++id, &[typeName+symbol], typeName, symbol"}),this.version(3).stores({tokenConfigs:null,tokenItems:null}),this.version(4).stores({tokenConfigs:"++id, &type",tokenItems:"++id, &[typeName+symbol], typeName, symbol"})}}const SwapModel=new SwapModelDB,PROTOCOL_VERSION=1,PurchaseService={async fetchSwapQuote(e){return request$5("/extension/ncw-api/api/swap/v7/quote",{params:{protocol_version:1,...e},useCache:!0})},async fetchSwapPayload(e){return request$5("/extension/ncw-api/api/swap/v7/payload",{params:{...e},useCache:!0})},async queryTokens(e){return this.cacheFetchTokenList(e)},async cacheFetchTokenList(e){const a=await SwapModel.tokenConfigs.toArray(),{updateTime:t=0,version:c}=a.find(u=>u.type===e.type)||{},i=10*60*1e3,o=c!="2"||new Date().getTime()-t>i,b=await SwapModel.tokenItems.where("typeName").equals(e.type).count();if(o||b==0){const u=await request$5("/extension/ncw-api/api/swap/v7/tokens",{params:{page_index:0,page_size:2e3,protocol_version:PROTOCOL_VERSION,chain_code:e.type}}),{tokens:l=[]}=u.data||{},x=l.filter(g=>g?.chainId===e.chainId).map(g=>({...g,typeName:e.type}));await SwapModel.tokenConfigs.put({id:(await SwapModel.tokenConfigs.where("type").equals(e.type).first())?.id,type:e.type,updateTime:new Date().getTime(),version:"2"}),await SwapModel.tokenItems.where("typeName").equals(e.type).delete();try{await SwapModel.tokenItems.bulkPut(x)}catch{}}return await SwapModel.tokenItems.where("typeName").equals(e.type).toArray()}},SwapController={async swap_fetchSwapQuote(e){const a=e.params[0];assert$d(a,"params cannot be empty");const t=await PurchaseService.fetchSwapQuote(a);return e.pushResponse(t.data)},async swap_fetchSwapPayload(e){const a=e.params[0];assert$d(a,"params cannot be empty");const{chainId:t,chainType:c,address:i}=await WalletService.getWalletSession(),o=await NetworkService.getNetWorkUnsafe(t,c);assert$d(t,"chainId cannot be empty"),assert$d(c,"chainType cannot be empty"),assert$d(i,"address cannot be empty"),a.nonce=await TransactionService.getAccountNextNonce({rpcUrl:o.rpcUrl,address:i,chainId:t,chainType:c});const b=await PurchaseService.fetchSwapPayload(a);return e.pushResponse(b.data)},async swap_queryTokens(e){const a=e.params[0];assert$d(a,"params cannot be empty");const t=await PurchaseService.queryTokens({...a});return e.pushResponse(t)}},formatFeeHistory=e=>{let a=e?.oldestBlock??0,t=0;const c=[];for(;e&&a<e.oldestBlock+historicalBlocks&&e.reward[t];)c.push({number:a,baseFeePerGas:Number(e.baseFeePerGas[t]),gasUsedRatio:Number(e.gasUsedRatio[t]),priorityFeePerGas:e.reward[t].map(i=>Number(i))}),a+=1,t+=1;return c},defaultTiers=[{name:"Slow",eta:"30 mins"},{name:"Average",eta:"2 mins"},{name:"Fast",eta:"30 secs"}],TransactionController={async transaction_get(e){const{contractAddress:a="",brc20Ticker:t}=e.params[0],{chainId:c="",chainType:i="",walletId:o="",address:b}=await WalletService.getWalletSession(),u=await TransactionService.getTransaction({contractAddress:a,chainId:c,chainType:i,walletId:o,address:b,brc20Ticker:t});return e.pushResponse(u)},async transaction_detail(e){const{txnHash:a}=e.rpcReq?.params[0]??{},t=await WalletService.getWalletConfig(),c=await TransactionService.refreshTxnByHash(a,t.walletId??"");return e.pushResponse(c)},async transaction_speed(e){const{chainId:a,chainType:t}=await WalletService.getWalletSession(),c=await NetworkService.getNetWorkUnsafe(a,t);if(c.chainType==="eth"){const b=c?.rpcUrl;assert$d(b,"RPC url cannot be empty");const u=await EthereumService.getBlock(b),l=!!(u&&u.baseFeePerGas);if(u&&l){const x=await EthereumService.getMaxPriorityFeePerGas(b),g=formatFeeHistory(x),v=defaultTiers.map((E,S)=>{const T=g.map(B=>B.priorityFeePerGas[S]),I=T.reduce((B,M)=>B+M),A=Math.round(I/T.length),C=Web3.utils.fromWei(A.toString(),"Gwei"),O=(u.baseFeePerGas??0)+A,R=Web3.utils.fromWei(O.toString(),"Gwei");return{...E,fee:R,maxFeePerGas:R,maxPriorityFeePerGas:C}});return e.pushResponse(v)}}const{currency:i}=e.rpcReq?.params[0]??{},o=await TransactionService.fetchSpeedLevel(i);if(o?.data){const{etas:b,fees:u,names:l}=o.data,x=l.map((g,v)=>({name:g?.replace(/^\S/,E=>E.toUpperCase()),eta:b[v],fee:u[v]}));return e.pushResponse(x)}return e.pushResponse(null,{code:500,message:"No speed found"})}},WalletController={async wallet_switchEthereumChain(e){const{chainId:a}=e.params[0],t=e.rpcReq;assert$d(a,"chainId can not be null"),assert$d(t,"rpcReq can not be null");const c=Web3.utils.hexToNumber(a),{currentWalletModelType:i}=await WalletService.getWalletSession();if(i==="standalone"&&!await NetworkService.getAddedNetWork(String(c),"eth"))return e.pushResponse(null,{code:4902});const o=await ConnectSessionService.getApprovedDappInfo(e.from);assert$d(o,"dapp not authorized");const b=await WalletService.getWalletConfig();if(b.chainId===c.toString()&&b.chainType==="eth")return e.pushResponse(null);const u={...t,params:[{chainId:c,peerMeta:o.clientMeta}]},l={...e.req.msg,payload:u};await PopupRequestService$1.addRequestToQueue(e,l),await DefaultPopupManager.showPopup(browser.runtime.getURL("index.html#"))},async wallet_watchAsset(e){await PopupRequestService$1.addRequestToQueue(e),await DefaultPopupManager.showPopup(browser.runtime.getURL("index.html#"))},async wallet_addEthereumChain(e){const{chainId:a,rpcUrls:t=[]}=e.params[0];assert$d(a,"chainId can not be null"),assert$d(t.length,"rpcUrls can not be null");const c=Web3.utils.hexToNumber(a),{currentWalletModelType:i,chainId:o}=await WalletService.getWalletConfig();if(i!=="standalone")return e.pushResponse(null,{code:32601,message:"bridge mode does not support Add Ethereum Chain"});if(String(c)===o)return e.pushResponse(null);await PopupRequestService$1.addRequestToQueue(e),await DefaultPopupManager.showPopup(browser.runtime.getURL("index.html#"))},async wallet_switchWalletModel(e){const a=e.rpcReq;return assert$d.ok(a,"Parameter cannot be empty"),await ConnectSessionService.resetAllConnection(e),(await WalletService.getWalletConfig()).currentWalletModelType==="bridge"&&await BridgeWalletService.disconnectMobileConnection(e),await WalletService.deleteAllWallet(),e.pushResponse("success")},async wallet_createMnemonicWords(e){const a=await MnemonicService.createMnemonicWords(12);return e.pushResponse(a)},async wallet_verifyMnemonicWords(e){const a=e.rpcReq?.params[0],t=await MnemonicService.verifyMnemonicWords(a);return t?e.pushResponse(null,{code:422,message:t}):e.pushResponse("success")},async wallet_importMnemonic(e){assert$d.ok(e.rpcReq?.params,"Parameter cannot be empty");const{name:a,password:t,mnemonic:c,accountIndex:i="0"}=e.rpcReq?.params[0]??{};assert$d.ok(c,"mnemonic cannot be empty");const o=a||await WalletService.generateWalletName(),b=t||await PasswordService.getPasswordOfSession(),u=i||"0",l=await WalletService.queryMnemonicWalletExist({password:b,mnemonic:c,accountIndex:u}),x=l.walletId!==void 0;assert$d(!x,"This account was previously imported. Please try another account index.");const g=l.keyringId||await WalletService.generateKeyringIdByMnemonic({password:b,mnemonic:c});return await WalletService.importWalletByMnemonic({keyringId:g,name:o,password:b,mnemonic:c,accountIndex:u}),SegmentService.reportDeviceInfo(),e.pushResponse("success")},async wallet_switchWallet(e){const{walletId:a,accountIndex:t}=e.params[0];assert$d(a,"wallet_switchWallet: walletId cannot be empty");const i={...await WalletService.getWalletConfig(),accountIndex:t,walletId:a},o=i.walletBtcAddressType[a];i.chainType==="btc"&&o&&(i.chainId=o.chainId);const b=await NetworkService.getNetWorkUnsafe(i.chainId,i.chainType),u=await WalletService.getWalletById(a),l=Object.keys(u?.addresses??{});if(!l.includes(b.addressType??"")){const x=NetworkService.getDefaultNetworkForImportPrivateKey(l[0]);i.chainId=x.chainId,i.chainType=x.chainType}return await WalletService.saveWalletConfig(i),await ConnectSessionService.updateAllDappSession(e),SegmentService.reportDeviceInfo(),e.pushResponse("success")},async wallet_switchNetwork(e){const{chainId:a,chainType:t,originReqId:c=0}=e.params[0];assert$d(a,"wallet_switchNetwork: chainId cannot be empty"),assert$d(t,"wallet_switchNetwork: chainType cannot be empty");const i=await NetworkService.getNetWork(a,t);assert$d(i,"not support this network");const b={...await WalletService.getWalletConfig(),chainId:a,chainType:t},u=await WalletService.getWalletById(b.walletId??"");assert$d.ok(u?.addresses[i.addressType],"Switch network failed, doesn't support this network"),i.chainType==="btc"&&(b.walletBtcAddressType[u.walletId]={chainId:i.chainId,chainType:i.chainType,addressType:i.addressType}),await WalletService.saveWalletConfig(b),await ConnectSessionService.updateAllDappSession(e);const l=await PopupRequestService$1.getRequestById(c);return l&&(l.payload.method==="wallet_switchEthereumChain"||l.payload.method==="wallet_addEthereumChain")&&await PopupRequestService$1.tryAddResponseToDapp(e,{result:null,originReqId:c}),await PopupRequestService$1.rejectAllPendingRequest(e,{excludeReqId:c}),e.pushResponse("success")},async wallet_getMnemonicWords(e){const{password:a}=e.params[0],t=a||await PasswordService.getPasswordOfSession(),c=await WalletService.getWalletConfig(),i=await WalletService.getWalletById(c?.walletId??""),o=await WalletService.getMnemonicWords({password:t,keyringId:i?.keyringId});return e.pushResponse(o)},async wallet_getPrivateKey(e){const{password:a}=e.params[0],t=a||await PasswordService.getPasswordOfSession(),c=await WalletService.getWalletConfig(),i=await WalletService.getWalletById(c?.walletId??""),o=await WalletService.getPrivateKey({password:t,keyringId:i?.keyringId});return e.pushResponse(o)},async wallet_getMnemonicWordlist(e){const a=await MnemonicService.getMnemonicWordlist();return e.pushResponse(a)},async wallet_unlock(e){const{password:a}=e.params[0];return assert$d.ok(a,"Password cannot be empty"),await WalletService.unlockCurrentWalletByPassword(a),SegmentService.reportDeviceInfo(),e.pushResponse("success")},async wallet_lock(e){return await WalletService.updateWalletConfigLockState(!0),await DefiCoreService.reset(),await PasswordService.resetPasswordData(),e.pushResponse("success")},async wallet_queryByName(e){assert$d.ok(e.rpcReq?.params,"Parameter cannot be empty");const{name:a}=e.rpcReq?.params[0]??{};assert$d.ok(a,"name cannot be empty");const t=await WalletService.queryWalletByName(a);return e.pushResponse(t??!1)},async wallet_setNameById(e){const{name:a,walletId:t}=e.params[0];assert$d.ok(a,"name cannot be empty"),assert$d.ok(t,"walletId cannot be empty");const c=await WalletService.modifyWalletById(t,{name:a});return e.pushResponse(c)},async wallet_removeById(e){const{walletId:a}=e.params[0];assert$d.ok(a,"walletId cannot be empty");const t=await WalletService.removeWalletById(a);return e.pushResponse(t)},async wallet_resetLockTime(e){return await WalletService.resetWalletLockTime(),e.pushResponse("success")},async wallet_checkIsNeedPassword(e){const a=await PasswordService.checkWalletIsNeedPassword();return e.pushResponse(a)},async wallet_resetAllWallet(e){return await WalletService.deleteAllWallet(),e.pushResponse("success")},async wallet_createWalletByKeyringId(e){const{keyringId:a}=e.params[0];assert$d.ok(a,"keyringId cannot be empty");const t=await WalletService.generateWalletName(),c=await PasswordService.getPasswordOfSession(),i=await WalletService.queryWalletByKeyringId(a);assert$d.ok(i?.keyringId,"keyringId cannot be empty");const o=await WalletService.getMnemonicWords({password:c,keyringId:i?.keyringId});assert$d.ok(o,"mnemonic cannot be empty");const b=await WalletService.querySameKeyringWalletMaxAccountIndex(i.keyringId);assert$d.ok(b,"maxAccountIndex cannot be empty");const u=Number(b)+1;return await WalletService.importWalletByMnemonic({accountIndex:u,keyringId:i.keyringId,name:t,password:c,mnemonic:o}),SegmentService.reportDeviceInfo(),e.pushResponse(u)},async wallet_getWalletByAccountIndex(e){const{accountIndex:a}=e.params[0];assert$d.ok(a,"accountIndex cannot be empty");const{walletId:t}=await WalletService.getWalletConfig();if(!t)return e.pushResponse(void 0);const c=await WalletService.getWalletById(t),i=await WalletService.getWalletByAccountIndexAndKeyringId(a,c?.keyringId);return e.pushResponse(i)},async wallet_getMaxAccountIndex(e){const{walletId:a}=await WalletService.getWalletConfig();if(!a)return e.pushResponse("-1");const t=await WalletService.getWalletById(a);assert$d.ok(t?.keyringId,"keyringId cannot be empty");const c=await WalletService.querySameKeyringWalletMaxAccountIndex(t.keyringId);return e.pushResponse(c)},async wallet_verifyPrivateKey(e){const{privateKey:a,addressType:t}=e.params[0];assert$d(a,"privateKey cannot be empty");const c=await WalletService.verifyPrivateKeyAndGenerateAccount({privateKey:a.toLowerCase(),addressType:t});return assert$d.ok(c?.address,"invalid private key"),e.pushResponse(c.address)},async wallet_importPrivateKey(e){const{name:a,password:t,addressType:c}=e.params[0],i=a||await WalletService.generateWalletName();let{privateKey:o}=e.params[0];o=o.toLowerCase();const b=t||await PasswordService.getPasswordOfSession();assert$d(b,"invalid password");const u=await WalletService.queryPrivateKeyExist({password:b,privateKey:o,type:c});assert$d(!u,"This account was previously imported. Please try another account index.");const l=await KeyringService.createPrivateKey({password:b,privateKey:o,type:c});return await WalletService.importWalletByPrivateKey({keyringId:l,name:i,password:b,privateKey:o,addressType:c,accountIndex:"0"}),SegmentService.reportDeviceInfo(),e.pushResponse("success")},async wallet_importWalletByLedger(e){const{name:a,password:t,address:c,addressType:i,accountIndex:o,publicKey:b,hdPath:u,hdPathName:l,deviceModel:x={},scrambleKey:g}=e.params[0];assert$d(c,"address can not be null"),assert$d(i,"addressType can not be null"),assert$d(u,"hdPath can not be null");const v=t||await PasswordService.getPasswordOfSession();assert$d(v,"password can not be null");const E=await WalletService.queryWalletByAddress({address:c,addressType:i});assert$d(!E,"This account was previously imported. Please try another account index.");const S=await KeyringService.createHardware({password:v,address:c,addressType:i,type:"ledger",hdPathName:l,hdPath:u,accountIndex:o,scrambleKey:g,...x}),T=await WalletService.importWalletByHardware({keyringId:S,name:a||`Ledger ${S}`,addressType:i,accountIndex:o,account:{address:c,pubkey:b,algo:"secp256k1",hdPath:u},password:v});return e.pushResponse(T)},async wallet_queryAddressesExist(e){const{addresses:a,addressType:t}=e.params[0];assert$d(a,"addresses can not be null"),assert$d(t,"addressType can not be null");const c={},i=a.map(async o=>{const b=await WalletService.queryWalletByAddress({address:o,addressType:t});c[o]=!!b});return await Promise.all(i),e.pushResponse(c)},async wallet_getHardwareWalletConfigurations(e){const a=await WalletService.getWalletConfig(),t=await WalletService.getWalletById(a?.walletId??"");assert$d(t,"wallet can not be null");const c=await KeyringService.getConfigOfHardware({id:t?.keyringId});return e.pushResponse(c)}},CronosIdRpcConfig={testnet:{rpc:"https://cronos-testnet-3.crypto.org:8545/",chainId:338,name:"cronos-testnet",ensAddress:"0x16a23bFBcE9c53998c90201629E4cDB40B81B127"},mainnet:{rpc:"https://evm-cronos.crypto.org/",chainId:25,name:"cronos-mainnet",ensAddress:"0x7F4C61116729d5b27E5f180062Fdfbf32E9283E5"}},CronosIdService={async getAddressByDomain(e,a){return(await this.generateProvider(a)).resolveName(e)},async reverseDomainByAddress(e,a){return(await this.generateProvider(a)).lookupAddress(e)},async generateProvider(e){const a=await NetworkService.getNetWorkUnsafe("25","eth");return new StaticJsonRpcProvider(a.rpcUrl,{chainId:CronosIdRpcConfig.mainnet.chainId,name:e.name,ensAddress:CronosIdRpcConfig.mainnet.ensAddress})}},UnstoppableDomainService={async getAddressByDomain(e,a,t){const c=await fetch(`https://resolve.unstoppabledomains.com/domains/${e}`,{headers:{Authorization:"Bearer e0a20fa0-4557-4142-af42-b4c7b626e09d"}}).then(l=>l.json()),i=`crypto.${t}.address`,o=UnstoppableDomainKeyMap[a.chainId]??"",b=`crypto.${t}.version.${o}.address`,u=`crypto.${a.symbol}.address`;if(c.records){const l=[b,i,u].map(g=>c.records[g]);let x;for(const g of l){if(!g)continue;if(await Web3DNSService.verifyAddressIsMatchAddressType(g,a.addressType)){x=g;break}}if(x)return x}return c.meta&&await Web3DNSService.verifyAddressIsMatchAddressType(c.meta.owner,a.addressType)?c.meta.owner:null},async reverseDomainByAddress(e){const a=await fetch(`https://resolve.unstoppabledomains.com/reverse/${e}`,{headers:{Authorization:"Bearer e0a20fa0-4557-4142-af42-b4c7b626e09d"}}).then(t=>t.json());return a&&a.meta&&a.meta.domain?a.meta.domain:null}},Web3DNSService={async getAddressByDomain(e,a,t){return e.endsWith(".cro")?CronosIdService.getAddressByDomain(e,a):UnstoppableDomainService.getAddressByDomain(e,a,t)},async reverseDomainByAddress(e,a){let t=await CronosIdService.reverseDomainByAddress(e,a).catch(null);return t||(t=await UnstoppableDomainService.reverseDomainByAddress(e)),t},async verifyAddressIsMatchAddressType(e,a){if(a==="eth")return EthereumService.verifyAddress({address:e});if(a==="cosmos"){const{address:t=""}=await WalletService.getWalletSession();return CosmosService.verifyAddress({address:e,walletAddress:t})}else if(a==="aptos")return AptosService.verifyAddress(e)}},Web3DNSController={async dns_getAddressByDomain(e){const{name:a,symbol:t}=e.params[0];assert$d(a,"name cannot be empty");const c=a.endsWith(".cro"),i=a===a.toLocaleLowerCase();assert$d(!(c&&!i),"Cronos ID only support lower case characters");const o=await NetworkService.getNetWorkUnsafe(),b=await Web3DNSService.getAddressByDomain(a,o,t);assert$d(b,`Not found address from ${a}`);const u=await Web3DNSService.verifyAddressIsMatchAddressType(b,o.addressType);return assert$d(u,"Not supported currently network"),e.pushResponse(b)},async dns_reverseDomainByAddress(e){const a=e.params[0];assert$d(a,"address cannot be empty");const t=await NetworkService.getNetWorkUnsafe(),c=await Web3DNSService.reverseDomainByAddress(a,t);assert$d(c,`Not found Cronos ID/Domain from ${a}`);const i=await Web3DNSService.verifyAddressIsMatchAddressType(a,t.addressType);return assert$d(i,"Not supported currently network"),e.pushResponse(c)},async dns_reverseCronosIdByAddress(e){const a=e.params[0];assert$d(a,"address cannot be empty");const t=await NetworkService.getNetWorkUnsafe(),c=await CronosIdService.reverseDomainByAddress(a,t);assert$d(c,`Not found Cronos ID from ${a}`);const i=await Web3DNSService.verifyAddressIsMatchAddressType(a,t.addressType);return assert$d(i,"Not supported currently network"),e.pushResponse(c)}},routers={...AptosController,...BalanceController,...BridgeController,...BtcController,...CDCController,...ConfigController,...CosmosController,...CurrencyController,...DappController,...DCController,...DeviceController,...EthereumController,...NetworkController,...NotificationController,...PurchaseController,...SegmentController,...SubscribeController,...SwapController,...TransactionController,...WalletController,...Web3DNSController},dispatchRoute=async e=>{const a=e.rpcReq?.method??"";if(typeof routers[a]=="function"){const t=routers[a];await t(e)}},RouterMiddleware=async(e,a)=>{await dispatchRoute(e),await a()},processJsonRpcResponse=async e=>{const a=e.rpcRes;if(a){const t=await PopupRequestService$1.removeRequestById(a.id);allSigningMethods.includes(t?.payload?.method??"")&&SegmentService.track({event:"extension_receive_txn_response_from_mobile",properties:{method:t?.payload?.method}}),e.responses.push({from:e.from,to:e.to,payload:e.req.msg.payload})}},RpcResponseMiddleware=async(e,a)=>{await processJsonRpcResponse(e),await a()},app=new Application;async function loadMiddleware(){return[ErrorHandleMiddleware,CosmosRequestMiddleware,RespondMiddleware,AuthMiddleware,DappRequestMiddleware,RpcResponseMiddleware,RouterMiddleware]}const startServer=async e=>{SERVER_GLOBAL_ENV.config=e,(await loadMiddleware()).forEach(c=>app.use(c));const t=app.listen();return createServer({requestListener:t,onInstalled:async()=>{},beforeStart:async()=>{const c=[DeviceService.getDeviceUUID(),WalletService.initialWalletSession(),NetworkService.cacheNetworkRequest(),Job.startAllJobs()];await Promise.all(c).then().catch(i=>{})},afterStart:async()=>{let c=30;setTimeout(async function o(){try{await BalanceService.refreshBalanceIfNeed(),c=30}catch{c*=2}setTimeout(o,c*1e3)},c*1e3),await PasswordService.checkWalletIsNeedPassword()?await WalletService.updateWalletConfigLockState(!0):await WalletService.unlockCurrentWalletByPasswordOfSession()}})};startServer({appVersion:"2.25.3",appVersionName:"2.25.3"});
